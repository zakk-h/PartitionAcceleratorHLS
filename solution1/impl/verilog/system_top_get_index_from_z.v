// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_get_index_from_z (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        points_address0,
        points_ce0,
        points_q0,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        layer,
        z_value,
        ap_return
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state12 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
input  [2:0] layer;
input  [31:0] z_value;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg points_ce0;
reg num_points_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] i_reg_174;
reg   [31:0] i_reg_174_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] i_reg_174_pp0_iter2_reg;
reg   [31:0] i_reg_174_pp0_iter3_reg;
reg   [31:0] minVal_V_2_reg_186;
reg   [31:0] index_reg_198;
reg   [31:0] num_points_load_reg_1571;
wire    ap_CS_fsm_state2;
wire   [0:0] tobool_i_i11_fu_226_p2;
reg   [0:0] tobool_i_i11_reg_1576;
wire   [0:0] p_Result_20_fu_232_p3;
reg   [0:0] p_Result_20_reg_1581;
wire   [31:0] tmp_V_5_fu_246_p3;
reg   [31:0] tmp_V_5_reg_1586;
wire   [63:0] m_5_fu_254_p1;
reg   [63:0] m_5_reg_1593;
wire   [15:0] shl_ln_fu_258_p3;
reg   [15:0] shl_ln_reg_1599;
wire   [0:0] icmp_ln563_fu_265_p2;
reg   [0:0] icmp_ln563_reg_1604;
reg   [0:0] icmp_ln563_reg_1604_pp0_iter1_reg;
reg   [0:0] icmp_ln563_reg_1604_pp0_iter2_reg;
reg   [0:0] icmp_ln563_reg_1604_pp0_iter3_reg;
wire   [31:0] sub_ln944_1_fu_331_p2;
reg   [31:0] sub_ln944_1_reg_1613;
wire   [0:0] icmp_ln958_1_fu_423_p2;
reg   [0:0] icmp_ln958_1_reg_1619;
wire   [0:0] select_ln958_2_fu_443_p3;
reg   [0:0] select_ln958_2_reg_1624;
wire   [7:0] trunc_ln943_1_fu_451_p1;
reg   [7:0] trunc_ln943_1_reg_1629;
wire   [31:0] add_ln563_fu_455_p2;
reg   [31:0] add_ln563_reg_1634;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln935_fu_465_p2;
reg   [0:0] icmp_ln935_reg_1639;
wire   [0:0] p_Result_16_fu_471_p3;
reg   [0:0] p_Result_16_reg_1644;
wire   [31:0] m_17_fu_485_p3;
reg   [31:0] m_17_reg_1649;
wire   [31:0] sub_ln944_fu_511_p2;
reg   [31:0] sub_ln944_reg_1654;
wire   [0:0] icmp_ln958_fu_605_p2;
reg   [0:0] icmp_ln958_reg_1660;
wire   [0:0] select_ln958_fu_625_p3;
reg   [0:0] select_ln958_reg_1665;
wire   [7:0] trunc_ln943_fu_633_p1;
reg   [7:0] trunc_ln943_reg_1670;
wire   [31:0] select_ln935_fu_754_p3;
reg   [31:0] select_ln935_reg_1675;
wire   [31:0] retval_0_i_i73_fu_873_p3;
reg   [31:0] retval_0_i_i73_reg_1680;
wire   [31:0] grp_fu_210_p2;
reg   [31:0] dc_reg_1685;
wire   [31:0] bitcast_ln351_fu_891_p1;
reg   [31:0] bitcast_ln351_reg_1690;
wire   [0:0] p_Result_25_fu_896_p3;
reg   [0:0] p_Result_25_reg_1695;
reg   [62:0] m_21_reg_1700;
reg   [0:0] p_Result_11_reg_1705;
wire   [7:0] trunc_ln943_2_fu_1130_p1;
reg   [7:0] trunc_ln943_2_reg_1710;
wire   [0:0] icmp_ln564_fu_1148_p2;
reg   [0:0] icmp_ln564_reg_1715;
wire   [0:0] icmp_ln564_1_fu_1154_p2;
reg   [0:0] icmp_ln564_1_reg_1720;
wire   [62:0] trunc_ln555_fu_1164_p1;
reg   [62:0] trunc_ln555_reg_1725;
reg   [0:0] p_Result_29_reg_1730;
reg   [10:0] exp_tmp_reg_1735;
wire   [51:0] trunc_ln565_fu_1186_p1;
reg   [51:0] trunc_ln565_reg_1740;
wire   [0:0] icmp_ln564_2_fu_1271_p2;
reg   [0:0] icmp_ln564_2_reg_1750;
wire   [0:0] icmp_ln564_3_fu_1277_p2;
reg   [0:0] icmp_ln564_3_reg_1755;
wire   [0:0] icmp_ln571_fu_1286_p2;
reg   [0:0] icmp_ln571_reg_1760;
wire   [11:0] F2_fu_1291_p2;
reg   [11:0] F2_reg_1766;
wire   [31:0] minVal_V_fu_1537_p3;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] i_2_fu_1553_p3;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter3_state10;
reg   [31:0] ap_phi_mux_i_phi_fu_178_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_minVal_V_2_phi_fu_190_p4;
wire   [63:0] idxprom_fu_221_p1;
wire   [63:0] zext_ln564_fu_309_p1;
wire    ap_block_pp0_stage1;
wire   [31:0] d_fu_214_p0;
wire   [31:0] grp_fu_217_p1;
wire   [31:0] sub_i_i15_fu_240_p2;
wire   [11:0] trunc_ln564_fu_270_p1;
wire   [15:0] shl_ln564_1_fu_274_p3;
wire   [15:0] add_ln564_fu_282_p2;
wire   [2:0] lshr_ln_fu_287_p4;
wire   [8:0] trunc_ln564_1_fu_297_p1;
wire   [11:0] tmp_s_fu_301_p3;
reg   [31:0] p_Result_21_fu_314_p4;
reg   [31:0] l_1_fu_323_p3;
wire   [31:0] lsb_index_1_fu_337_p2;
wire   [30:0] tmp_fu_343_p4;
wire   [5:0] trunc_ln947_1_fu_359_p1;
wire   [5:0] sub_ln947_1_fu_363_p2;
wire   [31:0] zext_ln947_1_fu_369_p1;
wire   [31:0] lshr_ln947_1_fu_373_p2;
wire   [31:0] shl_ln949_1_fu_379_p2;
wire   [31:0] or_ln949_fu_385_p2;
wire   [31:0] and_ln949_2_fu_391_p2;
wire   [0:0] tmp_12_fu_402_p3;
wire   [0:0] p_Result_22_fu_416_p3;
wire   [0:0] xor_ln949_1_fu_410_p2;
wire   [0:0] icmp_ln946_1_fu_353_p2;
wire   [0:0] icmp_ln949_1_fu_396_p2;
wire   [0:0] select_ln946_1_fu_435_p3;
wire   [0:0] and_ln949_3_fu_429_p2;
wire   [31:0] z_bits_fu_461_p1;
wire   [31:0] tmp_V_fu_479_p2;
reg   [31:0] p_Result_17_fu_493_p4;
reg   [31:0] l_fu_503_p3;
wire   [31:0] lsb_index_fu_517_p2;
wire   [30:0] tmp_8_fu_523_p4;
wire   [5:0] trunc_ln947_fu_539_p1;
wire   [5:0] sub_ln947_fu_543_p2;
wire   [31:0] zext_ln947_fu_549_p1;
wire   [31:0] lshr_ln947_fu_553_p2;
wire   [31:0] shl_ln949_fu_559_p2;
wire   [31:0] or_ln949_3_fu_565_p2;
wire   [31:0] and_ln949_fu_571_p2;
wire   [0:0] tmp_10_fu_583_p3;
wire   [0:0] p_Result_18_fu_597_p3;
wire   [0:0] xor_ln949_fu_591_p2;
wire   [0:0] icmp_ln946_fu_533_p2;
wire   [0:0] icmp_ln949_fu_577_p2;
wire   [0:0] select_ln946_fu_617_p3;
wire   [0:0] and_ln949_1_fu_611_p2;
wire   [31:0] sub_ln959_fu_640_p2;
wire   [63:0] zext_ln959_3_fu_637_p1;
wire   [63:0] zext_ln959_fu_645_p1;
wire   [31:0] add_ln958_fu_655_p2;
wire   [63:0] zext_ln958_fu_660_p1;
wire   [63:0] lshr_ln958_fu_664_p2;
wire   [63:0] shl_ln959_fu_649_p2;
wire   [63:0] m_fu_670_p3;
wire   [63:0] zext_ln961_fu_677_p1;
wire   [63:0] m_6_fu_680_p2;
wire   [62:0] m_18_fu_686_p4;
wire   [0:0] p_Result_s_fu_700_p3;
wire   [7:0] sub_ln964_fu_716_p2;
wire   [7:0] select_ln943_fu_708_p3;
wire   [7:0] add_ln964_fu_721_p2;
wire   [63:0] zext_ln962_fu_696_p1;
wire   [8:0] tmp_4_fu_727_p3;
wire   [63:0] p_Result_19_fu_734_p5;
wire   [31:0] LD_fu_746_p1;
wire   [31:0] bitcast_ln744_fu_750_p1;
wire   [31:0] sub_ln959_1_fu_761_p2;
wire   [63:0] zext_ln959_1_fu_766_p1;
wire   [31:0] add_ln958_1_fu_775_p2;
wire   [63:0] zext_ln958_1_fu_780_p1;
wire   [63:0] lshr_ln958_1_fu_784_p2;
wire   [63:0] shl_ln959_1_fu_770_p2;
wire   [63:0] m_10_fu_789_p3;
wire   [63:0] zext_ln961_1_fu_796_p1;
wire   [63:0] m_11_fu_799_p2;
wire   [62:0] m_19_fu_805_p4;
wire   [0:0] p_Result_5_fu_819_p3;
wire   [7:0] sub_ln964_1_fu_835_p2;
wire   [7:0] select_ln943_1_fu_827_p3;
wire   [7:0] add_ln964_1_fu_840_p2;
wire   [63:0] zext_ln962_1_fu_815_p1;
wire   [8:0] tmp_5_fu_846_p3;
wire   [63:0] p_Result_23_fu_853_p5;
wire   [31:0] LD_1_fu_865_p1;
wire   [31:0] bitcast_ln744_1_fu_869_p1;
wire   [31:0] data_V_fu_880_p1;
wire   [30:0] p_Result_24_fu_883_p1;
wire   [31:0] zext_ln368_fu_887_p1;
wire   [31:0] tmp_V_3_fu_904_p2;
wire   [31:0] m_20_fu_910_p3;
reg   [31:0] p_Result_26_fu_918_p4;
reg   [31:0] l_2_fu_928_p3;
wire   [31:0] sub_ln944_2_fu_936_p2;
wire   [31:0] lsb_index_2_fu_942_p2;
wire   [30:0] tmp_15_fu_948_p4;
wire   [5:0] trunc_ln947_2_fu_964_p1;
wire   [5:0] sub_ln947_2_fu_968_p2;
wire   [31:0] zext_ln947_2_fu_974_p1;
wire   [31:0] lshr_ln947_2_fu_978_p2;
wire   [31:0] shl_ln949_2_fu_984_p2;
wire   [31:0] or_ln949_4_fu_990_p2;
wire   [31:0] and_ln949_4_fu_996_p2;
wire   [0:0] tmp_16_fu_1008_p3;
wire   [0:0] p_Result_27_fu_1022_p3;
wire   [0:0] xor_ln949_2_fu_1016_p2;
wire   [31:0] sub_ln959_2_fu_1046_p2;
wire   [63:0] zext_ln959_4_fu_1042_p1;
wire   [63:0] zext_ln959_2_fu_1052_p1;
wire   [0:0] icmp_ln946_2_fu_958_p2;
wire   [0:0] icmp_ln949_2_fu_1002_p2;
wire   [31:0] add_ln958_2_fu_1070_p2;
wire   [63:0] zext_ln958_2_fu_1076_p1;
wire   [0:0] icmp_ln958_2_fu_1030_p2;
wire   [0:0] select_ln946_2_fu_1062_p3;
wire   [0:0] and_ln949_5_fu_1036_p2;
wire   [63:0] lshr_ln958_2_fu_1080_p2;
wire   [63:0] shl_ln959_2_fu_1056_p2;
wire   [0:0] select_ln958_4_fu_1086_p3;
wire   [63:0] m_14_fu_1094_p3;
wire   [63:0] zext_ln961_2_fu_1102_p1;
wire   [63:0] m_15_fu_1106_p2;
wire   [7:0] tmp_7_fu_1134_p4;
wire   [22:0] trunc_ln564_2_fu_1144_p1;
wire   [63:0] d_fu_214_p1;
wire   [63:0] ireg_fu_1160_p1;
wire   [7:0] sub_ln964_2_fu_1206_p2;
wire   [7:0] select_ln943_2_fu_1199_p3;
wire   [7:0] add_ln964_2_fu_1211_p2;
wire   [63:0] zext_ln962_2_fu_1196_p1;
wire   [8:0] tmp_6_fu_1217_p3;
wire   [63:0] p_Result_28_fu_1224_p5;
wire   [0:0] icmp_ln935_1_fu_1190_p2;
wire   [30:0] LD_2_fu_1236_p1;
wire   [30:0] data_V_1_fu_1240_p3;
wire   [31:0] zext_ln368_1_fu_1248_p1;
wire   [7:0] tmp_9_fu_1257_p4;
wire   [22:0] trunc_ln564_3_fu_1267_p1;
wire   [11:0] zext_ln455_fu_1283_p1;
wire   [0:0] or_ln564_fu_1297_p2;
wire   [0:0] or_ln564_1_fu_1301_p2;
wire   [0:0] and_ln564_fu_1305_p2;
wire   [0:0] grp_fu_217_p2;
wire   [52:0] p_Result_30_fu_1317_p3;
wire   [53:0] zext_ln569_fu_1324_p1;
wire   [53:0] man_V_1_fu_1328_p2;
wire   [0:0] icmp_ln581_fu_1341_p2;
wire   [11:0] add_ln581_fu_1346_p2;
wire   [11:0] sub_ln581_fu_1351_p2;
wire  signed [11:0] sh_amt_fu_1356_p3;
wire   [53:0] man_V_2_fu_1334_p3;
wire   [6:0] tmp_19_fu_1383_p4;
wire   [5:0] trunc_ln586_fu_1399_p1;
wire   [53:0] zext_ln586_fu_1403_p1;
wire   [53:0] ashr_ln586_fu_1407_p2;
wire   [31:0] trunc_ln583_fu_1373_p1;
wire  signed [31:0] sext_ln581_fu_1364_p1;
wire   [0:0] and_ln564_1_fu_1311_p2;
wire   [0:0] xor_ln571_fu_1423_p2;
wire   [0:0] and_ln571_fu_1428_p2;
wire   [0:0] icmp_ln582_fu_1368_p2;
wire   [0:0] and_ln582_fu_1434_p2;
wire   [0:0] xor_ln582_fu_1448_p2;
wire   [0:0] and_ln582_1_fu_1454_p2;
wire   [0:0] and_ln581_fu_1460_p2;
wire   [0:0] icmp_ln585_fu_1377_p2;
wire   [0:0] and_ln585_fu_1466_p2;
wire   [31:0] trunc_ln586_1_fu_1413_p1;
wire   [31:0] select_ln582_fu_1440_p3;
wire   [0:0] icmp_ln603_fu_1393_p2;
wire   [0:0] xor_ln581_fu_1480_p2;
wire   [0:0] and_ln603_fu_1486_p2;
wire   [0:0] and_ln603_1_fu_1492_p2;
wire   [31:0] shl_ln604_fu_1417_p2;
wire   [31:0] select_ln585_fu_1472_p3;
wire   [31:0] select_ln603_fu_1498_p3;
wire   [0:0] xor_ln585_fu_1519_p2;
wire   [0:0] and_ln585_1_fu_1525_p2;
wire   [0:0] and_ln571_1_fu_1514_p2;
wire   [0:0] or_ln585_fu_1531_p2;
wire   [31:0] select_ln564_fu_1506_p3;
wire   [31:0] select_ln585_2_fu_1545_p3;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state12;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

system_top_fsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln935_reg_1675),
    .din1(retval_0_i_i73_reg_1680),
    .ce(1'b1),
    .dout(grp_fu_210_p2)
);

system_top_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U107(
    .din0(d_fu_214_p0),
    .dout(d_fu_214_p1)
);

system_top_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln351_reg_1690),
    .din1(grp_fu_217_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_217_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter3_state10) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_pp0_exit_iter3_state10) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_174 <= add_ln563_reg_1634;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_174 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        index_reg_198 <= i_2_fu_1553_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        index_reg_198 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        minVal_V_2_reg_186 <= minVal_V_fu_1537_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        minVal_V_2_reg_186 <= 32'd2146435072;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        F2_reg_1766 <= F2_fu_1291_p2;
        icmp_ln564_2_reg_1750 <= icmp_ln564_2_fu_1271_p2;
        icmp_ln564_3_reg_1755 <= icmp_ln564_3_fu_1277_p2;
        icmp_ln571_reg_1760 <= icmp_ln571_fu_1286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln563_reg_1634 <= add_ln563_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bitcast_ln351_reg_1690[30 : 0] <= bitcast_ln351_fu_891_p1[30 : 0];
        exp_tmp_reg_1735 <= {{ireg_fu_1160_p1[62:52]}};
        icmp_ln564_1_reg_1720 <= icmp_ln564_1_fu_1154_p2;
        icmp_ln564_reg_1715 <= icmp_ln564_fu_1148_p2;
        m_21_reg_1700 <= {{m_15_fu_1106_p2[63:1]}};
        p_Result_11_reg_1705 <= m_15_fu_1106_p2[32'd25];
        p_Result_25_reg_1695 <= ap_phi_mux_minVal_V_2_phi_fu_190_p4[32'd31];
        p_Result_29_reg_1730 <= ireg_fu_1160_p1[32'd63];
        trunc_ln555_reg_1725 <= trunc_ln555_fu_1164_p1;
        trunc_ln565_reg_1740 <= trunc_ln565_fu_1186_p1;
        trunc_ln943_2_reg_1710 <= trunc_ln943_2_fu_1130_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dc_reg_1685 <= grp_fu_210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_174_pp0_iter1_reg <= i_reg_174;
        i_reg_174_pp0_iter2_reg <= i_reg_174_pp0_iter1_reg;
        i_reg_174_pp0_iter3_reg <= i_reg_174_pp0_iter2_reg;
        icmp_ln563_reg_1604 <= icmp_ln563_fu_265_p2;
        icmp_ln563_reg_1604_pp0_iter1_reg <= icmp_ln563_reg_1604;
        icmp_ln563_reg_1604_pp0_iter2_reg <= icmp_ln563_reg_1604_pp0_iter1_reg;
        icmp_ln563_reg_1604_pp0_iter3_reg <= icmp_ln563_reg_1604_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln935_reg_1639 <= icmp_ln935_fu_465_p2;
        icmp_ln958_reg_1660 <= icmp_ln958_fu_605_p2;
        m_17_reg_1649 <= m_17_fu_485_p3;
        p_Result_16_reg_1644 <= points_q0[32'd31];
        select_ln958_reg_1665 <= select_ln958_fu_625_p3;
        sub_ln944_reg_1654 <= sub_ln944_fu_511_p2;
        trunc_ln943_reg_1670 <= trunc_ln943_fu_633_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_fu_265_p2 == 1'd0) & (tobool_i_i11_reg_1576 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln958_1_reg_1619 <= icmp_ln958_1_fu_423_p2;
        select_ln958_2_reg_1624 <= select_ln958_2_fu_443_p3;
        sub_ln944_1_reg_1613 <= sub_ln944_1_fu_331_p2;
        trunc_ln943_1_reg_1629 <= trunc_ln943_1_fu_451_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_5_reg_1593[31 : 0] <= m_5_fu_254_p1[31 : 0];
        num_points_load_reg_1571 <= num_points_q0;
        p_Result_20_reg_1581 <= z_value[32'd31];
        shl_ln_reg_1599[15 : 13] <= shl_ln_fu_258_p3[15 : 13];
        tmp_V_5_reg_1586 <= tmp_V_5_fu_246_p3;
        tobool_i_i11_reg_1576 <= tobool_i_i11_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln563_reg_1604 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        retval_0_i_i73_reg_1680 <= retval_0_i_i73_fu_873_p3;
        select_ln935_reg_1675 <= select_ln935_fu_754_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln563_reg_1604 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln563_reg_1604 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_178_p4 = add_ln563_reg_1634;
    end else begin
        ap_phi_mux_i_phi_fu_178_p4 = i_reg_174;
    end
end

always @ (*) begin
    if (((icmp_ln563_reg_1604_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_minVal_V_2_phi_fu_190_p4 = minVal_V_fu_1537_p3;
    end else begin
        ap_phi_mux_minVal_V_2_phi_fu_190_p4 = minVal_V_2_reg_186;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        num_points_ce0 = 1'b1;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        points_ce0 = 1'b1;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1291_p2 = (12'd1075 - zext_ln455_fu_1283_p1);

assign LD_1_fu_865_p1 = p_Result_23_fu_853_p5[31:0];

assign LD_2_fu_1236_p1 = p_Result_28_fu_1224_p5[30:0];

assign LD_fu_746_p1 = p_Result_19_fu_734_p5[31:0];

assign add_ln563_fu_455_p2 = (i_reg_174 + 32'd1);

assign add_ln564_fu_282_p2 = (shl_ln564_1_fu_274_p3 + shl_ln_reg_1599);

assign add_ln581_fu_1346_p2 = ($signed(F2_reg_1766) + $signed(12'd4076));

assign add_ln958_1_fu_775_p2 = ($signed(sub_ln944_1_reg_1613) + $signed(32'd4294967271));

assign add_ln958_2_fu_1070_p2 = ($signed(sub_ln944_2_fu_936_p2) + $signed(32'd4294967271));

assign add_ln958_fu_655_p2 = ($signed(sub_ln944_reg_1654) + $signed(32'd4294967271));

assign add_ln964_1_fu_840_p2 = (sub_ln964_1_fu_835_p2 + select_ln943_1_fu_827_p3);

assign add_ln964_2_fu_1211_p2 = (sub_ln964_2_fu_1206_p2 + select_ln943_2_fu_1199_p3);

assign add_ln964_fu_721_p2 = (sub_ln964_fu_716_p2 + select_ln943_fu_708_p3);

assign and_ln564_1_fu_1311_p2 = (grp_fu_217_p2 & and_ln564_fu_1305_p2);

assign and_ln564_fu_1305_p2 = (or_ln564_fu_1297_p2 & or_ln564_1_fu_1301_p2);

assign and_ln571_1_fu_1514_p2 = (icmp_ln571_reg_1760 & and_ln564_1_fu_1311_p2);

assign and_ln571_fu_1428_p2 = (xor_ln571_fu_1423_p2 & and_ln564_1_fu_1311_p2);

assign and_ln581_fu_1460_p2 = (icmp_ln581_fu_1341_p2 & and_ln582_1_fu_1454_p2);

assign and_ln582_1_fu_1454_p2 = (xor_ln582_fu_1448_p2 & and_ln571_fu_1428_p2);

assign and_ln582_fu_1434_p2 = (icmp_ln582_fu_1368_p2 & and_ln571_fu_1428_p2);

assign and_ln585_1_fu_1525_p2 = (xor_ln585_fu_1519_p2 & and_ln581_fu_1460_p2);

assign and_ln585_fu_1466_p2 = (icmp_ln585_fu_1377_p2 & and_ln581_fu_1460_p2);

assign and_ln603_1_fu_1492_p2 = (and_ln603_fu_1486_p2 & and_ln582_1_fu_1454_p2);

assign and_ln603_fu_1486_p2 = (xor_ln581_fu_1480_p2 & icmp_ln603_fu_1393_p2);

assign and_ln949_1_fu_611_p2 = (xor_ln949_fu_591_p2 & p_Result_18_fu_597_p3);

assign and_ln949_2_fu_391_p2 = (tmp_V_5_reg_1586 & or_ln949_fu_385_p2);

assign and_ln949_3_fu_429_p2 = (xor_ln949_1_fu_410_p2 & p_Result_22_fu_416_p3);

assign and_ln949_4_fu_996_p2 = (or_ln949_4_fu_990_p2 & m_20_fu_910_p3);

assign and_ln949_5_fu_1036_p2 = (xor_ln949_2_fu_1016_p2 & p_Result_27_fu_1022_p3);

assign and_ln949_fu_571_p2 = (or_ln949_3_fu_565_p2 & m_17_fu_485_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = index_reg_198;

assign ashr_ln586_fu_1407_p2 = $signed(man_V_2_fu_1334_p3) >>> zext_ln586_fu_1403_p1;

assign bitcast_ln351_fu_891_p1 = zext_ln368_fu_887_p1;

assign bitcast_ln744_1_fu_869_p1 = LD_1_fu_865_p1;

assign bitcast_ln744_fu_750_p1 = LD_fu_746_p1;

assign d_fu_214_p0 = zext_ln368_fu_887_p1;

assign data_V_1_fu_1240_p3 = ((icmp_ln935_1_fu_1190_p2[0:0] == 1'b1) ? 31'd0 : LD_2_fu_1236_p1);

assign data_V_fu_880_p1 = dc_reg_1685;

assign grp_fu_217_p1 = zext_ln368_1_fu_1248_p1;

assign i_2_fu_1553_p3 = ((or_ln585_fu_1531_p2[0:0] == 1'b1) ? i_reg_174_pp0_iter3_reg : select_ln585_2_fu_1545_p3);

assign icmp_ln563_fu_265_p2 = ((ap_phi_mux_i_phi_fu_178_p4 == num_points_load_reg_1571) ? 1'b1 : 1'b0);

assign icmp_ln564_1_fu_1154_p2 = ((trunc_ln564_2_fu_1144_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln564_2_fu_1271_p2 = ((tmp_9_fu_1257_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln564_3_fu_1277_p2 = ((trunc_ln564_3_fu_1267_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln564_fu_1148_p2 = ((tmp_7_fu_1134_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1286_p2 = ((trunc_ln555_reg_1725 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1341_p2 = (($signed(F2_reg_1766) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1368_p2 = ((F2_reg_1766 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1377_p2 = ((sh_amt_fu_1356_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1393_p2 = ((tmp_19_fu_1383_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_1190_p2 = ((minVal_V_2_reg_186 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_465_p2 = ((z_bits_fu_461_p1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_1_fu_353_p2 = (($signed(tmp_fu_343_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_2_fu_958_p2 = (($signed(tmp_15_fu_948_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_533_p2 = (($signed(tmp_8_fu_523_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_1_fu_396_p2 = ((and_ln949_2_fu_391_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_2_fu_1002_p2 = ((and_ln949_4_fu_996_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_577_p2 = ((and_ln949_fu_571_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_423_p2 = (($signed(lsb_index_1_fu_337_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_2_fu_1030_p2 = (($signed(lsb_index_2_fu_942_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_605_p2 = (($signed(lsb_index_fu_517_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_fu_221_p1 = layer;

assign ireg_fu_1160_p1 = d_fu_214_p1;


always @ (p_Result_21_fu_314_p4) begin
    if (p_Result_21_fu_314_p4[0] == 1'b1) begin
        l_1_fu_323_p3 = 32'd0;
    end else if (p_Result_21_fu_314_p4[1] == 1'b1) begin
        l_1_fu_323_p3 = 32'd1;
    end else if (p_Result_21_fu_314_p4[2] == 1'b1) begin
        l_1_fu_323_p3 = 32'd2;
    end else if (p_Result_21_fu_314_p4[3] == 1'b1) begin
        l_1_fu_323_p3 = 32'd3;
    end else if (p_Result_21_fu_314_p4[4] == 1'b1) begin
        l_1_fu_323_p3 = 32'd4;
    end else if (p_Result_21_fu_314_p4[5] == 1'b1) begin
        l_1_fu_323_p3 = 32'd5;
    end else if (p_Result_21_fu_314_p4[6] == 1'b1) begin
        l_1_fu_323_p3 = 32'd6;
    end else if (p_Result_21_fu_314_p4[7] == 1'b1) begin
        l_1_fu_323_p3 = 32'd7;
    end else if (p_Result_21_fu_314_p4[8] == 1'b1) begin
        l_1_fu_323_p3 = 32'd8;
    end else if (p_Result_21_fu_314_p4[9] == 1'b1) begin
        l_1_fu_323_p3 = 32'd9;
    end else if (p_Result_21_fu_314_p4[10] == 1'b1) begin
        l_1_fu_323_p3 = 32'd10;
    end else if (p_Result_21_fu_314_p4[11] == 1'b1) begin
        l_1_fu_323_p3 = 32'd11;
    end else if (p_Result_21_fu_314_p4[12] == 1'b1) begin
        l_1_fu_323_p3 = 32'd12;
    end else if (p_Result_21_fu_314_p4[13] == 1'b1) begin
        l_1_fu_323_p3 = 32'd13;
    end else if (p_Result_21_fu_314_p4[14] == 1'b1) begin
        l_1_fu_323_p3 = 32'd14;
    end else if (p_Result_21_fu_314_p4[15] == 1'b1) begin
        l_1_fu_323_p3 = 32'd15;
    end else if (p_Result_21_fu_314_p4[16] == 1'b1) begin
        l_1_fu_323_p3 = 32'd16;
    end else if (p_Result_21_fu_314_p4[17] == 1'b1) begin
        l_1_fu_323_p3 = 32'd17;
    end else if (p_Result_21_fu_314_p4[18] == 1'b1) begin
        l_1_fu_323_p3 = 32'd18;
    end else if (p_Result_21_fu_314_p4[19] == 1'b1) begin
        l_1_fu_323_p3 = 32'd19;
    end else if (p_Result_21_fu_314_p4[20] == 1'b1) begin
        l_1_fu_323_p3 = 32'd20;
    end else if (p_Result_21_fu_314_p4[21] == 1'b1) begin
        l_1_fu_323_p3 = 32'd21;
    end else if (p_Result_21_fu_314_p4[22] == 1'b1) begin
        l_1_fu_323_p3 = 32'd22;
    end else if (p_Result_21_fu_314_p4[23] == 1'b1) begin
        l_1_fu_323_p3 = 32'd23;
    end else if (p_Result_21_fu_314_p4[24] == 1'b1) begin
        l_1_fu_323_p3 = 32'd24;
    end else if (p_Result_21_fu_314_p4[25] == 1'b1) begin
        l_1_fu_323_p3 = 32'd25;
    end else if (p_Result_21_fu_314_p4[26] == 1'b1) begin
        l_1_fu_323_p3 = 32'd26;
    end else if (p_Result_21_fu_314_p4[27] == 1'b1) begin
        l_1_fu_323_p3 = 32'd27;
    end else if (p_Result_21_fu_314_p4[28] == 1'b1) begin
        l_1_fu_323_p3 = 32'd28;
    end else if (p_Result_21_fu_314_p4[29] == 1'b1) begin
        l_1_fu_323_p3 = 32'd29;
    end else if (p_Result_21_fu_314_p4[30] == 1'b1) begin
        l_1_fu_323_p3 = 32'd30;
    end else if (p_Result_21_fu_314_p4[31] == 1'b1) begin
        l_1_fu_323_p3 = 32'd31;
    end else begin
        l_1_fu_323_p3 = 32'd32;
    end
end


always @ (p_Result_26_fu_918_p4) begin
    if (p_Result_26_fu_918_p4[0] == 1'b1) begin
        l_2_fu_928_p3 = 32'd0;
    end else if (p_Result_26_fu_918_p4[1] == 1'b1) begin
        l_2_fu_928_p3 = 32'd1;
    end else if (p_Result_26_fu_918_p4[2] == 1'b1) begin
        l_2_fu_928_p3 = 32'd2;
    end else if (p_Result_26_fu_918_p4[3] == 1'b1) begin
        l_2_fu_928_p3 = 32'd3;
    end else if (p_Result_26_fu_918_p4[4] == 1'b1) begin
        l_2_fu_928_p3 = 32'd4;
    end else if (p_Result_26_fu_918_p4[5] == 1'b1) begin
        l_2_fu_928_p3 = 32'd5;
    end else if (p_Result_26_fu_918_p4[6] == 1'b1) begin
        l_2_fu_928_p3 = 32'd6;
    end else if (p_Result_26_fu_918_p4[7] == 1'b1) begin
        l_2_fu_928_p3 = 32'd7;
    end else if (p_Result_26_fu_918_p4[8] == 1'b1) begin
        l_2_fu_928_p3 = 32'd8;
    end else if (p_Result_26_fu_918_p4[9] == 1'b1) begin
        l_2_fu_928_p3 = 32'd9;
    end else if (p_Result_26_fu_918_p4[10] == 1'b1) begin
        l_2_fu_928_p3 = 32'd10;
    end else if (p_Result_26_fu_918_p4[11] == 1'b1) begin
        l_2_fu_928_p3 = 32'd11;
    end else if (p_Result_26_fu_918_p4[12] == 1'b1) begin
        l_2_fu_928_p3 = 32'd12;
    end else if (p_Result_26_fu_918_p4[13] == 1'b1) begin
        l_2_fu_928_p3 = 32'd13;
    end else if (p_Result_26_fu_918_p4[14] == 1'b1) begin
        l_2_fu_928_p3 = 32'd14;
    end else if (p_Result_26_fu_918_p4[15] == 1'b1) begin
        l_2_fu_928_p3 = 32'd15;
    end else if (p_Result_26_fu_918_p4[16] == 1'b1) begin
        l_2_fu_928_p3 = 32'd16;
    end else if (p_Result_26_fu_918_p4[17] == 1'b1) begin
        l_2_fu_928_p3 = 32'd17;
    end else if (p_Result_26_fu_918_p4[18] == 1'b1) begin
        l_2_fu_928_p3 = 32'd18;
    end else if (p_Result_26_fu_918_p4[19] == 1'b1) begin
        l_2_fu_928_p3 = 32'd19;
    end else if (p_Result_26_fu_918_p4[20] == 1'b1) begin
        l_2_fu_928_p3 = 32'd20;
    end else if (p_Result_26_fu_918_p4[21] == 1'b1) begin
        l_2_fu_928_p3 = 32'd21;
    end else if (p_Result_26_fu_918_p4[22] == 1'b1) begin
        l_2_fu_928_p3 = 32'd22;
    end else if (p_Result_26_fu_918_p4[23] == 1'b1) begin
        l_2_fu_928_p3 = 32'd23;
    end else if (p_Result_26_fu_918_p4[24] == 1'b1) begin
        l_2_fu_928_p3 = 32'd24;
    end else if (p_Result_26_fu_918_p4[25] == 1'b1) begin
        l_2_fu_928_p3 = 32'd25;
    end else if (p_Result_26_fu_918_p4[26] == 1'b1) begin
        l_2_fu_928_p3 = 32'd26;
    end else if (p_Result_26_fu_918_p4[27] == 1'b1) begin
        l_2_fu_928_p3 = 32'd27;
    end else if (p_Result_26_fu_918_p4[28] == 1'b1) begin
        l_2_fu_928_p3 = 32'd28;
    end else if (p_Result_26_fu_918_p4[29] == 1'b1) begin
        l_2_fu_928_p3 = 32'd29;
    end else if (p_Result_26_fu_918_p4[30] == 1'b1) begin
        l_2_fu_928_p3 = 32'd30;
    end else if (p_Result_26_fu_918_p4[31] == 1'b1) begin
        l_2_fu_928_p3 = 32'd31;
    end else begin
        l_2_fu_928_p3 = 32'd32;
    end
end


always @ (p_Result_17_fu_493_p4) begin
    if (p_Result_17_fu_493_p4[0] == 1'b1) begin
        l_fu_503_p3 = 32'd0;
    end else if (p_Result_17_fu_493_p4[1] == 1'b1) begin
        l_fu_503_p3 = 32'd1;
    end else if (p_Result_17_fu_493_p4[2] == 1'b1) begin
        l_fu_503_p3 = 32'd2;
    end else if (p_Result_17_fu_493_p4[3] == 1'b1) begin
        l_fu_503_p3 = 32'd3;
    end else if (p_Result_17_fu_493_p4[4] == 1'b1) begin
        l_fu_503_p3 = 32'd4;
    end else if (p_Result_17_fu_493_p4[5] == 1'b1) begin
        l_fu_503_p3 = 32'd5;
    end else if (p_Result_17_fu_493_p4[6] == 1'b1) begin
        l_fu_503_p3 = 32'd6;
    end else if (p_Result_17_fu_493_p4[7] == 1'b1) begin
        l_fu_503_p3 = 32'd7;
    end else if (p_Result_17_fu_493_p4[8] == 1'b1) begin
        l_fu_503_p3 = 32'd8;
    end else if (p_Result_17_fu_493_p4[9] == 1'b1) begin
        l_fu_503_p3 = 32'd9;
    end else if (p_Result_17_fu_493_p4[10] == 1'b1) begin
        l_fu_503_p3 = 32'd10;
    end else if (p_Result_17_fu_493_p4[11] == 1'b1) begin
        l_fu_503_p3 = 32'd11;
    end else if (p_Result_17_fu_493_p4[12] == 1'b1) begin
        l_fu_503_p3 = 32'd12;
    end else if (p_Result_17_fu_493_p4[13] == 1'b1) begin
        l_fu_503_p3 = 32'd13;
    end else if (p_Result_17_fu_493_p4[14] == 1'b1) begin
        l_fu_503_p3 = 32'd14;
    end else if (p_Result_17_fu_493_p4[15] == 1'b1) begin
        l_fu_503_p3 = 32'd15;
    end else if (p_Result_17_fu_493_p4[16] == 1'b1) begin
        l_fu_503_p3 = 32'd16;
    end else if (p_Result_17_fu_493_p4[17] == 1'b1) begin
        l_fu_503_p3 = 32'd17;
    end else if (p_Result_17_fu_493_p4[18] == 1'b1) begin
        l_fu_503_p3 = 32'd18;
    end else if (p_Result_17_fu_493_p4[19] == 1'b1) begin
        l_fu_503_p3 = 32'd19;
    end else if (p_Result_17_fu_493_p4[20] == 1'b1) begin
        l_fu_503_p3 = 32'd20;
    end else if (p_Result_17_fu_493_p4[21] == 1'b1) begin
        l_fu_503_p3 = 32'd21;
    end else if (p_Result_17_fu_493_p4[22] == 1'b1) begin
        l_fu_503_p3 = 32'd22;
    end else if (p_Result_17_fu_493_p4[23] == 1'b1) begin
        l_fu_503_p3 = 32'd23;
    end else if (p_Result_17_fu_493_p4[24] == 1'b1) begin
        l_fu_503_p3 = 32'd24;
    end else if (p_Result_17_fu_493_p4[25] == 1'b1) begin
        l_fu_503_p3 = 32'd25;
    end else if (p_Result_17_fu_493_p4[26] == 1'b1) begin
        l_fu_503_p3 = 32'd26;
    end else if (p_Result_17_fu_493_p4[27] == 1'b1) begin
        l_fu_503_p3 = 32'd27;
    end else if (p_Result_17_fu_493_p4[28] == 1'b1) begin
        l_fu_503_p3 = 32'd28;
    end else if (p_Result_17_fu_493_p4[29] == 1'b1) begin
        l_fu_503_p3 = 32'd29;
    end else if (p_Result_17_fu_493_p4[30] == 1'b1) begin
        l_fu_503_p3 = 32'd30;
    end else if (p_Result_17_fu_493_p4[31] == 1'b1) begin
        l_fu_503_p3 = 32'd31;
    end else begin
        l_fu_503_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_337_p2 = ($signed(sub_ln944_1_fu_331_p2) + $signed(32'd4294967272));

assign lsb_index_2_fu_942_p2 = ($signed(sub_ln944_2_fu_936_p2) + $signed(32'd4294967272));

assign lsb_index_fu_517_p2 = ($signed(sub_ln944_fu_511_p2) + $signed(32'd4294967272));

assign lshr_ln947_1_fu_373_p2 = 32'd4294967295 >> zext_ln947_1_fu_369_p1;

assign lshr_ln947_2_fu_978_p2 = 32'd4294967295 >> zext_ln947_2_fu_974_p1;

assign lshr_ln947_fu_553_p2 = 32'd4294967295 >> zext_ln947_fu_549_p1;

assign lshr_ln958_1_fu_784_p2 = m_5_reg_1593 >> zext_ln958_1_fu_780_p1;

assign lshr_ln958_2_fu_1080_p2 = zext_ln959_4_fu_1042_p1 >> zext_ln958_2_fu_1076_p1;

assign lshr_ln958_fu_664_p2 = zext_ln959_3_fu_637_p1 >> zext_ln958_fu_660_p1;

assign lshr_ln_fu_287_p4 = {{add_ln564_fu_282_p2[15:13]}};

assign m_10_fu_789_p3 = ((icmp_ln958_1_reg_1619[0:0] == 1'b1) ? lshr_ln958_1_fu_784_p2 : shl_ln959_1_fu_770_p2);

assign m_11_fu_799_p2 = (m_10_fu_789_p3 + zext_ln961_1_fu_796_p1);

assign m_14_fu_1094_p3 = ((icmp_ln958_2_fu_1030_p2[0:0] == 1'b1) ? lshr_ln958_2_fu_1080_p2 : shl_ln959_2_fu_1056_p2);

assign m_15_fu_1106_p2 = (m_14_fu_1094_p3 + zext_ln961_2_fu_1102_p1);

assign m_17_fu_485_p3 = ((p_Result_16_fu_471_p3[0:0] == 1'b1) ? tmp_V_fu_479_p2 : z_bits_fu_461_p1);

assign m_18_fu_686_p4 = {{m_6_fu_680_p2[63:1]}};

assign m_19_fu_805_p4 = {{m_11_fu_799_p2[63:1]}};

assign m_20_fu_910_p3 = ((p_Result_25_fu_896_p3[0:0] == 1'b1) ? tmp_V_3_fu_904_p2 : ap_phi_mux_minVal_V_2_phi_fu_190_p4);

assign m_5_fu_254_p1 = tmp_V_5_fu_246_p3;

assign m_6_fu_680_p2 = (m_fu_670_p3 + zext_ln961_fu_677_p1);

assign m_fu_670_p3 = ((icmp_ln958_reg_1660[0:0] == 1'b1) ? lshr_ln958_fu_664_p2 : shl_ln959_fu_649_p2);

assign man_V_1_fu_1328_p2 = (54'd0 - zext_ln569_fu_1324_p1);

assign man_V_2_fu_1334_p3 = ((p_Result_29_reg_1730[0:0] == 1'b1) ? man_V_1_fu_1328_p2 : zext_ln569_fu_1324_p1);

assign minVal_V_fu_1537_p3 = ((or_ln585_fu_1531_p2[0:0] == 1'b1) ? 32'd0 : select_ln564_fu_1506_p3);

assign num_points_address0 = idxprom_fu_221_p1;

assign or_ln564_1_fu_1301_p2 = (icmp_ln564_3_reg_1755 | icmp_ln564_2_reg_1750);

assign or_ln564_fu_1297_p2 = (icmp_ln564_reg_1715 | icmp_ln564_1_reg_1720);

assign or_ln585_fu_1531_p2 = (and_ln585_1_fu_1525_p2 | and_ln571_1_fu_1514_p2);

assign or_ln949_3_fu_565_p2 = (shl_ln949_fu_559_p2 | lshr_ln947_fu_553_p2);

assign or_ln949_4_fu_990_p2 = (shl_ln949_2_fu_984_p2 | lshr_ln947_2_fu_978_p2);

assign or_ln949_fu_385_p2 = (shl_ln949_1_fu_379_p2 | lshr_ln947_1_fu_373_p2);

assign p_Result_16_fu_471_p3 = points_q0[32'd31];

integer ap_tvar_int_0;

always @ (m_17_fu_485_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_17_fu_493_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_17_fu_493_p4[ap_tvar_int_0] = m_17_fu_485_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_18_fu_597_p3 = m_17_fu_485_p3[lsb_index_fu_517_p2];

assign p_Result_19_fu_734_p5 = {{zext_ln962_fu_696_p1[63:32]}, {tmp_4_fu_727_p3}, {zext_ln962_fu_696_p1[22:0]}};

assign p_Result_20_fu_232_p3 = z_value[32'd31];

integer ap_tvar_int_1;

always @ (tmp_V_5_reg_1586) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_21_fu_314_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_21_fu_314_p4[ap_tvar_int_1] = tmp_V_5_reg_1586[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_22_fu_416_p3 = tmp_V_5_reg_1586[lsb_index_1_fu_337_p2];

assign p_Result_23_fu_853_p5 = {{zext_ln962_1_fu_815_p1[63:32]}, {tmp_5_fu_846_p3}, {zext_ln962_1_fu_815_p1[22:0]}};

assign p_Result_24_fu_883_p1 = data_V_fu_880_p1[30:0];

assign p_Result_25_fu_896_p3 = ap_phi_mux_minVal_V_2_phi_fu_190_p4[32'd31];

integer ap_tvar_int_2;

always @ (m_20_fu_910_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_26_fu_918_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_26_fu_918_p4[ap_tvar_int_2] = m_20_fu_910_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_27_fu_1022_p3 = m_20_fu_910_p3[lsb_index_2_fu_942_p2];

assign p_Result_28_fu_1224_p5 = {{zext_ln962_2_fu_1196_p1[63:32]}, {tmp_6_fu_1217_p3}, {zext_ln962_2_fu_1196_p1[22:0]}};

assign p_Result_30_fu_1317_p3 = {{1'd1}, {trunc_ln565_reg_1740}};

assign p_Result_5_fu_819_p3 = m_11_fu_799_p2[32'd25];

assign p_Result_s_fu_700_p3 = m_6_fu_680_p2[32'd25];

assign points_address0 = zext_ln564_fu_309_p1;

assign retval_0_i_i73_fu_873_p3 = ((tobool_i_i11_reg_1576[0:0] == 1'b1) ? bitcast_ln744_1_fu_869_p1 : 32'd0);

assign select_ln564_fu_1506_p3 = ((and_ln564_1_fu_1311_p2[0:0] == 1'b1) ? select_ln603_fu_1498_p3 : minVal_V_2_reg_186);

assign select_ln582_fu_1440_p3 = ((and_ln582_fu_1434_p2[0:0] == 1'b1) ? trunc_ln583_fu_1373_p1 : 32'd0);

assign select_ln585_2_fu_1545_p3 = ((and_ln564_1_fu_1311_p2[0:0] == 1'b1) ? i_reg_174_pp0_iter3_reg : index_reg_198);

assign select_ln585_fu_1472_p3 = ((and_ln585_fu_1466_p2[0:0] == 1'b1) ? trunc_ln586_1_fu_1413_p1 : select_ln582_fu_1440_p3);

assign select_ln603_fu_1498_p3 = ((and_ln603_1_fu_1492_p2[0:0] == 1'b1) ? shl_ln604_fu_1417_p2 : select_ln585_fu_1472_p3);

assign select_ln935_fu_754_p3 = ((icmp_ln935_reg_1639[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_750_p1);

assign select_ln943_1_fu_827_p3 = ((p_Result_5_fu_819_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_2_fu_1199_p3 = ((p_Result_11_reg_1705[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_708_p3 = ((p_Result_s_fu_700_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_1_fu_435_p3 = ((icmp_ln946_1_fu_353_p2[0:0] == 1'b1) ? icmp_ln949_1_fu_396_p2 : p_Result_22_fu_416_p3);

assign select_ln946_2_fu_1062_p3 = ((icmp_ln946_2_fu_958_p2[0:0] == 1'b1) ? icmp_ln949_2_fu_1002_p2 : p_Result_27_fu_1022_p3);

assign select_ln946_fu_617_p3 = ((icmp_ln946_fu_533_p2[0:0] == 1'b1) ? icmp_ln949_fu_577_p2 : p_Result_18_fu_597_p3);

assign select_ln958_2_fu_443_p3 = ((icmp_ln958_1_fu_423_p2[0:0] == 1'b1) ? select_ln946_1_fu_435_p3 : and_ln949_3_fu_429_p2);

assign select_ln958_4_fu_1086_p3 = ((icmp_ln958_2_fu_1030_p2[0:0] == 1'b1) ? select_ln946_2_fu_1062_p3 : and_ln949_5_fu_1036_p2);

assign select_ln958_fu_625_p3 = ((icmp_ln958_fu_605_p2[0:0] == 1'b1) ? select_ln946_fu_617_p3 : and_ln949_1_fu_611_p2);

assign sext_ln581_fu_1364_p1 = sh_amt_fu_1356_p3;

assign sh_amt_fu_1356_p3 = ((icmp_ln581_fu_1341_p2[0:0] == 1'b1) ? add_ln581_fu_1346_p2 : sub_ln581_fu_1351_p2);

assign shl_ln564_1_fu_274_p3 = {{trunc_ln564_fu_270_p1}, {4'd0}};

assign shl_ln604_fu_1417_p2 = trunc_ln583_fu_1373_p1 << sext_ln581_fu_1364_p1;

assign shl_ln949_1_fu_379_p2 = 32'd1 << lsb_index_1_fu_337_p2;

assign shl_ln949_2_fu_984_p2 = 32'd1 << lsb_index_2_fu_942_p2;

assign shl_ln949_fu_559_p2 = 32'd1 << lsb_index_fu_517_p2;

assign shl_ln959_1_fu_770_p2 = m_5_reg_1593 << zext_ln959_1_fu_766_p1;

assign shl_ln959_2_fu_1056_p2 = zext_ln959_4_fu_1042_p1 << zext_ln959_2_fu_1052_p1;

assign shl_ln959_fu_649_p2 = zext_ln959_3_fu_637_p1 << zext_ln959_fu_645_p1;

assign shl_ln_fu_258_p3 = {{layer}, {13'd0}};

assign sub_i_i15_fu_240_p2 = (32'd0 - z_value);

assign sub_ln581_fu_1351_p2 = (12'd20 - F2_reg_1766);

assign sub_ln944_1_fu_331_p2 = (32'd32 - l_1_fu_323_p3);

assign sub_ln944_2_fu_936_p2 = (32'd32 - l_2_fu_928_p3);

assign sub_ln944_fu_511_p2 = (32'd32 - l_fu_503_p3);

assign sub_ln947_1_fu_363_p2 = ($signed(6'd57) - $signed(trunc_ln947_1_fu_359_p1));

assign sub_ln947_2_fu_968_p2 = ($signed(6'd57) - $signed(trunc_ln947_2_fu_964_p1));

assign sub_ln947_fu_543_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_539_p1));

assign sub_ln959_1_fu_761_p2 = (32'd25 - sub_ln944_1_reg_1613);

assign sub_ln959_2_fu_1046_p2 = (32'd25 - sub_ln944_2_fu_936_p2);

assign sub_ln959_fu_640_p2 = (32'd25 - sub_ln944_reg_1654);

assign sub_ln964_1_fu_835_p2 = (8'd12 - trunc_ln943_1_reg_1629);

assign sub_ln964_2_fu_1206_p2 = (8'd12 - trunc_ln943_2_reg_1710);

assign sub_ln964_fu_716_p2 = (8'd12 - trunc_ln943_reg_1670);

assign tmp_10_fu_583_p3 = lsb_index_fu_517_p2[32'd31];

assign tmp_12_fu_402_p3 = lsb_index_1_fu_337_p2[32'd31];

assign tmp_15_fu_948_p4 = {{lsb_index_2_fu_942_p2[31:1]}};

assign tmp_16_fu_1008_p3 = lsb_index_2_fu_942_p2[32'd31];

assign tmp_19_fu_1383_p4 = {{sh_amt_fu_1356_p3[11:5]}};

assign tmp_4_fu_727_p3 = {{p_Result_16_reg_1644}, {add_ln964_fu_721_p2}};

assign tmp_5_fu_846_p3 = {{p_Result_20_reg_1581}, {add_ln964_1_fu_840_p2}};

assign tmp_6_fu_1217_p3 = {{p_Result_25_reg_1695}, {add_ln964_2_fu_1211_p2}};

assign tmp_7_fu_1134_p4 = {{data_V_fu_880_p1[30:23]}};

assign tmp_8_fu_523_p4 = {{lsb_index_fu_517_p2[31:1]}};

assign tmp_9_fu_1257_p4 = {{data_V_1_fu_1240_p3[30:23]}};

assign tmp_V_3_fu_904_p2 = (32'd0 - ap_phi_mux_minVal_V_2_phi_fu_190_p4);

assign tmp_V_5_fu_246_p3 = ((p_Result_20_fu_232_p3[0:0] == 1'b1) ? sub_i_i15_fu_240_p2 : z_value);

assign tmp_V_fu_479_p2 = (32'd0 - z_bits_fu_461_p1);

assign tmp_fu_343_p4 = {{lsb_index_1_fu_337_p2[31:1]}};

assign tmp_s_fu_301_p3 = {{lshr_ln_fu_287_p4}, {trunc_ln564_1_fu_297_p1}};

assign tobool_i_i11_fu_226_p2 = ((z_value != 32'd0) ? 1'b1 : 1'b0);

assign trunc_ln555_fu_1164_p1 = ireg_fu_1160_p1[62:0];

assign trunc_ln564_1_fu_297_p1 = ap_phi_mux_i_phi_fu_178_p4[8:0];

assign trunc_ln564_2_fu_1144_p1 = data_V_fu_880_p1[22:0];

assign trunc_ln564_3_fu_1267_p1 = data_V_1_fu_1240_p3[22:0];

assign trunc_ln564_fu_270_p1 = ap_phi_mux_i_phi_fu_178_p4[11:0];

assign trunc_ln565_fu_1186_p1 = ireg_fu_1160_p1[51:0];

assign trunc_ln583_fu_1373_p1 = man_V_2_fu_1334_p3[31:0];

assign trunc_ln586_1_fu_1413_p1 = ashr_ln586_fu_1407_p2[31:0];

assign trunc_ln586_fu_1399_p1 = sh_amt_fu_1356_p3[5:0];

assign trunc_ln943_1_fu_451_p1 = l_1_fu_323_p3[7:0];

assign trunc_ln943_2_fu_1130_p1 = l_2_fu_928_p3[7:0];

assign trunc_ln943_fu_633_p1 = l_fu_503_p3[7:0];

assign trunc_ln947_1_fu_359_p1 = sub_ln944_1_fu_331_p2[5:0];

assign trunc_ln947_2_fu_964_p1 = sub_ln944_2_fu_936_p2[5:0];

assign trunc_ln947_fu_539_p1 = sub_ln944_fu_511_p2[5:0];

assign xor_ln571_fu_1423_p2 = (icmp_ln571_reg_1760 ^ 1'd1);

assign xor_ln581_fu_1480_p2 = (icmp_ln581_fu_1341_p2 ^ 1'd1);

assign xor_ln582_fu_1448_p2 = (icmp_ln582_fu_1368_p2 ^ 1'd1);

assign xor_ln585_fu_1519_p2 = (icmp_ln585_fu_1377_p2 ^ 1'd1);

assign xor_ln949_1_fu_410_p2 = (tmp_12_fu_402_p3 ^ 1'd1);

assign xor_ln949_2_fu_1016_p2 = (tmp_16_fu_1008_p3 ^ 1'd1);

assign xor_ln949_fu_591_p2 = (tmp_10_fu_583_p3 ^ 1'd1);

assign z_bits_fu_461_p1 = points_q0[31:0];

assign zext_ln368_1_fu_1248_p1 = data_V_1_fu_1240_p3;

assign zext_ln368_fu_887_p1 = p_Result_24_fu_883_p1;

assign zext_ln455_fu_1283_p1 = exp_tmp_reg_1735;

assign zext_ln564_fu_309_p1 = tmp_s_fu_301_p3;

assign zext_ln569_fu_1324_p1 = p_Result_30_fu_1317_p3;

assign zext_ln586_fu_1403_p1 = trunc_ln586_fu_1399_p1;

assign zext_ln947_1_fu_369_p1 = sub_ln947_1_fu_363_p2;

assign zext_ln947_2_fu_974_p1 = sub_ln947_2_fu_968_p2;

assign zext_ln947_fu_549_p1 = sub_ln947_fu_543_p2;

assign zext_ln958_1_fu_780_p1 = add_ln958_1_fu_775_p2;

assign zext_ln958_2_fu_1076_p1 = add_ln958_2_fu_1070_p2;

assign zext_ln958_fu_660_p1 = add_ln958_fu_655_p2;

assign zext_ln959_1_fu_766_p1 = sub_ln959_1_fu_761_p2;

assign zext_ln959_2_fu_1052_p1 = sub_ln959_2_fu_1046_p2;

assign zext_ln959_3_fu_637_p1 = m_17_reg_1649;

assign zext_ln959_4_fu_1042_p1 = m_20_fu_910_p3;

assign zext_ln959_fu_645_p1 = sub_ln959_fu_640_p2;

assign zext_ln961_1_fu_796_p1 = select_ln958_2_reg_1624;

assign zext_ln961_2_fu_1102_p1 = select_ln958_4_fu_1086_p3;

assign zext_ln961_fu_677_p1 = select_ln958_reg_1665;

assign zext_ln962_1_fu_815_p1 = m_19_fu_805_p4;

assign zext_ln962_2_fu_1196_p1 = m_21_reg_1700;

assign zext_ln962_fu_696_p1 = m_18_fu_686_p4;

always @ (posedge ap_clk) begin
    m_5_reg_1593[63:32] <= 32'b00000000000000000000000000000000;
    shl_ln_reg_1599[12:0] <= 13'b0000000000000;
    bitcast_ln351_reg_1690[31] <= 1'b0;
end

endmodule //system_top_get_index_from_z
