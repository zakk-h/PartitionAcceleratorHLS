// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_left_and_right_boundaries9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        points_address0,
        points_ce0,
        points_q0,
        left_bound,
        left_bound_ap_vld,
        right_bound,
        right_bound_ap_vld,
        i_dout,
        i_empty_n,
        i_read,
        lbVal_constprop_i,
        lbVal_constprop_o,
        lbVal_constprop_o_ap_vld,
        rbVal_constprop_i,
        rbVal_constprop_o,
        rbVal_constprop_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_pp0_stage0 = 11'd4;
parameter    ap_ST_fsm_pp0_stage1 = 11'd8;
parameter    ap_ST_fsm_pp0_stage2 = 11'd16;
parameter    ap_ST_fsm_pp0_stage3 = 11'd32;
parameter    ap_ST_fsm_pp0_stage4 = 11'd64;
parameter    ap_ST_fsm_pp0_stage5 = 11'd128;
parameter    ap_ST_fsm_pp0_stage6 = 11'd256;
parameter    ap_ST_fsm_pp0_stage7 = 11'd512;
parameter    ap_ST_fsm_state19 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [31:0] left_bound;
output   left_bound_ap_vld;
output  [31:0] right_bound;
output   right_bound_ap_vld;
input  [2:0] i_dout;
input   i_empty_n;
output   i_read;
input  [31:0] lbVal_constprop_i;
output  [31:0] lbVal_constprop_o;
output   lbVal_constprop_o_ap_vld;
input  [31:0] rbVal_constprop_i;
output  [31:0] rbVal_constprop_o;
output   rbVal_constprop_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg num_points_ce0;
reg points_ce0;
reg[31:0] left_bound;
reg left_bound_ap_vld;
reg[31:0] right_bound;
reg right_bound_ap_vld;
reg i_read;
reg[31:0] lbVal_constprop_o;
reg lbVal_constprop_o_ap_vld;
reg[31:0] rbVal_constprop_o;
reg rbVal_constprop_o_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] get_trapezoid_edgestrapezoid_edges_address0;
reg    get_trapezoid_edgestrapezoid_edges_ce0;
wire   [31:0] get_trapezoid_edgestrapezoid_edges_q0;
reg    i_blk_n;
reg   [31:0] j_reg_207;
reg   [31:0] j_reg_207_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_221_p2;
reg   [31:0] reg_232;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_state16_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln313_reg_2441;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [2:0] i_17_reg_2411;
reg   [31:0] num_points_load_reg_2426;
wire    ap_CS_fsm_state2;
reg   [31:0] get_trapezoid_edgestrapezoid_edges_load_reg_2431;
wire   [15:0] shl_ln_fu_244_p3;
reg   [15:0] shl_ln_reg_2436;
wire   [0:0] icmp_ln313_fu_251_p2;
wire   [0:0] icmp_ln935_fu_304_p2;
reg   [0:0] icmp_ln935_reg_2450;
wire   [0:0] p_Result_226_fu_310_p3;
reg   [0:0] p_Result_226_reg_2455;
wire   [31:0] m_118_fu_324_p3;
reg   [31:0] m_118_reg_2460;
wire   [31:0] sub_ln944_fu_350_p2;
reg   [31:0] sub_ln944_reg_2465;
wire   [0:0] icmp_ln958_fu_444_p2;
reg   [0:0] icmp_ln958_reg_2471;
wire   [0:0] select_ln958_fu_464_p3;
reg   [0:0] select_ln958_reg_2476;
wire   [7:0] trunc_ln943_fu_472_p1;
reg   [7:0] trunc_ln943_reg_2481;
wire   [31:0] select_ln935_fu_593_p3;
reg   [31:0] select_ln935_reg_2486;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state13_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] icmp_ln935_11_fu_604_p2;
reg   [0:0] icmp_ln935_11_reg_2491;
wire   [0:0] p_Result_238_fu_610_p3;
reg   [0:0] p_Result_238_reg_2496;
reg   [62:0] m_123_reg_2501;
reg   [0:0] p_Result_208_reg_2506;
wire   [7:0] trunc_ln943_14_fu_844_p1;
reg   [7:0] trunc_ln943_14_reg_2511;
wire   [30:0] p_Result_237_fu_852_p1;
reg   [30:0] p_Result_237_reg_2516;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_state17_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] select_ln935_6_fu_904_p3;
reg   [31:0] select_ln935_6_reg_2521;
wire   [31:0] add_ln313_fu_911_p2;
reg   [31:0] add_ln313_reg_2526;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_state18_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] icmp_ln935_10_fu_921_p2;
reg   [0:0] icmp_ln935_10_reg_2531;
wire   [0:0] p_Result_231_fu_927_p3;
reg   [0:0] p_Result_231_reg_2536;
reg   [62:0] m_121_reg_2541;
reg   [0:0] p_Result_200_reg_2546;
wire   [7:0] trunc_ln943_13_fu_1161_p1;
reg   [7:0] trunc_ln943_13_reg_2551;
wire   [31:0] bitcast_ln351_6_fu_1168_p1;
reg   [31:0] bitcast_ln351_6_reg_2556;
wire   [30:0] p_Result_230_fu_1177_p1;
reg   [30:0] p_Result_230_reg_2562;
wire   [31:0] select_ln935_5_fu_1229_p3;
reg   [31:0] select_ln935_5_reg_2567;
wire   [31:0] bitcast_ln351_fu_1239_p1;
reg   [31:0] bitcast_ln351_reg_2572;
reg   [31:0] v_assign_reg_2578;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state14_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire  signed [11:0] sh_amt_4_fu_1334_p3;
reg  signed [11:0] sh_amt_4_reg_2584;
wire   [31:0] trunc_ln583_4_fu_1348_p1;
reg   [31:0] trunc_ln583_4_reg_2589;
wire   [0:0] xor_ln571_3_fu_1392_p2;
reg   [0:0] xor_ln571_3_reg_2594;
wire   [0:0] and_ln603_4_fu_1452_p2;
reg   [0:0] and_ln603_4_reg_2599;
wire   [0:0] or_ln603_3_fu_1458_p2;
reg   [0:0] or_ln603_3_reg_2604;
wire   [31:0] select_ln603_1_fu_1464_p3;
reg   [31:0] select_ln603_1_reg_2609;
wire   [0:0] or_ln603_5_fu_1478_p2;
reg   [0:0] or_ln603_5_reg_2614;
wire   [0:0] and_ln1495_3_fu_1538_p2;
reg   [0:0] and_ln1495_3_reg_2619;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state15_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [53:0] man_V_17_fu_1595_p3;
reg   [53:0] man_V_17_reg_2623;
wire   [0:0] icmp_ln571_fu_1603_p2;
reg   [0:0] icmp_ln571_reg_2628;
wire  signed [11:0] sh_amt_fu_1633_p3;
reg  signed [11:0] sh_amt_reg_2633;
wire   [0:0] icmp_ln582_fu_1641_p2;
reg   [0:0] icmp_ln582_reg_2638;
wire   [0:0] and_ln585_fu_1701_p2;
reg   [0:0] and_ln585_reg_2643;
wire   [0:0] and_ln603_fu_1731_p2;
reg   [0:0] and_ln603_reg_2648;
wire   [0:0] or_ln603_fu_1737_p2;
reg   [0:0] or_ln603_reg_2653;
wire   [0:0] select_ln603_4_fu_1759_p3;
reg   [0:0] select_ln603_4_reg_2659;
wire   [0:0] and_ln1495_1_fu_2125_p2;
reg   [0:0] and_ln1495_1_reg_2664;
wire    ap_block_pp0_stage7_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg   [31:0] ap_phi_mux_j_phi_fu_213_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] idxprom_i_fu_238_p1;
wire   [63:0] zext_ln314_fu_295_p1;
wire   [31:0] select_ln585_7_fu_2397_p3;
wire    ap_block_pp0_stage7;
reg   [31:0] ap_sig_allocacmp_p_Val2_s;
wire   [31:0] select_ln585_11_fu_2033_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] ap_sig_allocacmp_p_Val2_88;
reg    ap_block_state1;
reg   [31:0] right_bound_preg;
wire    ap_block_pp0_stage4_01001;
reg   [31:0] left_bound_preg;
wire    ap_block_pp0_stage6_01001;
reg   [31:0] grp_fu_221_p0;
reg   [31:0] grp_fu_221_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_226_p0;
wire    ap_block_pp0_stage2;
wire   [11:0] trunc_ln314_fu_256_p1;
wire   [15:0] shl_ln314_1_fu_260_p3;
wire   [15:0] add_ln314_fu_268_p2;
wire   [2:0] lshr_ln_fu_273_p4;
wire   [8:0] trunc_ln314_1_fu_283_p1;
wire   [11:0] tmp_s_fu_287_p3;
wire   [31:0] z_bits_fu_300_p1;
wire   [31:0] tmp_V_fu_318_p2;
reg   [31:0] p_Result_227_fu_332_p4;
reg   [31:0] l_fu_342_p3;
wire   [31:0] lsb_index_fu_356_p2;
wire   [30:0] tmp_fu_362_p4;
wire   [5:0] trunc_ln947_fu_378_p1;
wire   [5:0] sub_ln947_fu_382_p2;
wire   [31:0] zext_ln947_fu_388_p1;
wire   [31:0] lshr_ln947_fu_392_p2;
wire   [31:0] shl_ln949_fu_398_p2;
wire   [31:0] or_ln949_19_fu_404_p2;
wire   [31:0] and_ln949_fu_410_p2;
wire   [0:0] tmp_119_fu_422_p3;
wire   [0:0] p_Result_228_fu_436_p3;
wire   [0:0] xor_ln949_fu_430_p2;
wire   [0:0] icmp_ln946_fu_372_p2;
wire   [0:0] icmp_ln949_fu_416_p2;
wire   [0:0] select_ln946_fu_456_p3;
wire   [0:0] and_ln949_25_fu_450_p2;
wire   [31:0] sub_ln959_fu_479_p2;
wire   [63:0] zext_ln959_fu_476_p1;
wire   [63:0] zext_ln959_19_fu_484_p1;
wire   [31:0] add_ln958_fu_494_p2;
wire   [63:0] zext_ln958_fu_499_p1;
wire   [63:0] lshr_ln958_fu_503_p2;
wire   [63:0] shl_ln959_fu_488_p2;
wire   [63:0] m_fu_509_p3;
wire   [63:0] zext_ln961_fu_516_p1;
wire   [63:0] m_99_fu_519_p2;
wire   [62:0] m_119_fu_525_p4;
wire   [0:0] p_Result_s_fu_539_p3;
wire   [7:0] sub_ln964_fu_555_p2;
wire   [7:0] select_ln943_fu_547_p3;
wire   [7:0] add_ln964_fu_560_p2;
wire   [63:0] zext_ln962_fu_535_p1;
wire   [8:0] tmp_41_i_fu_566_p3;
wire   [63:0] p_Result_229_fu_573_p5;
wire   [31:0] LD_fu_585_p1;
wire   [31:0] bitcast_ln744_fu_589_p1;
wire   [31:0] tmp_V_40_fu_618_p2;
wire   [31:0] m_122_fu_624_p3;
reg   [31:0] p_Result_239_fu_632_p4;
reg   [31:0] l_15_fu_642_p3;
wire   [31:0] sub_ln944_14_fu_650_p2;
wire   [31:0] lsb_index_15_fu_656_p2;
wire   [30:0] tmp_129_fu_662_p4;
wire   [5:0] trunc_ln947_14_fu_678_p1;
wire   [5:0] sub_ln947_14_fu_682_p2;
wire   [31:0] zext_ln947_14_fu_688_p1;
wire   [31:0] lshr_ln947_14_fu_692_p2;
wire   [31:0] shl_ln949_14_fu_698_p2;
wire   [31:0] or_ln949_20_fu_704_p2;
wire   [31:0] and_ln949_29_fu_710_p2;
wire   [0:0] tmp_130_fu_722_p3;
wire   [0:0] p_Result_240_fu_736_p3;
wire   [0:0] xor_ln949_14_fu_730_p2;
wire   [31:0] sub_ln959_11_fu_760_p2;
wire   [63:0] zext_ln959_22_fu_756_p1;
wire   [63:0] zext_ln959_23_fu_766_p1;
wire   [0:0] icmp_ln946_14_fu_672_p2;
wire   [0:0] icmp_ln949_14_fu_716_p2;
wire   [31:0] add_ln958_11_fu_784_p2;
wire   [63:0] zext_ln958_11_fu_790_p1;
wire   [0:0] icmp_ln958_11_fu_744_p2;
wire   [0:0] select_ln946_14_fu_776_p3;
wire   [0:0] and_ln949_27_fu_750_p2;
wire   [63:0] lshr_ln958_11_fu_794_p2;
wire   [63:0] shl_ln959_11_fu_770_p2;
wire   [0:0] select_ln958_25_fu_800_p3;
wire   [63:0] m_108_fu_808_p3;
wire   [63:0] zext_ln961_14_fu_816_p1;
wire   [63:0] m_109_fu_820_p2;
wire   [31:0] data_V_6_fu_848_p1;
wire   [7:0] sub_ln964_14_fu_866_p2;
wire   [7:0] select_ln943_14_fu_859_p3;
wire   [7:0] add_ln964_14_fu_871_p2;
wire   [63:0] zext_ln962_11_fu_856_p1;
wire   [8:0] tmp_45_i_fu_877_p3;
wire   [63:0] p_Result_241_fu_884_p5;
wire   [31:0] LD_19_fu_896_p1;
wire   [31:0] bitcast_ln744_12_fu_900_p1;
wire   [31:0] tmp_V_37_fu_935_p2;
wire   [31:0] m_120_fu_941_p3;
reg   [31:0] p_Result_232_fu_949_p4;
reg   [31:0] l_14_fu_959_p3;
wire   [31:0] sub_ln944_13_fu_967_p2;
wire   [31:0] lsb_index_14_fu_973_p2;
wire   [30:0] tmp_122_fu_979_p4;
wire   [5:0] trunc_ln947_13_fu_995_p1;
wire   [5:0] sub_ln947_13_fu_999_p2;
wire   [31:0] zext_ln947_13_fu_1005_p1;
wire   [31:0] lshr_ln947_13_fu_1009_p2;
wire   [31:0] shl_ln949_13_fu_1015_p2;
wire   [31:0] or_ln949_fu_1021_p2;
wire   [31:0] and_ln949_28_fu_1027_p2;
wire   [0:0] tmp_123_fu_1039_p3;
wire   [0:0] p_Result_233_fu_1053_p3;
wire   [0:0] xor_ln949_13_fu_1047_p2;
wire   [31:0] sub_ln959_10_fu_1077_p2;
wire   [63:0] zext_ln959_20_fu_1073_p1;
wire   [63:0] zext_ln959_21_fu_1083_p1;
wire   [0:0] icmp_ln946_13_fu_989_p2;
wire   [0:0] icmp_ln949_13_fu_1033_p2;
wire   [31:0] add_ln958_10_fu_1101_p2;
wire   [63:0] zext_ln958_10_fu_1107_p1;
wire   [0:0] icmp_ln958_10_fu_1061_p2;
wire   [0:0] select_ln946_13_fu_1093_p3;
wire   [0:0] and_ln949_26_fu_1067_p2;
wire   [63:0] lshr_ln958_10_fu_1111_p2;
wire   [63:0] shl_ln959_10_fu_1087_p2;
wire   [0:0] select_ln958_23_fu_1117_p3;
wire   [63:0] m_103_fu_1125_p3;
wire   [63:0] zext_ln961_13_fu_1133_p1;
wire   [63:0] m_104_fu_1137_p2;
wire   [31:0] zext_ln368_5_fu_1165_p1;
wire   [31:0] data_V_fu_1173_p1;
wire   [7:0] sub_ln964_13_fu_1191_p2;
wire   [7:0] select_ln943_13_fu_1184_p3;
wire   [7:0] add_ln964_13_fu_1196_p2;
wire   [63:0] zext_ln962_10_fu_1181_p1;
wire   [8:0] tmp_42_i_fu_1202_p3;
wire   [63:0] p_Result_234_fu_1209_p5;
wire   [31:0] LD_17_fu_1221_p1;
wire   [31:0] bitcast_ln744_11_fu_1225_p1;
wire   [31:0] zext_ln368_fu_1236_p1;
wire   [63:0] grp_fu_226_p1;
wire   [63:0] ireg_4_fu_1244_p1;
wire   [10:0] exp_tmp_4_fu_1260_p4;
wire   [51:0] trunc_ln565_4_fu_1274_p1;
wire   [52:0] p_Result_243_fu_1278_p3;
wire   [53:0] zext_ln569_4_fu_1286_p1;
wire   [0:0] p_Result_242_fu_1252_p3;
wire   [53:0] man_V_19_fu_1290_p2;
wire   [62:0] trunc_ln555_4_fu_1248_p1;
wire   [11:0] zext_ln455_4_fu_1270_p1;
wire   [11:0] F2_4_fu_1310_p2;
wire   [0:0] icmp_ln581_4_fu_1316_p2;
wire   [11:0] add_ln581_4_fu_1322_p2;
wire   [11:0] sub_ln581_4_fu_1328_p2;
wire   [53:0] man_V_20_fu_1296_p3;
wire   [6:0] tmp_133_fu_1358_p4;
wire   [5:0] trunc_ln586_10_fu_1374_p1;
wire   [53:0] zext_ln586_4_fu_1378_p1;
wire   [53:0] ashr_ln586_4_fu_1382_p2;
wire   [0:0] icmp_ln571_4_fu_1304_p2;
wire   [0:0] icmp_ln582_4_fu_1342_p2;
wire   [0:0] or_ln582_3_fu_1404_p2;
wire   [0:0] xor_ln582_3_fu_1410_p2;
wire   [0:0] and_ln581_3_fu_1416_p2;
wire   [0:0] icmp_ln585_4_fu_1352_p2;
wire   [0:0] xor_ln585_1_fu_1428_p2;
wire   [0:0] or_ln581_3_fu_1440_p2;
wire   [0:0] icmp_ln603_4_fu_1368_p2;
wire   [0:0] xor_ln581_3_fu_1446_p2;
wire   [0:0] and_ln585_7_fu_1434_p2;
wire   [0:0] and_ln585_6_fu_1422_p2;
wire   [31:0] trunc_ln586_11_fu_1388_p1;
wire   [0:0] and_ln582_4_fu_1398_p2;
wire   [0:0] or_ln603_4_fu_1472_p2;
wire   [31:0] bitcast_ln702_8_fu_1487_p1;
wire   [0:0] tmp_134_fu_1491_p3;
wire  signed [31:0] sext_ln581_4_fu_1484_p1;
wire   [31:0] shl_ln604_4_fu_1507_p2;
wire   [31:0] select_ln588_fu_1499_p3;
wire   [31:0] select_ln603_fu_1512_p3;
wire   [31:0] select_ln603_2_fu_1519_p3;
wire   [0:0] tmp_140_fu_1525_p3;
wire   [0:0] and_ln1495_2_fu_1533_p2;
wire   [63:0] ireg_fu_1543_p1;
wire   [10:0] exp_tmp_fu_1559_p4;
wire   [51:0] trunc_ln565_fu_1573_p1;
wire   [52:0] p_Result_236_fu_1577_p3;
wire   [53:0] zext_ln569_fu_1585_p1;
wire   [0:0] p_Result_235_fu_1551_p3;
wire   [53:0] man_V_16_fu_1589_p2;
wire   [62:0] trunc_ln555_fu_1547_p1;
wire   [11:0] zext_ln455_fu_1569_p1;
wire   [11:0] F2_fu_1609_p2;
wire   [0:0] icmp_ln581_fu_1615_p2;
wire   [11:0] add_ln581_fu_1621_p2;
wire   [11:0] sub_ln581_fu_1627_p2;
wire   [6:0] tmp_126_fu_1653_p4;
wire   [5:0] trunc_ln586_fu_1669_p1;
wire   [53:0] zext_ln586_fu_1673_p1;
wire   [0:0] or_ln582_fu_1683_p2;
wire   [0:0] xor_ln582_fu_1689_p2;
wire   [0:0] and_ln581_fu_1695_p2;
wire   [0:0] icmp_ln585_fu_1647_p2;
wire   [0:0] xor_ln585_fu_1707_p2;
wire   [0:0] or_ln581_fu_1719_p2;
wire   [0:0] icmp_ln603_fu_1663_p2;
wire   [0:0] xor_ln581_fu_1725_p2;
wire   [0:0] and_ln585_5_fu_1713_p2;
wire   [53:0] ashr_ln586_fu_1677_p2;
wire   [0:0] tmp_136_fu_1743_p3;
wire   [0:0] tmp_137_fu_1751_p3;
wire   [63:0] grp_fu_229_p1;
wire   [63:0] ireg_6_fu_1767_p1;
wire   [10:0] exp_tmp_6_fu_1783_p4;
wire   [51:0] trunc_ln565_6_fu_1797_p1;
wire   [52:0] p_Result_247_fu_1801_p3;
wire   [53:0] zext_ln569_6_fu_1809_p1;
wire   [0:0] p_Result_246_fu_1775_p3;
wire   [53:0] man_V_25_fu_1813_p2;
wire   [62:0] trunc_ln555_6_fu_1771_p1;
wire   [11:0] zext_ln455_6_fu_1793_p1;
wire   [11:0] F2_6_fu_1833_p2;
wire   [0:0] icmp_ln581_6_fu_1839_p2;
wire   [11:0] add_ln581_6_fu_1845_p2;
wire   [11:0] sub_ln581_6_fu_1851_p2;
wire  signed [11:0] sh_amt_6_fu_1857_p3;
wire   [53:0] man_V_26_fu_1819_p3;
wire   [6:0] tmp_142_fu_1885_p4;
wire   [5:0] trunc_ln586_14_fu_1901_p1;
wire   [53:0] zext_ln586_6_fu_1905_p1;
wire   [53:0] ashr_ln586_6_fu_1909_p2;
wire   [31:0] trunc_ln583_6_fu_1875_p1;
wire  signed [31:0] sext_ln581_6_fu_1865_p1;
wire   [0:0] icmp_ln571_6_fu_1827_p2;
wire   [0:0] icmp_ln582_6_fu_1869_p2;
wire   [0:0] xor_ln571_5_fu_1925_p2;
wire   [0:0] or_ln582_5_fu_1937_p2;
wire   [0:0] xor_ln582_5_fu_1943_p2;
wire   [0:0] and_ln581_5_fu_1949_p2;
wire   [0:0] icmp_ln585_6_fu_1879_p2;
wire   [0:0] or_ln581_5_fu_1961_p2;
wire   [0:0] icmp_ln603_6_fu_1895_p2;
wire   [0:0] xor_ln581_5_fu_1967_p2;
wire   [0:0] xor_ln585_3_fu_1979_p2;
wire   [0:0] and_ln585_11_fu_1985_p2;
wire   [0:0] and_ln603_6_fu_1973_p2;
wire   [31:0] shl_ln604_6_fu_1919_p2;
wire   [31:0] trunc_ln586_15_fu_1915_p1;
wire   [0:0] and_ln585_10_fu_1955_p2;
wire   [0:0] and_ln582_6_fu_1931_p2;
wire   [0:0] or_ln585_3_fu_1991_p2;
wire   [31:0] select_ln585_8_fu_1997_p3;
wire   [0:0] or_ln585_4_fu_2005_p2;
wire   [0:0] or_ln585_5_fu_2027_p2;
wire   [31:0] select_ln585_10_fu_2019_p3;
wire   [31:0] select_ln585_9_fu_2011_p3;
wire   [31:0] bitcast_ln702_fu_2053_p1;
wire   [31:0] trunc_ln583_fu_2050_p1;
wire  signed [31:0] sext_ln581_fu_2047_p1;
wire   [0:0] xor_ln571_fu_2070_p2;
wire   [0:0] and_ln582_fu_2075_p2;
wire   [0:0] or_ln603_1_fu_2080_p2;
wire   [31:0] shl_ln604_fu_2064_p2;
wire   [0:0] tmp_127_fu_2056_p3;
wire   [0:0] tmp_135_fu_2090_p3;
wire   [0:0] select_ln588_3_fu_2098_p3;
wire   [0:0] select_ln603_3_fu_2106_p3;
wire   [0:0] or_ln603_2_fu_2085_p2;
wire   [0:0] select_ln603_5_fu_2113_p3;
wire   [0:0] and_ln1495_fu_2119_p2;
wire   [63:0] ireg_5_fu_2131_p1;
wire   [10:0] exp_tmp_5_fu_2147_p4;
wire   [51:0] trunc_ln565_5_fu_2161_p1;
wire   [52:0] p_Result_245_fu_2165_p3;
wire   [53:0] zext_ln569_5_fu_2173_p1;
wire   [0:0] p_Result_244_fu_2139_p3;
wire   [53:0] man_V_22_fu_2177_p2;
wire   [62:0] trunc_ln555_5_fu_2135_p1;
wire   [11:0] zext_ln455_5_fu_2157_p1;
wire   [11:0] F2_5_fu_2197_p2;
wire   [0:0] icmp_ln581_5_fu_2203_p2;
wire   [11:0] add_ln581_5_fu_2209_p2;
wire   [11:0] sub_ln581_5_fu_2215_p2;
wire  signed [11:0] sh_amt_5_fu_2221_p3;
wire   [53:0] man_V_23_fu_2183_p3;
wire   [6:0] tmp_139_fu_2249_p4;
wire   [5:0] trunc_ln586_12_fu_2265_p1;
wire   [53:0] zext_ln586_5_fu_2269_p1;
wire   [53:0] ashr_ln586_5_fu_2273_p2;
wire   [31:0] trunc_ln583_5_fu_2239_p1;
wire  signed [31:0] sext_ln581_5_fu_2229_p1;
wire   [0:0] icmp_ln571_5_fu_2191_p2;
wire   [0:0] icmp_ln582_5_fu_2233_p2;
wire   [0:0] xor_ln571_4_fu_2289_p2;
wire   [0:0] or_ln582_4_fu_2301_p2;
wire   [0:0] xor_ln582_4_fu_2307_p2;
wire   [0:0] and_ln581_4_fu_2313_p2;
wire   [0:0] icmp_ln585_5_fu_2243_p2;
wire   [0:0] or_ln581_4_fu_2325_p2;
wire   [0:0] icmp_ln603_5_fu_2259_p2;
wire   [0:0] xor_ln581_4_fu_2331_p2;
wire   [0:0] xor_ln585_2_fu_2343_p2;
wire   [0:0] and_ln585_9_fu_2349_p2;
wire   [0:0] and_ln603_5_fu_2337_p2;
wire   [31:0] shl_ln604_5_fu_2283_p2;
wire   [31:0] trunc_ln586_13_fu_2279_p1;
wire   [0:0] and_ln585_8_fu_2319_p2;
wire   [0:0] and_ln582_5_fu_2295_p2;
wire   [0:0] or_ln585_fu_2355_p2;
wire   [31:0] select_ln585_fu_2361_p3;
wire   [0:0] or_ln585_1_fu_2369_p2;
wire   [0:0] or_ln585_2_fu_2391_p2;
wire   [31:0] select_ln585_6_fu_2383_p3;
wire   [31:0] select_ln585_5_fu_2375_p3;
reg   [1:0] grp_fu_221_opcode;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state19;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 right_bound_preg = 32'd0;
#0 left_bound_preg = 32'd0;
end

system_top_p_find_left_and_right_boundaries9_get_trapezoid_edgestrapezoid_edges #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
get_trapezoid_edgestrapezoid_edges_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_trapezoid_edgestrapezoid_edges_address0),
    .ce0(get_trapezoid_edgestrapezoid_edges_ce0),
    .q0(get_trapezoid_edgestrapezoid_edges_q0)
);

system_top_faddfsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_3_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_221_p0),
    .din1(grp_fu_221_p1),
    .opcode(grp_fu_221_opcode),
    .ce(1'b1),
    .dout(grp_fu_221_p2)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_226_p0),
    .ce(1'b1),
    .dout(grp_fu_226_p1)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln351_6_reg_2556),
    .ce(1'b1),
    .dout(grp_fu_229_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_bound_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_01001) & (1'd1 == and_ln1495_1_fu_2125_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            left_bound_preg <= j_reg_207_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        right_bound_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_01001) & (1'd1 == and_ln1495_3_fu_1538_p2) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            right_bound_preg <= j_reg_207_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln313_reg_2441 == 1'd0))) begin
        j_reg_207 <= add_ln313_reg_2526;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_207 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln313_reg_2526 <= add_ln313_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln1495_1_reg_2664 <= and_ln1495_1_fu_2125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln1495_3_reg_2619 <= and_ln1495_3_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln585_reg_2643 <= and_ln585_fu_1701_p2;
        and_ln603_reg_2648 <= and_ln603_fu_1731_p2;
        icmp_ln571_reg_2628 <= icmp_ln571_fu_1603_p2;
        icmp_ln582_reg_2638 <= icmp_ln582_fu_1641_p2;
        man_V_17_reg_2623 <= man_V_17_fu_1595_p3;
        or_ln603_reg_2653 <= or_ln603_fu_1737_p2;
        select_ln603_4_reg_2659 <= select_ln603_4_fu_1759_p3;
        sh_amt_reg_2633 <= sh_amt_fu_1633_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        and_ln603_4_reg_2599 <= and_ln603_4_fu_1452_p2;
        or_ln603_3_reg_2604 <= or_ln603_3_fu_1458_p2;
        or_ln603_5_reg_2614 <= or_ln603_5_fu_1478_p2;
        select_ln603_1_reg_2609 <= select_ln603_1_fu_1464_p3;
        sh_amt_4_reg_2584 <= sh_amt_4_fu_1334_p3;
        trunc_ln583_4_reg_2589 <= trunc_ln583_4_fu_1348_p1;
        xor_ln571_3_reg_2594 <= xor_ln571_3_fu_1392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln313_reg_2441 == 1'd0))) begin
        bitcast_ln351_6_reg_2556[30 : 0] <= bitcast_ln351_6_fu_1168_p1[30 : 0];
        icmp_ln935_10_reg_2531 <= icmp_ln935_10_fu_921_p2;
        m_121_reg_2541 <= {{m_104_fu_1137_p2[63:1]}};
        p_Result_200_reg_2546 <= m_104_fu_1137_p2[32'd25];
        p_Result_231_reg_2536 <= ap_sig_allocacmp_p_Val2_s[32'd31];
        trunc_ln943_13_reg_2551 <= trunc_ln943_13_fu_1161_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bitcast_ln351_reg_2572[30 : 0] <= bitcast_ln351_fu_1239_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        get_trapezoid_edgestrapezoid_edges_load_reg_2431 <= get_trapezoid_edgestrapezoid_edges_q0;
        num_points_load_reg_2426 <= num_points_q0;
        shl_ln_reg_2436[15 : 13] <= shl_ln_fu_244_p3[15 : 13];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_17_reg_2411 <= i_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln313_reg_2441 <= icmp_ln313_fu_251_p2;
        j_reg_207_pp0_iter1_reg <= j_reg_207;
        p_Result_230_reg_2562 <= p_Result_230_fu_1177_p1;
        select_ln935_5_reg_2567 <= select_ln935_5_fu_1229_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln313_reg_2441 == 1'd0))) begin
        icmp_ln935_11_reg_2491 <= icmp_ln935_11_fu_604_p2;
        m_123_reg_2501 <= {{m_109_fu_820_p2[63:1]}};
        p_Result_208_reg_2506 <= m_109_fu_820_p2[32'd25];
        p_Result_238_reg_2496 <= ap_sig_allocacmp_p_Val2_88[32'd31];
        trunc_ln943_14_reg_2511 <= trunc_ln943_14_fu_844_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln313_reg_2441 == 1'd0))) begin
        icmp_ln935_reg_2450 <= icmp_ln935_fu_304_p2;
        icmp_ln958_reg_2471 <= icmp_ln958_fu_444_p2;
        m_118_reg_2460 <= m_118_fu_324_p3;
        p_Result_226_reg_2455 <= points_q0[32'd31];
        select_ln958_reg_2476 <= select_ln958_fu_464_p3;
        sub_ln944_reg_2465 <= sub_ln944_fu_350_p2;
        trunc_ln943_reg_2481 <= trunc_ln943_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln313_reg_2441 == 1'd0))) begin
        p_Result_237_reg_2516 <= p_Result_237_fu_852_p1;
        select_ln935_6_reg_2521 <= select_ln935_6_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln313_reg_2441 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_232 <= grp_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln313_reg_2441 == 1'd0))) begin
        select_ln935_reg_2486 <= select_ln935_fu_593_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v_assign_reg_2578 <= grp_fu_221_p2;
    end
end

always @ (*) begin
    if ((icmp_ln313_reg_2441 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln313_reg_2441 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_213_p4 = add_ln313_reg_2526;
    end else begin
        ap_phi_mux_j_phi_fu_213_p4 = j_reg_207;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln1495_3_reg_2619) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_p_Val2_88 = select_ln585_11_fu_2033_p3;
    end else begin
        ap_sig_allocacmp_p_Val2_88 = rbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln1495_1_reg_2664) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_p_Val2_s = select_ln585_7_fu_2397_p3;
    end else begin
        ap_sig_allocacmp_p_Val2_s = lbVal_constprop_i;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        get_trapezoid_edgestrapezoid_edges_ce0 = 1'b1;
    end else begin
        get_trapezoid_edgestrapezoid_edges_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_00001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln313_reg_2441 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln313_reg_2441 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_00001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_221_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln313_reg_2441 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_00001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln313_reg_2441 == 1'd0)))) begin
        grp_fu_221_opcode = 2'd0;
    end else begin
        grp_fu_221_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_221_p0 = bitcast_ln351_fu_1239_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_221_p0 = bitcast_ln351_6_fu_1168_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_221_p0 = reg_232;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_221_p0 = select_ln935_reg_2486;
    end else begin
        grp_fu_221_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_221_p1 = select_ln935_5_reg_2567;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_221_p1 = select_ln935_6_reg_2521;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_221_p1 = 32'd0;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_221_p1 = get_trapezoid_edgestrapezoid_edges_load_reg_2431;
    end else begin
        grp_fu_221_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_226_p0 = bitcast_ln351_reg_2572;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_226_p0 = v_assign_reg_2578;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_226_p0 = reg_232;
        end else begin
            grp_fu_226_p0 = 'bx;
        end
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln1495_1_reg_2664) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        lbVal_constprop_o = select_ln585_7_fu_2397_p3;
    end else begin
        lbVal_constprop_o = lbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd1 == and_ln1495_1_reg_2664) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        lbVal_constprop_o_ap_vld = 1'b1;
    end else begin
        lbVal_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_01001) & (1'd1 == and_ln1495_1_fu_2125_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        left_bound = j_reg_207_pp0_iter1_reg;
    end else begin
        left_bound = left_bound_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln1495_1_fu_2125_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        left_bound_ap_vld = 1'b1;
    end else begin
        left_bound_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_points_ce0 = 1'b1;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        points_ce0 = 1'b1;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln1495_3_reg_2619) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        rbVal_constprop_o = select_ln585_11_fu_2033_p3;
    end else begin
        rbVal_constprop_o = rbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln1495_3_reg_2619) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        rbVal_constprop_o_ap_vld = 1'b1;
    end else begin
        rbVal_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_01001) & (1'd1 == and_ln1495_3_fu_1538_p2) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        right_bound = j_reg_207_pp0_iter1_reg;
    end else begin
        right_bound = right_bound_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln1495_3_fu_1538_p2) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        right_bound_ap_vld = 1'b1;
    end else begin
        right_bound_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln313_reg_2441 == 1'd1)) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln313_reg_2441 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_4_fu_1310_p2 = (12'd1075 - zext_ln455_4_fu_1270_p1);

assign F2_5_fu_2197_p2 = (12'd1075 - zext_ln455_5_fu_2157_p1);

assign F2_6_fu_1833_p2 = (12'd1075 - zext_ln455_6_fu_1793_p1);

assign F2_fu_1609_p2 = (12'd1075 - zext_ln455_fu_1569_p1);

assign LD_17_fu_1221_p1 = p_Result_234_fu_1209_p5[31:0];

assign LD_19_fu_896_p1 = p_Result_241_fu_884_p5[31:0];

assign LD_fu_585_p1 = p_Result_229_fu_573_p5[31:0];

assign add_ln313_fu_911_p2 = (j_reg_207 + 32'd1);

assign add_ln314_fu_268_p2 = (shl_ln314_1_fu_260_p3 + shl_ln_reg_2436);

assign add_ln581_4_fu_1322_p2 = ($signed(F2_4_fu_1310_p2) + $signed(12'd4076));

assign add_ln581_5_fu_2209_p2 = ($signed(F2_5_fu_2197_p2) + $signed(12'd4076));

assign add_ln581_6_fu_1845_p2 = ($signed(F2_6_fu_1833_p2) + $signed(12'd4076));

assign add_ln581_fu_1621_p2 = ($signed(F2_fu_1609_p2) + $signed(12'd4076));

assign add_ln958_10_fu_1101_p2 = ($signed(sub_ln944_13_fu_967_p2) + $signed(32'd4294967271));

assign add_ln958_11_fu_784_p2 = ($signed(sub_ln944_14_fu_650_p2) + $signed(32'd4294967271));

assign add_ln958_fu_494_p2 = ($signed(sub_ln944_reg_2465) + $signed(32'd4294967271));

assign add_ln964_13_fu_1196_p2 = (sub_ln964_13_fu_1191_p2 + select_ln943_13_fu_1184_p3);

assign add_ln964_14_fu_871_p2 = (sub_ln964_14_fu_866_p2 + select_ln943_14_fu_859_p3);

assign add_ln964_fu_560_p2 = (sub_ln964_fu_555_p2 + select_ln943_fu_547_p3);

assign and_ln1495_1_fu_2125_p2 = (xor_ln571_fu_2070_p2 & and_ln1495_fu_2119_p2);

assign and_ln1495_2_fu_1533_p2 = (tmp_140_fu_1525_p3 & or_ln603_5_reg_2614);

assign and_ln1495_3_fu_1538_p2 = (xor_ln571_3_reg_2594 & and_ln1495_2_fu_1533_p2);

assign and_ln1495_fu_2119_p2 = (select_ln603_5_fu_2113_p3 & or_ln603_2_fu_2085_p2);

assign and_ln581_3_fu_1416_p2 = (xor_ln582_3_fu_1410_p2 & icmp_ln581_4_fu_1316_p2);

assign and_ln581_4_fu_2313_p2 = (xor_ln582_4_fu_2307_p2 & icmp_ln581_5_fu_2203_p2);

assign and_ln581_5_fu_1949_p2 = (xor_ln582_5_fu_1943_p2 & icmp_ln581_6_fu_1839_p2);

assign and_ln581_fu_1695_p2 = (xor_ln582_fu_1689_p2 & icmp_ln581_fu_1615_p2);

assign and_ln582_4_fu_1398_p2 = (xor_ln571_3_fu_1392_p2 & icmp_ln582_4_fu_1342_p2);

assign and_ln582_5_fu_2295_p2 = (xor_ln571_4_fu_2289_p2 & icmp_ln582_5_fu_2233_p2);

assign and_ln582_6_fu_1931_p2 = (xor_ln571_5_fu_1925_p2 & icmp_ln582_6_fu_1869_p2);

assign and_ln582_fu_2075_p2 = (xor_ln571_fu_2070_p2 & icmp_ln582_reg_2638);

assign and_ln585_10_fu_1955_p2 = (icmp_ln585_6_fu_1879_p2 & and_ln581_5_fu_1949_p2);

assign and_ln585_11_fu_1985_p2 = (xor_ln585_3_fu_1979_p2 & and_ln581_5_fu_1949_p2);

assign and_ln585_5_fu_1713_p2 = (xor_ln585_fu_1707_p2 & and_ln581_fu_1695_p2);

assign and_ln585_6_fu_1422_p2 = (icmp_ln585_4_fu_1352_p2 & and_ln581_3_fu_1416_p2);

assign and_ln585_7_fu_1434_p2 = (xor_ln585_1_fu_1428_p2 & and_ln581_3_fu_1416_p2);

assign and_ln585_8_fu_2319_p2 = (icmp_ln585_5_fu_2243_p2 & and_ln581_4_fu_2313_p2);

assign and_ln585_9_fu_2349_p2 = (xor_ln585_2_fu_2343_p2 & and_ln581_4_fu_2313_p2);

assign and_ln585_fu_1701_p2 = (icmp_ln585_fu_1647_p2 & and_ln581_fu_1695_p2);

assign and_ln603_4_fu_1452_p2 = (xor_ln581_3_fu_1446_p2 & icmp_ln603_4_fu_1368_p2);

assign and_ln603_5_fu_2337_p2 = (xor_ln581_4_fu_2331_p2 & icmp_ln603_5_fu_2259_p2);

assign and_ln603_6_fu_1973_p2 = (xor_ln581_5_fu_1967_p2 & icmp_ln603_6_fu_1895_p2);

assign and_ln603_fu_1731_p2 = (xor_ln581_fu_1725_p2 & icmp_ln603_fu_1663_p2);

assign and_ln949_25_fu_450_p2 = (xor_ln949_fu_430_p2 & p_Result_228_fu_436_p3);

assign and_ln949_26_fu_1067_p2 = (xor_ln949_13_fu_1047_p2 & p_Result_233_fu_1053_p3);

assign and_ln949_27_fu_750_p2 = (xor_ln949_14_fu_730_p2 & p_Result_240_fu_736_p3);

assign and_ln949_28_fu_1027_p2 = (or_ln949_fu_1021_p2 & m_120_fu_941_p3);

assign and_ln949_29_fu_710_p2 = (or_ln949_20_fu_704_p2 & m_122_fu_624_p3);

assign and_ln949_fu_410_p2 = (or_ln949_19_fu_404_p2 & m_118_fu_324_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln586_4_fu_1382_p2 = $signed(man_V_20_fu_1296_p3) >>> zext_ln586_4_fu_1378_p1;

assign ashr_ln586_5_fu_2273_p2 = $signed(man_V_23_fu_2183_p3) >>> zext_ln586_5_fu_2269_p1;

assign ashr_ln586_6_fu_1909_p2 = $signed(man_V_26_fu_1819_p3) >>> zext_ln586_6_fu_1905_p1;

assign ashr_ln586_fu_1677_p2 = $signed(man_V_17_fu_1595_p3) >>> zext_ln586_fu_1673_p1;

assign bitcast_ln351_6_fu_1168_p1 = zext_ln368_5_fu_1165_p1;

assign bitcast_ln351_fu_1239_p1 = zext_ln368_fu_1236_p1;

assign bitcast_ln702_8_fu_1487_p1 = reg_232;

assign bitcast_ln702_fu_2053_p1 = v_assign_reg_2578;

assign bitcast_ln744_11_fu_1225_p1 = LD_17_fu_1221_p1;

assign bitcast_ln744_12_fu_900_p1 = LD_19_fu_896_p1;

assign bitcast_ln744_fu_589_p1 = LD_fu_585_p1;

assign data_V_6_fu_848_p1 = grp_fu_221_p2;

assign data_V_fu_1173_p1 = grp_fu_221_p2;

assign exp_tmp_4_fu_1260_p4 = {{ireg_4_fu_1244_p1[62:52]}};

assign exp_tmp_5_fu_2147_p4 = {{ireg_5_fu_2131_p1[62:52]}};

assign exp_tmp_6_fu_1783_p4 = {{ireg_6_fu_1767_p1[62:52]}};

assign exp_tmp_fu_1559_p4 = {{ireg_fu_1543_p1[62:52]}};

assign get_trapezoid_edgestrapezoid_edges_address0 = idxprom_i_fu_238_p1;

assign icmp_ln313_fu_251_p2 = ((ap_phi_mux_j_phi_fu_213_p4 == num_points_load_reg_2426) ? 1'b1 : 1'b0);

assign icmp_ln571_4_fu_1304_p2 = ((trunc_ln555_4_fu_1248_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_5_fu_2191_p2 = ((trunc_ln555_5_fu_2135_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_6_fu_1827_p2 = ((trunc_ln555_6_fu_1771_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1603_p2 = ((trunc_ln555_fu_1547_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_4_fu_1316_p2 = (($signed(F2_4_fu_1310_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_5_fu_2203_p2 = (($signed(F2_5_fu_2197_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_6_fu_1839_p2 = (($signed(F2_6_fu_1833_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1615_p2 = (($signed(F2_fu_1609_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_4_fu_1342_p2 = ((F2_4_fu_1310_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_5_fu_2233_p2 = ((F2_5_fu_2197_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_6_fu_1869_p2 = ((F2_6_fu_1833_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1641_p2 = ((F2_fu_1609_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_4_fu_1352_p2 = ((sh_amt_4_fu_1334_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_5_fu_2243_p2 = ((sh_amt_5_fu_2221_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_6_fu_1879_p2 = ((sh_amt_6_fu_1857_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1647_p2 = ((sh_amt_fu_1633_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_4_fu_1368_p2 = ((tmp_133_fu_1358_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_5_fu_2259_p2 = ((tmp_139_fu_2249_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_6_fu_1895_p2 = ((tmp_142_fu_1885_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1663_p2 = ((tmp_126_fu_1653_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_10_fu_921_p2 = ((ap_sig_allocacmp_p_Val2_s == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_11_fu_604_p2 = ((ap_sig_allocacmp_p_Val2_88 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_304_p2 = ((z_bits_fu_300_p1 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_13_fu_989_p2 = (($signed(tmp_122_fu_979_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_14_fu_672_p2 = (($signed(tmp_129_fu_662_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_372_p2 = (($signed(tmp_fu_362_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_13_fu_1033_p2 = ((and_ln949_28_fu_1027_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_14_fu_716_p2 = ((and_ln949_29_fu_710_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_416_p2 = ((and_ln949_fu_410_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_10_fu_1061_p2 = (($signed(lsb_index_14_fu_973_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_11_fu_744_p2 = (($signed(lsb_index_15_fu_656_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_444_p2 = (($signed(lsb_index_fu_356_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_fu_238_p1 = i_dout;

assign ireg_4_fu_1244_p1 = grp_fu_226_p1;

assign ireg_5_fu_2131_p1 = grp_fu_226_p1;

assign ireg_6_fu_1767_p1 = grp_fu_229_p1;

assign ireg_fu_1543_p1 = grp_fu_226_p1;


always @ (p_Result_232_fu_949_p4) begin
    if (p_Result_232_fu_949_p4[0] == 1'b1) begin
        l_14_fu_959_p3 = 32'd0;
    end else if (p_Result_232_fu_949_p4[1] == 1'b1) begin
        l_14_fu_959_p3 = 32'd1;
    end else if (p_Result_232_fu_949_p4[2] == 1'b1) begin
        l_14_fu_959_p3 = 32'd2;
    end else if (p_Result_232_fu_949_p4[3] == 1'b1) begin
        l_14_fu_959_p3 = 32'd3;
    end else if (p_Result_232_fu_949_p4[4] == 1'b1) begin
        l_14_fu_959_p3 = 32'd4;
    end else if (p_Result_232_fu_949_p4[5] == 1'b1) begin
        l_14_fu_959_p3 = 32'd5;
    end else if (p_Result_232_fu_949_p4[6] == 1'b1) begin
        l_14_fu_959_p3 = 32'd6;
    end else if (p_Result_232_fu_949_p4[7] == 1'b1) begin
        l_14_fu_959_p3 = 32'd7;
    end else if (p_Result_232_fu_949_p4[8] == 1'b1) begin
        l_14_fu_959_p3 = 32'd8;
    end else if (p_Result_232_fu_949_p4[9] == 1'b1) begin
        l_14_fu_959_p3 = 32'd9;
    end else if (p_Result_232_fu_949_p4[10] == 1'b1) begin
        l_14_fu_959_p3 = 32'd10;
    end else if (p_Result_232_fu_949_p4[11] == 1'b1) begin
        l_14_fu_959_p3 = 32'd11;
    end else if (p_Result_232_fu_949_p4[12] == 1'b1) begin
        l_14_fu_959_p3 = 32'd12;
    end else if (p_Result_232_fu_949_p4[13] == 1'b1) begin
        l_14_fu_959_p3 = 32'd13;
    end else if (p_Result_232_fu_949_p4[14] == 1'b1) begin
        l_14_fu_959_p3 = 32'd14;
    end else if (p_Result_232_fu_949_p4[15] == 1'b1) begin
        l_14_fu_959_p3 = 32'd15;
    end else if (p_Result_232_fu_949_p4[16] == 1'b1) begin
        l_14_fu_959_p3 = 32'd16;
    end else if (p_Result_232_fu_949_p4[17] == 1'b1) begin
        l_14_fu_959_p3 = 32'd17;
    end else if (p_Result_232_fu_949_p4[18] == 1'b1) begin
        l_14_fu_959_p3 = 32'd18;
    end else if (p_Result_232_fu_949_p4[19] == 1'b1) begin
        l_14_fu_959_p3 = 32'd19;
    end else if (p_Result_232_fu_949_p4[20] == 1'b1) begin
        l_14_fu_959_p3 = 32'd20;
    end else if (p_Result_232_fu_949_p4[21] == 1'b1) begin
        l_14_fu_959_p3 = 32'd21;
    end else if (p_Result_232_fu_949_p4[22] == 1'b1) begin
        l_14_fu_959_p3 = 32'd22;
    end else if (p_Result_232_fu_949_p4[23] == 1'b1) begin
        l_14_fu_959_p3 = 32'd23;
    end else if (p_Result_232_fu_949_p4[24] == 1'b1) begin
        l_14_fu_959_p3 = 32'd24;
    end else if (p_Result_232_fu_949_p4[25] == 1'b1) begin
        l_14_fu_959_p3 = 32'd25;
    end else if (p_Result_232_fu_949_p4[26] == 1'b1) begin
        l_14_fu_959_p3 = 32'd26;
    end else if (p_Result_232_fu_949_p4[27] == 1'b1) begin
        l_14_fu_959_p3 = 32'd27;
    end else if (p_Result_232_fu_949_p4[28] == 1'b1) begin
        l_14_fu_959_p3 = 32'd28;
    end else if (p_Result_232_fu_949_p4[29] == 1'b1) begin
        l_14_fu_959_p3 = 32'd29;
    end else if (p_Result_232_fu_949_p4[30] == 1'b1) begin
        l_14_fu_959_p3 = 32'd30;
    end else if (p_Result_232_fu_949_p4[31] == 1'b1) begin
        l_14_fu_959_p3 = 32'd31;
    end else begin
        l_14_fu_959_p3 = 32'd32;
    end
end


always @ (p_Result_239_fu_632_p4) begin
    if (p_Result_239_fu_632_p4[0] == 1'b1) begin
        l_15_fu_642_p3 = 32'd0;
    end else if (p_Result_239_fu_632_p4[1] == 1'b1) begin
        l_15_fu_642_p3 = 32'd1;
    end else if (p_Result_239_fu_632_p4[2] == 1'b1) begin
        l_15_fu_642_p3 = 32'd2;
    end else if (p_Result_239_fu_632_p4[3] == 1'b1) begin
        l_15_fu_642_p3 = 32'd3;
    end else if (p_Result_239_fu_632_p4[4] == 1'b1) begin
        l_15_fu_642_p3 = 32'd4;
    end else if (p_Result_239_fu_632_p4[5] == 1'b1) begin
        l_15_fu_642_p3 = 32'd5;
    end else if (p_Result_239_fu_632_p4[6] == 1'b1) begin
        l_15_fu_642_p3 = 32'd6;
    end else if (p_Result_239_fu_632_p4[7] == 1'b1) begin
        l_15_fu_642_p3 = 32'd7;
    end else if (p_Result_239_fu_632_p4[8] == 1'b1) begin
        l_15_fu_642_p3 = 32'd8;
    end else if (p_Result_239_fu_632_p4[9] == 1'b1) begin
        l_15_fu_642_p3 = 32'd9;
    end else if (p_Result_239_fu_632_p4[10] == 1'b1) begin
        l_15_fu_642_p3 = 32'd10;
    end else if (p_Result_239_fu_632_p4[11] == 1'b1) begin
        l_15_fu_642_p3 = 32'd11;
    end else if (p_Result_239_fu_632_p4[12] == 1'b1) begin
        l_15_fu_642_p3 = 32'd12;
    end else if (p_Result_239_fu_632_p4[13] == 1'b1) begin
        l_15_fu_642_p3 = 32'd13;
    end else if (p_Result_239_fu_632_p4[14] == 1'b1) begin
        l_15_fu_642_p3 = 32'd14;
    end else if (p_Result_239_fu_632_p4[15] == 1'b1) begin
        l_15_fu_642_p3 = 32'd15;
    end else if (p_Result_239_fu_632_p4[16] == 1'b1) begin
        l_15_fu_642_p3 = 32'd16;
    end else if (p_Result_239_fu_632_p4[17] == 1'b1) begin
        l_15_fu_642_p3 = 32'd17;
    end else if (p_Result_239_fu_632_p4[18] == 1'b1) begin
        l_15_fu_642_p3 = 32'd18;
    end else if (p_Result_239_fu_632_p4[19] == 1'b1) begin
        l_15_fu_642_p3 = 32'd19;
    end else if (p_Result_239_fu_632_p4[20] == 1'b1) begin
        l_15_fu_642_p3 = 32'd20;
    end else if (p_Result_239_fu_632_p4[21] == 1'b1) begin
        l_15_fu_642_p3 = 32'd21;
    end else if (p_Result_239_fu_632_p4[22] == 1'b1) begin
        l_15_fu_642_p3 = 32'd22;
    end else if (p_Result_239_fu_632_p4[23] == 1'b1) begin
        l_15_fu_642_p3 = 32'd23;
    end else if (p_Result_239_fu_632_p4[24] == 1'b1) begin
        l_15_fu_642_p3 = 32'd24;
    end else if (p_Result_239_fu_632_p4[25] == 1'b1) begin
        l_15_fu_642_p3 = 32'd25;
    end else if (p_Result_239_fu_632_p4[26] == 1'b1) begin
        l_15_fu_642_p3 = 32'd26;
    end else if (p_Result_239_fu_632_p4[27] == 1'b1) begin
        l_15_fu_642_p3 = 32'd27;
    end else if (p_Result_239_fu_632_p4[28] == 1'b1) begin
        l_15_fu_642_p3 = 32'd28;
    end else if (p_Result_239_fu_632_p4[29] == 1'b1) begin
        l_15_fu_642_p3 = 32'd29;
    end else if (p_Result_239_fu_632_p4[30] == 1'b1) begin
        l_15_fu_642_p3 = 32'd30;
    end else if (p_Result_239_fu_632_p4[31] == 1'b1) begin
        l_15_fu_642_p3 = 32'd31;
    end else begin
        l_15_fu_642_p3 = 32'd32;
    end
end


always @ (p_Result_227_fu_332_p4) begin
    if (p_Result_227_fu_332_p4[0] == 1'b1) begin
        l_fu_342_p3 = 32'd0;
    end else if (p_Result_227_fu_332_p4[1] == 1'b1) begin
        l_fu_342_p3 = 32'd1;
    end else if (p_Result_227_fu_332_p4[2] == 1'b1) begin
        l_fu_342_p3 = 32'd2;
    end else if (p_Result_227_fu_332_p4[3] == 1'b1) begin
        l_fu_342_p3 = 32'd3;
    end else if (p_Result_227_fu_332_p4[4] == 1'b1) begin
        l_fu_342_p3 = 32'd4;
    end else if (p_Result_227_fu_332_p4[5] == 1'b1) begin
        l_fu_342_p3 = 32'd5;
    end else if (p_Result_227_fu_332_p4[6] == 1'b1) begin
        l_fu_342_p3 = 32'd6;
    end else if (p_Result_227_fu_332_p4[7] == 1'b1) begin
        l_fu_342_p3 = 32'd7;
    end else if (p_Result_227_fu_332_p4[8] == 1'b1) begin
        l_fu_342_p3 = 32'd8;
    end else if (p_Result_227_fu_332_p4[9] == 1'b1) begin
        l_fu_342_p3 = 32'd9;
    end else if (p_Result_227_fu_332_p4[10] == 1'b1) begin
        l_fu_342_p3 = 32'd10;
    end else if (p_Result_227_fu_332_p4[11] == 1'b1) begin
        l_fu_342_p3 = 32'd11;
    end else if (p_Result_227_fu_332_p4[12] == 1'b1) begin
        l_fu_342_p3 = 32'd12;
    end else if (p_Result_227_fu_332_p4[13] == 1'b1) begin
        l_fu_342_p3 = 32'd13;
    end else if (p_Result_227_fu_332_p4[14] == 1'b1) begin
        l_fu_342_p3 = 32'd14;
    end else if (p_Result_227_fu_332_p4[15] == 1'b1) begin
        l_fu_342_p3 = 32'd15;
    end else if (p_Result_227_fu_332_p4[16] == 1'b1) begin
        l_fu_342_p3 = 32'd16;
    end else if (p_Result_227_fu_332_p4[17] == 1'b1) begin
        l_fu_342_p3 = 32'd17;
    end else if (p_Result_227_fu_332_p4[18] == 1'b1) begin
        l_fu_342_p3 = 32'd18;
    end else if (p_Result_227_fu_332_p4[19] == 1'b1) begin
        l_fu_342_p3 = 32'd19;
    end else if (p_Result_227_fu_332_p4[20] == 1'b1) begin
        l_fu_342_p3 = 32'd20;
    end else if (p_Result_227_fu_332_p4[21] == 1'b1) begin
        l_fu_342_p3 = 32'd21;
    end else if (p_Result_227_fu_332_p4[22] == 1'b1) begin
        l_fu_342_p3 = 32'd22;
    end else if (p_Result_227_fu_332_p4[23] == 1'b1) begin
        l_fu_342_p3 = 32'd23;
    end else if (p_Result_227_fu_332_p4[24] == 1'b1) begin
        l_fu_342_p3 = 32'd24;
    end else if (p_Result_227_fu_332_p4[25] == 1'b1) begin
        l_fu_342_p3 = 32'd25;
    end else if (p_Result_227_fu_332_p4[26] == 1'b1) begin
        l_fu_342_p3 = 32'd26;
    end else if (p_Result_227_fu_332_p4[27] == 1'b1) begin
        l_fu_342_p3 = 32'd27;
    end else if (p_Result_227_fu_332_p4[28] == 1'b1) begin
        l_fu_342_p3 = 32'd28;
    end else if (p_Result_227_fu_332_p4[29] == 1'b1) begin
        l_fu_342_p3 = 32'd29;
    end else if (p_Result_227_fu_332_p4[30] == 1'b1) begin
        l_fu_342_p3 = 32'd30;
    end else if (p_Result_227_fu_332_p4[31] == 1'b1) begin
        l_fu_342_p3 = 32'd31;
    end else begin
        l_fu_342_p3 = 32'd32;
    end
end

assign lsb_index_14_fu_973_p2 = ($signed(sub_ln944_13_fu_967_p2) + $signed(32'd4294967272));

assign lsb_index_15_fu_656_p2 = ($signed(sub_ln944_14_fu_650_p2) + $signed(32'd4294967272));

assign lsb_index_fu_356_p2 = ($signed(sub_ln944_fu_350_p2) + $signed(32'd4294967272));

assign lshr_ln947_13_fu_1009_p2 = 32'd4294967295 >> zext_ln947_13_fu_1005_p1;

assign lshr_ln947_14_fu_692_p2 = 32'd4294967295 >> zext_ln947_14_fu_688_p1;

assign lshr_ln947_fu_392_p2 = 32'd4294967295 >> zext_ln947_fu_388_p1;

assign lshr_ln958_10_fu_1111_p2 = zext_ln959_20_fu_1073_p1 >> zext_ln958_10_fu_1107_p1;

assign lshr_ln958_11_fu_794_p2 = zext_ln959_22_fu_756_p1 >> zext_ln958_11_fu_790_p1;

assign lshr_ln958_fu_503_p2 = zext_ln959_fu_476_p1 >> zext_ln958_fu_499_p1;

assign lshr_ln_fu_273_p4 = {{add_ln314_fu_268_p2[15:13]}};

assign m_103_fu_1125_p3 = ((icmp_ln958_10_fu_1061_p2[0:0] == 1'b1) ? lshr_ln958_10_fu_1111_p2 : shl_ln959_10_fu_1087_p2);

assign m_104_fu_1137_p2 = (m_103_fu_1125_p3 + zext_ln961_13_fu_1133_p1);

assign m_108_fu_808_p3 = ((icmp_ln958_11_fu_744_p2[0:0] == 1'b1) ? lshr_ln958_11_fu_794_p2 : shl_ln959_11_fu_770_p2);

assign m_109_fu_820_p2 = (m_108_fu_808_p3 + zext_ln961_14_fu_816_p1);

assign m_118_fu_324_p3 = ((p_Result_226_fu_310_p3[0:0] == 1'b1) ? tmp_V_fu_318_p2 : z_bits_fu_300_p1);

assign m_119_fu_525_p4 = {{m_99_fu_519_p2[63:1]}};

assign m_120_fu_941_p3 = ((p_Result_231_fu_927_p3[0:0] == 1'b1) ? tmp_V_37_fu_935_p2 : ap_sig_allocacmp_p_Val2_s);

assign m_122_fu_624_p3 = ((p_Result_238_fu_610_p3[0:0] == 1'b1) ? tmp_V_40_fu_618_p2 : ap_sig_allocacmp_p_Val2_88);

assign m_99_fu_519_p2 = (m_fu_509_p3 + zext_ln961_fu_516_p1);

assign m_fu_509_p3 = ((icmp_ln958_reg_2471[0:0] == 1'b1) ? lshr_ln958_fu_503_p2 : shl_ln959_fu_488_p2);

assign man_V_16_fu_1589_p2 = (54'd0 - zext_ln569_fu_1585_p1);

assign man_V_17_fu_1595_p3 = ((p_Result_235_fu_1551_p3[0:0] == 1'b1) ? man_V_16_fu_1589_p2 : zext_ln569_fu_1585_p1);

assign man_V_19_fu_1290_p2 = (54'd0 - zext_ln569_4_fu_1286_p1);

assign man_V_20_fu_1296_p3 = ((p_Result_242_fu_1252_p3[0:0] == 1'b1) ? man_V_19_fu_1290_p2 : zext_ln569_4_fu_1286_p1);

assign man_V_22_fu_2177_p2 = (54'd0 - zext_ln569_5_fu_2173_p1);

assign man_V_23_fu_2183_p3 = ((p_Result_244_fu_2139_p3[0:0] == 1'b1) ? man_V_22_fu_2177_p2 : zext_ln569_5_fu_2173_p1);

assign man_V_25_fu_1813_p2 = (54'd0 - zext_ln569_6_fu_1809_p1);

assign man_V_26_fu_1819_p3 = ((p_Result_246_fu_1775_p3[0:0] == 1'b1) ? man_V_25_fu_1813_p2 : zext_ln569_6_fu_1809_p1);

assign num_points_address0 = idxprom_i_fu_238_p1;

assign or_ln581_3_fu_1440_p2 = (or_ln582_3_fu_1404_p2 | icmp_ln581_4_fu_1316_p2);

assign or_ln581_4_fu_2325_p2 = (or_ln582_4_fu_2301_p2 | icmp_ln581_5_fu_2203_p2);

assign or_ln581_5_fu_1961_p2 = (or_ln582_5_fu_1937_p2 | icmp_ln581_6_fu_1839_p2);

assign or_ln581_fu_1719_p2 = (or_ln582_fu_1683_p2 | icmp_ln581_fu_1615_p2);

assign or_ln582_3_fu_1404_p2 = (icmp_ln582_4_fu_1342_p2 | icmp_ln571_4_fu_1304_p2);

assign or_ln582_4_fu_2301_p2 = (icmp_ln582_5_fu_2233_p2 | icmp_ln571_5_fu_2191_p2);

assign or_ln582_5_fu_1937_p2 = (icmp_ln582_6_fu_1869_p2 | icmp_ln571_6_fu_1827_p2);

assign or_ln582_fu_1683_p2 = (icmp_ln582_fu_1641_p2 | icmp_ln571_fu_1603_p2);

assign or_ln585_1_fu_2369_p2 = (and_ln603_5_fu_2337_p2 | and_ln585_8_fu_2319_p2);

assign or_ln585_2_fu_2391_p2 = (or_ln585_fu_2355_p2 | or_ln585_1_fu_2369_p2);

assign or_ln585_3_fu_1991_p2 = (icmp_ln571_6_fu_1827_p2 | and_ln585_11_fu_1985_p2);

assign or_ln585_4_fu_2005_p2 = (and_ln603_6_fu_1973_p2 | and_ln585_10_fu_1955_p2);

assign or_ln585_5_fu_2027_p2 = (or_ln585_4_fu_2005_p2 | or_ln585_3_fu_1991_p2);

assign or_ln585_fu_2355_p2 = (icmp_ln571_5_fu_2191_p2 | and_ln585_9_fu_2349_p2);

assign or_ln603_1_fu_2080_p2 = (and_ln585_reg_2643 | and_ln582_fu_2075_p2);

assign or_ln603_2_fu_2085_p2 = (or_ln603_reg_2653 | or_ln603_1_fu_2080_p2);

assign or_ln603_3_fu_1458_p2 = (and_ln603_4_fu_1452_p2 | and_ln585_7_fu_1434_p2);

assign or_ln603_4_fu_1472_p2 = (and_ln585_6_fu_1422_p2 | and_ln582_4_fu_1398_p2);

assign or_ln603_5_fu_1478_p2 = (or_ln603_4_fu_1472_p2 | or_ln603_3_fu_1458_p2);

assign or_ln603_fu_1737_p2 = (and_ln603_fu_1731_p2 | and_ln585_5_fu_1713_p2);

assign or_ln949_19_fu_404_p2 = (shl_ln949_fu_398_p2 | lshr_ln947_fu_392_p2);

assign or_ln949_20_fu_704_p2 = (shl_ln949_14_fu_698_p2 | lshr_ln947_14_fu_692_p2);

assign or_ln949_fu_1021_p2 = (shl_ln949_13_fu_1015_p2 | lshr_ln947_13_fu_1009_p2);

assign p_Result_226_fu_310_p3 = points_q0[32'd31];

integer ap_tvar_int_0;

always @ (m_118_fu_324_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_227_fu_332_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_227_fu_332_p4[ap_tvar_int_0] = m_118_fu_324_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_228_fu_436_p3 = m_118_fu_324_p3[lsb_index_fu_356_p2];

assign p_Result_229_fu_573_p5 = {{zext_ln962_fu_535_p1[63:32]}, {tmp_41_i_fu_566_p3}, {zext_ln962_fu_535_p1[22:0]}};

assign p_Result_230_fu_1177_p1 = data_V_fu_1173_p1[30:0];

assign p_Result_231_fu_927_p3 = ap_sig_allocacmp_p_Val2_s[32'd31];

integer ap_tvar_int_1;

always @ (m_120_fu_941_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_232_fu_949_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_232_fu_949_p4[ap_tvar_int_1] = m_120_fu_941_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_233_fu_1053_p3 = m_120_fu_941_p3[lsb_index_14_fu_973_p2];

assign p_Result_234_fu_1209_p5 = {{zext_ln962_10_fu_1181_p1[63:32]}, {tmp_42_i_fu_1202_p3}, {zext_ln962_10_fu_1181_p1[22:0]}};

assign p_Result_235_fu_1551_p3 = ireg_fu_1543_p1[32'd63];

assign p_Result_236_fu_1577_p3 = {{1'd1}, {trunc_ln565_fu_1573_p1}};

assign p_Result_237_fu_852_p1 = data_V_6_fu_848_p1[30:0];

assign p_Result_238_fu_610_p3 = ap_sig_allocacmp_p_Val2_88[32'd31];

integer ap_tvar_int_2;

always @ (m_122_fu_624_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_239_fu_632_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_239_fu_632_p4[ap_tvar_int_2] = m_122_fu_624_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_240_fu_736_p3 = m_122_fu_624_p3[lsb_index_15_fu_656_p2];

assign p_Result_241_fu_884_p5 = {{zext_ln962_11_fu_856_p1[63:32]}, {tmp_45_i_fu_877_p3}, {zext_ln962_11_fu_856_p1[22:0]}};

assign p_Result_242_fu_1252_p3 = ireg_4_fu_1244_p1[32'd63];

assign p_Result_243_fu_1278_p3 = {{1'd1}, {trunc_ln565_4_fu_1274_p1}};

assign p_Result_244_fu_2139_p3 = ireg_5_fu_2131_p1[32'd63];

assign p_Result_245_fu_2165_p3 = {{1'd1}, {trunc_ln565_5_fu_2161_p1}};

assign p_Result_246_fu_1775_p3 = ireg_6_fu_1767_p1[32'd63];

assign p_Result_247_fu_1801_p3 = {{1'd1}, {trunc_ln565_6_fu_1797_p1}};

assign p_Result_s_fu_539_p3 = m_99_fu_519_p2[32'd25];

assign points_address0 = zext_ln314_fu_295_p1;

assign select_ln585_10_fu_2019_p3 = ((or_ln585_3_fu_1991_p2[0:0] == 1'b1) ? 32'd0 : select_ln585_8_fu_1997_p3);

assign select_ln585_11_fu_2033_p3 = ((or_ln585_5_fu_2027_p2[0:0] == 1'b1) ? select_ln585_10_fu_2019_p3 : select_ln585_9_fu_2011_p3);

assign select_ln585_5_fu_2375_p3 = ((and_ln582_5_fu_2295_p2[0:0] == 1'b1) ? trunc_ln583_5_fu_2239_p1 : 32'd0);

assign select_ln585_6_fu_2383_p3 = ((or_ln585_fu_2355_p2[0:0] == 1'b1) ? 32'd0 : select_ln585_fu_2361_p3);

assign select_ln585_7_fu_2397_p3 = ((or_ln585_2_fu_2391_p2[0:0] == 1'b1) ? select_ln585_6_fu_2383_p3 : select_ln585_5_fu_2375_p3);

assign select_ln585_8_fu_1997_p3 = ((and_ln603_6_fu_1973_p2[0:0] == 1'b1) ? shl_ln604_6_fu_1919_p2 : trunc_ln586_15_fu_1915_p1);

assign select_ln585_9_fu_2011_p3 = ((and_ln582_6_fu_1931_p2[0:0] == 1'b1) ? trunc_ln583_6_fu_1875_p1 : 32'd0);

assign select_ln585_fu_2361_p3 = ((and_ln603_5_fu_2337_p2[0:0] == 1'b1) ? shl_ln604_5_fu_2283_p2 : trunc_ln586_13_fu_2279_p1);

assign select_ln588_3_fu_2098_p3 = ((tmp_127_fu_2056_p3[0:0] == 1'b1) ? 1'd1 : 1'd0);

assign select_ln588_fu_1499_p3 = ((tmp_134_fu_1491_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_1_fu_1464_p3 = ((and_ln585_6_fu_1422_p2[0:0] == 1'b1) ? trunc_ln586_11_fu_1388_p1 : trunc_ln583_4_fu_1348_p1);

assign select_ln603_2_fu_1519_p3 = ((or_ln603_3_reg_2604[0:0] == 1'b1) ? select_ln603_fu_1512_p3 : select_ln603_1_reg_2609);

assign select_ln603_3_fu_2106_p3 = ((and_ln603_reg_2648[0:0] == 1'b1) ? tmp_135_fu_2090_p3 : select_ln588_3_fu_2098_p3);

assign select_ln603_4_fu_1759_p3 = ((and_ln585_fu_1701_p2[0:0] == 1'b1) ? tmp_136_fu_1743_p3 : tmp_137_fu_1751_p3);

assign select_ln603_5_fu_2113_p3 = ((or_ln603_reg_2653[0:0] == 1'b1) ? select_ln603_3_fu_2106_p3 : select_ln603_4_reg_2659);

assign select_ln603_fu_1512_p3 = ((and_ln603_4_reg_2599[0:0] == 1'b1) ? shl_ln604_4_fu_1507_p2 : select_ln588_fu_1499_p3);

assign select_ln935_5_fu_1229_p3 = ((icmp_ln935_10_reg_2531[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_11_fu_1225_p1);

assign select_ln935_6_fu_904_p3 = ((icmp_ln935_11_reg_2491[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_12_fu_900_p1);

assign select_ln935_fu_593_p3 = ((icmp_ln935_reg_2450[0:0] == 1'b1) ? bitcast_ln744_fu_589_p1 : 32'd0);

assign select_ln943_13_fu_1184_p3 = ((p_Result_200_reg_2546[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_14_fu_859_p3 = ((p_Result_208_reg_2506[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_547_p3 = ((p_Result_s_fu_539_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_13_fu_1093_p3 = ((icmp_ln946_13_fu_989_p2[0:0] == 1'b1) ? icmp_ln949_13_fu_1033_p2 : p_Result_233_fu_1053_p3);

assign select_ln946_14_fu_776_p3 = ((icmp_ln946_14_fu_672_p2[0:0] == 1'b1) ? icmp_ln949_14_fu_716_p2 : p_Result_240_fu_736_p3);

assign select_ln946_fu_456_p3 = ((icmp_ln946_fu_372_p2[0:0] == 1'b1) ? icmp_ln949_fu_416_p2 : p_Result_228_fu_436_p3);

assign select_ln958_23_fu_1117_p3 = ((icmp_ln958_10_fu_1061_p2[0:0] == 1'b1) ? select_ln946_13_fu_1093_p3 : and_ln949_26_fu_1067_p2);

assign select_ln958_25_fu_800_p3 = ((icmp_ln958_11_fu_744_p2[0:0] == 1'b1) ? select_ln946_14_fu_776_p3 : and_ln949_27_fu_750_p2);

assign select_ln958_fu_464_p3 = ((icmp_ln958_fu_444_p2[0:0] == 1'b1) ? select_ln946_fu_456_p3 : and_ln949_25_fu_450_p2);

assign sext_ln581_4_fu_1484_p1 = sh_amt_4_reg_2584;

assign sext_ln581_5_fu_2229_p1 = sh_amt_5_fu_2221_p3;

assign sext_ln581_6_fu_1865_p1 = sh_amt_6_fu_1857_p3;

assign sext_ln581_fu_2047_p1 = sh_amt_reg_2633;

assign sh_amt_4_fu_1334_p3 = ((icmp_ln581_4_fu_1316_p2[0:0] == 1'b1) ? add_ln581_4_fu_1322_p2 : sub_ln581_4_fu_1328_p2);

assign sh_amt_5_fu_2221_p3 = ((icmp_ln581_5_fu_2203_p2[0:0] == 1'b1) ? add_ln581_5_fu_2209_p2 : sub_ln581_5_fu_2215_p2);

assign sh_amt_6_fu_1857_p3 = ((icmp_ln581_6_fu_1839_p2[0:0] == 1'b1) ? add_ln581_6_fu_1845_p2 : sub_ln581_6_fu_1851_p2);

assign sh_amt_fu_1633_p3 = ((icmp_ln581_fu_1615_p2[0:0] == 1'b1) ? add_ln581_fu_1621_p2 : sub_ln581_fu_1627_p2);

assign shl_ln314_1_fu_260_p3 = {{trunc_ln314_fu_256_p1}, {4'd0}};

assign shl_ln604_4_fu_1507_p2 = trunc_ln583_4_reg_2589 << sext_ln581_4_fu_1484_p1;

assign shl_ln604_5_fu_2283_p2 = trunc_ln583_5_fu_2239_p1 << sext_ln581_5_fu_2229_p1;

assign shl_ln604_6_fu_1919_p2 = trunc_ln583_6_fu_1875_p1 << sext_ln581_6_fu_1865_p1;

assign shl_ln604_fu_2064_p2 = trunc_ln583_fu_2050_p1 << sext_ln581_fu_2047_p1;

assign shl_ln949_13_fu_1015_p2 = 32'd1 << lsb_index_14_fu_973_p2;

assign shl_ln949_14_fu_698_p2 = 32'd1 << lsb_index_15_fu_656_p2;

assign shl_ln949_fu_398_p2 = 32'd1 << lsb_index_fu_356_p2;

assign shl_ln959_10_fu_1087_p2 = zext_ln959_20_fu_1073_p1 << zext_ln959_21_fu_1083_p1;

assign shl_ln959_11_fu_770_p2 = zext_ln959_22_fu_756_p1 << zext_ln959_23_fu_766_p1;

assign shl_ln959_fu_488_p2 = zext_ln959_fu_476_p1 << zext_ln959_19_fu_484_p1;

assign shl_ln_fu_244_p3 = {{i_17_reg_2411}, {13'd0}};

assign sub_ln581_4_fu_1328_p2 = (12'd20 - F2_4_fu_1310_p2);

assign sub_ln581_5_fu_2215_p2 = (12'd20 - F2_5_fu_2197_p2);

assign sub_ln581_6_fu_1851_p2 = (12'd20 - F2_6_fu_1833_p2);

assign sub_ln581_fu_1627_p2 = (12'd20 - F2_fu_1609_p2);

assign sub_ln944_13_fu_967_p2 = (32'd32 - l_14_fu_959_p3);

assign sub_ln944_14_fu_650_p2 = (32'd32 - l_15_fu_642_p3);

assign sub_ln944_fu_350_p2 = (32'd32 - l_fu_342_p3);

assign sub_ln947_13_fu_999_p2 = ($signed(6'd57) - $signed(trunc_ln947_13_fu_995_p1));

assign sub_ln947_14_fu_682_p2 = ($signed(6'd57) - $signed(trunc_ln947_14_fu_678_p1));

assign sub_ln947_fu_382_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_378_p1));

assign sub_ln959_10_fu_1077_p2 = (32'd25 - sub_ln944_13_fu_967_p2);

assign sub_ln959_11_fu_760_p2 = (32'd25 - sub_ln944_14_fu_650_p2);

assign sub_ln959_fu_479_p2 = (32'd25 - sub_ln944_reg_2465);

assign sub_ln964_13_fu_1191_p2 = (8'd12 - trunc_ln943_13_reg_2551);

assign sub_ln964_14_fu_866_p2 = (8'd12 - trunc_ln943_14_reg_2511);

assign sub_ln964_fu_555_p2 = (8'd12 - trunc_ln943_reg_2481);

assign tmp_119_fu_422_p3 = lsb_index_fu_356_p2[32'd31];

assign tmp_122_fu_979_p4 = {{lsb_index_14_fu_973_p2[31:1]}};

assign tmp_123_fu_1039_p3 = lsb_index_14_fu_973_p2[32'd31];

assign tmp_126_fu_1653_p4 = {{sh_amt_fu_1633_p3[11:5]}};

assign tmp_127_fu_2056_p3 = bitcast_ln702_fu_2053_p1[32'd31];

assign tmp_129_fu_662_p4 = {{lsb_index_15_fu_656_p2[31:1]}};

assign tmp_130_fu_722_p3 = lsb_index_15_fu_656_p2[32'd31];

assign tmp_133_fu_1358_p4 = {{sh_amt_4_fu_1334_p3[11:5]}};

assign tmp_134_fu_1491_p3 = bitcast_ln702_8_fu_1487_p1[32'd31];

assign tmp_135_fu_2090_p3 = shl_ln604_fu_2064_p2[32'd31];

assign tmp_136_fu_1743_p3 = ashr_ln586_fu_1677_p2[32'd31];

assign tmp_137_fu_1751_p3 = man_V_17_fu_1595_p3[32'd31];

assign tmp_139_fu_2249_p4 = {{sh_amt_5_fu_2221_p3[11:5]}};

assign tmp_140_fu_1525_p3 = select_ln603_2_fu_1519_p3[32'd31];

assign tmp_142_fu_1885_p4 = {{sh_amt_6_fu_1857_p3[11:5]}};

assign tmp_41_i_fu_566_p3 = {{p_Result_226_reg_2455}, {add_ln964_fu_560_p2}};

assign tmp_42_i_fu_1202_p3 = {{p_Result_231_reg_2536}, {add_ln964_13_fu_1196_p2}};

assign tmp_45_i_fu_877_p3 = {{p_Result_238_reg_2496}, {add_ln964_14_fu_871_p2}};

assign tmp_V_37_fu_935_p2 = (32'd0 - ap_sig_allocacmp_p_Val2_s);

assign tmp_V_40_fu_618_p2 = (32'd0 - ap_sig_allocacmp_p_Val2_88);

assign tmp_V_fu_318_p2 = (32'd0 - z_bits_fu_300_p1);

assign tmp_fu_362_p4 = {{lsb_index_fu_356_p2[31:1]}};

assign tmp_s_fu_287_p3 = {{lshr_ln_fu_273_p4}, {trunc_ln314_1_fu_283_p1}};

assign trunc_ln314_1_fu_283_p1 = ap_phi_mux_j_phi_fu_213_p4[8:0];

assign trunc_ln314_fu_256_p1 = ap_phi_mux_j_phi_fu_213_p4[11:0];

assign trunc_ln555_4_fu_1248_p1 = ireg_4_fu_1244_p1[62:0];

assign trunc_ln555_5_fu_2135_p1 = ireg_5_fu_2131_p1[62:0];

assign trunc_ln555_6_fu_1771_p1 = ireg_6_fu_1767_p1[62:0];

assign trunc_ln555_fu_1547_p1 = ireg_fu_1543_p1[62:0];

assign trunc_ln565_4_fu_1274_p1 = ireg_4_fu_1244_p1[51:0];

assign trunc_ln565_5_fu_2161_p1 = ireg_5_fu_2131_p1[51:0];

assign trunc_ln565_6_fu_1797_p1 = ireg_6_fu_1767_p1[51:0];

assign trunc_ln565_fu_1573_p1 = ireg_fu_1543_p1[51:0];

assign trunc_ln583_4_fu_1348_p1 = man_V_20_fu_1296_p3[31:0];

assign trunc_ln583_5_fu_2239_p1 = man_V_23_fu_2183_p3[31:0];

assign trunc_ln583_6_fu_1875_p1 = man_V_26_fu_1819_p3[31:0];

assign trunc_ln583_fu_2050_p1 = man_V_17_reg_2623[31:0];

assign trunc_ln586_10_fu_1374_p1 = sh_amt_4_fu_1334_p3[5:0];

assign trunc_ln586_11_fu_1388_p1 = ashr_ln586_4_fu_1382_p2[31:0];

assign trunc_ln586_12_fu_2265_p1 = sh_amt_5_fu_2221_p3[5:0];

assign trunc_ln586_13_fu_2279_p1 = ashr_ln586_5_fu_2273_p2[31:0];

assign trunc_ln586_14_fu_1901_p1 = sh_amt_6_fu_1857_p3[5:0];

assign trunc_ln586_15_fu_1915_p1 = ashr_ln586_6_fu_1909_p2[31:0];

assign trunc_ln586_fu_1669_p1 = sh_amt_fu_1633_p3[5:0];

assign trunc_ln943_13_fu_1161_p1 = l_14_fu_959_p3[7:0];

assign trunc_ln943_14_fu_844_p1 = l_15_fu_642_p3[7:0];

assign trunc_ln943_fu_472_p1 = l_fu_342_p3[7:0];

assign trunc_ln947_13_fu_995_p1 = sub_ln944_13_fu_967_p2[5:0];

assign trunc_ln947_14_fu_678_p1 = sub_ln944_14_fu_650_p2[5:0];

assign trunc_ln947_fu_378_p1 = sub_ln944_fu_350_p2[5:0];

assign xor_ln571_3_fu_1392_p2 = (icmp_ln571_4_fu_1304_p2 ^ 1'd1);

assign xor_ln571_4_fu_2289_p2 = (icmp_ln571_5_fu_2191_p2 ^ 1'd1);

assign xor_ln571_5_fu_1925_p2 = (icmp_ln571_6_fu_1827_p2 ^ 1'd1);

assign xor_ln571_fu_2070_p2 = (icmp_ln571_reg_2628 ^ 1'd1);

assign xor_ln581_3_fu_1446_p2 = (or_ln581_3_fu_1440_p2 ^ 1'd1);

assign xor_ln581_4_fu_2331_p2 = (or_ln581_4_fu_2325_p2 ^ 1'd1);

assign xor_ln581_5_fu_1967_p2 = (or_ln581_5_fu_1961_p2 ^ 1'd1);

assign xor_ln581_fu_1725_p2 = (or_ln581_fu_1719_p2 ^ 1'd1);

assign xor_ln582_3_fu_1410_p2 = (or_ln582_3_fu_1404_p2 ^ 1'd1);

assign xor_ln582_4_fu_2307_p2 = (or_ln582_4_fu_2301_p2 ^ 1'd1);

assign xor_ln582_5_fu_1943_p2 = (or_ln582_5_fu_1937_p2 ^ 1'd1);

assign xor_ln582_fu_1689_p2 = (or_ln582_fu_1683_p2 ^ 1'd1);

assign xor_ln585_1_fu_1428_p2 = (icmp_ln585_4_fu_1352_p2 ^ 1'd1);

assign xor_ln585_2_fu_2343_p2 = (icmp_ln585_5_fu_2243_p2 ^ 1'd1);

assign xor_ln585_3_fu_1979_p2 = (icmp_ln585_6_fu_1879_p2 ^ 1'd1);

assign xor_ln585_fu_1707_p2 = (icmp_ln585_fu_1647_p2 ^ 1'd1);

assign xor_ln949_13_fu_1047_p2 = (tmp_123_fu_1039_p3 ^ 1'd1);

assign xor_ln949_14_fu_730_p2 = (tmp_130_fu_722_p3 ^ 1'd1);

assign xor_ln949_fu_430_p2 = (tmp_119_fu_422_p3 ^ 1'd1);

assign z_bits_fu_300_p1 = points_q0[31:0];

assign zext_ln314_fu_295_p1 = tmp_s_fu_287_p3;

assign zext_ln368_5_fu_1165_p1 = p_Result_237_reg_2516;

assign zext_ln368_fu_1236_p1 = p_Result_230_reg_2562;

assign zext_ln455_4_fu_1270_p1 = exp_tmp_4_fu_1260_p4;

assign zext_ln455_5_fu_2157_p1 = exp_tmp_5_fu_2147_p4;

assign zext_ln455_6_fu_1793_p1 = exp_tmp_6_fu_1783_p4;

assign zext_ln455_fu_1569_p1 = exp_tmp_fu_1559_p4;

assign zext_ln569_4_fu_1286_p1 = p_Result_243_fu_1278_p3;

assign zext_ln569_5_fu_2173_p1 = p_Result_245_fu_2165_p3;

assign zext_ln569_6_fu_1809_p1 = p_Result_247_fu_1801_p3;

assign zext_ln569_fu_1585_p1 = p_Result_236_fu_1577_p3;

assign zext_ln586_4_fu_1378_p1 = trunc_ln586_10_fu_1374_p1;

assign zext_ln586_5_fu_2269_p1 = trunc_ln586_12_fu_2265_p1;

assign zext_ln586_6_fu_1905_p1 = trunc_ln586_14_fu_1901_p1;

assign zext_ln586_fu_1673_p1 = trunc_ln586_fu_1669_p1;

assign zext_ln947_13_fu_1005_p1 = sub_ln947_13_fu_999_p2;

assign zext_ln947_14_fu_688_p1 = sub_ln947_14_fu_682_p2;

assign zext_ln947_fu_388_p1 = sub_ln947_fu_382_p2;

assign zext_ln958_10_fu_1107_p1 = add_ln958_10_fu_1101_p2;

assign zext_ln958_11_fu_790_p1 = add_ln958_11_fu_784_p2;

assign zext_ln958_fu_499_p1 = add_ln958_fu_494_p2;

assign zext_ln959_19_fu_484_p1 = sub_ln959_fu_479_p2;

assign zext_ln959_20_fu_1073_p1 = m_120_fu_941_p3;

assign zext_ln959_21_fu_1083_p1 = sub_ln959_10_fu_1077_p2;

assign zext_ln959_22_fu_756_p1 = m_122_fu_624_p3;

assign zext_ln959_23_fu_766_p1 = sub_ln959_11_fu_760_p2;

assign zext_ln959_fu_476_p1 = m_118_reg_2460;

assign zext_ln961_13_fu_1133_p1 = select_ln958_23_fu_1117_p3;

assign zext_ln961_14_fu_816_p1 = select_ln958_25_fu_800_p3;

assign zext_ln961_fu_516_p1 = select_ln958_reg_2476;

assign zext_ln962_10_fu_1181_p1 = m_121_reg_2541;

assign zext_ln962_11_fu_856_p1 = m_123_reg_2501;

assign zext_ln962_fu_535_p1 = m_119_fu_525_p4;

always @ (posedge ap_clk) begin
    shl_ln_reg_2436[12:0] <= 13'b0000000000000;
    bitcast_ln351_6_reg_2556[31] <= 1'b0;
    bitcast_ln351_reg_2572[31] <= 1'b0;
end

endmodule //system_top_p_find_left_and_right_boundaries9
