-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_getParallelograms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    superpoints_ce0 : OUT STD_LOGIC;
    superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    superpoints_ce1 : OUT STD_LOGIC;
    superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    superpoints_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    pSlope_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pSlope_ce0 : OUT STD_LOGIC;
    pSlope_we0 : OUT STD_LOGIC;
    pSlope_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pSlope_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomL_jR_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomL_jR_ce0 : OUT STD_LOGIC;
    shadow_bottomL_jR_we0 : OUT STD_LOGIC;
    shadow_bottomL_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomL_jR_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomR_jR_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomR_jR_ce0 : OUT STD_LOGIC;
    shadow_bottomR_jR_we0 : OUT STD_LOGIC;
    shadow_bottomR_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomR_jR_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomL_jL_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomL_jL_ce0 : OUT STD_LOGIC;
    shadow_bottomL_jL_we0 : OUT STD_LOGIC;
    shadow_bottomL_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomL_jL_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomR_jL_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomR_jL_ce0 : OUT STD_LOGIC;
    shadow_bottomR_jL_we0 : OUT STD_LOGIC;
    shadow_bottomR_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomR_jL_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    z1_min_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    z1_min_ce0 : OUT STD_LOGIC;
    z1_min_we0 : OUT STD_LOGIC;
    z1_min_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    z1_min_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    z1_max_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    z1_max_ce0 : OUT STD_LOGIC;
    z1_max_we0 : OUT STD_LOGIC;
    z1_max_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    z1_max_offset : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of system_top_getParallelograms is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_pp2_stage5 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_pp2_stage6 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_pp2_stage7 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_FE9FFF98 : STD_LOGIC_VECTOR (31 downto 0) := "11111110100111111111111110011000";
    constant ap_const_lv32_1600068 : STD_LOGIC_VECTOR (31 downto 0) := "00000001011000000000000001101000";
    constant ap_const_lv26_1700068 : STD_LOGIC_VECTOR (25 downto 0) := "01011100000000000001101000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_parallelogram_slopesparallelogram_slopes_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal get_parallelogram_slopesparallelogram_slopes_ce0 : STD_LOGIC;
    signal get_parallelogram_slopesparallelogram_slopes_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_483 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_012_i_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_506 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_012_i15_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_529 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_block_state10_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state18_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_state26_pp2_stage2_iter2 : BOOLEAN;
    signal ap_block_state34_pp2_stage2_iter3 : BOOLEAN;
    signal ap_block_state42_pp2_stage2_iter4 : BOOLEAN;
    signal ap_block_state50_pp2_stage2_iter5 : BOOLEAN;
    signal ap_block_state58_pp2_stage2_iter6 : BOOLEAN;
    signal ap_block_state66_pp2_stage2_iter7 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal icmp_ln120_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state11_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state19_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_state27_pp2_stage3_iter2 : BOOLEAN;
    signal ap_block_state35_pp2_stage3_iter3 : BOOLEAN;
    signal ap_block_state43_pp2_stage3_iter4 : BOOLEAN;
    signal ap_block_state51_pp2_stage3_iter5 : BOOLEAN;
    signal ap_block_state59_pp2_stage3_iter6 : BOOLEAN;
    signal ap_block_state67_pp2_stage3_iter7 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_block_state12_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_state20_pp2_stage4_iter1 : BOOLEAN;
    signal ap_block_state28_pp2_stage4_iter2 : BOOLEAN;
    signal ap_block_state36_pp2_stage4_iter3 : BOOLEAN;
    signal ap_block_state44_pp2_stage4_iter4 : BOOLEAN;
    signal ap_block_state52_pp2_stage4_iter5 : BOOLEAN;
    signal ap_block_state60_pp2_stage4_iter6 : BOOLEAN;
    signal ap_block_state68_pp2_stage4_iter7 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage5 : signal is "none";
    signal ap_block_state13_pp2_stage5_iter0 : BOOLEAN;
    signal ap_block_state21_pp2_stage5_iter1 : BOOLEAN;
    signal ap_block_state29_pp2_stage5_iter2 : BOOLEAN;
    signal ap_block_state37_pp2_stage5_iter3 : BOOLEAN;
    signal ap_block_state45_pp2_stage5_iter4 : BOOLEAN;
    signal ap_block_state53_pp2_stage5_iter5 : BOOLEAN;
    signal ap_block_state61_pp2_stage5_iter6 : BOOLEAN;
    signal ap_block_state69_pp2_stage5_iter7 : BOOLEAN;
    signal ap_block_pp2_stage5_11001 : BOOLEAN;
    signal add_ln133_fu_573_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln133_reg_1899 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln132_fu_591_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln132_reg_1904 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln138_fu_609_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln138_reg_1909 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_fu_627_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_reg_1914 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln136_fu_645_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln136_reg_1919 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln135_fu_663_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln135_reg_1924 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln130_fu_681_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln130_reg_1929 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln50_fu_703_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln50_reg_1934 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln50_1_fu_729_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln50_1_reg_1939 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln49_fu_735_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln49_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal superpoint_0_min_z_fu_767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal add_ln63_fu_775_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln63_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1969 : STD_LOGIC_VECTOR (0 downto 0);
    signal superpoint_0_max_z_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal z1_max_tmp_V_1_fu_857_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_tmp_V_1_reg_1983 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal z1_min_tmp_V_1_fu_865_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_tmp_V_1_reg_1989 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln120_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state40_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state48_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state56_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state64_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln120_reg_1995_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1995_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_cast_fu_910_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_cast_reg_1999 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln130_1_fu_939_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_1_reg_2032_pp2_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state9_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state17_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_state25_pp2_stage1_iter2 : BOOLEAN;
    signal ap_block_state33_pp2_stage1_iter3 : BOOLEAN;
    signal ap_block_state41_pp2_stage1_iter4 : BOOLEAN;
    signal ap_block_state49_pp2_stage1_iter5 : BOOLEAN;
    signal ap_block_state57_pp2_stage1_iter6 : BOOLEAN;
    signal ap_block_state65_pp2_stage1_iter7 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal select_ln51_1_fu_1017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_1_reg_2051 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_2_fu_1049_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_2_reg_2057 : STD_LOGIC_VECTOR (31 downto 0);
    signal get_parallelogram_slopesparallelogram_slopes_load_reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_3_fu_1095_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_3_reg_2079 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_4_fu_1121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_4_reg_2085 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln555_fu_1133_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln555_reg_2091 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_reg_2096 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_reg_2101 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1155_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_2106 : STD_LOGIC_VECTOR (51 downto 0);
    signal j_fu_1159_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_2111 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln51_5_fu_1203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_5_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_6_fu_1229_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_6_reg_2133 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln120_1_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_1_reg_2139 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1299_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2144 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_fu_1313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_2149 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_reg_2155 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_reg_2161 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln571_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln571_reg_2166 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_1_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_1_reg_2171 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_1_fu_1454_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_1_reg_2177 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_7_fu_1500_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_7_reg_2192 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_8_fu_1526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_8_reg_2198 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_9_fu_1633_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_9_reg_2214 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_10_fu_1659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_10_reg_2220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage6 : signal is "none";
    signal ap_block_state14_pp2_stage6_iter0 : BOOLEAN;
    signal ap_block_state22_pp2_stage6_iter1 : BOOLEAN;
    signal ap_block_state30_pp2_stage6_iter2 : BOOLEAN;
    signal ap_block_state38_pp2_stage6_iter3 : BOOLEAN;
    signal ap_block_state46_pp2_stage6_iter4 : BOOLEAN;
    signal ap_block_state54_pp2_stage6_iter5 : BOOLEAN;
    signal ap_block_state62_pp2_stage6_iter6 : BOOLEAN;
    signal ap_block_state70_pp2_stage6_iter7 : BOOLEAN;
    signal ap_block_pp2_stage6_11001 : BOOLEAN;
    signal select_ln51_11_fu_1705_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_11_reg_2236 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_12_fu_1731_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_12_reg_2242 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage7 : signal is "none";
    signal ap_block_state15_pp2_stage7_iter0 : BOOLEAN;
    signal ap_block_state23_pp2_stage7_iter1 : BOOLEAN;
    signal ap_block_state31_pp2_stage7_iter2 : BOOLEAN;
    signal ap_block_state39_pp2_stage7_iter3 : BOOLEAN;
    signal ap_block_state47_pp2_stage7_iter4 : BOOLEAN;
    signal ap_block_state55_pp2_stage7_iter5 : BOOLEAN;
    signal ap_block_state63_pp2_stage7_iter6 : BOOLEAN;
    signal ap_block_pp2_stage7_11001 : BOOLEAN;
    signal select_ln51_13_fu_1777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_13_reg_2258 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_14_fu_1803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_14_reg_2264 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_15_fu_1829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_15_reg_2270 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_16_fu_1855_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_16_reg_2275 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln138_1_fu_1891_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln138_1_reg_2280 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage7_subdone : BOOLEAN;
    signal ap_block_pp2_stage6_subdone : BOOLEAN;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_i_3_phi_fu_533_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal zext_ln50_4_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln64_1_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_6_fu_905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_7_fu_924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln100_cast_fu_879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln132_1_fu_948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_1_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_8_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_9_fu_978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_10_fu_1062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_11_fu_1072_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_12_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_13_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_14_fu_1467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_15_fu_1477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_2_fu_1590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_16_fu_1600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage5 : BOOLEAN;
    signal zext_ln50_17_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_18_fu_1672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage6 : BOOLEAN;
    signal zext_ln50_19_fu_1682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_20_fu_1744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage7 : BOOLEAN;
    signal zext_ln50_21_fu_1754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_1_fu_1868_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_1_fu_1877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_1_fu_1886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_1_fu_1895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_565_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln133_fu_561_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_583_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln132_fu_579_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_601_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln138_fu_597_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_619_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln137_fu_615_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_637_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln136_fu_633_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_655_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln135_fu_651_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_673_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_fu_669_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_691_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln50_1_fu_699_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln50_fu_687_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_717_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_709_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln50_2_fu_725_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln50_3_fu_747_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln50_2_fu_751_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln64_fu_787_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln64_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1494_3_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_3_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_min_tmp_V_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_4_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_max_tmp_V_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln91_fu_847_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln90_fu_829_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln50_5_fu_884_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln50_3_fu_888_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_897_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln50_fu_893_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln50_fu_918_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln129_fu_929_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal parallelogram_index_fu_933_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln132_1_fu_943_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln133_1_fu_953_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln50_1_fu_963_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_2_fu_973_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_987_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1495_5_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_fu_1003_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_6_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_4_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_fu_983_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln65_1_fu_1031_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln65_1_cast_fu_1039_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_5_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_3_fu_1057_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_4_fu_1067_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_7_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_2_fu_1082_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_8_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_6_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_1108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_7_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln50_5_fu_1165_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_6_fu_1175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_9_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_4_fu_1190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_10_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_8_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_5_fu_1216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_9_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_31_fu_1246_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1253_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_fu_1257_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln455_fu_1243_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1275_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1287_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1293_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_4_fu_1263_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_25_fu_1317_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_1333_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_1337_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1341_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln702_fu_1351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_1362_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_2_fu_1347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_7_fu_1462_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_8_fu_1472_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_11_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_6_fu_1487_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_12_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_10_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_1513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_11_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_1534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_fu_1537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_fu_1542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_2_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_2_fu_1549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_3_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_3_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_4_fu_1569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln130_1_fu_1586_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln50_9_fu_1595_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_10_fu_1605_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_13_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_8_fu_1620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_14_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_12_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_9_fu_1646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_13_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_11_fu_1667_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_12_fu_1677_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_15_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_10_fu_1692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_16_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_14_fu_1713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_11_fu_1718_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_15_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_13_fu_1739_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln50_14_fu_1749_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_17_fu_1759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_12_fu_1764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_18_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_16_fu_1785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_13_fu_1790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_17_fu_1797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_19_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_14_fu_1816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_20_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_18_fu_1837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_15_fu_1842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_19_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln135_1_fu_1864_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln136_1_fu_1873_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_1_fu_1882_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_pp2_stage5_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (25 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_parallelogram_slopesparallelogram_slopes_U : component system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_parallelogram_slopesparallelogram_slopes_address0,
        ce0 => get_parallelogram_slopesparallelogram_slopes_ce0,
        q0 => get_parallelogram_slopesparallelogram_slopes_q0);

    grp_straightLineProjectorFromLayerIJtoK_fu_541 : component system_top_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j,
        j => j_reg_2111,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return);

    fpext_32ns_64_1_no_dsp_1_U67 : component system_top_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => get_parallelogram_slopesparallelogram_slopes_load_reg_2063,
        dout => d_fu_550_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone)))) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_1_reg_506 <= ap_const_lv5_0;
            elsif (((icmp_ln63_fu_781_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                i_1_reg_506 <= add_ln63_fu_775_p2;
            end if; 
        end if;
    end process;

    i_3_reg_529_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i_3_reg_529 <= j_reg_2111;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_3_reg_529 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    i_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_483 <= ap_const_lv5_0;
            elsif (((icmp_ln49_fu_741_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_483 <= add_ln49_fu_735_p2;
            end if; 
        end if;
    end process;

    p_012_i15_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_012_i15_reg_517 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln63_reg_1969 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_012_i15_reg_517 <= superpoint_0_max_z_fu_807_p3;
            end if; 
        end if;
    end process;

    p_012_i_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_012_i_reg_494 <= ap_const_lv32_40000000;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln49_reg_1950 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_012_i_reg_494 <= superpoint_0_min_z_fu_767_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln130_reg_1929 <= add_ln130_fu_681_p2;
                add_ln132_reg_1904 <= add_ln132_fu_591_p2;
                add_ln133_reg_1899 <= add_ln133_fu_573_p2;
                add_ln135_reg_1924 <= add_ln135_fu_663_p2;
                add_ln136_reg_1919 <= add_ln136_fu_645_p2;
                add_ln137_reg_1914 <= add_ln137_fu_627_p2;
                add_ln138_reg_1909 <= add_ln138_fu_609_p2;
                    add_ln50_1_reg_1939(7 downto 4) <= add_ln50_1_fu_729_p2(7 downto 4);
                add_ln50_reg_1934 <= add_ln50_fu_703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001))) then
                add_ln138_1_reg_2280 <= add_ln138_1_fu_1891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001))) then
                and_ln571_reg_2166 <= and_ln571_fu_1442_p2;
                and_ln581_reg_2161 <= and_ln581_fu_1400_p2;
                and_ln582_reg_2155 <= and_ln582_fu_1382_p2;
                icmp_ln120_1_reg_2139 <= icmp_ln120_1_fu_1237_p2;
                or_ln571_1_reg_2171 <= or_ln571_1_fu_1448_p2;
                select_ln51_5_reg_2127 <= select_ln51_5_fu_1203_p3;
                select_ln571_1_reg_2177 <= select_ln571_1_fu_1454_p3;
                select_ln65_6_reg_2133 <= select_ln65_6_fu_1229_p3;
                sh_amt_reg_2144 <= sh_amt_fu_1299_p3;
                trunc_ln583_reg_2149 <= trunc_ln583_fu_1313_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001))) then
                exp_tmp_reg_2101 <= ireg_fu_1129_p1(62 downto 52);
                p_Result_s_reg_2096 <= ireg_fu_1129_p1(63 downto 63);
                select_ln51_3_reg_2079 <= select_ln51_3_fu_1095_p3;
                select_ln65_4_reg_2085 <= select_ln65_4_fu_1121_p3;
                trunc_ln555_reg_2091 <= trunc_ln555_fu_1133_p1;
                trunc_ln565_reg_2106 <= trunc_ln565_fu_1155_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001))) then
                get_parallelogram_slopesparallelogram_slopes_load_reg_2063 <= get_parallelogram_slopesparallelogram_slopes_q0;
                select_ln51_1_reg_2051 <= select_ln51_1_fu_1017_p3;
                select_ln65_2_reg_2057 <= select_ln65_2_fu_1049_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln120_reg_1995 <= icmp_ln120_fu_873_p2;
                icmp_ln120_reg_1995_pp2_iter1_reg <= icmp_ln120_reg_1995;
                icmp_ln120_reg_1995_pp2_iter2_reg <= icmp_ln120_reg_1995_pp2_iter1_reg;
                icmp_ln120_reg_1995_pp2_iter3_reg <= icmp_ln120_reg_1995_pp2_iter2_reg;
                icmp_ln120_reg_1995_pp2_iter4_reg <= icmp_ln120_reg_1995_pp2_iter3_reg;
                icmp_ln120_reg_1995_pp2_iter5_reg <= icmp_ln120_reg_1995_pp2_iter4_reg;
                icmp_ln120_reg_1995_pp2_iter6_reg <= icmp_ln120_reg_1995_pp2_iter5_reg;
                icmp_ln120_reg_1995_pp2_iter7_reg <= icmp_ln120_reg_1995_pp2_iter6_reg;
                    zext_ln130_1_reg_2032_pp2_iter1_reg(1 downto 0) <= zext_ln130_1_reg_2032(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter2_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter1_reg(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter3_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter2_reg(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter4_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter3_reg(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter5_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter4_reg(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter6_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter5_reg(1 downto 0);
                    zext_ln130_1_reg_2032_pp2_iter7_reg(1 downto 0) <= zext_ln130_1_reg_2032_pp2_iter6_reg(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln49_reg_1950 <= icmp_ln49_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln63_reg_1969 <= icmp_ln63_fu_781_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001))) then
                j_reg_2111 <= j_fu_1159_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1)))) then
                reg_553 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001))) then
                select_ln51_11_reg_2236 <= select_ln51_11_fu_1705_p3;
                select_ln65_12_reg_2242 <= select_ln65_12_fu_1731_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001))) then
                select_ln51_13_reg_2258 <= select_ln51_13_fu_1777_p3;
                select_ln65_14_reg_2264 <= select_ln65_14_fu_1803_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                select_ln51_15_reg_2270 <= select_ln51_15_fu_1829_p3;
                select_ln65_16_reg_2275 <= select_ln65_16_fu_1855_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001))) then
                select_ln51_7_reg_2192 <= select_ln51_7_fu_1500_p3;
                select_ln65_8_reg_2198 <= select_ln65_8_fu_1526_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001))) then
                select_ln51_9_reg_2214 <= select_ln51_9_fu_1633_p3;
                select_ln65_10_reg_2220 <= select_ln65_10_fu_1659_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln120_fu_873_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                    tmp_26_cast_reg_1999(7 downto 4) <= tmp_26_cast_fu_910_p3(7 downto 4);
                    zext_ln130_1_reg_2032(1 downto 0) <= zext_ln130_1_fu_939_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                z1_max_tmp_V_1_reg_1983 <= z1_max_tmp_V_1_fu_857_p3;
                z1_min_tmp_V_1_reg_1989 <= z1_min_tmp_V_1_fu_865_p3;
            end if;
        end if;
    end process;
    add_ln50_1_reg_1939(3 downto 0) <= "0000";
    tmp_26_cast_reg_1999(3 downto 0) <= "0000";
    zext_ln130_1_reg_2032(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter1_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter2_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter3_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter4_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter5_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter6_reg(3 downto 2) <= "00";
    zext_ln130_1_reg_2032_pp2_iter7_reg(3 downto 2) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp2_iter7, ap_enable_reg_pp0_iter0, icmp_ln49_fu_741_p2, ap_enable_reg_pp1_iter0, icmp_ln63_fu_781_p2, icmp_ln120_fu_873_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_block_pp2_stage7_subdone, ap_block_pp2_stage6_subdone, ap_enable_reg_pp2_iter6, ap_block_pp2_stage1_subdone, ap_block_pp2_stage2_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage4_subdone, ap_block_pp2_stage5_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln49_fu_741_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln49_fu_741_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((icmp_ln63_fu_781_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((icmp_ln63_fu_781_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln120_fu_873_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln120_fu_873_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_pp2_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                end if;
            when ap_ST_fsm_pp2_stage6 => 
                if ((not(((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                elsif (((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_subdone) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                end if;
            when ap_ST_fsm_pp2_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1275_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1243_p1));
    add_ln130_1_fu_1586_p2 <= std_logic_vector(unsigned(add_ln130_reg_1929) + unsigned(zext_ln130_1_reg_2032));
    add_ln130_fu_681_p2 <= std_logic_vector(unsigned(tmp_5_fu_673_p3) + unsigned(zext_ln130_fu_669_p1));
    add_ln132_1_fu_943_p2 <= std_logic_vector(unsigned(add_ln132_reg_1904) + unsigned(zext_ln130_1_fu_939_p1));
    add_ln132_fu_591_p2 <= std_logic_vector(unsigned(tmp_s_fu_583_p3) + unsigned(zext_ln132_fu_579_p1));
    add_ln133_1_fu_953_p2 <= std_logic_vector(unsigned(add_ln133_reg_1899) + unsigned(zext_ln130_1_fu_939_p1));
    add_ln133_fu_573_p2 <= std_logic_vector(unsigned(tmp_fu_565_p3) + unsigned(zext_ln133_fu_561_p1));
    add_ln135_1_fu_1864_p2 <= std_logic_vector(unsigned(add_ln135_reg_1924) + unsigned(zext_ln130_1_reg_2032_pp2_iter7_reg));
    add_ln135_fu_663_p2 <= std_logic_vector(unsigned(tmp_4_fu_655_p3) + unsigned(zext_ln135_fu_651_p1));
    add_ln136_1_fu_1873_p2 <= std_logic_vector(unsigned(add_ln136_reg_1919) + unsigned(zext_ln130_1_reg_2032_pp2_iter7_reg));
    add_ln136_fu_645_p2 <= std_logic_vector(unsigned(tmp_3_fu_637_p3) + unsigned(zext_ln136_fu_633_p1));
    add_ln137_1_fu_1882_p2 <= std_logic_vector(unsigned(add_ln137_reg_1914) + unsigned(zext_ln130_1_reg_2032_pp2_iter7_reg));
    add_ln137_fu_627_p2 <= std_logic_vector(unsigned(tmp_2_fu_619_p3) + unsigned(zext_ln137_fu_615_p1));
    add_ln138_1_fu_1891_p2 <= std_logic_vector(unsigned(add_ln138_reg_1909) + unsigned(zext_ln130_1_reg_2032_pp2_iter7_reg));
    add_ln138_fu_609_p2 <= std_logic_vector(unsigned(tmp_1_fu_601_p3) + unsigned(zext_ln138_fu_597_p1));
    add_ln49_fu_735_p2 <= std_logic_vector(unsigned(i_reg_483) + unsigned(ap_const_lv5_1));
    add_ln50_1_fu_729_p2 <= std_logic_vector(unsigned(tmp_7_fu_709_p3) + unsigned(zext_ln50_2_fu_725_p1));
    add_ln50_2_fu_751_p2 <= std_logic_vector(unsigned(add_ln50_1_reg_1939) + unsigned(zext_ln50_3_fu_747_p1));
    add_ln50_3_fu_888_p2 <= std_logic_vector(unsigned(add_ln50_reg_1934) + unsigned(zext_ln50_5_fu_884_p1));
    add_ln50_fu_703_p2 <= std_logic_vector(unsigned(zext_ln50_1_fu_699_p1) + unsigned(zext_ln50_fu_687_p1));
    add_ln581_fu_1287_p2 <= std_logic_vector(unsigned(F2_fu_1275_p2) + unsigned(ap_const_lv12_FEC));
    add_ln63_fu_775_p2 <= std_logic_vector(unsigned(i_1_reg_506) + unsigned(ap_const_lv5_1));
    add_ln64_fu_791_p2 <= std_logic_vector(unsigned(add_ln50_1_reg_1939) + unsigned(zext_ln64_fu_787_p1));
    and_ln571_fu_1442_p2 <= (xor_ln120_fu_1436_p2 and icmp_ln571_fu_1270_p2);
    and_ln581_fu_1400_p2 <= (xor_ln582_fu_1394_p2 and icmp_ln581_fu_1281_p2);
    and_ln582_fu_1382_p2 <= (xor_ln571_fu_1376_p2 and icmp_ln582_fu_1307_p2);
    and_ln585_fu_1412_p2 <= (icmp_ln585_fu_1406_p2 and and_ln581_fu_1400_p2);
    and_ln603_fu_1430_p2 <= (xor_ln581_fu_1424_p2 and icmp_ln603_fu_1327_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(9);
    ap_CS_fsm_pp2_stage5 <= ap_CS_fsm(10);
    ap_CS_fsm_pp2_stage6 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage7 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state71 <= ap_CS_fsm(13);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp2_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp2_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp2_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp2_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp2_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp2_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp2_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp2_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp2_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp2_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp2_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp2_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp2_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp2_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp2_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp2_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp2_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp2_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp2_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp2_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp2_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp2_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp2_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp2_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp2_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp2_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp2_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln49_fu_741_p2)
    begin
        if ((icmp_ln49_fu_741_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln63_fu_781_p2)
    begin
        if ((icmp_ln63_fu_781_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(icmp_ln120_fu_873_p2)
    begin
        if ((icmp_ln120_fu_873_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6)
    begin
        if (((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_3_phi_fu_533_p4_assign_proc : process(i_3_reg_529, icmp_ln120_reg_1995, ap_CS_fsm_pp2_stage0, j_reg_2111, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_i_3_phi_fu_533_p4 <= j_reg_2111;
        else 
            ap_phi_mux_i_3_phi_fu_533_p4 <= i_3_reg_529;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_1341_p2 <= std_logic_vector(shift_right(signed(man_V_4_fu_1263_p3),to_integer(unsigned('0' & zext_ln586_fu_1337_p1(31-1 downto 0)))));
    bitcast_ln702_fu_1351_p1 <= get_parallelogram_slopesparallelogram_slopes_load_reg_2063;
    get_parallelogram_slopesparallelogram_slopes_address0 <= trunc_ln100_cast_fu_879_p1(2 - 1 downto 0);

    get_parallelogram_slopesparallelogram_slopes_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            get_parallelogram_slopesparallelogram_slopes_ce0 <= ap_const_logic_1;
        else 
            get_parallelogram_slopesparallelogram_slopes_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i_assign_proc : process(ap_CS_fsm_pp2_stage2, icmp_ln120_reg_1995, ap_CS_fsm_pp2_stage3, z1_max_tmp_V_1_reg_1983, z1_min_tmp_V_1_reg_1989, ap_CS_fsm_pp2_stage0, icmp_ln120_reg_1995_pp2_iter1_reg, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1, ap_block_pp2_stage2, ap_block_pp2_stage3)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= z1_max_tmp_V_1_reg_1983;
        elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= z1_min_tmp_V_1_reg_1989;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j_assign_proc : process(ap_CS_fsm_pp2_stage2, icmp_ln120_reg_1995, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, icmp_ln120_reg_1995_pp2_iter1_reg, ap_CS_fsm_pp2_stage1, select_ln51_15_reg_2270, select_ln65_16_fu_1855_p3, select_ln65_16_reg_2275, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_block_pp2_stage1, ap_block_pp2_stage2, ap_block_pp2_stage3)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln51_15_reg_2270;
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln120_reg_1995_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln65_16_reg_2275;
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln65_16_fu_1855_p3;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln120_1_fu_1237_p2 <= "1" when (j_fu_1159_p2 = ap_const_lv3_5) else "0";
    icmp_ln120_fu_873_p2 <= "1" when (ap_phi_mux_i_3_phi_fu_533_p4 = ap_const_lv3_5) else "0";
    icmp_ln1494_10_fu_1508_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_6_reg_2133)) else "0";
    icmp_ln1494_11_fu_1520_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_7_fu_1513_p3)) else "0";
    icmp_ln1494_12_fu_1641_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_8_reg_2198)) else "0";
    icmp_ln1494_13_fu_1653_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_9_fu_1646_p3)) else "0";
    icmp_ln1494_14_fu_1713_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_10_reg_2220)) else "0";
    icmp_ln1494_15_fu_1725_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_11_fu_1718_p3)) else "0";
    icmp_ln1494_16_fu_1785_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_12_reg_2242)) else "0";
    icmp_ln1494_17_fu_1797_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_13_fu_1790_p3)) else "0";
    icmp_ln1494_18_fu_1837_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_14_reg_2264)) else "0";
    icmp_ln1494_19_fu_1849_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_15_fu_1842_p3)) else "0";
    icmp_ln1494_3_fu_801_p2 <= "1" when (signed(superpoints_q0) > signed(p_012_i15_reg_517)) else "0";
    icmp_ln1494_4_fu_1025_p2 <= "1" when (signed(superpoints_q1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_5_fu_1043_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_1_cast_fu_1039_p1)) else "0";
    icmp_ln1494_6_fu_1103_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_2_reg_2057)) else "0";
    icmp_ln1494_7_fu_1115_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_3_fu_1108_p3)) else "0";
    icmp_ln1494_8_fu_1211_p2 <= "1" when (signed(superpoints_q0) > signed(select_ln65_4_reg_2085)) else "0";
    icmp_ln1494_9_fu_1223_p2 <= "1" when (signed(superpoints_q1) > signed(select_ln65_5_fu_1216_p3)) else "0";
    icmp_ln1494_fu_851_p2 <= "1" when (signed(z1_min_tmp_V_fu_821_p3) > signed(z1_max_tmp_V_fu_839_p3)) else "0";
    icmp_ln1495_10_fu_1197_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_4_fu_1190_p3)) else "0";
    icmp_ln1495_11_fu_1482_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_5_reg_2127)) else "0";
    icmp_ln1495_12_fu_1494_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_6_fu_1487_p3)) else "0";
    icmp_ln1495_13_fu_1615_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_7_reg_2192)) else "0";
    icmp_ln1495_14_fu_1627_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_8_fu_1620_p3)) else "0";
    icmp_ln1495_15_fu_1687_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_9_reg_2214)) else "0";
    icmp_ln1495_16_fu_1699_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_10_fu_1692_p3)) else "0";
    icmp_ln1495_17_fu_1759_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_11_reg_2236)) else "0";
    icmp_ln1495_18_fu_1771_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_12_fu_1764_p3)) else "0";
    icmp_ln1495_19_fu_1811_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_13_reg_2258)) else "0";
    icmp_ln1495_20_fu_1823_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_14_fu_1816_p3)) else "0";
    icmp_ln1495_3_fu_815_p2 <= "1" when (signed(p_012_i_reg_494) < signed(ap_const_lv32_FE9FFF98)) else "0";
    icmp_ln1495_4_fu_833_p2 <= "1" when (signed(p_012_i15_reg_517) > signed(ap_const_lv32_1600068)) else "0";
    icmp_ln1495_5_fu_997_p2 <= "0" when (tmp_23_fu_987_p4 = ap_const_lv2_1) else "1";
    icmp_ln1495_6_fu_1011_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_fu_1003_p3)) else "0";
    icmp_ln1495_7_fu_1077_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_1_reg_2051)) else "0";
    icmp_ln1495_8_fu_1089_p2 <= "1" when (signed(superpoints_q1) < signed(select_ln51_2_fu_1082_p3)) else "0";
    icmp_ln1495_9_fu_1185_p2 <= "1" when (signed(superpoints_q0) < signed(select_ln51_3_reg_2079)) else "0";
    icmp_ln1495_fu_761_p2 <= "1" when (signed(superpoints_q0) < signed(p_012_i_reg_494)) else "0";
    icmp_ln49_fu_741_p2 <= "1" when (i_reg_483 = ap_const_lv5_10) else "0";
    icmp_ln571_fu_1270_p2 <= "1" when (trunc_ln555_reg_2091 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_1281_p2 <= "1" when (signed(F2_fu_1275_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_fu_1307_p2 <= "1" when (F2_fu_1275_p2 = ap_const_lv12_14) else "0";
    icmp_ln585_fu_1406_p2 <= "1" when (unsigned(sh_amt_fu_1299_p3) > unsigned(ap_const_lv12_35)) else "0";
    icmp_ln603_fu_1327_p2 <= "1" when (tmp_25_fu_1317_p4 = ap_const_lv7_0) else "0";
    icmp_ln63_fu_781_p2 <= "1" when (i_1_reg_506 = ap_const_lv5_10) else "0";
    ireg_fu_1129_p1 <= d_fu_550_p1;
    j_fu_1159_p2 <= std_logic_vector(unsigned(i_3_reg_529) + unsigned(ap_const_lv3_1));
    man_V_3_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1253_p1));
    man_V_4_fu_1263_p3 <= 
        man_V_3_fu_1257_p2 when (p_Result_s_reg_2096(0) = '1') else 
        zext_ln569_fu_1253_p1;
    or_ln50_10_fu_1605_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_B);
    or_ln50_11_fu_1667_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_C);
    or_ln50_12_fu_1677_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_D);
    or_ln50_13_fu_1739_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_E);
    or_ln50_14_fu_1749_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_F);
    or_ln50_1_fu_963_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_2);
    or_ln50_2_fu_973_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_3);
    or_ln50_3_fu_1057_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_4);
    or_ln50_4_fu_1067_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_5);
    or_ln50_5_fu_1165_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_6);
    or_ln50_6_fu_1175_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_7);
    or_ln50_7_fu_1462_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_8);
    or_ln50_8_fu_1472_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_9);
    or_ln50_9_fu_1595_p2 <= (tmp_26_cast_reg_1999 or ap_const_lv8_A);
    or_ln50_fu_918_p2 <= (tmp_26_cast_fu_910_p3 or ap_const_lv8_1);
    or_ln571_1_fu_1448_p2 <= (and_ln603_fu_1430_p2 or and_ln571_fu_1442_p2);
    or_ln571_2_fu_1555_p2 <= (icmp_ln120_1_reg_2139 or and_ln582_reg_2155);
    or_ln571_3_fu_1565_p2 <= (or_ln571_1_reg_2171 or and_ln581_reg_2161);
    or_ln571_fu_1370_p2 <= (icmp_ln571_fu_1270_p2 or icmp_ln120_1_fu_1237_p2);
    or_ln581_fu_1418_p2 <= (or_ln582_fu_1388_p2 or icmp_ln581_fu_1281_p2);
    or_ln582_fu_1388_p2 <= (or_ln571_fu_1370_p2 or icmp_ln582_fu_1307_p2);
    pSlope_address0 <= zext_ln130_2_fu_1590_p1(4 - 1 downto 0);

    pSlope_ce0_assign_proc : process(ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001))) then 
            pSlope_ce0 <= ap_const_logic_1;
        else 
            pSlope_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pSlope_d0 <= 
        select_ln571_3_fu_1559_p3 when (or_ln571_3_fu_1565_p2(0) = '1') else 
        select_ln571_4_fu_1569_p3;

    pSlope_we0_assign_proc : process(icmp_ln120_reg_1995, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln120_reg_1995 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001))) then 
            pSlope_we0 <= ap_const_logic_1;
        else 
            pSlope_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_31_fu_1246_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_2106);
    parallelogram_index_fu_933_p2 <= std_logic_vector(unsigned(trunc_ln129_fu_929_p1) + unsigned(ap_const_lv2_3));
    select_ln51_10_fu_1692_p3 <= 
        superpoints_q0 when (icmp_ln1495_15_fu_1687_p2(0) = '1') else 
        select_ln51_9_reg_2214;
    select_ln51_11_fu_1705_p3 <= 
        superpoints_q1 when (icmp_ln1495_16_fu_1699_p2(0) = '1') else 
        select_ln51_10_fu_1692_p3;
    select_ln51_12_fu_1764_p3 <= 
        superpoints_q0 when (icmp_ln1495_17_fu_1759_p2(0) = '1') else 
        select_ln51_11_reg_2236;
    select_ln51_13_fu_1777_p3 <= 
        superpoints_q1 when (icmp_ln1495_18_fu_1771_p2(0) = '1') else 
        select_ln51_12_fu_1764_p3;
    select_ln51_14_fu_1816_p3 <= 
        superpoints_q0 when (icmp_ln1495_19_fu_1811_p2(0) = '1') else 
        select_ln51_13_reg_2258;
    select_ln51_15_fu_1829_p3 <= 
        superpoints_q1 when (icmp_ln1495_20_fu_1823_p2(0) = '1') else 
        select_ln51_14_fu_1816_p3;
    select_ln51_1_fu_1017_p3 <= 
        superpoints_q0 when (icmp_ln1495_6_fu_1011_p2(0) = '1') else 
        select_ln51_fu_1003_p3;
    select_ln51_2_fu_1082_p3 <= 
        superpoints_q0 when (icmp_ln1495_7_fu_1077_p2(0) = '1') else 
        select_ln51_1_reg_2051;
    select_ln51_3_fu_1095_p3 <= 
        superpoints_q1 when (icmp_ln1495_8_fu_1089_p2(0) = '1') else 
        select_ln51_2_fu_1082_p3;
    select_ln51_4_fu_1190_p3 <= 
        superpoints_q0 when (icmp_ln1495_9_fu_1185_p2(0) = '1') else 
        select_ln51_3_reg_2079;
    select_ln51_5_fu_1203_p3 <= 
        superpoints_q1 when (icmp_ln1495_10_fu_1197_p2(0) = '1') else 
        select_ln51_4_fu_1190_p3;
    select_ln51_6_fu_1487_p3 <= 
        superpoints_q0 when (icmp_ln1495_11_fu_1482_p2(0) = '1') else 
        select_ln51_5_reg_2127;
    select_ln51_7_fu_1500_p3 <= 
        superpoints_q1 when (icmp_ln1495_12_fu_1494_p2(0) = '1') else 
        select_ln51_6_fu_1487_p3;
    select_ln51_8_fu_1620_p3 <= 
        superpoints_q0 when (icmp_ln1495_13_fu_1615_p2(0) = '1') else 
        select_ln51_7_reg_2192;
    select_ln51_9_fu_1633_p3 <= 
        superpoints_q1 when (icmp_ln1495_14_fu_1627_p2(0) = '1') else 
        select_ln51_8_fu_1620_p3;
    select_ln51_fu_1003_p3 <= 
        superpoints_q1 when (icmp_ln1495_5_fu_997_p2(0) = '1') else 
        ap_const_lv32_40000000;
    select_ln571_1_fu_1454_p3 <= 
        select_ln588_fu_1362_p3 when (and_ln585_fu_1412_p2(0) = '1') else 
        trunc_ln586_2_fu_1347_p1;
    select_ln571_2_fu_1549_p3 <= 
        trunc_ln583_reg_2149 when (and_ln582_reg_2155(0) = '1') else 
        ap_const_lv32_40000000;
    select_ln571_3_fu_1559_p3 <= 
        select_ln571_fu_1542_p3 when (or_ln571_1_reg_2171(0) = '1') else 
        select_ln571_1_reg_2177;
    select_ln571_4_fu_1569_p3 <= 
        select_ln571_2_fu_1549_p3 when (or_ln571_2_fu_1555_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_fu_1542_p3 <= 
        ap_const_lv32_0 when (and_ln571_reg_2166(0) = '1') else 
        shl_ln604_fu_1537_p2;
    select_ln588_fu_1362_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_26_fu_1354_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln65_10_fu_1659_p3 <= 
        superpoints_q1 when (icmp_ln1494_13_fu_1653_p2(0) = '1') else 
        select_ln65_9_fu_1646_p3;
    select_ln65_11_fu_1718_p3 <= 
        superpoints_q0 when (icmp_ln1494_14_fu_1713_p2(0) = '1') else 
        select_ln65_10_reg_2220;
    select_ln65_12_fu_1731_p3 <= 
        superpoints_q1 when (icmp_ln1494_15_fu_1725_p2(0) = '1') else 
        select_ln65_11_fu_1718_p3;
    select_ln65_13_fu_1790_p3 <= 
        superpoints_q0 when (icmp_ln1494_16_fu_1785_p2(0) = '1') else 
        select_ln65_12_reg_2242;
    select_ln65_14_fu_1803_p3 <= 
        superpoints_q1 when (icmp_ln1494_17_fu_1797_p2(0) = '1') else 
        select_ln65_13_fu_1790_p3;
    select_ln65_15_fu_1842_p3 <= 
        superpoints_q0 when (icmp_ln1494_18_fu_1837_p2(0) = '1') else 
        select_ln65_14_reg_2264;
    select_ln65_16_fu_1855_p3 <= 
        superpoints_q1 when (icmp_ln1494_19_fu_1849_p2(0) = '1') else 
        select_ln65_15_fu_1842_p3;
    select_ln65_1_cast_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_1_fu_1031_p3),32));
    select_ln65_1_fu_1031_p3 <= 
        trunc_ln1495_fu_983_p1 when (icmp_ln1494_4_fu_1025_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln65_2_fu_1049_p3 <= 
        superpoints_q0 when (icmp_ln1494_5_fu_1043_p2(0) = '1') else 
        select_ln65_1_cast_fu_1039_p1;
    select_ln65_3_fu_1108_p3 <= 
        superpoints_q0 when (icmp_ln1494_6_fu_1103_p2(0) = '1') else 
        select_ln65_2_reg_2057;
    select_ln65_4_fu_1121_p3 <= 
        superpoints_q1 when (icmp_ln1494_7_fu_1115_p2(0) = '1') else 
        select_ln65_3_fu_1108_p3;
    select_ln65_5_fu_1216_p3 <= 
        superpoints_q0 when (icmp_ln1494_8_fu_1211_p2(0) = '1') else 
        select_ln65_4_reg_2085;
    select_ln65_6_fu_1229_p3 <= 
        superpoints_q1 when (icmp_ln1494_9_fu_1223_p2(0) = '1') else 
        select_ln65_5_fu_1216_p3;
    select_ln65_7_fu_1513_p3 <= 
        superpoints_q0 when (icmp_ln1494_10_fu_1508_p2(0) = '1') else 
        select_ln65_6_reg_2133;
    select_ln65_8_fu_1526_p3 <= 
        superpoints_q1 when (icmp_ln1494_11_fu_1520_p2(0) = '1') else 
        select_ln65_7_fu_1513_p3;
    select_ln65_9_fu_1646_p3 <= 
        superpoints_q0 when (icmp_ln1494_12_fu_1641_p2(0) = '1') else 
        select_ln65_8_reg_2198;
        sext_ln581_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2144),32));

    sh_amt_fu_1299_p3 <= 
        add_ln581_fu_1287_p2 when (icmp_ln581_fu_1281_p2(0) = '1') else 
        sub_ln581_fu_1293_p2;
    shadow_bottomL_jL_address0 <= zext_ln137_1_fu_1886_p1(4 - 1 downto 0);

    shadow_bottomL_jL_ce0_assign_proc : process(ap_enable_reg_pp2_iter7, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomL_jL_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jL_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jL_d0 <= reg_553;

    shadow_bottomL_jL_we0_assign_proc : process(ap_enable_reg_pp2_iter7, icmp_ln120_reg_1995_pp2_iter7_reg, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomL_jL_we0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jL_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jR_address0 <= zext_ln135_1_fu_1868_p1(4 - 1 downto 0);

    shadow_bottomL_jR_ce0_assign_proc : process(ap_enable_reg_pp2_iter7, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomL_jR_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jR_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jR_d0 <= reg_553;

    shadow_bottomL_jR_we0_assign_proc : process(ap_enable_reg_pp2_iter7, icmp_ln120_reg_1995_pp2_iter7_reg, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomL_jR_we0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jR_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jL_address0 <= zext_ln138_1_fu_1895_p1(4 - 1 downto 0);

    shadow_bottomR_jL_ce0_assign_proc : process(ap_enable_reg_pp2_iter7, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomR_jL_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jL_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jL_d0 <= reg_553;

    shadow_bottomR_jL_we0_assign_proc : process(ap_enable_reg_pp2_iter7, icmp_ln120_reg_1995_pp2_iter7_reg, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomR_jL_we0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jL_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jR_address0 <= zext_ln136_1_fu_1877_p1(4 - 1 downto 0);

    shadow_bottomR_jR_ce0_assign_proc : process(ap_enable_reg_pp2_iter7, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomR_jR_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jR_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jR_d0 <= reg_553;

    shadow_bottomR_jR_we0_assign_proc : process(ap_enable_reg_pp2_iter7, icmp_ln120_reg_1995_pp2_iter7_reg, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln120_reg_1995_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then 
            shadow_bottomR_jR_we0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jR_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln604_fu_1537_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_2149),to_integer(unsigned('0' & sext_ln581_fu_1534_p1(31-1 downto 0)))));
    sub_ln581_fu_1293_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1275_p2));
    superpoint_0_max_z_fu_807_p3 <= 
        superpoints_q0 when (icmp_ln1494_3_fu_801_p2(0) = '1') else 
        p_012_i15_reg_517;
    superpoint_0_min_z_fu_767_p3 <= 
        superpoints_q0 when (icmp_ln1495_fu_761_p2(0) = '1') else 
        p_012_i_reg_494;

    superpoints_address0_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage7, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp2_stage1, ap_block_pp2_stage2, ap_block_pp2_stage3, ap_block_pp2_stage4, zext_ln50_4_fu_756_p1, zext_ln64_1_fu_796_p1, zext_ln50_7_fu_924_p1, zext_ln50_8_fu_968_p1, zext_ln50_10_fu_1062_p1, zext_ln50_12_fu_1170_p1, zext_ln50_14_fu_1467_p1, zext_ln50_16_fu_1600_p1, ap_block_pp2_stage5, zext_ln50_18_fu_1672_p1, ap_block_pp2_stage6, zext_ln50_20_fu_1744_p1, ap_block_pp2_stage7)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7))) then 
            superpoints_address0 <= zext_ln50_20_fu_1744_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6))) then 
            superpoints_address0 <= zext_ln50_18_fu_1672_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5))) then 
            superpoints_address0 <= zext_ln50_16_fu_1600_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4))) then 
            superpoints_address0 <= zext_ln50_14_fu_1467_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            superpoints_address0 <= zext_ln50_12_fu_1170_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            superpoints_address0 <= zext_ln50_10_fu_1062_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            superpoints_address0 <= zext_ln50_8_fu_968_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            superpoints_address0 <= zext_ln50_7_fu_924_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            superpoints_address0 <= zext_ln64_1_fu_796_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            superpoints_address0 <= zext_ln50_4_fu_756_p1(8 - 1 downto 0);
        else 
            superpoints_address0 <= "XXXXXXXX";
        end if; 
    end process;


    superpoints_address1_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage4, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage0, ap_block_pp2_stage1, ap_block_pp2_stage2, ap_block_pp2_stage3, ap_block_pp2_stage4, zext_ln50_6_fu_905_p1, zext_ln50_9_fu_978_p1, zext_ln50_11_fu_1072_p1, zext_ln50_13_fu_1180_p1, zext_ln50_15_fu_1477_p1, ap_block_pp2_stage5, zext_ln50_17_fu_1610_p1, ap_block_pp2_stage6, zext_ln50_19_fu_1682_p1, ap_block_pp2_stage7, zext_ln50_21_fu_1754_p1)
    begin
        if ((ap_enable_reg_pp2_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7))) then 
                superpoints_address1 <= zext_ln50_21_fu_1754_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6))) then 
                superpoints_address1 <= zext_ln50_19_fu_1682_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5))) then 
                superpoints_address1 <= zext_ln50_17_fu_1610_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4))) then 
                superpoints_address1 <= zext_ln50_15_fu_1477_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
                superpoints_address1 <= zext_ln50_13_fu_1180_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
                superpoints_address1 <= zext_ln50_11_fu_1072_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
                superpoints_address1 <= zext_ln50_9_fu_978_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
                superpoints_address1 <= zext_ln50_6_fu_905_p1(8 - 1 downto 0);
            else 
                superpoints_address1 <= "XXXXXXXX";
            end if;
        else 
            superpoints_address1 <= "XXXXXXXX";
        end if; 
    end process;


    superpoints_ce0_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            superpoints_ce0 <= ap_const_logic_1;
        else 
            superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    superpoints_ce1_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage6, ap_block_pp2_stage6_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001)))) then 
            superpoints_ce1 <= ap_const_logic_1;
        else 
            superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_601_p3 <= (shadow_bottomR_jL_offset & ap_const_lv2_0);
    tmp_22_fu_897_p3 <= (add_ln50_3_fu_888_p2 & ap_const_lv4_0);
    tmp_23_fu_987_p4 <= superpoints_q1(31 downto 30);
    tmp_25_fu_1317_p4 <= sh_amt_fu_1299_p3(11 downto 5);
    tmp_26_cast_fu_910_p3 <= (trunc_ln50_fu_893_p1 & ap_const_lv4_0);
    tmp_26_fu_1354_p3 <= bitcast_ln702_fu_1351_p1(31 downto 31);
    tmp_2_fu_619_p3 <= (shadow_bottomL_jL_offset & ap_const_lv2_0);
    tmp_3_fu_637_p3 <= (shadow_bottomR_jR_offset & ap_const_lv2_0);
    tmp_4_fu_655_p3 <= (shadow_bottomL_jR_offset & ap_const_lv2_0);
    tmp_5_fu_673_p3 <= (pSlope_offset & ap_const_lv2_0);
    tmp_6_fu_691_p3 <= (superpoints_offset & ap_const_lv2_0);
    tmp_7_fu_709_p3 <= (superpoints_offset & ap_const_lv6_0);
    tmp_8_fu_717_p3 <= (superpoints_offset & ap_const_lv4_0);
    tmp_fu_565_p3 <= (z1_max_offset & ap_const_lv2_0);
    tmp_s_fu_583_p3 <= (z1_min_offset & ap_const_lv2_0);
    trunc_ln100_cast_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_3_phi_fu_533_p4),64));
    trunc_ln129_fu_929_p1 <= ap_phi_mux_i_3_phi_fu_533_p4(2 - 1 downto 0);
    trunc_ln1495_fu_983_p1 <= superpoints_q1(31 - 1 downto 0);
    trunc_ln50_fu_893_p1 <= add_ln50_3_fu_888_p2(4 - 1 downto 0);
    trunc_ln555_fu_1133_p1 <= ireg_fu_1129_p1(63 - 1 downto 0);
    trunc_ln565_fu_1155_p1 <= ireg_fu_1129_p1(52 - 1 downto 0);
    trunc_ln583_fu_1313_p1 <= man_V_4_fu_1263_p3(32 - 1 downto 0);
    trunc_ln586_2_fu_1347_p1 <= ashr_ln586_fu_1341_p2(32 - 1 downto 0);
    trunc_ln586_fu_1333_p1 <= sh_amt_fu_1299_p3(6 - 1 downto 0);
    trunc_ln90_fu_829_p1 <= z1_min_tmp_V_fu_821_p3(26 - 1 downto 0);
    trunc_ln91_fu_847_p1 <= z1_max_tmp_V_fu_839_p3(26 - 1 downto 0);
    xor_ln120_fu_1436_p2 <= (icmp_ln120_1_fu_1237_p2 xor ap_const_lv1_1);
    xor_ln571_fu_1376_p2 <= (or_ln571_fu_1370_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1424_p2 <= (or_ln581_fu_1418_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1394_p2 <= (or_ln582_fu_1388_p2 xor ap_const_lv1_1);
    z1_max_address0 <= zext_ln133_1_fu_958_p1(4 - 1 downto 0);

    z1_max_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            z1_max_ce0 <= ap_const_logic_1;
        else 
            z1_max_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_max_d0 <= z1_max_tmp_V_1_reg_1983;
    z1_max_tmp_V_1_fu_857_p3 <= 
        ap_const_lv26_1700068 when (icmp_ln1494_fu_851_p2(0) = '1') else 
        trunc_ln91_fu_847_p1;
    z1_max_tmp_V_fu_839_p3 <= 
        ap_const_lv32_1600068 when (icmp_ln1495_4_fu_833_p2(0) = '1') else 
        p_012_i15_reg_517;

    z1_max_we0_assign_proc : process(icmp_ln120_fu_873_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln120_fu_873_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            z1_max_we0 <= ap_const_logic_1;
        else 
            z1_max_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_min_address0 <= zext_ln132_1_fu_948_p1(4 - 1 downto 0);

    z1_min_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            z1_min_ce0 <= ap_const_logic_1;
        else 
            z1_min_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_min_d0 <= z1_min_tmp_V_1_reg_1989;
    z1_min_tmp_V_1_fu_865_p3 <= 
        ap_const_lv26_1700068 when (icmp_ln1494_fu_851_p2(0) = '1') else 
        trunc_ln90_fu_829_p1;
    z1_min_tmp_V_fu_821_p3 <= 
        ap_const_lv32_FE9FFF98 when (icmp_ln1495_3_fu_815_p2(0) = '1') else 
        p_012_i_reg_494;

    z1_min_we0_assign_proc : process(icmp_ln120_fu_873_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln120_fu_873_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            z1_min_we0 <= ap_const_logic_1;
        else 
            z1_min_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln130_1_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(parallelogram_index_fu_933_p2),4));
    zext_ln130_2_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_1_fu_1586_p2),64));
    zext_ln130_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pSlope_offset),4));
    zext_ln132_1_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln132_1_fu_943_p2),64));
    zext_ln132_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_min_offset),4));
    zext_ln133_1_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln133_1_fu_953_p2),64));
    zext_ln133_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_max_offset),4));
    zext_ln135_1_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_1_fu_1864_p2),64));
    zext_ln135_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomL_jR_offset),4));
    zext_ln136_1_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_1_fu_1873_p2),64));
    zext_ln136_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomR_jR_offset),4));
    zext_ln137_1_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln137_1_fu_1882_p2),64));
    zext_ln137_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomL_jL_offset),4));
    zext_ln138_1_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln138_1_reg_2280),64));
    zext_ln138_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomR_jL_offset),4));
    zext_ln455_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_reg_2101),12));
    zext_ln50_10_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_3_fu_1057_p2),64));
    zext_ln50_11_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_4_fu_1067_p2),64));
    zext_ln50_12_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_5_fu_1165_p2),64));
    zext_ln50_13_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_6_fu_1175_p2),64));
    zext_ln50_14_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_7_fu_1462_p2),64));
    zext_ln50_15_fu_1477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_8_fu_1472_p2),64));
    zext_ln50_16_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_9_fu_1595_p2),64));
    zext_ln50_17_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_10_fu_1605_p2),64));
    zext_ln50_18_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_11_fu_1667_p2),64));
    zext_ln50_19_fu_1682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_12_fu_1677_p2),64));
    zext_ln50_1_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_691_p3),5));
    zext_ln50_20_fu_1744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_13_fu_1739_p2),64));
    zext_ln50_21_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_14_fu_1749_p2),64));
    zext_ln50_2_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_717_p3),8));
    zext_ln50_3_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_483),8));
    zext_ln50_4_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_2_fu_751_p2),64));
    zext_ln50_5_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_3_phi_fu_533_p4),5));
    zext_ln50_6_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_897_p3),64));
    zext_ln50_7_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_fu_918_p2),64));
    zext_ln50_8_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_1_fu_963_p2),64));
    zext_ln50_9_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln50_2_fu_973_p2),64));
    zext_ln50_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(superpoints_offset),5));
    zext_ln569_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_31_fu_1246_p3),54));
    zext_ln586_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_1333_p1),54));
    zext_ln64_1_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_fu_791_p2),64));
    zext_ln64_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_506),8));
end behav;
