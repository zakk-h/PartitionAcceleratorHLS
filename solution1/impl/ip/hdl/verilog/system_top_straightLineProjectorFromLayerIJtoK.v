// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_straightLineProjectorFromLayerIJtoK (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        z_i,
        z_j,
        j,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [25:0] z_i;
input  [31:0] z_j;
input  [2:0] j;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] get_radiiradii_address0;
reg    get_radiiradii_ce0;
wire   [31:0] get_radiiradii_q0;
reg   [31:0] z_j_read_reg_182;
reg   [31:0] z_j_read_reg_182_pp0_iter1_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter2_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter3_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter4_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter5_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter6_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter7_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter8_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter9_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter10_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter11_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter12_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter13_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter14_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter15_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter16_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter17_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter18_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter19_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter20_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter21_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter22_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter23_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter24_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter25_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter26_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter27_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter28_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter29_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter30_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter31_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter32_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter33_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter34_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter35_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter36_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter37_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter38_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter39_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter40_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter41_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter42_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter43_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter44_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter45_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter46_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter47_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter48_reg;
reg   [31:0] z_j_read_reg_182_pp0_iter49_reg;
reg  signed [25:0] z_i_read_reg_187;
reg  signed [25:0] z_i_read_reg_187_pp0_iter1_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter2_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter3_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter4_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter5_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter6_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter7_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter8_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter9_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter10_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter11_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter12_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter13_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter14_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter15_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter16_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter17_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter18_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter19_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter20_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter21_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter22_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter23_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter24_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter25_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter26_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter27_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter28_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter29_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter30_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter31_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter32_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter33_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter34_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter35_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter36_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter37_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter38_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter39_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter40_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter41_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter42_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter43_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter44_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter45_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter46_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter47_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter48_reg;
reg  signed [25:0] z_i_read_reg_187_pp0_iter49_reg;
wire   [0:0] icmp_ln870_fu_69_p2;
reg   [0:0] icmp_ln870_reg_193;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln98_fu_81_p1;
wire   [2:0] add_ln31_fu_75_p2;
wire   [4:0] trunc_ln731_fu_86_p1;
wire   [24:0] radius_j_V_fu_90_p3;
wire   [24:0] radius_j_V_2_fu_98_p3;
wire   [25:0] zext_ln1193_fu_105_p1;
wire  signed [25:0] ret_V_fu_109_p2;
wire   [31:0] grp_fu_119_p2;
wire  signed [32:0] sext_ln703_fu_129_p1;
wire  signed [32:0] sext_ln703_1_fu_132_p1;
wire  signed [32:0] ret_V_3_fu_135_p2;
wire  signed [31:0] radii_leverArm_fu_125_p1;
wire   [45:0] lhs_1_fu_155_p3;
wire   [51:0] r_V_1_fu_149_p2;
wire  signed [51:0] sext_ln728_fu_162_p1;
wire   [51:0] ret_V_2_fu_166_p2;
reg    grp_fu_119_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to49;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
end

system_top_alignedtoline_per_layer_loop3_get_radiiradii #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
get_radiiradii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_radiiradii_address0),
    .ce0(get_radiiradii_ce0),
    .q0(get_radiiradii_q0)
);

system_top_sdiv_46ns_26s_32_50_1 #(
    .ID( 1 ),
    .NUM_STAGE( 50 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 32 ))
sdiv_46ns_26s_32_50_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(46'd21990232555520),
    .din1(ret_V_fu_109_p2),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U61(
    .din0(ret_V_3_fu_135_p2),
    .din1(radii_leverArm_fu_125_p1),
    .dout(r_V_1_fu_149_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln870_reg_193 <= icmp_ln870_fu_69_p2;
        z_i_read_reg_187 <= z_i;
        z_i_read_reg_187_pp0_iter1_reg <= z_i_read_reg_187;
        z_j_read_reg_182 <= z_j;
        z_j_read_reg_182_pp0_iter1_reg <= z_j_read_reg_182;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        z_i_read_reg_187_pp0_iter10_reg <= z_i_read_reg_187_pp0_iter9_reg;
        z_i_read_reg_187_pp0_iter11_reg <= z_i_read_reg_187_pp0_iter10_reg;
        z_i_read_reg_187_pp0_iter12_reg <= z_i_read_reg_187_pp0_iter11_reg;
        z_i_read_reg_187_pp0_iter13_reg <= z_i_read_reg_187_pp0_iter12_reg;
        z_i_read_reg_187_pp0_iter14_reg <= z_i_read_reg_187_pp0_iter13_reg;
        z_i_read_reg_187_pp0_iter15_reg <= z_i_read_reg_187_pp0_iter14_reg;
        z_i_read_reg_187_pp0_iter16_reg <= z_i_read_reg_187_pp0_iter15_reg;
        z_i_read_reg_187_pp0_iter17_reg <= z_i_read_reg_187_pp0_iter16_reg;
        z_i_read_reg_187_pp0_iter18_reg <= z_i_read_reg_187_pp0_iter17_reg;
        z_i_read_reg_187_pp0_iter19_reg <= z_i_read_reg_187_pp0_iter18_reg;
        z_i_read_reg_187_pp0_iter20_reg <= z_i_read_reg_187_pp0_iter19_reg;
        z_i_read_reg_187_pp0_iter21_reg <= z_i_read_reg_187_pp0_iter20_reg;
        z_i_read_reg_187_pp0_iter22_reg <= z_i_read_reg_187_pp0_iter21_reg;
        z_i_read_reg_187_pp0_iter23_reg <= z_i_read_reg_187_pp0_iter22_reg;
        z_i_read_reg_187_pp0_iter24_reg <= z_i_read_reg_187_pp0_iter23_reg;
        z_i_read_reg_187_pp0_iter25_reg <= z_i_read_reg_187_pp0_iter24_reg;
        z_i_read_reg_187_pp0_iter26_reg <= z_i_read_reg_187_pp0_iter25_reg;
        z_i_read_reg_187_pp0_iter27_reg <= z_i_read_reg_187_pp0_iter26_reg;
        z_i_read_reg_187_pp0_iter28_reg <= z_i_read_reg_187_pp0_iter27_reg;
        z_i_read_reg_187_pp0_iter29_reg <= z_i_read_reg_187_pp0_iter28_reg;
        z_i_read_reg_187_pp0_iter2_reg <= z_i_read_reg_187_pp0_iter1_reg;
        z_i_read_reg_187_pp0_iter30_reg <= z_i_read_reg_187_pp0_iter29_reg;
        z_i_read_reg_187_pp0_iter31_reg <= z_i_read_reg_187_pp0_iter30_reg;
        z_i_read_reg_187_pp0_iter32_reg <= z_i_read_reg_187_pp0_iter31_reg;
        z_i_read_reg_187_pp0_iter33_reg <= z_i_read_reg_187_pp0_iter32_reg;
        z_i_read_reg_187_pp0_iter34_reg <= z_i_read_reg_187_pp0_iter33_reg;
        z_i_read_reg_187_pp0_iter35_reg <= z_i_read_reg_187_pp0_iter34_reg;
        z_i_read_reg_187_pp0_iter36_reg <= z_i_read_reg_187_pp0_iter35_reg;
        z_i_read_reg_187_pp0_iter37_reg <= z_i_read_reg_187_pp0_iter36_reg;
        z_i_read_reg_187_pp0_iter38_reg <= z_i_read_reg_187_pp0_iter37_reg;
        z_i_read_reg_187_pp0_iter39_reg <= z_i_read_reg_187_pp0_iter38_reg;
        z_i_read_reg_187_pp0_iter3_reg <= z_i_read_reg_187_pp0_iter2_reg;
        z_i_read_reg_187_pp0_iter40_reg <= z_i_read_reg_187_pp0_iter39_reg;
        z_i_read_reg_187_pp0_iter41_reg <= z_i_read_reg_187_pp0_iter40_reg;
        z_i_read_reg_187_pp0_iter42_reg <= z_i_read_reg_187_pp0_iter41_reg;
        z_i_read_reg_187_pp0_iter43_reg <= z_i_read_reg_187_pp0_iter42_reg;
        z_i_read_reg_187_pp0_iter44_reg <= z_i_read_reg_187_pp0_iter43_reg;
        z_i_read_reg_187_pp0_iter45_reg <= z_i_read_reg_187_pp0_iter44_reg;
        z_i_read_reg_187_pp0_iter46_reg <= z_i_read_reg_187_pp0_iter45_reg;
        z_i_read_reg_187_pp0_iter47_reg <= z_i_read_reg_187_pp0_iter46_reg;
        z_i_read_reg_187_pp0_iter48_reg <= z_i_read_reg_187_pp0_iter47_reg;
        z_i_read_reg_187_pp0_iter49_reg <= z_i_read_reg_187_pp0_iter48_reg;
        z_i_read_reg_187_pp0_iter4_reg <= z_i_read_reg_187_pp0_iter3_reg;
        z_i_read_reg_187_pp0_iter5_reg <= z_i_read_reg_187_pp0_iter4_reg;
        z_i_read_reg_187_pp0_iter6_reg <= z_i_read_reg_187_pp0_iter5_reg;
        z_i_read_reg_187_pp0_iter7_reg <= z_i_read_reg_187_pp0_iter6_reg;
        z_i_read_reg_187_pp0_iter8_reg <= z_i_read_reg_187_pp0_iter7_reg;
        z_i_read_reg_187_pp0_iter9_reg <= z_i_read_reg_187_pp0_iter8_reg;
        z_j_read_reg_182_pp0_iter10_reg <= z_j_read_reg_182_pp0_iter9_reg;
        z_j_read_reg_182_pp0_iter11_reg <= z_j_read_reg_182_pp0_iter10_reg;
        z_j_read_reg_182_pp0_iter12_reg <= z_j_read_reg_182_pp0_iter11_reg;
        z_j_read_reg_182_pp0_iter13_reg <= z_j_read_reg_182_pp0_iter12_reg;
        z_j_read_reg_182_pp0_iter14_reg <= z_j_read_reg_182_pp0_iter13_reg;
        z_j_read_reg_182_pp0_iter15_reg <= z_j_read_reg_182_pp0_iter14_reg;
        z_j_read_reg_182_pp0_iter16_reg <= z_j_read_reg_182_pp0_iter15_reg;
        z_j_read_reg_182_pp0_iter17_reg <= z_j_read_reg_182_pp0_iter16_reg;
        z_j_read_reg_182_pp0_iter18_reg <= z_j_read_reg_182_pp0_iter17_reg;
        z_j_read_reg_182_pp0_iter19_reg <= z_j_read_reg_182_pp0_iter18_reg;
        z_j_read_reg_182_pp0_iter20_reg <= z_j_read_reg_182_pp0_iter19_reg;
        z_j_read_reg_182_pp0_iter21_reg <= z_j_read_reg_182_pp0_iter20_reg;
        z_j_read_reg_182_pp0_iter22_reg <= z_j_read_reg_182_pp0_iter21_reg;
        z_j_read_reg_182_pp0_iter23_reg <= z_j_read_reg_182_pp0_iter22_reg;
        z_j_read_reg_182_pp0_iter24_reg <= z_j_read_reg_182_pp0_iter23_reg;
        z_j_read_reg_182_pp0_iter25_reg <= z_j_read_reg_182_pp0_iter24_reg;
        z_j_read_reg_182_pp0_iter26_reg <= z_j_read_reg_182_pp0_iter25_reg;
        z_j_read_reg_182_pp0_iter27_reg <= z_j_read_reg_182_pp0_iter26_reg;
        z_j_read_reg_182_pp0_iter28_reg <= z_j_read_reg_182_pp0_iter27_reg;
        z_j_read_reg_182_pp0_iter29_reg <= z_j_read_reg_182_pp0_iter28_reg;
        z_j_read_reg_182_pp0_iter2_reg <= z_j_read_reg_182_pp0_iter1_reg;
        z_j_read_reg_182_pp0_iter30_reg <= z_j_read_reg_182_pp0_iter29_reg;
        z_j_read_reg_182_pp0_iter31_reg <= z_j_read_reg_182_pp0_iter30_reg;
        z_j_read_reg_182_pp0_iter32_reg <= z_j_read_reg_182_pp0_iter31_reg;
        z_j_read_reg_182_pp0_iter33_reg <= z_j_read_reg_182_pp0_iter32_reg;
        z_j_read_reg_182_pp0_iter34_reg <= z_j_read_reg_182_pp0_iter33_reg;
        z_j_read_reg_182_pp0_iter35_reg <= z_j_read_reg_182_pp0_iter34_reg;
        z_j_read_reg_182_pp0_iter36_reg <= z_j_read_reg_182_pp0_iter35_reg;
        z_j_read_reg_182_pp0_iter37_reg <= z_j_read_reg_182_pp0_iter36_reg;
        z_j_read_reg_182_pp0_iter38_reg <= z_j_read_reg_182_pp0_iter37_reg;
        z_j_read_reg_182_pp0_iter39_reg <= z_j_read_reg_182_pp0_iter38_reg;
        z_j_read_reg_182_pp0_iter3_reg <= z_j_read_reg_182_pp0_iter2_reg;
        z_j_read_reg_182_pp0_iter40_reg <= z_j_read_reg_182_pp0_iter39_reg;
        z_j_read_reg_182_pp0_iter41_reg <= z_j_read_reg_182_pp0_iter40_reg;
        z_j_read_reg_182_pp0_iter42_reg <= z_j_read_reg_182_pp0_iter41_reg;
        z_j_read_reg_182_pp0_iter43_reg <= z_j_read_reg_182_pp0_iter42_reg;
        z_j_read_reg_182_pp0_iter44_reg <= z_j_read_reg_182_pp0_iter43_reg;
        z_j_read_reg_182_pp0_iter45_reg <= z_j_read_reg_182_pp0_iter44_reg;
        z_j_read_reg_182_pp0_iter46_reg <= z_j_read_reg_182_pp0_iter45_reg;
        z_j_read_reg_182_pp0_iter47_reg <= z_j_read_reg_182_pp0_iter46_reg;
        z_j_read_reg_182_pp0_iter48_reg <= z_j_read_reg_182_pp0_iter47_reg;
        z_j_read_reg_182_pp0_iter49_reg <= z_j_read_reg_182_pp0_iter48_reg;
        z_j_read_reg_182_pp0_iter4_reg <= z_j_read_reg_182_pp0_iter3_reg;
        z_j_read_reg_182_pp0_iter5_reg <= z_j_read_reg_182_pp0_iter4_reg;
        z_j_read_reg_182_pp0_iter6_reg <= z_j_read_reg_182_pp0_iter5_reg;
        z_j_read_reg_182_pp0_iter7_reg <= z_j_read_reg_182_pp0_iter6_reg;
        z_j_read_reg_182_pp0_iter8_reg <= z_j_read_reg_182_pp0_iter7_reg;
        z_j_read_reg_182_pp0_iter9_reg <= z_j_read_reg_182_pp0_iter8_reg;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter50 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0_0to49 = 1'b1;
    end else begin
        ap_idle_pp0_0to49 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to49 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        get_radiiradii_ce0 = 1'b1;
    end else begin
        get_radiiradii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_119_ce = 1'b1;
    end else begin
        grp_fu_119_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_75_p2 = ($signed(j) + $signed(3'd7));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = {{ret_V_2_fu_166_p2[51:20]}};

assign get_radiiradii_address0 = zext_ln98_fu_81_p1;

assign icmp_ln870_fu_69_p2 = ((j == 3'd0) ? 1'b1 : 1'b0);

assign lhs_1_fu_155_p3 = {{z_i_read_reg_187_pp0_iter49_reg}, {20'd0}};

assign radii_leverArm_fu_125_p1 = grp_fu_119_p2[31:0];

assign radius_j_V_2_fu_98_p3 = ((icmp_ln870_reg_193[0:0] == 1'b1) ? 25'd0 : radius_j_V_fu_90_p3);

assign radius_j_V_fu_90_p3 = {{trunc_ln731_fu_86_p1}, {20'd0}};

assign ret_V_2_fu_166_p2 = ($signed(r_V_1_fu_149_p2) + $signed(sext_ln728_fu_162_p1));

assign ret_V_3_fu_135_p2 = ($signed(sext_ln703_fu_129_p1) - $signed(sext_ln703_1_fu_132_p1));

assign ret_V_fu_109_p2 = ($signed(zext_ln1193_fu_105_p1) + $signed(26'd61865984));

assign sext_ln703_1_fu_132_p1 = z_i_read_reg_187_pp0_iter49_reg;

assign sext_ln703_fu_129_p1 = $signed(z_j_read_reg_182_pp0_iter49_reg);

assign sext_ln728_fu_162_p1 = $signed(lhs_1_fu_155_p3);

assign trunc_ln731_fu_86_p1 = get_radiiradii_q0[4:0];

assign zext_ln1193_fu_105_p1 = radius_j_V_2_fu_98_p3;

assign zext_ln98_fu_81_p1 = add_ln31_fu_75_p2;

endmodule //system_top_straightLineProjectorFromLayerIJtoK
