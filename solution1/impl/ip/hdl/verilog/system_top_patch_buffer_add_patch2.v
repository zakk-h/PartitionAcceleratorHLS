// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_patch_buffer_add_patch2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        new_patch_address0,
        new_patch_ce0,
        new_patch_q0,
        new_patch_address1,
        new_patch_ce1,
        new_patch_q1,
        patch_buffer_address0,
        patch_buffer_ce0,
        patch_buffer_we0,
        patch_buffer_d0,
        patch_buffer_address1,
        patch_buffer_ce1,
        patch_buffer_we1,
        patch_buffer_d1,
        latest_patch_index_constprop_i,
        latest_patch_index_constprop_o,
        latest_patch_index_constprop_o_ap_vld,
        num_patches_constprop_i,
        num_patches_constprop_o,
        num_patches_constprop_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] new_patch_address0;
output   new_patch_ce0;
input  [95:0] new_patch_q0;
output  [6:0] new_patch_address1;
output   new_patch_ce1;
input  [95:0] new_patch_q1;
output  [7:0] patch_buffer_address0;
output   patch_buffer_ce0;
output   patch_buffer_we0;
output  [31:0] patch_buffer_d0;
output  [7:0] patch_buffer_address1;
output   patch_buffer_ce1;
output   patch_buffer_we1;
output  [31:0] patch_buffer_d1;
input  [1:0] latest_patch_index_constprop_i;
output  [1:0] latest_patch_index_constprop_o;
output   latest_patch_index_constprop_o_ap_vld;
input  [31:0] num_patches_constprop_i;
output  [31:0] num_patches_constprop_o;
output   num_patches_constprop_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] new_patch_address0;
reg new_patch_ce0;
reg[6:0] new_patch_address1;
reg new_patch_ce1;
reg[7:0] patch_buffer_address0;
reg patch_buffer_ce0;
reg patch_buffer_we0;
reg[31:0] patch_buffer_d0;
reg[7:0] patch_buffer_address1;
reg patch_buffer_ce1;
reg patch_buffer_we1;
reg[31:0] patch_buffer_d1;
reg[1:0] latest_patch_index_constprop_o;
reg latest_patch_index_constprop_o_ap_vld;
reg[31:0] num_patches_constprop_o;
reg num_patches_constprop_o_ap_vld;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [7:0] add_ln25_fu_1804_p2;
reg   [7:0] add_ln25_reg_3026;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire   [63:0] zext_ln25_1_fu_1810_p1;
wire   [63:0] zext_ln25_2_fu_1821_p1;
wire   [63:0] zext_ln25_3_fu_1841_p1;
wire   [63:0] zext_ln25_4_fu_1851_p1;
wire   [63:0] zext_ln25_5_fu_1871_p1;
wire   [63:0] zext_ln25_6_fu_1881_p1;
wire   [63:0] zext_ln25_7_fu_1901_p1;
wire   [63:0] zext_ln25_8_fu_1911_p1;
wire   [63:0] zext_ln25_9_fu_1931_p1;
wire   [63:0] zext_ln25_10_fu_1941_p1;
wire   [63:0] zext_ln25_11_fu_1961_p1;
wire   [63:0] zext_ln25_12_fu_1971_p1;
wire   [63:0] zext_ln25_13_fu_1991_p1;
wire   [63:0] zext_ln25_14_fu_2001_p1;
wire   [63:0] zext_ln25_15_fu_2021_p1;
wire   [63:0] zext_ln25_16_fu_2031_p1;
wire   [63:0] zext_ln25_17_fu_2051_p1;
wire   [63:0] zext_ln25_18_fu_2061_p1;
wire   [63:0] zext_ln25_19_fu_2081_p1;
wire   [63:0] zext_ln25_20_fu_2091_p1;
wire   [63:0] zext_ln25_21_fu_2111_p1;
wire   [63:0] zext_ln25_22_fu_2121_p1;
wire   [63:0] zext_ln25_23_fu_2141_p1;
wire   [63:0] zext_ln25_24_fu_2151_p1;
wire   [63:0] zext_ln25_25_fu_2171_p1;
wire   [63:0] zext_ln25_26_fu_2181_p1;
wire   [63:0] zext_ln25_27_fu_2201_p1;
wire   [63:0] zext_ln25_28_fu_2211_p1;
wire   [63:0] zext_ln25_29_fu_2231_p1;
wire   [63:0] zext_ln25_30_fu_2241_p1;
wire   [63:0] zext_ln25_31_fu_2261_p1;
wire   [63:0] zext_ln25_32_fu_2271_p1;
wire   [63:0] zext_ln25_33_fu_2291_p1;
wire   [63:0] zext_ln25_34_fu_2301_p1;
wire   [63:0] zext_ln25_35_fu_2321_p1;
wire   [63:0] zext_ln25_36_fu_2331_p1;
wire   [63:0] zext_ln25_37_fu_2351_p1;
wire   [63:0] zext_ln25_38_fu_2361_p1;
wire   [63:0] zext_ln25_39_fu_2381_p1;
wire   [63:0] zext_ln25_40_fu_2391_p1;
wire   [63:0] zext_ln25_41_fu_2411_p1;
wire   [63:0] zext_ln25_42_fu_2421_p1;
wire   [63:0] zext_ln25_43_fu_2441_p1;
wire   [63:0] zext_ln25_44_fu_2451_p1;
wire   [63:0] zext_ln25_45_fu_2471_p1;
wire   [63:0] zext_ln25_46_fu_2481_p1;
wire   [63:0] zext_ln25_47_fu_2501_p1;
wire   [63:0] zext_ln25_48_fu_2511_p1;
wire   [63:0] zext_ln25_49_fu_2531_p1;
wire   [63:0] zext_ln25_50_fu_2541_p1;
wire   [63:0] zext_ln25_51_fu_2561_p1;
wire   [63:0] zext_ln25_52_fu_2571_p1;
wire   [63:0] zext_ln25_53_fu_2591_p1;
wire   [63:0] zext_ln25_54_fu_2601_p1;
wire   [63:0] zext_ln25_55_fu_2621_p1;
wire   [63:0] zext_ln25_56_fu_2631_p1;
wire   [63:0] zext_ln25_57_fu_2651_p1;
wire   [63:0] zext_ln25_58_fu_2661_p1;
wire   [63:0] zext_ln25_59_fu_2681_p1;
wire   [63:0] zext_ln25_60_fu_2691_p1;
wire   [63:0] zext_ln25_61_fu_2711_p1;
wire   [63:0] zext_ln25_62_fu_2721_p1;
wire   [63:0] zext_ln25_63_fu_2741_p1;
wire   [63:0] zext_ln25_64_fu_2751_p1;
wire   [63:0] zext_ln25_65_fu_2771_p1;
wire   [63:0] zext_ln25_66_fu_2781_p1;
wire   [63:0] zext_ln25_67_fu_2801_p1;
wire   [63:0] zext_ln25_68_fu_2811_p1;
wire   [63:0] zext_ln25_69_fu_2831_p1;
wire   [63:0] zext_ln25_70_fu_2841_p1;
wire   [63:0] zext_ln25_71_fu_2861_p1;
wire   [63:0] zext_ln25_72_fu_2871_p1;
wire   [63:0] zext_ln25_73_fu_2891_p1;
wire   [63:0] zext_ln25_74_fu_2901_p1;
wire   [63:0] zext_ln25_75_fu_2921_p1;
wire   [63:0] zext_ln25_76_fu_2931_p1;
wire   [63:0] zext_ln25_77_fu_2951_p1;
wire   [63:0] zext_ln25_78_fu_2961_p1;
wire   [63:0] zext_ln25_79_fu_2981_p1;
wire    ap_CS_fsm_state41;
wire   [63:0] zext_ln25_80_fu_2991_p1;
wire   [1:0] trunc_ln15_fu_1774_p1;
wire   [31:0] add_ln16_fu_1724_p2;
wire   [31:0] empty_fu_1826_p1;
wire   [31:0] empty_63_fu_1831_p1;
wire   [31:0] empty_64_fu_1856_p1;
wire   [31:0] empty_65_fu_1861_p1;
wire   [31:0] empty_66_fu_1886_p1;
wire   [31:0] empty_67_fu_1891_p1;
wire   [31:0] empty_68_fu_1916_p1;
wire   [31:0] empty_69_fu_1921_p1;
wire   [31:0] empty_70_fu_1946_p1;
wire   [31:0] empty_71_fu_1951_p1;
wire   [31:0] empty_72_fu_1976_p1;
wire   [31:0] empty_73_fu_1981_p1;
wire   [31:0] empty_74_fu_2006_p1;
wire   [31:0] empty_75_fu_2011_p1;
wire   [31:0] empty_76_fu_2036_p1;
wire   [31:0] empty_77_fu_2041_p1;
wire   [31:0] empty_78_fu_2066_p1;
wire   [31:0] empty_79_fu_2071_p1;
wire   [31:0] empty_80_fu_2096_p1;
wire   [31:0] empty_81_fu_2101_p1;
wire   [31:0] empty_82_fu_2126_p1;
wire   [31:0] empty_83_fu_2131_p1;
wire   [31:0] empty_84_fu_2156_p1;
wire   [31:0] empty_85_fu_2161_p1;
wire   [31:0] empty_86_fu_2186_p1;
wire   [31:0] empty_87_fu_2191_p1;
wire   [31:0] empty_88_fu_2216_p1;
wire   [31:0] empty_89_fu_2221_p1;
wire   [31:0] empty_90_fu_2246_p1;
wire   [31:0] empty_91_fu_2251_p1;
wire   [31:0] empty_92_fu_2276_p1;
wire   [31:0] empty_93_fu_2281_p1;
wire   [31:0] empty_94_fu_2306_p1;
wire   [31:0] empty_95_fu_2311_p1;
wire   [31:0] empty_96_fu_2336_p1;
wire   [31:0] empty_97_fu_2341_p1;
wire   [31:0] empty_98_fu_2366_p1;
wire   [31:0] empty_99_fu_2371_p1;
wire   [31:0] empty_100_fu_2396_p1;
wire   [31:0] empty_101_fu_2401_p1;
wire   [31:0] empty_102_fu_2426_p1;
wire   [31:0] empty_103_fu_2431_p1;
wire   [31:0] empty_104_fu_2456_p1;
wire   [31:0] empty_105_fu_2461_p1;
wire   [31:0] empty_106_fu_2486_p1;
wire   [31:0] empty_107_fu_2491_p1;
wire   [31:0] empty_108_fu_2516_p1;
wire   [31:0] empty_109_fu_2521_p1;
wire   [31:0] empty_110_fu_2546_p1;
wire   [31:0] empty_111_fu_2551_p1;
wire   [31:0] empty_112_fu_2576_p1;
wire   [31:0] empty_113_fu_2581_p1;
wire   [31:0] empty_114_fu_2606_p1;
wire   [31:0] empty_115_fu_2611_p1;
wire   [31:0] empty_116_fu_2636_p1;
wire   [31:0] empty_117_fu_2641_p1;
wire   [31:0] empty_118_fu_2666_p1;
wire   [31:0] empty_119_fu_2671_p1;
wire   [31:0] empty_120_fu_2696_p1;
wire   [31:0] empty_121_fu_2701_p1;
wire   [31:0] empty_122_fu_2726_p1;
wire   [31:0] empty_123_fu_2731_p1;
wire   [31:0] empty_124_fu_2756_p1;
wire   [31:0] empty_125_fu_2761_p1;
wire   [31:0] empty_126_fu_2786_p1;
wire   [31:0] empty_127_fu_2791_p1;
wire   [31:0] empty_128_fu_2816_p1;
wire   [31:0] empty_129_fu_2821_p1;
wire   [31:0] empty_130_fu_2846_p1;
wire   [31:0] empty_131_fu_2851_p1;
wire   [31:0] empty_132_fu_2876_p1;
wire   [31:0] empty_133_fu_2881_p1;
wire   [31:0] empty_134_fu_2906_p1;
wire   [31:0] empty_135_fu_2911_p1;
wire   [31:0] empty_136_fu_2936_p1;
wire   [31:0] empty_137_fu_2941_p1;
wire   [31:0] empty_138_fu_2966_p1;
wire   [31:0] empty_139_fu_2971_p1;
wire   [31:0] empty_140_fu_2996_p1;
wire   [31:0] empty_141_fu_3001_p1;
wire   [2:0] zext_ln15_fu_1740_p1;
wire   [2:0] add_ln15_fu_1744_p2;
wire   [1:0] xor_ln15_fu_1756_p2;
wire   [0:0] icmp_ln15_fu_1750_p2;
wire  signed [2:0] sext_ln15_fu_1762_p1;
wire   [2:0] select_ln15_fu_1766_p3;
wire   [6:0] tmp_6_fu_1792_p3;
wire   [7:0] tmp_cast_fu_1784_p3;
wire   [7:0] zext_ln25_fu_1800_p1;
wire   [7:0] or_ln25_fu_1815_p2;
wire   [7:0] or_ln25_1_fu_1836_p2;
wire   [7:0] or_ln25_2_fu_1846_p2;
wire   [7:0] or_ln25_3_fu_1866_p2;
wire   [7:0] or_ln25_4_fu_1876_p2;
wire   [7:0] or_ln25_5_fu_1896_p2;
wire   [7:0] or_ln25_6_fu_1906_p2;
wire   [7:0] or_ln25_7_fu_1926_p2;
wire   [7:0] or_ln25_8_fu_1936_p2;
wire   [7:0] or_ln25_9_fu_1956_p2;
wire   [7:0] or_ln25_10_fu_1966_p2;
wire   [7:0] or_ln25_11_fu_1986_p2;
wire   [7:0] or_ln25_12_fu_1996_p2;
wire   [7:0] or_ln25_13_fu_2016_p2;
wire   [7:0] or_ln25_14_fu_2026_p2;
wire   [7:0] add_ln25_1_fu_2046_p2;
wire   [7:0] add_ln25_2_fu_2056_p2;
wire   [7:0] add_ln25_3_fu_2076_p2;
wire   [7:0] add_ln25_4_fu_2086_p2;
wire   [7:0] add_ln25_5_fu_2106_p2;
wire   [7:0] add_ln25_6_fu_2116_p2;
wire   [7:0] add_ln25_7_fu_2136_p2;
wire   [7:0] add_ln25_8_fu_2146_p2;
wire   [7:0] add_ln25_9_fu_2166_p2;
wire   [7:0] add_ln25_10_fu_2176_p2;
wire   [7:0] add_ln25_11_fu_2196_p2;
wire   [7:0] add_ln25_12_fu_2206_p2;
wire   [7:0] add_ln25_13_fu_2226_p2;
wire   [7:0] add_ln25_14_fu_2236_p2;
wire   [7:0] add_ln25_15_fu_2256_p2;
wire   [7:0] add_ln25_16_fu_2266_p2;
wire   [7:0] add_ln25_17_fu_2286_p2;
wire   [7:0] add_ln25_18_fu_2296_p2;
wire   [7:0] add_ln25_19_fu_2316_p2;
wire   [7:0] add_ln25_20_fu_2326_p2;
wire   [7:0] add_ln25_21_fu_2346_p2;
wire   [7:0] add_ln25_22_fu_2356_p2;
wire   [7:0] add_ln25_23_fu_2376_p2;
wire   [7:0] add_ln25_24_fu_2386_p2;
wire   [7:0] add_ln25_25_fu_2406_p2;
wire   [7:0] add_ln25_26_fu_2416_p2;
wire   [7:0] add_ln25_27_fu_2436_p2;
wire   [7:0] add_ln25_28_fu_2446_p2;
wire   [7:0] add_ln25_29_fu_2466_p2;
wire   [7:0] add_ln25_30_fu_2476_p2;
wire   [7:0] add_ln25_31_fu_2496_p2;
wire   [7:0] add_ln25_32_fu_2506_p2;
wire   [7:0] add_ln25_33_fu_2526_p2;
wire   [7:0] add_ln25_34_fu_2536_p2;
wire   [7:0] add_ln25_35_fu_2556_p2;
wire   [7:0] add_ln25_36_fu_2566_p2;
wire   [7:0] add_ln25_37_fu_2586_p2;
wire   [7:0] add_ln25_38_fu_2596_p2;
wire   [7:0] add_ln25_39_fu_2616_p2;
wire   [7:0] add_ln25_40_fu_2626_p2;
wire   [7:0] add_ln25_41_fu_2646_p2;
wire   [7:0] add_ln25_42_fu_2656_p2;
wire   [7:0] add_ln25_43_fu_2676_p2;
wire   [7:0] add_ln25_44_fu_2686_p2;
wire   [7:0] add_ln25_45_fu_2706_p2;
wire   [7:0] add_ln25_46_fu_2716_p2;
wire   [7:0] add_ln25_47_fu_2736_p2;
wire   [7:0] add_ln25_48_fu_2746_p2;
wire   [7:0] add_ln25_49_fu_2766_p2;
wire   [7:0] add_ln25_50_fu_2776_p2;
wire   [7:0] add_ln25_51_fu_2796_p2;
wire   [7:0] add_ln25_52_fu_2806_p2;
wire   [7:0] add_ln25_53_fu_2826_p2;
wire   [7:0] add_ln25_54_fu_2836_p2;
wire   [7:0] add_ln25_55_fu_2856_p2;
wire   [7:0] add_ln25_56_fu_2866_p2;
wire   [7:0] add_ln25_57_fu_2886_p2;
wire   [7:0] add_ln25_58_fu_2896_p2;
wire   [7:0] add_ln25_59_fu_2916_p2;
wire   [7:0] add_ln25_60_fu_2926_p2;
wire   [7:0] add_ln25_61_fu_2946_p2;
wire   [7:0] add_ln25_62_fu_2956_p2;
wire   [7:0] add_ln25_63_fu_2976_p2;
wire   [7:0] add_ln25_64_fu_2986_p2;
reg   [40:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln25_reg_3026[7 : 4] <= add_ln25_fu_1804_p2[7 : 4];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        latest_patch_index_constprop_o = trunc_ln15_fu_1774_p1;
    end else begin
        latest_patch_index_constprop_o = latest_patch_index_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        latest_patch_index_constprop_o_ap_vld = 1'b1;
    end else begin
        latest_patch_index_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        new_patch_address0 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        new_patch_address0 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        new_patch_address0 = 64'd75;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        new_patch_address0 = 64'd73;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        new_patch_address0 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        new_patch_address0 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        new_patch_address0 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        new_patch_address0 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        new_patch_address0 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        new_patch_address0 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        new_patch_address0 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        new_patch_address0 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        new_patch_address0 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        new_patch_address0 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        new_patch_address0 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        new_patch_address0 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        new_patch_address0 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        new_patch_address0 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        new_patch_address0 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        new_patch_address0 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        new_patch_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        new_patch_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        new_patch_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        new_patch_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        new_patch_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        new_patch_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        new_patch_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        new_patch_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        new_patch_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        new_patch_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        new_patch_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        new_patch_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        new_patch_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        new_patch_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        new_patch_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        new_patch_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        new_patch_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        new_patch_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        new_patch_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        new_patch_address0 = 64'd1;
    end else begin
        new_patch_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        new_patch_address1 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        new_patch_address1 = 64'd76;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        new_patch_address1 = 64'd74;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        new_patch_address1 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        new_patch_address1 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        new_patch_address1 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        new_patch_address1 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        new_patch_address1 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        new_patch_address1 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        new_patch_address1 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        new_patch_address1 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        new_patch_address1 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        new_patch_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        new_patch_address1 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        new_patch_address1 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        new_patch_address1 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        new_patch_address1 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        new_patch_address1 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        new_patch_address1 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        new_patch_address1 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        new_patch_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        new_patch_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        new_patch_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        new_patch_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        new_patch_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        new_patch_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        new_patch_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        new_patch_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        new_patch_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        new_patch_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        new_patch_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        new_patch_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        new_patch_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        new_patch_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        new_patch_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        new_patch_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        new_patch_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        new_patch_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        new_patch_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        new_patch_address1 = 64'd0;
    end else begin
        new_patch_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        new_patch_ce0 = 1'b1;
    end else begin
        new_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        new_patch_ce1 = 1'b1;
    end else begin
        new_patch_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        num_patches_constprop_o = add_ln16_fu_1724_p2;
    end else begin
        num_patches_constprop_o = num_patches_constprop_i;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        num_patches_constprop_o_ap_vld = 1'b1;
    end else begin
        num_patches_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_address0 = zext_ln25_80_fu_2991_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_address0 = zext_ln25_78_fu_2961_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_address0 = zext_ln25_76_fu_2931_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_address0 = zext_ln25_74_fu_2901_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_address0 = zext_ln25_72_fu_2871_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_address0 = zext_ln25_70_fu_2841_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        patch_buffer_address0 = zext_ln25_68_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        patch_buffer_address0 = zext_ln25_66_fu_2781_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        patch_buffer_address0 = zext_ln25_64_fu_2751_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        patch_buffer_address0 = zext_ln25_62_fu_2721_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        patch_buffer_address0 = zext_ln25_60_fu_2691_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        patch_buffer_address0 = zext_ln25_58_fu_2661_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        patch_buffer_address0 = zext_ln25_56_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        patch_buffer_address0 = zext_ln25_54_fu_2601_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        patch_buffer_address0 = zext_ln25_52_fu_2571_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        patch_buffer_address0 = zext_ln25_50_fu_2541_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        patch_buffer_address0 = zext_ln25_48_fu_2511_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        patch_buffer_address0 = zext_ln25_46_fu_2481_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        patch_buffer_address0 = zext_ln25_44_fu_2451_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        patch_buffer_address0 = zext_ln25_42_fu_2421_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        patch_buffer_address0 = zext_ln25_40_fu_2391_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        patch_buffer_address0 = zext_ln25_38_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        patch_buffer_address0 = zext_ln25_36_fu_2331_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        patch_buffer_address0 = zext_ln25_34_fu_2301_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        patch_buffer_address0 = zext_ln25_32_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_address0 = zext_ln25_30_fu_2241_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        patch_buffer_address0 = zext_ln25_28_fu_2211_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        patch_buffer_address0 = zext_ln25_26_fu_2181_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        patch_buffer_address0 = zext_ln25_24_fu_2151_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_address0 = zext_ln25_22_fu_2121_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        patch_buffer_address0 = zext_ln25_20_fu_2091_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        patch_buffer_address0 = zext_ln25_18_fu_2061_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        patch_buffer_address0 = zext_ln25_16_fu_2031_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        patch_buffer_address0 = zext_ln25_14_fu_2001_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_buffer_address0 = zext_ln25_12_fu_1971_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_buffer_address0 = zext_ln25_10_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_buffer_address0 = zext_ln25_8_fu_1911_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_buffer_address0 = zext_ln25_6_fu_1881_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_buffer_address0 = zext_ln25_4_fu_1851_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_buffer_address0 = zext_ln25_2_fu_1821_p1;
    end else begin
        patch_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_address1 = zext_ln25_79_fu_2981_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_address1 = zext_ln25_77_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_address1 = zext_ln25_75_fu_2921_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_address1 = zext_ln25_73_fu_2891_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_address1 = zext_ln25_71_fu_2861_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_address1 = zext_ln25_69_fu_2831_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        patch_buffer_address1 = zext_ln25_67_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        patch_buffer_address1 = zext_ln25_65_fu_2771_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        patch_buffer_address1 = zext_ln25_63_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        patch_buffer_address1 = zext_ln25_61_fu_2711_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        patch_buffer_address1 = zext_ln25_59_fu_2681_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        patch_buffer_address1 = zext_ln25_57_fu_2651_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        patch_buffer_address1 = zext_ln25_55_fu_2621_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        patch_buffer_address1 = zext_ln25_53_fu_2591_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        patch_buffer_address1 = zext_ln25_51_fu_2561_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        patch_buffer_address1 = zext_ln25_49_fu_2531_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        patch_buffer_address1 = zext_ln25_47_fu_2501_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        patch_buffer_address1 = zext_ln25_45_fu_2471_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        patch_buffer_address1 = zext_ln25_43_fu_2441_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        patch_buffer_address1 = zext_ln25_41_fu_2411_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        patch_buffer_address1 = zext_ln25_39_fu_2381_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        patch_buffer_address1 = zext_ln25_37_fu_2351_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        patch_buffer_address1 = zext_ln25_35_fu_2321_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        patch_buffer_address1 = zext_ln25_33_fu_2291_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        patch_buffer_address1 = zext_ln25_31_fu_2261_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_address1 = zext_ln25_29_fu_2231_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        patch_buffer_address1 = zext_ln25_27_fu_2201_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        patch_buffer_address1 = zext_ln25_25_fu_2171_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        patch_buffer_address1 = zext_ln25_23_fu_2141_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_address1 = zext_ln25_21_fu_2111_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        patch_buffer_address1 = zext_ln25_19_fu_2081_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        patch_buffer_address1 = zext_ln25_17_fu_2051_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        patch_buffer_address1 = zext_ln25_15_fu_2021_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        patch_buffer_address1 = zext_ln25_13_fu_1991_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_buffer_address1 = zext_ln25_11_fu_1961_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_buffer_address1 = zext_ln25_9_fu_1931_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_buffer_address1 = zext_ln25_7_fu_1901_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_buffer_address1 = zext_ln25_5_fu_1871_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_buffer_address1 = zext_ln25_3_fu_1841_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_buffer_address1 = zext_ln25_1_fu_1810_p1;
    end else begin
        patch_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        patch_buffer_ce0 = 1'b1;
    end else begin
        patch_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        patch_buffer_ce1 = 1'b1;
    end else begin
        patch_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_d0 = empty_141_fu_3001_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_d0 = empty_139_fu_2971_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_d0 = empty_137_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_d0 = empty_135_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_d0 = empty_133_fu_2881_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_d0 = empty_131_fu_2851_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        patch_buffer_d0 = empty_129_fu_2821_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        patch_buffer_d0 = empty_127_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        patch_buffer_d0 = empty_125_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        patch_buffer_d0 = empty_123_fu_2731_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        patch_buffer_d0 = empty_121_fu_2701_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        patch_buffer_d0 = empty_119_fu_2671_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        patch_buffer_d0 = empty_117_fu_2641_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        patch_buffer_d0 = empty_115_fu_2611_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        patch_buffer_d0 = empty_113_fu_2581_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        patch_buffer_d0 = empty_111_fu_2551_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        patch_buffer_d0 = empty_109_fu_2521_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        patch_buffer_d0 = empty_107_fu_2491_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        patch_buffer_d0 = empty_105_fu_2461_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        patch_buffer_d0 = empty_103_fu_2431_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        patch_buffer_d0 = empty_101_fu_2401_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        patch_buffer_d0 = empty_99_fu_2371_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        patch_buffer_d0 = empty_97_fu_2341_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        patch_buffer_d0 = empty_95_fu_2311_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        patch_buffer_d0 = empty_93_fu_2281_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_d0 = empty_91_fu_2251_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        patch_buffer_d0 = empty_89_fu_2221_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        patch_buffer_d0 = empty_87_fu_2191_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        patch_buffer_d0 = empty_85_fu_2161_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_d0 = empty_83_fu_2131_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        patch_buffer_d0 = empty_81_fu_2101_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        patch_buffer_d0 = empty_79_fu_2071_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        patch_buffer_d0 = empty_77_fu_2041_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        patch_buffer_d0 = empty_75_fu_2011_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_buffer_d0 = empty_73_fu_1981_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_buffer_d0 = empty_71_fu_1951_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_buffer_d0 = empty_69_fu_1921_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_buffer_d0 = empty_67_fu_1891_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_buffer_d0 = empty_65_fu_1861_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_buffer_d0 = empty_63_fu_1831_p1;
    end else begin
        patch_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_d1 = empty_140_fu_2996_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_d1 = empty_138_fu_2966_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_d1 = empty_136_fu_2936_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_d1 = empty_134_fu_2906_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_d1 = empty_132_fu_2876_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_d1 = empty_130_fu_2846_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        patch_buffer_d1 = empty_128_fu_2816_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        patch_buffer_d1 = empty_126_fu_2786_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        patch_buffer_d1 = empty_124_fu_2756_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        patch_buffer_d1 = empty_122_fu_2726_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        patch_buffer_d1 = empty_120_fu_2696_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        patch_buffer_d1 = empty_118_fu_2666_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        patch_buffer_d1 = empty_116_fu_2636_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        patch_buffer_d1 = empty_114_fu_2606_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        patch_buffer_d1 = empty_112_fu_2576_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        patch_buffer_d1 = empty_110_fu_2546_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        patch_buffer_d1 = empty_108_fu_2516_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        patch_buffer_d1 = empty_106_fu_2486_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        patch_buffer_d1 = empty_104_fu_2456_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        patch_buffer_d1 = empty_102_fu_2426_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        patch_buffer_d1 = empty_100_fu_2396_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        patch_buffer_d1 = empty_98_fu_2366_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        patch_buffer_d1 = empty_96_fu_2336_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        patch_buffer_d1 = empty_94_fu_2306_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        patch_buffer_d1 = empty_92_fu_2276_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_d1 = empty_90_fu_2246_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        patch_buffer_d1 = empty_88_fu_2216_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        patch_buffer_d1 = empty_86_fu_2186_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        patch_buffer_d1 = empty_84_fu_2156_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_d1 = empty_82_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        patch_buffer_d1 = empty_80_fu_2096_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        patch_buffer_d1 = empty_78_fu_2066_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        patch_buffer_d1 = empty_76_fu_2036_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        patch_buffer_d1 = empty_74_fu_2006_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_buffer_d1 = empty_72_fu_1976_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_buffer_d1 = empty_70_fu_1946_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_buffer_d1 = empty_68_fu_1916_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_buffer_d1 = empty_66_fu_1886_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_buffer_d1 = empty_64_fu_1856_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_buffer_d1 = empty_fu_1826_p1;
    end else begin
        patch_buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        patch_buffer_we0 = 1'b1;
    end else begin
        patch_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        patch_buffer_we1 = 1'b1;
    end else begin
        patch_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_1744_p2 = (zext_ln15_fu_1740_p1 + 3'd1);

assign add_ln16_fu_1724_p2 = (num_patches_constprop_i + 32'd1);

assign add_ln25_10_fu_2176_p2 = (add_ln25_reg_3026 + 8'd25);

assign add_ln25_11_fu_2196_p2 = (add_ln25_reg_3026 + 8'd26);

assign add_ln25_12_fu_2206_p2 = (add_ln25_reg_3026 + 8'd27);

assign add_ln25_13_fu_2226_p2 = (add_ln25_reg_3026 + 8'd28);

assign add_ln25_14_fu_2236_p2 = (add_ln25_reg_3026 + 8'd29);

assign add_ln25_15_fu_2256_p2 = (add_ln25_reg_3026 + 8'd30);

assign add_ln25_16_fu_2266_p2 = (add_ln25_reg_3026 + 8'd31);

assign add_ln25_17_fu_2286_p2 = (add_ln25_reg_3026 + 8'd32);

assign add_ln25_18_fu_2296_p2 = (add_ln25_reg_3026 + 8'd33);

assign add_ln25_19_fu_2316_p2 = (add_ln25_reg_3026 + 8'd34);

assign add_ln25_1_fu_2046_p2 = (add_ln25_reg_3026 + 8'd16);

assign add_ln25_20_fu_2326_p2 = (add_ln25_reg_3026 + 8'd35);

assign add_ln25_21_fu_2346_p2 = (add_ln25_reg_3026 + 8'd36);

assign add_ln25_22_fu_2356_p2 = (add_ln25_reg_3026 + 8'd37);

assign add_ln25_23_fu_2376_p2 = (add_ln25_reg_3026 + 8'd38);

assign add_ln25_24_fu_2386_p2 = (add_ln25_reg_3026 + 8'd39);

assign add_ln25_25_fu_2406_p2 = (add_ln25_reg_3026 + 8'd40);

assign add_ln25_26_fu_2416_p2 = (add_ln25_reg_3026 + 8'd41);

assign add_ln25_27_fu_2436_p2 = (add_ln25_reg_3026 + 8'd42);

assign add_ln25_28_fu_2446_p2 = (add_ln25_reg_3026 + 8'd43);

assign add_ln25_29_fu_2466_p2 = (add_ln25_reg_3026 + 8'd44);

assign add_ln25_2_fu_2056_p2 = (add_ln25_reg_3026 + 8'd17);

assign add_ln25_30_fu_2476_p2 = (add_ln25_reg_3026 + 8'd45);

assign add_ln25_31_fu_2496_p2 = (add_ln25_reg_3026 + 8'd46);

assign add_ln25_32_fu_2506_p2 = (add_ln25_reg_3026 + 8'd47);

assign add_ln25_33_fu_2526_p2 = (add_ln25_reg_3026 + 8'd48);

assign add_ln25_34_fu_2536_p2 = (add_ln25_reg_3026 + 8'd49);

assign add_ln25_35_fu_2556_p2 = (add_ln25_reg_3026 + 8'd50);

assign add_ln25_36_fu_2566_p2 = (add_ln25_reg_3026 + 8'd51);

assign add_ln25_37_fu_2586_p2 = (add_ln25_reg_3026 + 8'd52);

assign add_ln25_38_fu_2596_p2 = (add_ln25_reg_3026 + 8'd53);

assign add_ln25_39_fu_2616_p2 = (add_ln25_reg_3026 + 8'd54);

assign add_ln25_3_fu_2076_p2 = (add_ln25_reg_3026 + 8'd18);

assign add_ln25_40_fu_2626_p2 = (add_ln25_reg_3026 + 8'd55);

assign add_ln25_41_fu_2646_p2 = (add_ln25_reg_3026 + 8'd56);

assign add_ln25_42_fu_2656_p2 = (add_ln25_reg_3026 + 8'd57);

assign add_ln25_43_fu_2676_p2 = (add_ln25_reg_3026 + 8'd58);

assign add_ln25_44_fu_2686_p2 = (add_ln25_reg_3026 + 8'd59);

assign add_ln25_45_fu_2706_p2 = (add_ln25_reg_3026 + 8'd60);

assign add_ln25_46_fu_2716_p2 = (add_ln25_reg_3026 + 8'd61);

assign add_ln25_47_fu_2736_p2 = (add_ln25_reg_3026 + 8'd62);

assign add_ln25_48_fu_2746_p2 = (add_ln25_reg_3026 + 8'd63);

assign add_ln25_49_fu_2766_p2 = (add_ln25_reg_3026 + 8'd64);

assign add_ln25_4_fu_2086_p2 = (add_ln25_reg_3026 + 8'd19);

assign add_ln25_50_fu_2776_p2 = (add_ln25_reg_3026 + 8'd65);

assign add_ln25_51_fu_2796_p2 = (add_ln25_reg_3026 + 8'd66);

assign add_ln25_52_fu_2806_p2 = (add_ln25_reg_3026 + 8'd67);

assign add_ln25_53_fu_2826_p2 = (add_ln25_reg_3026 + 8'd68);

assign add_ln25_54_fu_2836_p2 = (add_ln25_reg_3026 + 8'd69);

assign add_ln25_55_fu_2856_p2 = (add_ln25_reg_3026 + 8'd70);

assign add_ln25_56_fu_2866_p2 = (add_ln25_reg_3026 + 8'd71);

assign add_ln25_57_fu_2886_p2 = (add_ln25_reg_3026 + 8'd72);

assign add_ln25_58_fu_2896_p2 = (add_ln25_reg_3026 + 8'd73);

assign add_ln25_59_fu_2916_p2 = (add_ln25_reg_3026 + 8'd74);

assign add_ln25_5_fu_2106_p2 = (add_ln25_reg_3026 + 8'd20);

assign add_ln25_60_fu_2926_p2 = (add_ln25_reg_3026 + 8'd75);

assign add_ln25_61_fu_2946_p2 = (add_ln25_reg_3026 + 8'd76);

assign add_ln25_62_fu_2956_p2 = (add_ln25_reg_3026 + 8'd77);

assign add_ln25_63_fu_2976_p2 = (add_ln25_reg_3026 + 8'd78);

assign add_ln25_64_fu_2986_p2 = (add_ln25_reg_3026 + 8'd79);

assign add_ln25_6_fu_2116_p2 = (add_ln25_reg_3026 + 8'd21);

assign add_ln25_7_fu_2136_p2 = (add_ln25_reg_3026 + 8'd22);

assign add_ln25_8_fu_2146_p2 = (add_ln25_reg_3026 + 8'd23);

assign add_ln25_9_fu_2166_p2 = (add_ln25_reg_3026 + 8'd24);

assign add_ln25_fu_1804_p2 = (tmp_cast_fu_1784_p3 + zext_ln25_fu_1800_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_100_fu_2396_p1 = new_patch_q1[31:0];

assign empty_101_fu_2401_p1 = new_patch_q0[31:0];

assign empty_102_fu_2426_p1 = new_patch_q1[31:0];

assign empty_103_fu_2431_p1 = new_patch_q0[31:0];

assign empty_104_fu_2456_p1 = new_patch_q1[31:0];

assign empty_105_fu_2461_p1 = new_patch_q0[31:0];

assign empty_106_fu_2486_p1 = new_patch_q1[31:0];

assign empty_107_fu_2491_p1 = new_patch_q0[31:0];

assign empty_108_fu_2516_p1 = new_patch_q1[31:0];

assign empty_109_fu_2521_p1 = new_patch_q0[31:0];

assign empty_110_fu_2546_p1 = new_patch_q1[31:0];

assign empty_111_fu_2551_p1 = new_patch_q0[31:0];

assign empty_112_fu_2576_p1 = new_patch_q1[31:0];

assign empty_113_fu_2581_p1 = new_patch_q0[31:0];

assign empty_114_fu_2606_p1 = new_patch_q1[31:0];

assign empty_115_fu_2611_p1 = new_patch_q0[31:0];

assign empty_116_fu_2636_p1 = new_patch_q1[31:0];

assign empty_117_fu_2641_p1 = new_patch_q0[31:0];

assign empty_118_fu_2666_p1 = new_patch_q1[31:0];

assign empty_119_fu_2671_p1 = new_patch_q0[31:0];

assign empty_120_fu_2696_p1 = new_patch_q1[31:0];

assign empty_121_fu_2701_p1 = new_patch_q0[31:0];

assign empty_122_fu_2726_p1 = new_patch_q1[31:0];

assign empty_123_fu_2731_p1 = new_patch_q0[31:0];

assign empty_124_fu_2756_p1 = new_patch_q1[31:0];

assign empty_125_fu_2761_p1 = new_patch_q0[31:0];

assign empty_126_fu_2786_p1 = new_patch_q1[31:0];

assign empty_127_fu_2791_p1 = new_patch_q0[31:0];

assign empty_128_fu_2816_p1 = new_patch_q1[31:0];

assign empty_129_fu_2821_p1 = new_patch_q0[31:0];

assign empty_130_fu_2846_p1 = new_patch_q1[31:0];

assign empty_131_fu_2851_p1 = new_patch_q0[31:0];

assign empty_132_fu_2876_p1 = new_patch_q1[31:0];

assign empty_133_fu_2881_p1 = new_patch_q0[31:0];

assign empty_134_fu_2906_p1 = new_patch_q1[31:0];

assign empty_135_fu_2911_p1 = new_patch_q0[31:0];

assign empty_136_fu_2936_p1 = new_patch_q1[31:0];

assign empty_137_fu_2941_p1 = new_patch_q0[31:0];

assign empty_138_fu_2966_p1 = new_patch_q1[31:0];

assign empty_139_fu_2971_p1 = new_patch_q0[31:0];

assign empty_140_fu_2996_p1 = new_patch_q1[31:0];

assign empty_141_fu_3001_p1 = new_patch_q0[31:0];

assign empty_63_fu_1831_p1 = new_patch_q0[31:0];

assign empty_64_fu_1856_p1 = new_patch_q1[31:0];

assign empty_65_fu_1861_p1 = new_patch_q0[31:0];

assign empty_66_fu_1886_p1 = new_patch_q1[31:0];

assign empty_67_fu_1891_p1 = new_patch_q0[31:0];

assign empty_68_fu_1916_p1 = new_patch_q1[31:0];

assign empty_69_fu_1921_p1 = new_patch_q0[31:0];

assign empty_70_fu_1946_p1 = new_patch_q1[31:0];

assign empty_71_fu_1951_p1 = new_patch_q0[31:0];

assign empty_72_fu_1976_p1 = new_patch_q1[31:0];

assign empty_73_fu_1981_p1 = new_patch_q0[31:0];

assign empty_74_fu_2006_p1 = new_patch_q1[31:0];

assign empty_75_fu_2011_p1 = new_patch_q0[31:0];

assign empty_76_fu_2036_p1 = new_patch_q1[31:0];

assign empty_77_fu_2041_p1 = new_patch_q0[31:0];

assign empty_78_fu_2066_p1 = new_patch_q1[31:0];

assign empty_79_fu_2071_p1 = new_patch_q0[31:0];

assign empty_80_fu_2096_p1 = new_patch_q1[31:0];

assign empty_81_fu_2101_p1 = new_patch_q0[31:0];

assign empty_82_fu_2126_p1 = new_patch_q1[31:0];

assign empty_83_fu_2131_p1 = new_patch_q0[31:0];

assign empty_84_fu_2156_p1 = new_patch_q1[31:0];

assign empty_85_fu_2161_p1 = new_patch_q0[31:0];

assign empty_86_fu_2186_p1 = new_patch_q1[31:0];

assign empty_87_fu_2191_p1 = new_patch_q0[31:0];

assign empty_88_fu_2216_p1 = new_patch_q1[31:0];

assign empty_89_fu_2221_p1 = new_patch_q0[31:0];

assign empty_90_fu_2246_p1 = new_patch_q1[31:0];

assign empty_91_fu_2251_p1 = new_patch_q0[31:0];

assign empty_92_fu_2276_p1 = new_patch_q1[31:0];

assign empty_93_fu_2281_p1 = new_patch_q0[31:0];

assign empty_94_fu_2306_p1 = new_patch_q1[31:0];

assign empty_95_fu_2311_p1 = new_patch_q0[31:0];

assign empty_96_fu_2336_p1 = new_patch_q1[31:0];

assign empty_97_fu_2341_p1 = new_patch_q0[31:0];

assign empty_98_fu_2366_p1 = new_patch_q1[31:0];

assign empty_99_fu_2371_p1 = new_patch_q0[31:0];

assign empty_fu_1826_p1 = new_patch_q1[31:0];

assign icmp_ln15_fu_1750_p2 = ((add_ln15_fu_1744_p2 < 3'd3) ? 1'b1 : 1'b0);

assign or_ln25_10_fu_1966_p2 = (8'd11 | add_ln25_reg_3026);

assign or_ln25_11_fu_1986_p2 = (8'd12 | add_ln25_reg_3026);

assign or_ln25_12_fu_1996_p2 = (8'd13 | add_ln25_reg_3026);

assign or_ln25_13_fu_2016_p2 = (8'd14 | add_ln25_reg_3026);

assign or_ln25_14_fu_2026_p2 = (8'd15 | add_ln25_reg_3026);

assign or_ln25_1_fu_1836_p2 = (8'd2 | add_ln25_reg_3026);

assign or_ln25_2_fu_1846_p2 = (8'd3 | add_ln25_reg_3026);

assign or_ln25_3_fu_1866_p2 = (8'd4 | add_ln25_reg_3026);

assign or_ln25_4_fu_1876_p2 = (8'd5 | add_ln25_reg_3026);

assign or_ln25_5_fu_1896_p2 = (8'd6 | add_ln25_reg_3026);

assign or_ln25_6_fu_1906_p2 = (8'd7 | add_ln25_reg_3026);

assign or_ln25_7_fu_1926_p2 = (8'd8 | add_ln25_reg_3026);

assign or_ln25_8_fu_1936_p2 = (8'd9 | add_ln25_reg_3026);

assign or_ln25_9_fu_1956_p2 = (8'd10 | add_ln25_reg_3026);

assign or_ln25_fu_1815_p2 = (8'd1 | add_ln25_fu_1804_p2);

assign select_ln15_fu_1766_p3 = ((icmp_ln15_fu_1750_p2[0:0] == 1'b1) ? add_ln15_fu_1744_p2 : sext_ln15_fu_1762_p1);

assign sext_ln15_fu_1762_p1 = $signed(xor_ln15_fu_1756_p2);

assign tmp_6_fu_1792_p3 = {{select_ln15_fu_1766_p3}, {4'd0}};

assign tmp_cast_fu_1784_p3 = {{trunc_ln15_fu_1774_p1}, {6'd0}};

assign trunc_ln15_fu_1774_p1 = select_ln15_fu_1766_p3[1:0];

assign xor_ln15_fu_1756_p2 = (latest_patch_index_constprop_i ^ 2'd2);

assign zext_ln15_fu_1740_p1 = latest_patch_index_constprop_i;

assign zext_ln25_10_fu_1941_p1 = or_ln25_8_fu_1936_p2;

assign zext_ln25_11_fu_1961_p1 = or_ln25_9_fu_1956_p2;

assign zext_ln25_12_fu_1971_p1 = or_ln25_10_fu_1966_p2;

assign zext_ln25_13_fu_1991_p1 = or_ln25_11_fu_1986_p2;

assign zext_ln25_14_fu_2001_p1 = or_ln25_12_fu_1996_p2;

assign zext_ln25_15_fu_2021_p1 = or_ln25_13_fu_2016_p2;

assign zext_ln25_16_fu_2031_p1 = or_ln25_14_fu_2026_p2;

assign zext_ln25_17_fu_2051_p1 = add_ln25_1_fu_2046_p2;

assign zext_ln25_18_fu_2061_p1 = add_ln25_2_fu_2056_p2;

assign zext_ln25_19_fu_2081_p1 = add_ln25_3_fu_2076_p2;

assign zext_ln25_1_fu_1810_p1 = add_ln25_fu_1804_p2;

assign zext_ln25_20_fu_2091_p1 = add_ln25_4_fu_2086_p2;

assign zext_ln25_21_fu_2111_p1 = add_ln25_5_fu_2106_p2;

assign zext_ln25_22_fu_2121_p1 = add_ln25_6_fu_2116_p2;

assign zext_ln25_23_fu_2141_p1 = add_ln25_7_fu_2136_p2;

assign zext_ln25_24_fu_2151_p1 = add_ln25_8_fu_2146_p2;

assign zext_ln25_25_fu_2171_p1 = add_ln25_9_fu_2166_p2;

assign zext_ln25_26_fu_2181_p1 = add_ln25_10_fu_2176_p2;

assign zext_ln25_27_fu_2201_p1 = add_ln25_11_fu_2196_p2;

assign zext_ln25_28_fu_2211_p1 = add_ln25_12_fu_2206_p2;

assign zext_ln25_29_fu_2231_p1 = add_ln25_13_fu_2226_p2;

assign zext_ln25_2_fu_1821_p1 = or_ln25_fu_1815_p2;

assign zext_ln25_30_fu_2241_p1 = add_ln25_14_fu_2236_p2;

assign zext_ln25_31_fu_2261_p1 = add_ln25_15_fu_2256_p2;

assign zext_ln25_32_fu_2271_p1 = add_ln25_16_fu_2266_p2;

assign zext_ln25_33_fu_2291_p1 = add_ln25_17_fu_2286_p2;

assign zext_ln25_34_fu_2301_p1 = add_ln25_18_fu_2296_p2;

assign zext_ln25_35_fu_2321_p1 = add_ln25_19_fu_2316_p2;

assign zext_ln25_36_fu_2331_p1 = add_ln25_20_fu_2326_p2;

assign zext_ln25_37_fu_2351_p1 = add_ln25_21_fu_2346_p2;

assign zext_ln25_38_fu_2361_p1 = add_ln25_22_fu_2356_p2;

assign zext_ln25_39_fu_2381_p1 = add_ln25_23_fu_2376_p2;

assign zext_ln25_3_fu_1841_p1 = or_ln25_1_fu_1836_p2;

assign zext_ln25_40_fu_2391_p1 = add_ln25_24_fu_2386_p2;

assign zext_ln25_41_fu_2411_p1 = add_ln25_25_fu_2406_p2;

assign zext_ln25_42_fu_2421_p1 = add_ln25_26_fu_2416_p2;

assign zext_ln25_43_fu_2441_p1 = add_ln25_27_fu_2436_p2;

assign zext_ln25_44_fu_2451_p1 = add_ln25_28_fu_2446_p2;

assign zext_ln25_45_fu_2471_p1 = add_ln25_29_fu_2466_p2;

assign zext_ln25_46_fu_2481_p1 = add_ln25_30_fu_2476_p2;

assign zext_ln25_47_fu_2501_p1 = add_ln25_31_fu_2496_p2;

assign zext_ln25_48_fu_2511_p1 = add_ln25_32_fu_2506_p2;

assign zext_ln25_49_fu_2531_p1 = add_ln25_33_fu_2526_p2;

assign zext_ln25_4_fu_1851_p1 = or_ln25_2_fu_1846_p2;

assign zext_ln25_50_fu_2541_p1 = add_ln25_34_fu_2536_p2;

assign zext_ln25_51_fu_2561_p1 = add_ln25_35_fu_2556_p2;

assign zext_ln25_52_fu_2571_p1 = add_ln25_36_fu_2566_p2;

assign zext_ln25_53_fu_2591_p1 = add_ln25_37_fu_2586_p2;

assign zext_ln25_54_fu_2601_p1 = add_ln25_38_fu_2596_p2;

assign zext_ln25_55_fu_2621_p1 = add_ln25_39_fu_2616_p2;

assign zext_ln25_56_fu_2631_p1 = add_ln25_40_fu_2626_p2;

assign zext_ln25_57_fu_2651_p1 = add_ln25_41_fu_2646_p2;

assign zext_ln25_58_fu_2661_p1 = add_ln25_42_fu_2656_p2;

assign zext_ln25_59_fu_2681_p1 = add_ln25_43_fu_2676_p2;

assign zext_ln25_5_fu_1871_p1 = or_ln25_3_fu_1866_p2;

assign zext_ln25_60_fu_2691_p1 = add_ln25_44_fu_2686_p2;

assign zext_ln25_61_fu_2711_p1 = add_ln25_45_fu_2706_p2;

assign zext_ln25_62_fu_2721_p1 = add_ln25_46_fu_2716_p2;

assign zext_ln25_63_fu_2741_p1 = add_ln25_47_fu_2736_p2;

assign zext_ln25_64_fu_2751_p1 = add_ln25_48_fu_2746_p2;

assign zext_ln25_65_fu_2771_p1 = add_ln25_49_fu_2766_p2;

assign zext_ln25_66_fu_2781_p1 = add_ln25_50_fu_2776_p2;

assign zext_ln25_67_fu_2801_p1 = add_ln25_51_fu_2796_p2;

assign zext_ln25_68_fu_2811_p1 = add_ln25_52_fu_2806_p2;

assign zext_ln25_69_fu_2831_p1 = add_ln25_53_fu_2826_p2;

assign zext_ln25_6_fu_1881_p1 = or_ln25_4_fu_1876_p2;

assign zext_ln25_70_fu_2841_p1 = add_ln25_54_fu_2836_p2;

assign zext_ln25_71_fu_2861_p1 = add_ln25_55_fu_2856_p2;

assign zext_ln25_72_fu_2871_p1 = add_ln25_56_fu_2866_p2;

assign zext_ln25_73_fu_2891_p1 = add_ln25_57_fu_2886_p2;

assign zext_ln25_74_fu_2901_p1 = add_ln25_58_fu_2896_p2;

assign zext_ln25_75_fu_2921_p1 = add_ln25_59_fu_2916_p2;

assign zext_ln25_76_fu_2931_p1 = add_ln25_60_fu_2926_p2;

assign zext_ln25_77_fu_2951_p1 = add_ln25_61_fu_2946_p2;

assign zext_ln25_78_fu_2961_p1 = add_ln25_62_fu_2956_p2;

assign zext_ln25_79_fu_2981_p1 = add_ln25_63_fu_2976_p2;

assign zext_ln25_7_fu_1901_p1 = or_ln25_5_fu_1896_p2;

assign zext_ln25_80_fu_2991_p1 = add_ln25_64_fu_2986_p2;

assign zext_ln25_8_fu_1911_p1 = or_ln25_6_fu_1906_p2;

assign zext_ln25_9_fu_1931_p1 = or_ln25_7_fu_1926_p2;

assign zext_ln25_fu_1800_p1 = tmp_6_fu_1792_p3;

always @ (posedge ap_clk) begin
    add_ln25_reg_3026[3:0] <= 4'b0000;
end

endmodule //system_top_patch_buffer_add_patch2
