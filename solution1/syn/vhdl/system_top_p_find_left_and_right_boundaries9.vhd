-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_p_find_left_and_right_boundaries9 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    left_bound_ap_vld : OUT STD_LOGIC;
    right_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    right_bound_ap_vld : OUT STD_LOGIC;
    i_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    i_empty_n : IN STD_LOGIC;
    i_read : OUT STD_LOGIC;
    lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
    rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_top_p_find_left_and_right_boundaries9 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_trapezoid_edgestrapezoid_edges_ce0 : STD_LOGIC;
    signal get_trapezoid_edgestrapezoid_edges_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_blk_n : STD_LOGIC;
    signal j_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_207_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln313_reg_2441 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal i_17_reg_2411 : STD_LOGIC_VECTOR (2 downto 0);
    signal num_points_load_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_load_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_244_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_2436 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln313_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_2450 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_226_fu_310_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_226_reg_2455 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_118_fu_324_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_118_reg_2460 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_fu_350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_2465 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_2471 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_2476 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_472_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_2481 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_2486 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln935_11_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_11_reg_2491 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_238_fu_610_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_238_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_123_reg_2501 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_208_reg_2506 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_14_fu_844_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_14_reg_2511 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_237_fu_852_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_237_reg_2516 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal select_ln935_6_fu_904_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_6_reg_2521 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_fu_911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_reg_2526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln935_10_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_10_reg_2531 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_231_fu_927_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_231_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_121_reg_2541 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_200_reg_2546 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_13_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_13_reg_2551 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln351_6_fu_1168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_6_reg_2556 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_230_fu_1177_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_230_reg_2562 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln935_5_fu_1229_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_5_reg_2567 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_fu_1239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_reg_2572 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_2578 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sh_amt_4_fu_1334_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_4_reg_2584 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_4_fu_1348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_4_reg_2589 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_3_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_reg_2594 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_reg_2599 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_reg_2604 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_1464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_1_reg_2609 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_5_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_reg_2614 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_reg_2619 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal man_V_17_fu_1595_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_17_reg_2623 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1633_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2633 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_2638 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_2643 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_2648 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_2653 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_fu_1759_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_reg_2659 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_fu_2125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_reg_2664 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state10 : STD_LOGIC;
    signal ap_phi_mux_j_phi_fu_213_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal idxprom_i_fu_238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln314_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln585_7_fu_2397_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_s : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_11_fu_2033_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal right_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal left_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal grp_fu_221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal trunc_ln314_fu_256_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln314_1_fu_260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln314_fu_268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_273_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln314_1_fu_283_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_287_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_227_fu_332_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_362_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_378_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_382_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_19_fu_404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_422_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_228_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_25_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_fu_479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_19_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln958_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_503_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_488_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_509_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_99_fu_519_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_119_fu_525_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_555_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_560_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_535_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_i_fu_566_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_229_fu_573_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_fu_589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_40_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_122_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_239_fu_632_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_15_fu_642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_14_fu_650_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_15_fu_656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_129_fu_662_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_14_fu_678_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_14_fu_682_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_14_fu_688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_14_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_14_fu_698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_20_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_29_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_240_fu_736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_14_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_11_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_22_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_23_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_14_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_14_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_11_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_11_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_11_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_14_fu_776_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_27_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_11_fu_794_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_11_fu_770_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_25_fu_800_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_108_fu_808_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_14_fu_816_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_109_fu_820_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_6_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_14_fu_866_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_14_fu_859_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_14_fu_871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_11_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i_fu_877_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_241_fu_884_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_19_fu_896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_12_fu_900_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_37_fu_935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_120_fu_941_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_232_fu_949_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_14_fu_959_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_13_fu_967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_14_fu_973_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_fu_979_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_13_fu_995_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_13_fu_999_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_13_fu_1005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_13_fu_1009_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_13_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_28_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_fu_1039_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_233_fu_1053_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_13_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_10_fu_1077_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_20_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_21_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_13_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_13_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_10_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_10_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_10_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_13_fu_1093_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_26_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_10_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_10_fu_1087_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_23_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_103_fu_1125_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_13_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_104_fu_1137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln368_5_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_13_fu_1191_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_13_fu_1184_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_13_fu_1196_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_10_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_fu_1202_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_234_fu_1209_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_17_fu_1221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_11_fu_1225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln368_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_4_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_4_fu_1260_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_4_fu_1274_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_243_fu_1278_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_4_fu_1286_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_242_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_19_fu_1290_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_4_fu_1248_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_4_fu_1270_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_fu_1310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_4_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_4_fu_1322_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_4_fu_1328_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_20_fu_1296_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_133_fu_1358_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_10_fu_1374_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_4_fu_1378_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_4_fu_1382_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_4_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_4_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_4_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_4_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_7_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_6_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_11_fu_1388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_4_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_4_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln702_8_fu_1487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_fu_1491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_4_fu_1484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_4_fu_1507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln588_fu_1499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_fu_1512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_2_fu_1519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_1525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_2_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_fu_1543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1559_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1573_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_236_fu_1577_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1585_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_235_fu_1551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_16_fu_1589_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_fu_1547_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_1569_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1609_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1621_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1627_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_126_fu_1653_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_1669_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_1673_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_5_fu_1713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln586_fu_1677_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_136_fu_1743_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_1751_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_6_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_6_fu_1783_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_6_fu_1797_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_247_fu_1801_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_6_fu_1809_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_246_fu_1775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_25_fu_1813_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_6_fu_1771_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_6_fu_1793_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_6_fu_1833_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_6_fu_1839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_6_fu_1845_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_6_fu_1851_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_6_fu_1857_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_26_fu_1819_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_142_fu_1885_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_14_fu_1901_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_6_fu_1905_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_6_fu_1909_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_6_fu_1875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_6_fu_1865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln571_6_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_6_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_5_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_5_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_5_fu_1943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_5_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_6_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_5_fu_1961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_6_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_5_fu_1967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_1979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_11_fu_1985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_6_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_6_fu_1919_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_15_fu_1915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_10_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_6_fu_1931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_3_fu_1991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_8_fu_1997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_4_fu_2005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_5_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_10_fu_2019_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_9_fu_2011_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln702_fu_2053_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_fu_2050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_fu_2047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_fu_2070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_2080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_2064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_2056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_2090_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_3_fu_2098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_3_fu_2106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_5_fu_2113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_5_fu_2131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_5_fu_2147_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_5_fu_2161_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_245_fu_2165_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_5_fu_2173_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_244_fu_2139_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_22_fu_2177_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_5_fu_2135_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_5_fu_2157_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_5_fu_2197_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_5_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_5_fu_2209_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_5_fu_2215_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_5_fu_2221_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_23_fu_2183_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_139_fu_2249_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_12_fu_2265_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_5_fu_2269_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_5_fu_2273_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_5_fu_2239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_5_fu_2229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln571_5_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_5_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_4_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_4_fu_2301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_4_fu_2307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_4_fu_2313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_5_fu_2243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_4_fu_2325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_5_fu_2259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_4_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_2_fu_2343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_9_fu_2349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_5_fu_2337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_5_fu_2283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_13_fu_2279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_8_fu_2319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_5_fu_2295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_fu_2355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_fu_2361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_1_fu_2369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_2_fu_2391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_6_fu_2383_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_5_fu_2375_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_faddfsub_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_p_find_left_and_right_boundaries9_get_trapezoid_edgestrapezoid_edges IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_trapezoid_edgestrapezoid_edges_U : component system_top_p_find_left_and_right_boundaries9_get_trapezoid_edgestrapezoid_edges
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_trapezoid_edgestrapezoid_edges_address0,
        ce0 => get_trapezoid_edgestrapezoid_edges_ce0,
        q0 => get_trapezoid_edgestrapezoid_edges_q0);

    faddfsub_32ns_32ns_32_3_full_dsp_1_U6 : component system_top_faddfsub_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_221_p0,
        din1 => grp_fu_221_p1,
        opcode => grp_fu_221_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_221_p2);

    fpext_32ns_64_2_no_dsp_1_U7 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_226_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_226_p1);

    fpext_32ns_64_2_no_dsp_1_U8 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln351_6_reg_2556,
        ce => ap_const_logic_1,
        dout => grp_fu_229_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state10);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    left_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                left_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_lv1_1 = and_ln1495_1_fu_2125_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    left_bound_preg <= j_reg_207_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    right_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                right_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_lv1_1 = and_ln1495_3_fu_1538_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    right_bound_preg <= j_reg_207_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    j_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then 
                j_reg_207 <= add_ln313_reg_2526;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln313_reg_2526 <= add_ln313_fu_911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln1495_1_reg_2664 <= and_ln1495_1_fu_2125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln1495_3_reg_2619 <= and_ln1495_3_fu_1538_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln585_reg_2643 <= and_ln585_fu_1701_p2;
                and_ln603_reg_2648 <= and_ln603_fu_1731_p2;
                icmp_ln571_reg_2628 <= icmp_ln571_fu_1603_p2;
                icmp_ln582_reg_2638 <= icmp_ln582_fu_1641_p2;
                man_V_17_reg_2623 <= man_V_17_fu_1595_p3;
                or_ln603_reg_2653 <= or_ln603_fu_1737_p2;
                select_ln603_4_reg_2659 <= select_ln603_4_fu_1759_p3;
                sh_amt_reg_2633 <= sh_amt_fu_1633_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                and_ln603_4_reg_2599 <= and_ln603_4_fu_1452_p2;
                or_ln603_3_reg_2604 <= or_ln603_3_fu_1458_p2;
                or_ln603_5_reg_2614 <= or_ln603_5_fu_1478_p2;
                select_ln603_1_reg_2609 <= select_ln603_1_fu_1464_p3;
                sh_amt_4_reg_2584 <= sh_amt_4_fu_1334_p3;
                trunc_ln583_4_reg_2589 <= trunc_ln583_4_fu_1348_p1;
                xor_ln571_3_reg_2594 <= xor_ln571_3_fu_1392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then
                    bitcast_ln351_6_reg_2556(30 downto 0) <= bitcast_ln351_6_fu_1168_p1(30 downto 0);
                icmp_ln935_10_reg_2531 <= icmp_ln935_10_fu_921_p2;
                m_121_reg_2541 <= m_104_fu_1137_p2(63 downto 1);
                p_Result_200_reg_2546 <= m_104_fu_1137_p2(25 downto 25);
                p_Result_231_reg_2536 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
                trunc_ln943_13_reg_2551 <= trunc_ln943_13_fu_1161_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    bitcast_ln351_reg_2572(30 downto 0) <= bitcast_ln351_fu_1239_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                get_trapezoid_edgestrapezoid_edges_load_reg_2431 <= get_trapezoid_edgestrapezoid_edges_q0;
                num_points_load_reg_2426 <= num_points_q0;
                    shl_ln_reg_2436(15 downto 13) <= shl_ln_fu_244_p3(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                i_17_reg_2411 <= i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln313_reg_2441 <= icmp_ln313_fu_251_p2;
                j_reg_207_pp0_iter1_reg <= j_reg_207;
                p_Result_230_reg_2562 <= p_Result_230_fu_1177_p1;
                select_ln935_5_reg_2567 <= select_ln935_5_fu_1229_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then
                icmp_ln935_11_reg_2491 <= icmp_ln935_11_fu_604_p2;
                m_123_reg_2501 <= m_109_fu_820_p2(63 downto 1);
                p_Result_208_reg_2506 <= m_109_fu_820_p2(25 downto 25);
                p_Result_238_reg_2496 <= ap_sig_allocacmp_p_Val2_88(31 downto 31);
                trunc_ln943_14_reg_2511 <= trunc_ln943_14_fu_844_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then
                icmp_ln935_reg_2450 <= icmp_ln935_fu_304_p2;
                icmp_ln958_reg_2471 <= icmp_ln958_fu_444_p2;
                m_118_reg_2460 <= m_118_fu_324_p3;
                p_Result_226_reg_2455 <= points_q0(31 downto 31);
                select_ln958_reg_2476 <= select_ln958_fu_464_p3;
                sub_ln944_reg_2465 <= sub_ln944_fu_350_p2;
                trunc_ln943_reg_2481 <= trunc_ln943_fu_472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then
                p_Result_237_reg_2516 <= p_Result_237_fu_852_p1;
                select_ln935_6_reg_2521 <= select_ln935_6_fu_904_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln313_reg_2441 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_232 <= grp_fu_221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then
                select_ln935_reg_2486 <= select_ln935_fu_593_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                v_assign_reg_2578 <= grp_fu_221_p2;
            end if;
        end if;
    end process;
    shl_ln_reg_2436(12 downto 0) <= "0000000000000";
    bitcast_ln351_6_reg_2556(31) <= '0';
    bitcast_ln351_reg_2572(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, i_empty_n, ap_enable_reg_pp0_iter0, icmp_ln313_reg_2441, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (icmp_ln313_reg_2441 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (icmp_ln313_reg_2441 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    F2_4_fu_1310_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_4_fu_1270_p1));
    F2_5_fu_2197_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_5_fu_2157_p1));
    F2_6_fu_1833_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_6_fu_1793_p1));
    F2_fu_1609_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1569_p1));
    LD_17_fu_1221_p1 <= p_Result_234_fu_1209_p5(32 - 1 downto 0);
    LD_19_fu_896_p1 <= p_Result_241_fu_884_p5(32 - 1 downto 0);
    LD_fu_585_p1 <= p_Result_229_fu_573_p5(32 - 1 downto 0);
    add_ln313_fu_911_p2 <= std_logic_vector(unsigned(j_reg_207) + unsigned(ap_const_lv32_1));
    add_ln314_fu_268_p2 <= std_logic_vector(unsigned(shl_ln314_1_fu_260_p3) + unsigned(shl_ln_reg_2436));
    add_ln581_4_fu_1322_p2 <= std_logic_vector(unsigned(F2_4_fu_1310_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_5_fu_2209_p2 <= std_logic_vector(unsigned(F2_5_fu_2197_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_6_fu_1845_p2 <= std_logic_vector(unsigned(F2_6_fu_1833_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_fu_1621_p2 <= std_logic_vector(unsigned(F2_fu_1609_p2) + unsigned(ap_const_lv12_FEC));
    add_ln958_10_fu_1101_p2 <= std_logic_vector(unsigned(sub_ln944_13_fu_967_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_11_fu_784_p2 <= std_logic_vector(unsigned(sub_ln944_14_fu_650_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_fu_494_p2 <= std_logic_vector(unsigned(sub_ln944_reg_2465) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_13_fu_1196_p2 <= std_logic_vector(unsigned(sub_ln964_13_fu_1191_p2) + unsigned(select_ln943_13_fu_1184_p3));
    add_ln964_14_fu_871_p2 <= std_logic_vector(unsigned(sub_ln964_14_fu_866_p2) + unsigned(select_ln943_14_fu_859_p3));
    add_ln964_fu_560_p2 <= std_logic_vector(unsigned(sub_ln964_fu_555_p2) + unsigned(select_ln943_fu_547_p3));
    and_ln1495_1_fu_2125_p2 <= (xor_ln571_fu_2070_p2 and and_ln1495_fu_2119_p2);
    and_ln1495_2_fu_1533_p2 <= (tmp_140_fu_1525_p3 and or_ln603_5_reg_2614);
    and_ln1495_3_fu_1538_p2 <= (xor_ln571_3_reg_2594 and and_ln1495_2_fu_1533_p2);
    and_ln1495_fu_2119_p2 <= (select_ln603_5_fu_2113_p3 and or_ln603_2_fu_2085_p2);
    and_ln581_3_fu_1416_p2 <= (xor_ln582_3_fu_1410_p2 and icmp_ln581_4_fu_1316_p2);
    and_ln581_4_fu_2313_p2 <= (xor_ln582_4_fu_2307_p2 and icmp_ln581_5_fu_2203_p2);
    and_ln581_5_fu_1949_p2 <= (xor_ln582_5_fu_1943_p2 and icmp_ln581_6_fu_1839_p2);
    and_ln581_fu_1695_p2 <= (xor_ln582_fu_1689_p2 and icmp_ln581_fu_1615_p2);
    and_ln582_4_fu_1398_p2 <= (xor_ln571_3_fu_1392_p2 and icmp_ln582_4_fu_1342_p2);
    and_ln582_5_fu_2295_p2 <= (xor_ln571_4_fu_2289_p2 and icmp_ln582_5_fu_2233_p2);
    and_ln582_6_fu_1931_p2 <= (xor_ln571_5_fu_1925_p2 and icmp_ln582_6_fu_1869_p2);
    and_ln582_fu_2075_p2 <= (xor_ln571_fu_2070_p2 and icmp_ln582_reg_2638);
    and_ln585_10_fu_1955_p2 <= (icmp_ln585_6_fu_1879_p2 and and_ln581_5_fu_1949_p2);
    and_ln585_11_fu_1985_p2 <= (xor_ln585_3_fu_1979_p2 and and_ln581_5_fu_1949_p2);
    and_ln585_5_fu_1713_p2 <= (xor_ln585_fu_1707_p2 and and_ln581_fu_1695_p2);
    and_ln585_6_fu_1422_p2 <= (icmp_ln585_4_fu_1352_p2 and and_ln581_3_fu_1416_p2);
    and_ln585_7_fu_1434_p2 <= (xor_ln585_1_fu_1428_p2 and and_ln581_3_fu_1416_p2);
    and_ln585_8_fu_2319_p2 <= (icmp_ln585_5_fu_2243_p2 and and_ln581_4_fu_2313_p2);
    and_ln585_9_fu_2349_p2 <= (xor_ln585_2_fu_2343_p2 and and_ln581_4_fu_2313_p2);
    and_ln585_fu_1701_p2 <= (icmp_ln585_fu_1647_p2 and and_ln581_fu_1695_p2);
    and_ln603_4_fu_1452_p2 <= (xor_ln581_3_fu_1446_p2 and icmp_ln603_4_fu_1368_p2);
    and_ln603_5_fu_2337_p2 <= (xor_ln581_4_fu_2331_p2 and icmp_ln603_5_fu_2259_p2);
    and_ln603_6_fu_1973_p2 <= (xor_ln581_5_fu_1967_p2 and icmp_ln603_6_fu_1895_p2);
    and_ln603_fu_1731_p2 <= (xor_ln581_fu_1725_p2 and icmp_ln603_fu_1663_p2);
    and_ln949_25_fu_450_p2 <= (xor_ln949_fu_430_p2 and p_Result_228_fu_436_p3);
    and_ln949_26_fu_1067_p2 <= (xor_ln949_13_fu_1047_p2 and p_Result_233_fu_1053_p3);
    and_ln949_27_fu_750_p2 <= (xor_ln949_14_fu_730_p2 and p_Result_240_fu_736_p3);
    and_ln949_28_fu_1027_p2 <= (or_ln949_fu_1021_p2 and m_120_fu_941_p3);
    and_ln949_29_fu_710_p2 <= (or_ln949_20_fu_704_p2 and m_122_fu_624_p3);
    and_ln949_fu_410_p2 <= (or_ln949_19_fu_404_p2 and m_118_fu_324_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, i_empty_n)
    begin
                ap_block_state1 <= ((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state10_assign_proc : process(icmp_ln313_reg_2441)
    begin
        if ((icmp_ln313_reg_2441 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_213_p4_assign_proc : process(j_reg_207, ap_CS_fsm_pp0_stage0, icmp_ln313_reg_2441, ap_enable_reg_pp0_iter1, add_ln313_reg_2526, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln313_reg_2441 = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_213_p4 <= add_ln313_reg_2526;
        else 
            ap_phi_mux_j_phi_fu_213_p4 <= j_reg_207;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_88_assign_proc : process(rbVal_constprop_i, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2619, select_ln585_11_fu_2033_p3, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_lv1_1 = and_ln1495_3_reg_2619) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_88 <= select_ln585_11_fu_2033_p3;
        else 
            ap_sig_allocacmp_p_Val2_88 <= rbVal_constprop_i;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_s_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, and_ln1495_1_reg_2664, select_ln585_7_fu_2397_p3, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_reg_2664) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_s <= select_ln585_7_fu_2397_p3;
        else 
            ap_sig_allocacmp_p_Val2_s <= lbVal_constprop_i;
        end if; 
    end process;

    ashr_ln586_4_fu_1382_p2 <= std_logic_vector(shift_right(signed(man_V_20_fu_1296_p3),to_integer(unsigned('0' & zext_ln586_4_fu_1378_p1(31-1 downto 0)))));
    ashr_ln586_5_fu_2273_p2 <= std_logic_vector(shift_right(signed(man_V_23_fu_2183_p3),to_integer(unsigned('0' & zext_ln586_5_fu_2269_p1(31-1 downto 0)))));
    ashr_ln586_6_fu_1909_p2 <= std_logic_vector(shift_right(signed(man_V_26_fu_1819_p3),to_integer(unsigned('0' & zext_ln586_6_fu_1905_p1(31-1 downto 0)))));
    ashr_ln586_fu_1677_p2 <= std_logic_vector(shift_right(signed(man_V_17_fu_1595_p3),to_integer(unsigned('0' & zext_ln586_fu_1673_p1(31-1 downto 0)))));
    bitcast_ln351_6_fu_1168_p1 <= zext_ln368_5_fu_1165_p1;
    bitcast_ln351_fu_1239_p1 <= zext_ln368_fu_1236_p1;
    bitcast_ln702_8_fu_1487_p1 <= reg_232;
    bitcast_ln702_fu_2053_p1 <= v_assign_reg_2578;
    bitcast_ln744_11_fu_1225_p1 <= LD_17_fu_1221_p1;
    bitcast_ln744_12_fu_900_p1 <= LD_19_fu_896_p1;
    bitcast_ln744_fu_589_p1 <= LD_fu_585_p1;
    data_V_6_fu_848_p1 <= grp_fu_221_p2;
    data_V_fu_1173_p1 <= grp_fu_221_p2;
    exp_tmp_4_fu_1260_p4 <= ireg_4_fu_1244_p1(62 downto 52);
    exp_tmp_5_fu_2147_p4 <= ireg_5_fu_2131_p1(62 downto 52);
    exp_tmp_6_fu_1783_p4 <= ireg_6_fu_1767_p1(62 downto 52);
    exp_tmp_fu_1559_p4 <= ireg_fu_1543_p1(62 downto 52);
    get_trapezoid_edgestrapezoid_edges_address0 <= idxprom_i_fu_238_p1(3 - 1 downto 0);

    get_trapezoid_edgestrapezoid_edges_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_1;
        else 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_221_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln313_reg_2441, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage3_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln313_reg_2441 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln313_reg_2441 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            grp_fu_221_opcode <= ap_const_lv2_1;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln313_reg_2441 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln313_reg_2441 = ap_const_lv1_0)))) then 
            grp_fu_221_opcode <= ap_const_lv2_0;
        else 
            grp_fu_221_opcode <= "XX";
        end if; 
    end process;


    grp_fu_221_p0_assign_proc : process(reg_232, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln935_reg_2486, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, bitcast_ln351_6_fu_1168_p1, bitcast_ln351_fu_1239_p1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage7, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_221_p0 <= bitcast_ln351_fu_1239_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_221_p0 <= bitcast_ln351_6_fu_1168_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_221_p0 <= reg_232;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_221_p0 <= select_ln935_reg_2486;
        else 
            grp_fu_221_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_221_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, get_trapezoid_edgestrapezoid_edges_load_reg_2431, ap_CS_fsm_pp0_stage6, select_ln935_6_reg_2521, ap_CS_fsm_pp0_stage7, select_ln935_5_reg_2567, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage7, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_221_p1 <= select_ln935_5_reg_2567;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_221_p1 <= select_ln935_6_reg_2521;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_221_p1 <= ap_const_lv32_0;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_221_p1 <= get_trapezoid_edgestrapezoid_edges_load_reg_2431;
        else 
            grp_fu_221_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_p0_assign_proc : process(reg_232, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, bitcast_ln351_reg_2572, v_assign_reg_2578, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_226_p0 <= bitcast_ln351_reg_2572;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_226_p0 <= v_assign_reg_2578;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_226_p0 <= reg_232;
            else 
                grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_blk_n <= i_empty_n;
        else 
            i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_read <= ap_const_logic_1;
        else 
            i_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln313_fu_251_p2 <= "1" when (ap_phi_mux_j_phi_fu_213_p4 = num_points_load_reg_2426) else "0";
    icmp_ln571_4_fu_1304_p2 <= "1" when (trunc_ln555_4_fu_1248_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_5_fu_2191_p2 <= "1" when (trunc_ln555_5_fu_2135_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_6_fu_1827_p2 <= "1" when (trunc_ln555_6_fu_1771_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1603_p2 <= "1" when (trunc_ln555_fu_1547_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_4_fu_1316_p2 <= "1" when (signed(F2_4_fu_1310_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_5_fu_2203_p2 <= "1" when (signed(F2_5_fu_2197_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_6_fu_1839_p2 <= "1" when (signed(F2_6_fu_1833_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_1615_p2 <= "1" when (signed(F2_fu_1609_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_4_fu_1342_p2 <= "1" when (F2_4_fu_1310_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_5_fu_2233_p2 <= "1" when (F2_5_fu_2197_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_6_fu_1869_p2 <= "1" when (F2_6_fu_1833_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_fu_1641_p2 <= "1" when (F2_fu_1609_p2 = ap_const_lv12_14) else "0";
    icmp_ln585_4_fu_1352_p2 <= "1" when (unsigned(sh_amt_4_fu_1334_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_5_fu_2243_p2 <= "1" when (unsigned(sh_amt_5_fu_2221_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_6_fu_1879_p2 <= "1" when (unsigned(sh_amt_6_fu_1857_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1647_p2 <= "1" when (unsigned(sh_amt_fu_1633_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_4_fu_1368_p2 <= "1" when (tmp_133_fu_1358_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_5_fu_2259_p2 <= "1" when (tmp_139_fu_2249_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_6_fu_1895_p2 <= "1" when (tmp_142_fu_1885_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_1663_p2 <= "1" when (tmp_126_fu_1653_p4 = ap_const_lv7_0) else "0";
    icmp_ln935_10_fu_921_p2 <= "1" when (ap_sig_allocacmp_p_Val2_s = ap_const_lv32_0) else "0";
    icmp_ln935_11_fu_604_p2 <= "1" when (ap_sig_allocacmp_p_Val2_88 = ap_const_lv32_0) else "0";
    icmp_ln935_fu_304_p2 <= "0" when (z_bits_fu_300_p1 = ap_const_lv32_0) else "1";
    icmp_ln946_13_fu_989_p2 <= "1" when (signed(tmp_122_fu_979_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_14_fu_672_p2 <= "1" when (signed(tmp_129_fu_662_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_372_p2 <= "1" when (signed(tmp_fu_362_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_13_fu_1033_p2 <= "0" when (and_ln949_28_fu_1027_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_14_fu_716_p2 <= "0" when (and_ln949_29_fu_710_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_416_p2 <= "0" when (and_ln949_fu_410_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_10_fu_1061_p2 <= "1" when (signed(lsb_index_14_fu_973_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_11_fu_744_p2 <= "1" when (signed(lsb_index_15_fu_656_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_fu_444_p2 <= "1" when (signed(lsb_index_fu_356_p2) > signed(ap_const_lv32_0)) else "0";
    idxprom_i_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_dout),64));
    ireg_4_fu_1244_p1 <= grp_fu_226_p1;
    ireg_5_fu_2131_p1 <= grp_fu_226_p1;
    ireg_6_fu_1767_p1 <= grp_fu_229_p1;
    ireg_fu_1543_p1 <= grp_fu_226_p1;
    
    l_14_fu_959_p3_proc : process(p_Result_232_fu_949_p4)
    begin
        l_14_fu_959_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_232_fu_949_p4(i) = '1' then
                l_14_fu_959_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_15_fu_642_p3_proc : process(p_Result_239_fu_632_p4)
    begin
        l_15_fu_642_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_239_fu_632_p4(i) = '1' then
                l_15_fu_642_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_342_p3_proc : process(p_Result_227_fu_332_p4)
    begin
        l_fu_342_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_227_fu_332_p4(i) = '1' then
                l_fu_342_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;


    lbVal_constprop_o_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, and_ln1495_1_reg_2664, select_ln585_7_fu_2397_p3, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_reg_2664) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o <= select_ln585_7_fu_2397_p3;
        else 
            lbVal_constprop_o <= lbVal_constprop_i;
        end if; 
    end process;


    lbVal_constprop_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, and_ln1495_1_reg_2664)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_lv1_1 = and_ln1495_1_reg_2664) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            lbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    left_bound_assign_proc : process(j_reg_207_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, and_ln1495_1_fu_2125_p2, left_bound_preg, ap_block_pp0_stage6_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_lv1_1 = and_ln1495_1_fu_2125_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound <= j_reg_207_pp0_iter1_reg;
        else 
            left_bound <= left_bound_preg;
        end if; 
    end process;


    left_bound_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, and_ln1495_1_fu_2125_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_lv1_1 = and_ln1495_1_fu_2125_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound_ap_vld <= ap_const_logic_1;
        else 
            left_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lsb_index_14_fu_973_p2 <= std_logic_vector(unsigned(sub_ln944_13_fu_967_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_15_fu_656_p2 <= std_logic_vector(unsigned(sub_ln944_14_fu_650_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_356_p2 <= std_logic_vector(unsigned(sub_ln944_fu_350_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_13_fu_1009_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_13_fu_1005_p1(31-1 downto 0)))));
    lshr_ln947_14_fu_692_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_14_fu_688_p1(31-1 downto 0)))));
    lshr_ln947_fu_392_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_388_p1(31-1 downto 0)))));
    lshr_ln958_10_fu_1111_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_20_fu_1073_p1),to_integer(unsigned('0' & zext_ln958_10_fu_1107_p1(31-1 downto 0)))));
    lshr_ln958_11_fu_794_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_22_fu_756_p1),to_integer(unsigned('0' & zext_ln958_11_fu_790_p1(31-1 downto 0)))));
    lshr_ln958_fu_503_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_fu_476_p1),to_integer(unsigned('0' & zext_ln958_fu_499_p1(31-1 downto 0)))));
    lshr_ln_fu_273_p4 <= add_ln314_fu_268_p2(15 downto 13);
    m_103_fu_1125_p3 <= 
        lshr_ln958_10_fu_1111_p2 when (icmp_ln958_10_fu_1061_p2(0) = '1') else 
        shl_ln959_10_fu_1087_p2;
    m_104_fu_1137_p2 <= std_logic_vector(unsigned(m_103_fu_1125_p3) + unsigned(zext_ln961_13_fu_1133_p1));
    m_108_fu_808_p3 <= 
        lshr_ln958_11_fu_794_p2 when (icmp_ln958_11_fu_744_p2(0) = '1') else 
        shl_ln959_11_fu_770_p2;
    m_109_fu_820_p2 <= std_logic_vector(unsigned(m_108_fu_808_p3) + unsigned(zext_ln961_14_fu_816_p1));
    m_118_fu_324_p3 <= 
        tmp_V_fu_318_p2 when (p_Result_226_fu_310_p3(0) = '1') else 
        z_bits_fu_300_p1;
    m_119_fu_525_p4 <= m_99_fu_519_p2(63 downto 1);
    m_120_fu_941_p3 <= 
        tmp_V_37_fu_935_p2 when (p_Result_231_fu_927_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_s;
    m_122_fu_624_p3 <= 
        tmp_V_40_fu_618_p2 when (p_Result_238_fu_610_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_88;
    m_99_fu_519_p2 <= std_logic_vector(unsigned(m_fu_509_p3) + unsigned(zext_ln961_fu_516_p1));
    m_fu_509_p3 <= 
        lshr_ln958_fu_503_p2 when (icmp_ln958_reg_2471(0) = '1') else 
        shl_ln959_fu_488_p2;
    man_V_16_fu_1589_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1585_p1));
    man_V_17_fu_1595_p3 <= 
        man_V_16_fu_1589_p2 when (p_Result_235_fu_1551_p3(0) = '1') else 
        zext_ln569_fu_1585_p1;
    man_V_19_fu_1290_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_4_fu_1286_p1));
    man_V_20_fu_1296_p3 <= 
        man_V_19_fu_1290_p2 when (p_Result_242_fu_1252_p3(0) = '1') else 
        zext_ln569_4_fu_1286_p1;
    man_V_22_fu_2177_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_5_fu_2173_p1));
    man_V_23_fu_2183_p3 <= 
        man_V_22_fu_2177_p2 when (p_Result_244_fu_2139_p3(0) = '1') else 
        zext_ln569_5_fu_2173_p1;
    man_V_25_fu_1813_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_6_fu_1809_p1));
    man_V_26_fu_1819_p3 <= 
        man_V_25_fu_1813_p2 when (p_Result_246_fu_1775_p3(0) = '1') else 
        zext_ln569_6_fu_1809_p1;
    num_points_address0 <= idxprom_i_fu_238_p1(3 - 1 downto 0);

    num_points_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_points_ce0 <= ap_const_logic_1;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_3_fu_1440_p2 <= (or_ln582_3_fu_1404_p2 or icmp_ln581_4_fu_1316_p2);
    or_ln581_4_fu_2325_p2 <= (or_ln582_4_fu_2301_p2 or icmp_ln581_5_fu_2203_p2);
    or_ln581_5_fu_1961_p2 <= (or_ln582_5_fu_1937_p2 or icmp_ln581_6_fu_1839_p2);
    or_ln581_fu_1719_p2 <= (or_ln582_fu_1683_p2 or icmp_ln581_fu_1615_p2);
    or_ln582_3_fu_1404_p2 <= (icmp_ln582_4_fu_1342_p2 or icmp_ln571_4_fu_1304_p2);
    or_ln582_4_fu_2301_p2 <= (icmp_ln582_5_fu_2233_p2 or icmp_ln571_5_fu_2191_p2);
    or_ln582_5_fu_1937_p2 <= (icmp_ln582_6_fu_1869_p2 or icmp_ln571_6_fu_1827_p2);
    or_ln582_fu_1683_p2 <= (icmp_ln582_fu_1641_p2 or icmp_ln571_fu_1603_p2);
    or_ln585_1_fu_2369_p2 <= (and_ln603_5_fu_2337_p2 or and_ln585_8_fu_2319_p2);
    or_ln585_2_fu_2391_p2 <= (or_ln585_fu_2355_p2 or or_ln585_1_fu_2369_p2);
    or_ln585_3_fu_1991_p2 <= (icmp_ln571_6_fu_1827_p2 or and_ln585_11_fu_1985_p2);
    or_ln585_4_fu_2005_p2 <= (and_ln603_6_fu_1973_p2 or and_ln585_10_fu_1955_p2);
    or_ln585_5_fu_2027_p2 <= (or_ln585_4_fu_2005_p2 or or_ln585_3_fu_1991_p2);
    or_ln585_fu_2355_p2 <= (icmp_ln571_5_fu_2191_p2 or and_ln585_9_fu_2349_p2);
    or_ln603_1_fu_2080_p2 <= (and_ln585_reg_2643 or and_ln582_fu_2075_p2);
    or_ln603_2_fu_2085_p2 <= (or_ln603_reg_2653 or or_ln603_1_fu_2080_p2);
    or_ln603_3_fu_1458_p2 <= (and_ln603_4_fu_1452_p2 or and_ln585_7_fu_1434_p2);
    or_ln603_4_fu_1472_p2 <= (and_ln585_6_fu_1422_p2 or and_ln582_4_fu_1398_p2);
    or_ln603_5_fu_1478_p2 <= (or_ln603_4_fu_1472_p2 or or_ln603_3_fu_1458_p2);
    or_ln603_fu_1737_p2 <= (and_ln603_fu_1731_p2 or and_ln585_5_fu_1713_p2);
    or_ln949_19_fu_404_p2 <= (shl_ln949_fu_398_p2 or lshr_ln947_fu_392_p2);
    or_ln949_20_fu_704_p2 <= (shl_ln949_14_fu_698_p2 or lshr_ln947_14_fu_692_p2);
    or_ln949_fu_1021_p2 <= (shl_ln949_13_fu_1015_p2 or lshr_ln947_13_fu_1009_p2);
    p_Result_226_fu_310_p3 <= points_q0(31 downto 31);
    
    p_Result_227_fu_332_p4_proc : process(m_118_fu_324_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_227_fu_332_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_118_fu_324_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_227_fu_332_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_227_fu_332_p4_i) := m_118_fu_324_p3(32-1-p_Result_227_fu_332_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_227_fu_332_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_228_fu_436_p3 <= m_118_fu_324_p3(to_integer(unsigned(lsb_index_fu_356_p2)) downto to_integer(unsigned(lsb_index_fu_356_p2))) when (to_integer(unsigned(lsb_index_fu_356_p2))>= 0 and to_integer(unsigned(lsb_index_fu_356_p2))<=31) else "-";
    p_Result_229_fu_573_p5 <= (zext_ln962_fu_535_p1(63 downto 32) & tmp_41_i_fu_566_p3 & zext_ln962_fu_535_p1(22 downto 0));
    p_Result_230_fu_1177_p1 <= data_V_fu_1173_p1(31 - 1 downto 0);
    p_Result_231_fu_927_p3 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
    
    p_Result_232_fu_949_p4_proc : process(m_120_fu_941_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_232_fu_949_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_120_fu_941_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_232_fu_949_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_232_fu_949_p4_i) := m_120_fu_941_p3(32-1-p_Result_232_fu_949_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_232_fu_949_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_233_fu_1053_p3 <= m_120_fu_941_p3(to_integer(unsigned(lsb_index_14_fu_973_p2)) downto to_integer(unsigned(lsb_index_14_fu_973_p2))) when (to_integer(unsigned(lsb_index_14_fu_973_p2))>= 0 and to_integer(unsigned(lsb_index_14_fu_973_p2))<=31) else "-";
    p_Result_234_fu_1209_p5 <= (zext_ln962_10_fu_1181_p1(63 downto 32) & tmp_42_i_fu_1202_p3 & zext_ln962_10_fu_1181_p1(22 downto 0));
    p_Result_235_fu_1551_p3 <= ireg_fu_1543_p1(63 downto 63);
    p_Result_236_fu_1577_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_1573_p1);
    p_Result_237_fu_852_p1 <= data_V_6_fu_848_p1(31 - 1 downto 0);
    p_Result_238_fu_610_p3 <= ap_sig_allocacmp_p_Val2_88(31 downto 31);
    
    p_Result_239_fu_632_p4_proc : process(m_122_fu_624_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_239_fu_632_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_122_fu_624_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_239_fu_632_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_239_fu_632_p4_i) := m_122_fu_624_p3(32-1-p_Result_239_fu_632_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_239_fu_632_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_240_fu_736_p3 <= m_122_fu_624_p3(to_integer(unsigned(lsb_index_15_fu_656_p2)) downto to_integer(unsigned(lsb_index_15_fu_656_p2))) when (to_integer(unsigned(lsb_index_15_fu_656_p2))>= 0 and to_integer(unsigned(lsb_index_15_fu_656_p2))<=31) else "-";
    p_Result_241_fu_884_p5 <= (zext_ln962_11_fu_856_p1(63 downto 32) & tmp_45_i_fu_877_p3 & zext_ln962_11_fu_856_p1(22 downto 0));
    p_Result_242_fu_1252_p3 <= ireg_4_fu_1244_p1(63 downto 63);
    p_Result_243_fu_1278_p3 <= (ap_const_lv1_1 & trunc_ln565_4_fu_1274_p1);
    p_Result_244_fu_2139_p3 <= ireg_5_fu_2131_p1(63 downto 63);
    p_Result_245_fu_2165_p3 <= (ap_const_lv1_1 & trunc_ln565_5_fu_2161_p1);
    p_Result_246_fu_1775_p3 <= ireg_6_fu_1767_p1(63 downto 63);
    p_Result_247_fu_1801_p3 <= (ap_const_lv1_1 & trunc_ln565_6_fu_1797_p1);
    p_Result_s_fu_539_p3 <= m_99_fu_519_p2(25 downto 25);
    points_address0 <= zext_ln314_fu_295_p1(12 - 1 downto 0);

    points_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            points_ce0 <= ap_const_logic_1;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rbVal_constprop_o_assign_proc : process(rbVal_constprop_i, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2619, select_ln585_11_fu_2033_p3, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_lv1_1 = and_ln1495_3_reg_2619) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o <= select_ln585_11_fu_2033_p3;
        else 
            rbVal_constprop_o <= rbVal_constprop_i;
        end if; 
    end process;


    rbVal_constprop_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2619)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_lv1_1 = and_ln1495_3_reg_2619) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            rbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    right_bound_assign_proc : process(j_reg_207_pp0_iter1_reg, ap_enable_reg_pp0_iter1, and_ln1495_3_fu_1538_p2, ap_CS_fsm_pp0_stage4, right_bound_preg, ap_block_pp0_stage4_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_lv1_1 = and_ln1495_3_fu_1538_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            right_bound <= j_reg_207_pp0_iter1_reg;
        else 
            right_bound <= right_bound_preg;
        end if; 
    end process;


    right_bound_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln1495_3_fu_1538_p2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_lv1_1 = and_ln1495_3_fu_1538_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            right_bound_ap_vld <= ap_const_logic_1;
        else 
            right_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln585_10_fu_2019_p3 <= 
        ap_const_lv32_0 when (or_ln585_3_fu_1991_p2(0) = '1') else 
        select_ln585_8_fu_1997_p3;
    select_ln585_11_fu_2033_p3 <= 
        select_ln585_10_fu_2019_p3 when (or_ln585_5_fu_2027_p2(0) = '1') else 
        select_ln585_9_fu_2011_p3;
    select_ln585_5_fu_2375_p3 <= 
        trunc_ln583_5_fu_2239_p1 when (and_ln582_5_fu_2295_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_6_fu_2383_p3 <= 
        ap_const_lv32_0 when (or_ln585_fu_2355_p2(0) = '1') else 
        select_ln585_fu_2361_p3;
    select_ln585_7_fu_2397_p3 <= 
        select_ln585_6_fu_2383_p3 when (or_ln585_2_fu_2391_p2(0) = '1') else 
        select_ln585_5_fu_2375_p3;
    select_ln585_8_fu_1997_p3 <= 
        shl_ln604_6_fu_1919_p2 when (and_ln603_6_fu_1973_p2(0) = '1') else 
        trunc_ln586_15_fu_1915_p1;
    select_ln585_9_fu_2011_p3 <= 
        trunc_ln583_6_fu_1875_p1 when (and_ln582_6_fu_1931_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_fu_2361_p3 <= 
        shl_ln604_5_fu_2283_p2 when (and_ln603_5_fu_2337_p2(0) = '1') else 
        trunc_ln586_13_fu_2279_p1;
    select_ln588_3_fu_2098_p3 <= 
        ap_const_lv1_1 when (tmp_127_fu_2056_p3(0) = '1') else 
        ap_const_lv1_0;
    select_ln588_fu_1499_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_134_fu_1491_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_1_fu_1464_p3 <= 
        trunc_ln586_11_fu_1388_p1 when (and_ln585_6_fu_1422_p2(0) = '1') else 
        trunc_ln583_4_fu_1348_p1;
    select_ln603_2_fu_1519_p3 <= 
        select_ln603_fu_1512_p3 when (or_ln603_3_reg_2604(0) = '1') else 
        select_ln603_1_reg_2609;
    select_ln603_3_fu_2106_p3 <= 
        tmp_135_fu_2090_p3 when (and_ln603_reg_2648(0) = '1') else 
        select_ln588_3_fu_2098_p3;
    select_ln603_4_fu_1759_p3 <= 
        tmp_136_fu_1743_p3 when (and_ln585_fu_1701_p2(0) = '1') else 
        tmp_137_fu_1751_p3;
    select_ln603_5_fu_2113_p3 <= 
        select_ln603_3_fu_2106_p3 when (or_ln603_reg_2653(0) = '1') else 
        select_ln603_4_reg_2659;
    select_ln603_fu_1512_p3 <= 
        shl_ln604_4_fu_1507_p2 when (and_ln603_4_reg_2599(0) = '1') else 
        select_ln588_fu_1499_p3;
    select_ln935_5_fu_1229_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_10_reg_2531(0) = '1') else 
        bitcast_ln744_11_fu_1225_p1;
    select_ln935_6_fu_904_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_11_reg_2491(0) = '1') else 
        bitcast_ln744_12_fu_900_p1;
    select_ln935_fu_593_p3 <= 
        bitcast_ln744_fu_589_p1 when (icmp_ln935_reg_2450(0) = '1') else 
        ap_const_lv32_0;
    select_ln943_13_fu_1184_p3 <= 
        ap_const_lv8_7F when (p_Result_200_reg_2546(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_14_fu_859_p3 <= 
        ap_const_lv8_7F when (p_Result_208_reg_2506(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_547_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_539_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_13_fu_1093_p3 <= 
        icmp_ln949_13_fu_1033_p2 when (icmp_ln946_13_fu_989_p2(0) = '1') else 
        p_Result_233_fu_1053_p3;
    select_ln946_14_fu_776_p3 <= 
        icmp_ln949_14_fu_716_p2 when (icmp_ln946_14_fu_672_p2(0) = '1') else 
        p_Result_240_fu_736_p3;
    select_ln946_fu_456_p3 <= 
        icmp_ln949_fu_416_p2 when (icmp_ln946_fu_372_p2(0) = '1') else 
        p_Result_228_fu_436_p3;
    select_ln958_23_fu_1117_p3 <= 
        select_ln946_13_fu_1093_p3 when (icmp_ln958_10_fu_1061_p2(0) = '1') else 
        and_ln949_26_fu_1067_p2;
    select_ln958_25_fu_800_p3 <= 
        select_ln946_14_fu_776_p3 when (icmp_ln958_11_fu_744_p2(0) = '1') else 
        and_ln949_27_fu_750_p2;
    select_ln958_fu_464_p3 <= 
        select_ln946_fu_456_p3 when (icmp_ln958_fu_444_p2(0) = '1') else 
        and_ln949_25_fu_450_p2;
        sext_ln581_4_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_4_reg_2584),32));

        sext_ln581_5_fu_2229_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_5_fu_2221_p3),32));

        sext_ln581_6_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_6_fu_1857_p3),32));

        sext_ln581_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2633),32));

    sh_amt_4_fu_1334_p3 <= 
        add_ln581_4_fu_1322_p2 when (icmp_ln581_4_fu_1316_p2(0) = '1') else 
        sub_ln581_4_fu_1328_p2;
    sh_amt_5_fu_2221_p3 <= 
        add_ln581_5_fu_2209_p2 when (icmp_ln581_5_fu_2203_p2(0) = '1') else 
        sub_ln581_5_fu_2215_p2;
    sh_amt_6_fu_1857_p3 <= 
        add_ln581_6_fu_1845_p2 when (icmp_ln581_6_fu_1839_p2(0) = '1') else 
        sub_ln581_6_fu_1851_p2;
    sh_amt_fu_1633_p3 <= 
        add_ln581_fu_1621_p2 when (icmp_ln581_fu_1615_p2(0) = '1') else 
        sub_ln581_fu_1627_p2;
    shl_ln314_1_fu_260_p3 <= (trunc_ln314_fu_256_p1 & ap_const_lv4_0);
    shl_ln604_4_fu_1507_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_4_reg_2589),to_integer(unsigned('0' & sext_ln581_4_fu_1484_p1(31-1 downto 0)))));
    shl_ln604_5_fu_2283_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_5_fu_2239_p1),to_integer(unsigned('0' & sext_ln581_5_fu_2229_p1(31-1 downto 0)))));
    shl_ln604_6_fu_1919_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_6_fu_1875_p1),to_integer(unsigned('0' & sext_ln581_6_fu_1865_p1(31-1 downto 0)))));
    shl_ln604_fu_2064_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_2050_p1),to_integer(unsigned('0' & sext_ln581_fu_2047_p1(31-1 downto 0)))));
    shl_ln949_13_fu_1015_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_14_fu_973_p2(31-1 downto 0)))));
    shl_ln949_14_fu_698_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_15_fu_656_p2(31-1 downto 0)))));
    shl_ln949_fu_398_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_356_p2(31-1 downto 0)))));
    shl_ln959_10_fu_1087_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_20_fu_1073_p1),to_integer(unsigned('0' & zext_ln959_21_fu_1083_p1(31-1 downto 0)))));
    shl_ln959_11_fu_770_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_22_fu_756_p1),to_integer(unsigned('0' & zext_ln959_23_fu_766_p1(31-1 downto 0)))));
    shl_ln959_fu_488_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_fu_476_p1),to_integer(unsigned('0' & zext_ln959_19_fu_484_p1(31-1 downto 0)))));
    shl_ln_fu_244_p3 <= (i_17_reg_2411 & ap_const_lv13_0);
    sub_ln581_4_fu_1328_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_4_fu_1310_p2));
    sub_ln581_5_fu_2215_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_5_fu_2197_p2));
    sub_ln581_6_fu_1851_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_6_fu_1833_p2));
    sub_ln581_fu_1627_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1609_p2));
    sub_ln944_13_fu_967_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_14_fu_959_p3));
    sub_ln944_14_fu_650_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_15_fu_642_p3));
    sub_ln944_fu_350_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_342_p3));
    sub_ln947_13_fu_999_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_13_fu_995_p1));
    sub_ln947_14_fu_682_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_14_fu_678_p1));
    sub_ln947_fu_382_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_378_p1));
    sub_ln959_10_fu_1077_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_13_fu_967_p2));
    sub_ln959_11_fu_760_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_14_fu_650_p2));
    sub_ln959_fu_479_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_2465));
    sub_ln964_13_fu_1191_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_13_reg_2551));
    sub_ln964_14_fu_866_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_14_reg_2511));
    sub_ln964_fu_555_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_reg_2481));
    tmp_119_fu_422_p3 <= lsb_index_fu_356_p2(31 downto 31);
    tmp_122_fu_979_p4 <= lsb_index_14_fu_973_p2(31 downto 1);
    tmp_123_fu_1039_p3 <= lsb_index_14_fu_973_p2(31 downto 31);
    tmp_126_fu_1653_p4 <= sh_amt_fu_1633_p3(11 downto 5);
    tmp_127_fu_2056_p3 <= bitcast_ln702_fu_2053_p1(31 downto 31);
    tmp_129_fu_662_p4 <= lsb_index_15_fu_656_p2(31 downto 1);
    tmp_130_fu_722_p3 <= lsb_index_15_fu_656_p2(31 downto 31);
    tmp_133_fu_1358_p4 <= sh_amt_4_fu_1334_p3(11 downto 5);
    tmp_134_fu_1491_p3 <= bitcast_ln702_8_fu_1487_p1(31 downto 31);
    tmp_135_fu_2090_p3 <= shl_ln604_fu_2064_p2(31 downto 31);
    tmp_136_fu_1743_p3 <= ashr_ln586_fu_1677_p2(31 downto 31);
    tmp_137_fu_1751_p3 <= man_V_17_fu_1595_p3(31 downto 31);
    tmp_139_fu_2249_p4 <= sh_amt_5_fu_2221_p3(11 downto 5);
    tmp_140_fu_1525_p3 <= select_ln603_2_fu_1519_p3(31 downto 31);
    tmp_142_fu_1885_p4 <= sh_amt_6_fu_1857_p3(11 downto 5);
    tmp_41_i_fu_566_p3 <= (p_Result_226_reg_2455 & add_ln964_fu_560_p2);
    tmp_42_i_fu_1202_p3 <= (p_Result_231_reg_2536 & add_ln964_13_fu_1196_p2);
    tmp_45_i_fu_877_p3 <= (p_Result_238_reg_2496 & add_ln964_14_fu_871_p2);
    tmp_V_37_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_s));
    tmp_V_40_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_88));
    tmp_V_fu_318_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(z_bits_fu_300_p1));
    tmp_fu_362_p4 <= lsb_index_fu_356_p2(31 downto 1);
    tmp_s_fu_287_p3 <= (lshr_ln_fu_273_p4 & trunc_ln314_1_fu_283_p1);
    trunc_ln314_1_fu_283_p1 <= ap_phi_mux_j_phi_fu_213_p4(9 - 1 downto 0);
    trunc_ln314_fu_256_p1 <= ap_phi_mux_j_phi_fu_213_p4(12 - 1 downto 0);
    trunc_ln555_4_fu_1248_p1 <= ireg_4_fu_1244_p1(63 - 1 downto 0);
    trunc_ln555_5_fu_2135_p1 <= ireg_5_fu_2131_p1(63 - 1 downto 0);
    trunc_ln555_6_fu_1771_p1 <= ireg_6_fu_1767_p1(63 - 1 downto 0);
    trunc_ln555_fu_1547_p1 <= ireg_fu_1543_p1(63 - 1 downto 0);
    trunc_ln565_4_fu_1274_p1 <= ireg_4_fu_1244_p1(52 - 1 downto 0);
    trunc_ln565_5_fu_2161_p1 <= ireg_5_fu_2131_p1(52 - 1 downto 0);
    trunc_ln565_6_fu_1797_p1 <= ireg_6_fu_1767_p1(52 - 1 downto 0);
    trunc_ln565_fu_1573_p1 <= ireg_fu_1543_p1(52 - 1 downto 0);
    trunc_ln583_4_fu_1348_p1 <= man_V_20_fu_1296_p3(32 - 1 downto 0);
    trunc_ln583_5_fu_2239_p1 <= man_V_23_fu_2183_p3(32 - 1 downto 0);
    trunc_ln583_6_fu_1875_p1 <= man_V_26_fu_1819_p3(32 - 1 downto 0);
    trunc_ln583_fu_2050_p1 <= man_V_17_reg_2623(32 - 1 downto 0);
    trunc_ln586_10_fu_1374_p1 <= sh_amt_4_fu_1334_p3(6 - 1 downto 0);
    trunc_ln586_11_fu_1388_p1 <= ashr_ln586_4_fu_1382_p2(32 - 1 downto 0);
    trunc_ln586_12_fu_2265_p1 <= sh_amt_5_fu_2221_p3(6 - 1 downto 0);
    trunc_ln586_13_fu_2279_p1 <= ashr_ln586_5_fu_2273_p2(32 - 1 downto 0);
    trunc_ln586_14_fu_1901_p1 <= sh_amt_6_fu_1857_p3(6 - 1 downto 0);
    trunc_ln586_15_fu_1915_p1 <= ashr_ln586_6_fu_1909_p2(32 - 1 downto 0);
    trunc_ln586_fu_1669_p1 <= sh_amt_fu_1633_p3(6 - 1 downto 0);
    trunc_ln943_13_fu_1161_p1 <= l_14_fu_959_p3(8 - 1 downto 0);
    trunc_ln943_14_fu_844_p1 <= l_15_fu_642_p3(8 - 1 downto 0);
    trunc_ln943_fu_472_p1 <= l_fu_342_p3(8 - 1 downto 0);
    trunc_ln947_13_fu_995_p1 <= sub_ln944_13_fu_967_p2(6 - 1 downto 0);
    trunc_ln947_14_fu_678_p1 <= sub_ln944_14_fu_650_p2(6 - 1 downto 0);
    trunc_ln947_fu_378_p1 <= sub_ln944_fu_350_p2(6 - 1 downto 0);
    xor_ln571_3_fu_1392_p2 <= (icmp_ln571_4_fu_1304_p2 xor ap_const_lv1_1);
    xor_ln571_4_fu_2289_p2 <= (icmp_ln571_5_fu_2191_p2 xor ap_const_lv1_1);
    xor_ln571_5_fu_1925_p2 <= (icmp_ln571_6_fu_1827_p2 xor ap_const_lv1_1);
    xor_ln571_fu_2070_p2 <= (icmp_ln571_reg_2628 xor ap_const_lv1_1);
    xor_ln581_3_fu_1446_p2 <= (or_ln581_3_fu_1440_p2 xor ap_const_lv1_1);
    xor_ln581_4_fu_2331_p2 <= (or_ln581_4_fu_2325_p2 xor ap_const_lv1_1);
    xor_ln581_5_fu_1967_p2 <= (or_ln581_5_fu_1961_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1725_p2 <= (or_ln581_fu_1719_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_1410_p2 <= (or_ln582_3_fu_1404_p2 xor ap_const_lv1_1);
    xor_ln582_4_fu_2307_p2 <= (or_ln582_4_fu_2301_p2 xor ap_const_lv1_1);
    xor_ln582_5_fu_1943_p2 <= (or_ln582_5_fu_1937_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1689_p2 <= (or_ln582_fu_1683_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1428_p2 <= (icmp_ln585_4_fu_1352_p2 xor ap_const_lv1_1);
    xor_ln585_2_fu_2343_p2 <= (icmp_ln585_5_fu_2243_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_1979_p2 <= (icmp_ln585_6_fu_1879_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1707_p2 <= (icmp_ln585_fu_1647_p2 xor ap_const_lv1_1);
    xor_ln949_13_fu_1047_p2 <= (tmp_123_fu_1039_p3 xor ap_const_lv1_1);
    xor_ln949_14_fu_730_p2 <= (tmp_130_fu_722_p3 xor ap_const_lv1_1);
    xor_ln949_fu_430_p2 <= (tmp_119_fu_422_p3 xor ap_const_lv1_1);
    z_bits_fu_300_p1 <= points_q0(32 - 1 downto 0);
    zext_ln314_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_287_p3),64));
    zext_ln368_5_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_237_reg_2516),32));
    zext_ln368_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_230_reg_2562),32));
    zext_ln455_4_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_4_fu_1260_p4),12));
    zext_ln455_5_fu_2157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_5_fu_2147_p4),12));
    zext_ln455_6_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_6_fu_1783_p4),12));
    zext_ln455_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1559_p4),12));
    zext_ln569_4_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_243_fu_1278_p3),54));
    zext_ln569_5_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_245_fu_2165_p3),54));
    zext_ln569_6_fu_1809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_247_fu_1801_p3),54));
    zext_ln569_fu_1585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_236_fu_1577_p3),54));
    zext_ln586_4_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_10_fu_1374_p1),54));
    zext_ln586_5_fu_2269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_12_fu_2265_p1),54));
    zext_ln586_6_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_14_fu_1901_p1),54));
    zext_ln586_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_1669_p1),54));
    zext_ln947_13_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_13_fu_999_p2),32));
    zext_ln947_14_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_14_fu_682_p2),32));
    zext_ln947_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_382_p2),32));
    zext_ln958_10_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_10_fu_1101_p2),64));
    zext_ln958_11_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_11_fu_784_p2),64));
    zext_ln958_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_fu_494_p2),64));
    zext_ln959_19_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_fu_479_p2),64));
    zext_ln959_20_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_120_fu_941_p3),64));
    zext_ln959_21_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_10_fu_1077_p2),64));
    zext_ln959_22_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_122_fu_624_p3),64));
    zext_ln959_23_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_11_fu_760_p2),64));
    zext_ln959_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_118_reg_2460),64));
    zext_ln961_13_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_23_fu_1117_p3),64));
    zext_ln961_14_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_25_fu_800_p3),64));
    zext_ln961_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_2476),64));
    zext_ln962_10_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_121_reg_2541),64));
    zext_ln962_11_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_123_reg_2501),64));
    zext_ln962_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_119_fu_525_p4),64));
end behav;
