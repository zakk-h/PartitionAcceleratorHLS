// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_shadowquilt_main_loop_make_verticle_strip (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        points_address0,
        points_ce0,
        points_q0,
        points_address1,
        points_ce1,
        points_q1,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        patch_stream_V_din,
        patch_stream_V_full_n,
        patch_stream_V_write,
        patch_buffer_address0,
        patch_buffer_ce0,
        patch_buffer_we0,
        patch_buffer_d0,
        patch_buffer_q0,
        patch_buffer_address1,
        patch_buffer_ce1,
        patch_buffer_we1,
        patch_buffer_d1,
        patch_buffer_q1,
        pSlope_address0,
        pSlope_ce0,
        pSlope_we0,
        pSlope_d0,
        shadow_bottomL_jR_address0,
        shadow_bottomL_jR_ce0,
        shadow_bottomL_jR_we0,
        shadow_bottomL_jR_d0,
        shadow_bottomL_jR_q0,
        shadow_bottomL_jR_address1,
        shadow_bottomL_jR_ce1,
        shadow_bottomL_jR_q1,
        shadow_bottomR_jR_address0,
        shadow_bottomR_jR_ce0,
        shadow_bottomR_jR_we0,
        shadow_bottomR_jR_d0,
        shadow_bottomR_jR_q0,
        shadow_bottomR_jR_address1,
        shadow_bottomR_jR_ce1,
        shadow_bottomR_jR_q1,
        shadow_bottomL_jL_address0,
        shadow_bottomL_jL_ce0,
        shadow_bottomL_jL_we0,
        shadow_bottomL_jL_d0,
        shadow_bottomL_jL_q0,
        shadow_bottomL_jL_address1,
        shadow_bottomL_jL_ce1,
        shadow_bottomL_jL_q1,
        shadow_bottomR_jL_address0,
        shadow_bottomR_jL_ce0,
        shadow_bottomR_jL_we0,
        shadow_bottomR_jL_d0,
        shadow_bottomR_jL_q0,
        shadow_bottomR_jL_address1,
        shadow_bottomR_jL_ce1,
        shadow_bottomR_jL_q1,
        z1_min_address0,
        z1_min_ce0,
        z1_min_we0,
        z1_min_d0,
        z1_min_q0,
        z1_max_address0,
        z1_max_ce0,
        z1_max_we0,
        z1_max_d0,
        z1_max_q0,
        a_corner_0_address0,
        a_corner_0_ce0,
        a_corner_0_we0,
        a_corner_0_d0,
        a_corner_1_address0,
        a_corner_1_ce0,
        a_corner_1_we0,
        a_corner_1_d0,
        a_corner_1_q0,
        b_corner_0_address0,
        b_corner_0_ce0,
        b_corner_0_we0,
        b_corner_0_d0,
        b_corner_1_address0,
        b_corner_1_ce0,
        b_corner_1_we0,
        b_corner_1_d0,
        b_corner_1_q0,
        c_corner_0_address0,
        c_corner_0_ce0,
        c_corner_0_we0,
        c_corner_0_d0,
        c_corner_0_q0,
        c_corner_1_address0,
        c_corner_1_ce0,
        c_corner_1_we0,
        c_corner_1_d0,
        c_corner_1_q0,
        d_corner_0_address0,
        d_corner_0_ce0,
        d_corner_0_we0,
        d_corner_0_d0,
        d_corner_1_address0,
        d_corner_1_ce0,
        d_corner_1_we0,
        d_corner_1_d0,
        d_corner_1_q0,
        squareAcceptance_address0,
        squareAcceptance_ce0,
        squareAcceptance_we0,
        squareAcceptance_d0,
        squareAcceptance_q0,
        flatTop_address0,
        flatTop_ce0,
        flatTop_we0,
        flatTop_d0,
        flatBottom_address0,
        flatBottom_ce0,
        flatBottom_we0,
        flatBottom_d0,
        flatBottom_q0,
        triangleAcceptance_address0,
        triangleAcceptance_ce0,
        triangleAcceptance_we0,
        triangleAcceptance_d0,
        triangleAcceptance_q0,
        latest_patch_index_constprop_i,
        latest_patch_index_constprop_o,
        latest_patch_index_constprop_o_ap_vld,
        num_patches_constprop_i,
        num_patches_constprop_o,
        num_patches_constprop_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 88'd1;
parameter    ap_ST_fsm_state2 = 88'd2;
parameter    ap_ST_fsm_state3 = 88'd4;
parameter    ap_ST_fsm_state4 = 88'd8;
parameter    ap_ST_fsm_state5 = 88'd16;
parameter    ap_ST_fsm_state6 = 88'd32;
parameter    ap_ST_fsm_state7 = 88'd64;
parameter    ap_ST_fsm_state8 = 88'd128;
parameter    ap_ST_fsm_state9 = 88'd256;
parameter    ap_ST_fsm_state10 = 88'd512;
parameter    ap_ST_fsm_state11 = 88'd1024;
parameter    ap_ST_fsm_state12 = 88'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 88'd4096;
parameter    ap_ST_fsm_state15 = 88'd8192;
parameter    ap_ST_fsm_state16 = 88'd16384;
parameter    ap_ST_fsm_state17 = 88'd32768;
parameter    ap_ST_fsm_state18 = 88'd65536;
parameter    ap_ST_fsm_state19 = 88'd131072;
parameter    ap_ST_fsm_state20 = 88'd262144;
parameter    ap_ST_fsm_state21 = 88'd524288;
parameter    ap_ST_fsm_state22 = 88'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 88'd2097152;
parameter    ap_ST_fsm_state25 = 88'd4194304;
parameter    ap_ST_fsm_state26 = 88'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 88'd16777216;
parameter    ap_ST_fsm_state29 = 88'd33554432;
parameter    ap_ST_fsm_state30 = 88'd67108864;
parameter    ap_ST_fsm_state31 = 88'd134217728;
parameter    ap_ST_fsm_state32 = 88'd268435456;
parameter    ap_ST_fsm_state33 = 88'd536870912;
parameter    ap_ST_fsm_state34 = 88'd1073741824;
parameter    ap_ST_fsm_state35 = 88'd2147483648;
parameter    ap_ST_fsm_state36 = 88'd4294967296;
parameter    ap_ST_fsm_state37 = 88'd8589934592;
parameter    ap_ST_fsm_state38 = 88'd17179869184;
parameter    ap_ST_fsm_state39 = 88'd34359738368;
parameter    ap_ST_fsm_state40 = 88'd68719476736;
parameter    ap_ST_fsm_state41 = 88'd137438953472;
parameter    ap_ST_fsm_state42 = 88'd274877906944;
parameter    ap_ST_fsm_state43 = 88'd549755813888;
parameter    ap_ST_fsm_pp3_stage0 = 88'd1099511627776;
parameter    ap_ST_fsm_state46 = 88'd2199023255552;
parameter    ap_ST_fsm_state47 = 88'd4398046511104;
parameter    ap_ST_fsm_state48 = 88'd8796093022208;
parameter    ap_ST_fsm_state49 = 88'd17592186044416;
parameter    ap_ST_fsm_state50 = 88'd35184372088832;
parameter    ap_ST_fsm_state51 = 88'd70368744177664;
parameter    ap_ST_fsm_state52 = 88'd140737488355328;
parameter    ap_ST_fsm_state53 = 88'd281474976710656;
parameter    ap_ST_fsm_state54 = 88'd562949953421312;
parameter    ap_ST_fsm_state55 = 88'd1125899906842624;
parameter    ap_ST_fsm_state56 = 88'd2251799813685248;
parameter    ap_ST_fsm_state57 = 88'd4503599627370496;
parameter    ap_ST_fsm_state58 = 88'd9007199254740992;
parameter    ap_ST_fsm_pp4_stage0 = 88'd18014398509481984;
parameter    ap_ST_fsm_state61 = 88'd36028797018963968;
parameter    ap_ST_fsm_pp5_stage0 = 88'd72057594037927936;
parameter    ap_ST_fsm_state64 = 88'd144115188075855872;
parameter    ap_ST_fsm_pp6_stage0 = 88'd288230376151711744;
parameter    ap_ST_fsm_pp7_stage0 = 88'd576460752303423488;
parameter    ap_ST_fsm_state73 = 88'd1152921504606846976;
parameter    ap_ST_fsm_pp8_stage0 = 88'd2305843009213693952;
parameter    ap_ST_fsm_state79 = 88'd4611686018427387904;
parameter    ap_ST_fsm_pp9_stage0 = 88'd9223372036854775808;
parameter    ap_ST_fsm_state83 = 88'd18446744073709551616;
parameter    ap_ST_fsm_pp10_stage0 = 88'd36893488147419103232;
parameter    ap_ST_fsm_state136 = 88'd73786976294838206464;
parameter    ap_ST_fsm_pp11_stage0 = 88'd147573952589676412928;
parameter    ap_ST_fsm_state146 = 88'd295147905179352825856;
parameter    ap_ST_fsm_state147 = 88'd590295810358705651712;
parameter    ap_ST_fsm_state148 = 88'd1180591620717411303424;
parameter    ap_ST_fsm_state149 = 88'd2361183241434822606848;
parameter    ap_ST_fsm_state150 = 88'd4722366482869645213696;
parameter    ap_ST_fsm_state151 = 88'd9444732965739290427392;
parameter    ap_ST_fsm_state152 = 88'd18889465931478580854784;
parameter    ap_ST_fsm_state153 = 88'd37778931862957161709568;
parameter    ap_ST_fsm_state154 = 88'd75557863725914323419136;
parameter    ap_ST_fsm_state155 = 88'd151115727451828646838272;
parameter    ap_ST_fsm_state156 = 88'd302231454903657293676544;
parameter    ap_ST_fsm_state157 = 88'd604462909807314587353088;
parameter    ap_ST_fsm_state158 = 88'd1208925819614629174706176;
parameter    ap_ST_fsm_state159 = 88'd2417851639229258349412352;
parameter    ap_ST_fsm_state160 = 88'd4835703278458516698824704;
parameter    ap_ST_fsm_state161 = 88'd9671406556917033397649408;
parameter    ap_ST_fsm_state162 = 88'd19342813113834066795298816;
parameter    ap_ST_fsm_state163 = 88'd38685626227668133590597632;
parameter    ap_ST_fsm_state164 = 88'd77371252455336267181195264;
parameter    ap_ST_fsm_state165 = 88'd154742504910672534362390528;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [95:0] patch_stream_V_din;
input   patch_stream_V_full_n;
output   patch_stream_V_write;
output  [7:0] patch_buffer_address0;
output   patch_buffer_ce0;
output   patch_buffer_we0;
output  [31:0] patch_buffer_d0;
input  [31:0] patch_buffer_q0;
output  [7:0] patch_buffer_address1;
output   patch_buffer_ce1;
output   patch_buffer_we1;
output  [31:0] patch_buffer_d1;
input  [31:0] patch_buffer_q1;
output  [3:0] pSlope_address0;
output   pSlope_ce0;
output   pSlope_we0;
output  [31:0] pSlope_d0;
output  [3:0] shadow_bottomL_jR_address0;
output   shadow_bottomL_jR_ce0;
output   shadow_bottomL_jR_we0;
output  [31:0] shadow_bottomL_jR_d0;
input  [31:0] shadow_bottomL_jR_q0;
output  [3:0] shadow_bottomL_jR_address1;
output   shadow_bottomL_jR_ce1;
input  [31:0] shadow_bottomL_jR_q1;
output  [3:0] shadow_bottomR_jR_address0;
output   shadow_bottomR_jR_ce0;
output   shadow_bottomR_jR_we0;
output  [31:0] shadow_bottomR_jR_d0;
input  [31:0] shadow_bottomR_jR_q0;
output  [3:0] shadow_bottomR_jR_address1;
output   shadow_bottomR_jR_ce1;
input  [31:0] shadow_bottomR_jR_q1;
output  [3:0] shadow_bottomL_jL_address0;
output   shadow_bottomL_jL_ce0;
output   shadow_bottomL_jL_we0;
output  [31:0] shadow_bottomL_jL_d0;
input  [31:0] shadow_bottomL_jL_q0;
output  [3:0] shadow_bottomL_jL_address1;
output   shadow_bottomL_jL_ce1;
input  [31:0] shadow_bottomL_jL_q1;
output  [3:0] shadow_bottomR_jL_address0;
output   shadow_bottomR_jL_ce0;
output   shadow_bottomR_jL_we0;
output  [31:0] shadow_bottomR_jL_d0;
input  [31:0] shadow_bottomR_jL_q0;
output  [3:0] shadow_bottomR_jL_address1;
output   shadow_bottomR_jL_ce1;
input  [31:0] shadow_bottomR_jL_q1;
output  [3:0] z1_min_address0;
output   z1_min_ce0;
output   z1_min_we0;
output  [25:0] z1_min_d0;
input  [25:0] z1_min_q0;
output  [3:0] z1_max_address0;
output   z1_max_ce0;
output   z1_max_we0;
output  [25:0] z1_max_d0;
input  [25:0] z1_max_q0;
output  [1:0] a_corner_0_address0;
output   a_corner_0_ce0;
output   a_corner_0_we0;
output  [25:0] a_corner_0_d0;
output  [1:0] a_corner_1_address0;
output   a_corner_1_ce0;
output   a_corner_1_we0;
output  [31:0] a_corner_1_d0;
input  [31:0] a_corner_1_q0;
output  [1:0] b_corner_0_address0;
output   b_corner_0_ce0;
output   b_corner_0_we0;
output  [25:0] b_corner_0_d0;
output  [1:0] b_corner_1_address0;
output   b_corner_1_ce0;
output   b_corner_1_we0;
output  [31:0] b_corner_1_d0;
input  [31:0] b_corner_1_q0;
output  [1:0] c_corner_0_address0;
output   c_corner_0_ce0;
output   c_corner_0_we0;
output  [25:0] c_corner_0_d0;
input  [25:0] c_corner_0_q0;
output  [1:0] c_corner_1_address0;
output   c_corner_1_ce0;
output   c_corner_1_we0;
output  [31:0] c_corner_1_d0;
input  [31:0] c_corner_1_q0;
output  [1:0] d_corner_0_address0;
output   d_corner_0_ce0;
output   d_corner_0_we0;
output  [25:0] d_corner_0_d0;
output  [1:0] d_corner_1_address0;
output   d_corner_1_ce0;
output   d_corner_1_we0;
output  [31:0] d_corner_1_d0;
input  [31:0] d_corner_1_q0;
output  [1:0] squareAcceptance_address0;
output   squareAcceptance_ce0;
output   squareAcceptance_we0;
output  [0:0] squareAcceptance_d0;
input  [0:0] squareAcceptance_q0;
output  [1:0] flatTop_address0;
output   flatTop_ce0;
output   flatTop_we0;
output  [0:0] flatTop_d0;
output  [1:0] flatBottom_address0;
output   flatBottom_ce0;
output   flatBottom_we0;
output  [0:0] flatBottom_d0;
input  [0:0] flatBottom_q0;
output  [1:0] triangleAcceptance_address0;
output   triangleAcceptance_ce0;
output   triangleAcceptance_we0;
output  [0:0] triangleAcceptance_d0;
input  [0:0] triangleAcceptance_q0;
input  [1:0] latest_patch_index_constprop_i;
output  [1:0] latest_patch_index_constprop_o;
output   latest_patch_index_constprop_o_ap_vld;
input  [31:0] num_patches_constprop_i;
output  [31:0] num_patches_constprop_o;
output   num_patches_constprop_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] points_address0;
reg points_ce0;
reg points_ce1;
reg[2:0] num_points_address0;
reg num_points_ce0;
reg num_points_ce1;
reg[95:0] patch_stream_V_din;
reg patch_stream_V_write;
reg[7:0] patch_buffer_address0;
reg patch_buffer_ce0;
reg patch_buffer_we0;
reg[7:0] patch_buffer_address1;
reg patch_buffer_ce1;
reg patch_buffer_we1;
reg pSlope_ce0;
reg pSlope_we0;
reg[3:0] shadow_bottomL_jR_address0;
reg shadow_bottomL_jR_ce0;
reg shadow_bottomL_jR_we0;
reg shadow_bottomL_jR_ce1;
reg[3:0] shadow_bottomR_jR_address0;
reg shadow_bottomR_jR_ce0;
reg shadow_bottomR_jR_we0;
reg shadow_bottomR_jR_ce1;
reg[3:0] shadow_bottomL_jL_address0;
reg shadow_bottomL_jL_ce0;
reg shadow_bottomL_jL_we0;
reg shadow_bottomL_jL_ce1;
reg[3:0] shadow_bottomR_jL_address0;
reg shadow_bottomR_jL_ce0;
reg shadow_bottomR_jL_we0;
reg shadow_bottomR_jL_ce1;
reg[3:0] z1_min_address0;
reg z1_min_ce0;
reg z1_min_we0;
reg[3:0] z1_max_address0;
reg z1_max_ce0;
reg z1_max_we0;
reg a_corner_0_ce0;
reg a_corner_0_we0;
reg[1:0] a_corner_1_address0;
reg a_corner_1_ce0;
reg a_corner_1_we0;
reg b_corner_0_ce0;
reg b_corner_0_we0;
reg[1:0] b_corner_1_address0;
reg b_corner_1_ce0;
reg b_corner_1_we0;
reg[1:0] c_corner_0_address0;
reg c_corner_0_ce0;
reg c_corner_0_we0;
reg[1:0] c_corner_1_address0;
reg c_corner_1_ce0;
reg c_corner_1_we0;
reg d_corner_0_ce0;
reg d_corner_0_we0;
reg[1:0] d_corner_1_address0;
reg d_corner_1_ce0;
reg d_corner_1_we0;
reg[1:0] squareAcceptance_address0;
reg squareAcceptance_ce0;
reg squareAcceptance_we0;
reg flatTop_ce0;
reg flatTop_we0;
reg[1:0] flatBottom_address0;
reg flatBottom_ce0;
reg flatBottom_we0;
reg[1:0] triangleAcceptance_address0;
reg triangleAcceptance_ce0;
reg triangleAcceptance_we0;
reg[1:0] latest_patch_index_constprop_o;
reg latest_patch_index_constprop_o_ap_vld;
reg[31:0] num_patches_constprop_o;
reg num_patches_constprop_o_ap_vld;

(* fsm_encoding = "none" *) reg   [87:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] get_radiiradii_address0;
reg    get_radiiradii_ce0;
wire   [31:0] get_radiiradii_q0;
reg    patch_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln37_reg_6884;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln37_1_reg_7165;
reg   [6:0] indvar_flatten_reg_818;
reg   [2:0] layer_reg_829;
reg   [4:0] point_reg_840;
reg   [4:0] i_reg_851;
reg   [31:0] min_z_V_reg_862;
reg   [31:0] empty_258_reg_874;
reg   [4:0] i_5_reg_886;
reg   [31:0] min_z_V_2_reg_897;
reg   [31:0] empty_260_reg_909;
reg   [6:0] indvar_flatten7_reg_985;
reg   [2:0] layer_1_reg_996;
reg   [4:0] point_1_reg_1007;
reg   [2:0] i_7_reg_1054;
reg   [2:0] i_9_reg_1075;
reg   [2:0] i_8_reg_1096;
reg   [2:0] i_10_reg_1107;
reg   [2:0] i_11_reg_1118;
reg   [2:0] i_12_reg_1129;
reg   [2:0] i_13_reg_1141;
reg   [2:0] i_15_reg_1152;
reg   [31:0] layerWithSmallestShift_reg_1163;
reg   [31:0] layerSMin_V_reg_1175;
reg   [1:0] reg_1437;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state46;
wire   [31:0] new_z_i_atTop_V_q0;
reg   [31:0] reg_1449;
wire    ap_CS_fsm_pp11_stage0;
reg    ap_enable_reg_pp11_iter1;
wire    ap_block_state137_pp11_stage0_iter0;
wire    ap_block_state138_pp11_stage0_iter1;
wire    ap_block_state139_pp11_stage0_iter2;
wire    ap_block_state140_pp11_stage0_iter3;
wire    ap_block_state141_pp11_stage0_iter4;
wire    ap_block_state142_pp11_stage0_iter5;
wire    ap_block_state143_pp11_stage0_iter6;
wire    ap_block_state144_pp11_stage0_iter7;
wire    ap_block_state145_pp11_stage0_iter8;
wire    ap_block_pp11_stage0_11001;
reg   [0:0] icmp_ln1027_reg_7705;
wire    ap_CS_fsm_state147;
wire   [63:0] grp_fu_1390_p1;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state162;
wire   [6:0] add_ln37_2_fu_1459_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state13_pp0_stage0_iter0;
reg    ap_block_state14_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln37_fu_1465_p2;
wire   [2:0] select_ln37_1_fu_1491_p3;
reg   [2:0] select_ln37_1_reg_6888;
wire   [4:0] add_ln39_fu_1522_p2;
wire   [63:0] zext_ln671_fu_1528_p1;
reg   [63:0] zext_ln671_reg_6903;
wire   [7:0] add_ln50_fu_1558_p2;
reg   [7:0] add_ln50_reg_6938;
wire    ap_CS_fsm_state20;
wire   [7:0] add_ln50_4_fu_1564_p2;
reg   [7:0] add_ln50_4_reg_6943;
reg  signed [31:0] original_d_V_reg_6948;
wire  signed [32:0] sext_ln703_7_fu_1574_p1;
reg  signed [32:0] sext_ln703_7_reg_6954;
reg   [31:0] nPatchesAtOriginal_V_reg_6962;
wire   [0:0] icmp_ln935_fu_1656_p2;
reg   [0:0] icmp_ln935_reg_6967;
wire   [0:0] notChoppedPatch_fu_1650_p2;
wire   [0:0] p_Result_120_fu_1662_p3;
reg   [0:0] p_Result_120_reg_6972;
wire   [31:0] m_67_fu_1676_p3;
reg   [31:0] m_67_reg_6977;
wire   [31:0] sub_ln944_fu_1702_p2;
reg   [31:0] sub_ln944_reg_6982;
wire   [0:0] icmp_ln958_fu_1796_p2;
reg   [0:0] icmp_ln958_reg_6988;
wire   [0:0] select_ln958_fu_1816_p3;
reg   [0:0] select_ln958_reg_6993;
wire   [7:0] trunc_ln943_fu_1824_p1;
reg   [7:0] trunc_ln943_reg_6998;
wire   [0:0] icmp_ln1495_fu_1828_p2;
reg   [0:0] icmp_ln1495_reg_7003;
wire   [31:0] bitcast_ln744_fu_1947_p1;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln971_fu_1962_p2;
reg   [0:0] icmp_ln971_reg_7013;
wire   [0:0] icmp_ln971_1_fu_1968_p2;
reg   [0:0] icmp_ln971_1_reg_7018;
wire   [0:0] and_ln741_fu_1989_p2;
wire    ap_CS_fsm_state22;
wire   [4:0] add_ln49_fu_1994_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state24_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln49_fu_2000_p2;
reg   [0:0] icmp_ln49_reg_7032;
wire   [31:0] min_z_V_1_fu_2026_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] select_ln51_2_fu_2034_p3;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire   [4:0] add_ln49_1_fu_2042_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state27_pp2_stage0_iter0;
wire    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln49_1_fu_2048_p2;
reg   [0:0] icmp_ln49_1_reg_7065;
wire   [31:0] min_z_V_3_fu_2074_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] select_ln51_3_fu_2082_p3;
wire   [0:0] icmp_ln935_2_fu_2090_p2;
reg   [0:0] icmp_ln935_2_reg_7084;
wire    ap_CS_fsm_state29;
wire   [0:0] p_Result_124_fu_2096_p3;
reg   [0:0] p_Result_124_reg_7089;
reg   [62:0] m_70_reg_7094;
reg   [0:0] p_Result_54_reg_7099;
wire   [7:0] trunc_ln943_3_fu_2330_p1;
reg   [7:0] trunc_ln943_3_reg_7104;
wire   [31:0] select_ln935_fu_2382_p3;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln224_fu_2409_p2;
reg   [0:0] icmp_ln224_reg_7115;
wire   [0:0] icmp_ln224_1_fu_2415_p2;
reg   [0:0] icmp_ln224_1_reg_7120;
wire   [31:0] shl_ln604_fu_2567_p2;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln571_fu_2499_p2;
wire   [0:0] icmp_ln582_fu_2541_p2;
wire   [0:0] icmp_ln581_fu_2511_p2;
wire   [0:0] icmp_ln603_fu_2561_p2;
wire   [31:0] select_ln588_fu_2587_p3;
wire   [0:0] icmp_ln585_fu_2573_p2;
wire   [31:0] trunc_ln586_3_fu_2609_p1;
wire   [31:0] trunc_ln583_fu_2613_p1;
wire   [6:0] add_ln37_3_fu_2617_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state44_pp3_stage0_iter0;
reg    ap_block_state45_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln37_1_fu_2623_p2;
wire   [2:0] select_ln37_3_fu_2649_p3;
reg   [2:0] select_ln37_3_reg_7169;
wire   [4:0] add_ln39_1_fu_2680_p2;
wire   [0:0] cmp_i_i_fu_2686_p2;
reg   [0:0] cmp_i_i_reg_7184;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
reg   [0:0] tmp_53_reg_7213;
wire  signed [63:0] p_v_cast_fu_2745_p1;
reg  signed [63:0] p_v_cast_reg_7227;
wire   [31:0] grp_fu_1423_p2;
reg   [31:0] x_reg_7237;
wire  signed [32:0] sext_ln703_11_fu_2753_p1;
reg  signed [32:0] sext_ln703_11_reg_7242;
wire   [51:0] lhs_12_fu_2757_p3;
reg   [51:0] lhs_12_reg_7248;
wire   [11:0] add_ln985_fu_2765_p2;
reg   [11:0] add_ln985_reg_7254;
wire   [31:0] grp_get_index_from_z_fu_1317_ap_return;
reg   [31:0] current_z_top_index_V_reg_7259;
wire    ap_CS_fsm_state53;
wire  signed [32:0] sext_ln703_12_fu_2771_p1;
reg  signed [32:0] sext_ln703_12_reg_7265;
wire  signed [51:0] sext_ln1115_1_fu_2780_p1;
reg  signed [51:0] sext_ln1115_1_reg_7273;
wire   [2:0] add_ln933_fu_2784_p2;
reg   [2:0] add_ln933_reg_7278;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln931_fu_2790_p1;
reg   [63:0] zext_ln931_reg_7283;
wire   [0:0] icmp_ln931_fu_2795_p2;
wire   [0:0] icmp_ln870_fu_2801_p2;
reg   [0:0] icmp_ln870_reg_7292;
wire   [0:0] icmp_ln1498_fu_2807_p2;
reg   [0:0] icmp_ln1498_reg_7302;
wire   [99:0] mul_ln1148_fu_2854_p2;
reg   [99:0] mul_ln1148_reg_7306;
wire    ap_CS_fsm_state55;
reg   [0:0] tmp_55_reg_7311;
reg   [21:0] tmp_57_reg_7317;
wire   [51:0] r_V_5_fu_2920_p2;
reg   [51:0] r_V_5_reg_7322;
wire    ap_CS_fsm_state56;
reg   [31:0] z_value_tmp_V_reg_7327;
wire    ap_CS_fsm_state57;
wire   [2:0] add_ln952_fu_2947_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state59_pp4_stage0_iter0;
wire    ap_block_state60_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln952_fu_2953_p2;
reg   [0:0] icmp_ln952_reg_7337;
wire   [63:0] i_7_cast_fu_2959_p1;
reg   [63:0] i_7_cast_reg_7341;
wire   [2:0] add_ln974_fu_2970_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state62_pp5_stage0_iter0;
wire    ap_block_state63_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln974_fu_2976_p2;
reg   [0:0] icmp_ln974_reg_7356;
wire   [63:0] i_9_cast_fu_2982_p1;
reg   [63:0] i_9_cast_reg_7360;
wire   [2:0] add_ln967_fu_3001_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state65_pp6_stage0_iter0;
wire    ap_block_state66_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln967_fu_3007_p2;
reg   [0:0] icmp_ln967_reg_7375;
wire   [63:0] i_8_cast_fu_3013_p1;
reg   [63:0] i_8_cast_reg_7379;
wire   [2:0] add_ln987_fu_3025_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state67_pp7_stage0_iter0;
wire    ap_block_state68_pp7_stage0_iter1;
wire    ap_block_state69_pp7_stage0_iter2;
wire    ap_block_state70_pp7_stage0_iter3;
wire    ap_block_state71_pp7_stage0_iter4;
wire    ap_block_state72_pp7_stage0_iter5;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln987_fu_3031_p2;
reg   [0:0] icmp_ln987_reg_7394;
reg   [0:0] icmp_ln987_reg_7394_pp7_iter1_reg;
reg   [0:0] icmp_ln987_reg_7394_pp7_iter2_reg;
reg   [0:0] icmp_ln987_reg_7394_pp7_iter3_reg;
reg   [0:0] icmp_ln987_reg_7394_pp7_iter4_reg;
reg   [2:0] new_z_i_index_V_addr_3_reg_7398;
reg   [2:0] new_z_i_index_V_addr_3_reg_7398_pp7_iter1_reg;
reg   [2:0] new_z_i_index_V_addr_3_reg_7398_pp7_iter2_reg;
reg   [2:0] new_z_i_index_V_addr_3_reg_7398_pp7_iter3_reg;
reg   [2:0] new_z_i_index_V_addr_3_reg_7398_pp7_iter4_reg;
wire   [0:0] icmp_ln935_3_fu_3043_p2;
reg   [0:0] icmp_ln935_3_reg_7409;
wire   [0:0] p_Result_130_fu_3049_p3;
reg   [0:0] p_Result_130_reg_7414;
wire   [31:0] m_71_fu_3063_p3;
reg   [31:0] m_71_reg_7419;
wire   [31:0] sub_ln944_4_fu_3089_p2;
reg   [31:0] sub_ln944_4_reg_7424;
wire   [0:0] icmp_ln958_4_fu_3183_p2;
reg   [0:0] icmp_ln958_4_reg_7430;
wire   [0:0] select_ln958_9_fu_3203_p3;
reg   [0:0] select_ln958_9_reg_7435;
wire   [7:0] trunc_ln943_4_fu_3211_p1;
reg   [7:0] trunc_ln943_4_reg_7440;
reg    ap_enable_reg_pp7_iter1;
wire   [31:0] select_ln935_1_fu_3332_p3;
reg   [31:0] select_ln935_1_reg_7450;
wire   [31:0] grp_fu_1387_p1;
reg   [31:0] conv_reg_7457;
wire   [31:0] select_ln989_fu_3422_p3;
reg   [31:0] select_ln989_reg_7464;
wire   [0:0] icmp_ln571_1_fu_3489_p2;
reg   [0:0] icmp_ln571_1_reg_7470;
wire  signed [11:0] sh_amt_1_fu_3519_p3;
reg  signed [11:0] sh_amt_1_reg_7476;
wire   [0:0] icmp_ln582_1_fu_3527_p2;
reg   [0:0] icmp_ln582_1_reg_7481;
wire   [31:0] trunc_ln583_1_fu_3533_p1;
reg   [31:0] trunc_ln583_1_reg_7486;
wire   [0:0] and_ln581_fu_3602_p2;
reg   [0:0] and_ln581_reg_7492;
wire   [0:0] or_ln571_fu_3638_p2;
reg   [0:0] or_ln571_reg_7497;
wire   [31:0] select_ln571_6_fu_3644_p3;
reg   [31:0] select_ln571_6_reg_7503;
wire   [2:0] add_ln997_fu_3703_p2;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state74_pp8_stage0_iter0;
wire    ap_block_state75_pp8_stage0_iter1;
wire    ap_block_state76_pp8_stage0_iter2;
wire    ap_block_state77_pp8_stage0_iter3;
wire    ap_block_state78_pp8_stage0_iter4;
wire    ap_block_pp8_stage0_11001;
wire   [0:0] icmp_ln997_fu_3709_p2;
reg   [0:0] icmp_ln997_reg_7513;
reg   [0:0] icmp_ln997_reg_7513_pp8_iter1_reg;
reg   [0:0] icmp_ln997_reg_7513_pp8_iter2_reg;
reg   [0:0] icmp_ln997_reg_7513_pp8_iter3_reg;
reg   [2:0] new_z_i_index_V_addr_4_reg_7517;
reg   [2:0] new_z_i_index_V_addr_4_reg_7517_pp8_iter1_reg;
reg   [2:0] new_z_i_index_V_addr_4_reg_7517_pp8_iter2_reg;
reg   [2:0] new_z_i_index_V_addr_4_reg_7517_pp8_iter3_reg;
wire   [0:0] icmp_ln935_4_fu_3720_p2;
reg   [0:0] icmp_ln935_4_reg_7523;
wire   [0:0] p_Result_136_fu_3726_p3;
reg   [0:0] p_Result_136_reg_7528;
wire   [31:0] m_73_fu_3740_p3;
reg   [31:0] m_73_reg_7533;
wire   [31:0] sub_ln944_5_fu_3766_p2;
reg   [31:0] sub_ln944_5_reg_7538;
wire   [0:0] icmp_ln958_5_fu_3860_p2;
reg   [0:0] icmp_ln958_5_reg_7544;
wire   [0:0] select_ln958_11_fu_3880_p3;
reg   [0:0] select_ln958_11_reg_7549;
wire   [7:0] trunc_ln943_5_fu_3888_p1;
reg   [7:0] trunc_ln943_5_reg_7554;
wire   [31:0] select_ln935_2_fu_4009_p3;
wire   [0:0] icmp_ln224_2_fu_4036_p2;
reg   [0:0] icmp_ln224_2_reg_7565;
wire   [0:0] icmp_ln224_3_fu_4042_p2;
reg   [0:0] icmp_ln224_3_reg_7570;
wire   [0:0] icmp_ln571_2_fu_4126_p2;
reg   [0:0] icmp_ln571_2_reg_7575;
wire  signed [11:0] sh_amt_2_fu_4156_p3;
reg  signed [11:0] sh_amt_2_reg_7581;
wire   [0:0] icmp_ln582_2_fu_4164_p2;
reg   [0:0] icmp_ln582_2_reg_7586;
wire   [31:0] trunc_ln583_2_fu_4170_p1;
reg   [31:0] trunc_ln583_2_reg_7591;
wire   [0:0] and_ln581_1_fu_4236_p2;
reg   [0:0] and_ln581_1_reg_7597;
wire   [0:0] or_ln571_5_fu_4272_p2;
reg   [0:0] or_ln571_5_reg_7602;
wire   [31:0] select_ln571_11_fu_4278_p3;
reg   [31:0] select_ln571_11_reg_7608;
wire   [2:0] add_ln1003_fu_4337_p2;
reg   [2:0] add_ln1003_reg_7613;
wire    ap_CS_fsm_pp9_stage0;
reg    ap_enable_reg_pp9_iter0;
wire    ap_block_state80_pp9_stage0_iter0;
wire    ap_block_state81_pp9_stage0_iter1;
wire    ap_block_state82_pp9_stage0_iter2;
wire    ap_block_pp9_stage0_11001;
wire   [0:0] icmp_ln1003_fu_4343_p2;
reg   [0:0] icmp_ln1003_reg_7618;
reg   [0:0] icmp_ln1003_reg_7618_pp9_iter1_reg;
wire   [63:0] i_12_cast4_fu_4349_p1;
reg   [63:0] i_12_cast4_reg_7622;
reg   [63:0] i_12_cast4_reg_7622_pp9_iter1_reg;
wire   [0:0] icmp_ln1013_fu_4458_p2;
reg   [0:0] icmp_ln1013_reg_7637;
wire    ap_CS_fsm_pp10_stage0;
wire    ap_block_state84_pp10_stage0_iter0;
wire    ap_block_state85_pp10_stage0_iter1;
wire    ap_block_state86_pp10_stage0_iter2;
wire    ap_block_state87_pp10_stage0_iter3;
wire    ap_block_state88_pp10_stage0_iter4;
wire    ap_block_state89_pp10_stage0_iter5;
wire    ap_block_state90_pp10_stage0_iter6;
wire    ap_block_state91_pp10_stage0_iter7;
wire    ap_block_state92_pp10_stage0_iter8;
wire    ap_block_state93_pp10_stage0_iter9;
wire    ap_block_state94_pp10_stage0_iter10;
wire    ap_block_state95_pp10_stage0_iter11;
wire    ap_block_state96_pp10_stage0_iter12;
wire    ap_block_state97_pp10_stage0_iter13;
wire    ap_block_state98_pp10_stage0_iter14;
wire    ap_block_state99_pp10_stage0_iter15;
wire    ap_block_state100_pp10_stage0_iter16;
wire    ap_block_state101_pp10_stage0_iter17;
wire    ap_block_state102_pp10_stage0_iter18;
wire    ap_block_state103_pp10_stage0_iter19;
wire    ap_block_state104_pp10_stage0_iter20;
wire    ap_block_state105_pp10_stage0_iter21;
wire    ap_block_state106_pp10_stage0_iter22;
wire    ap_block_state107_pp10_stage0_iter23;
wire    ap_block_state108_pp10_stage0_iter24;
wire    ap_block_state109_pp10_stage0_iter25;
wire    ap_block_state110_pp10_stage0_iter26;
wire    ap_block_state111_pp10_stage0_iter27;
wire    ap_block_state112_pp10_stage0_iter28;
wire    ap_block_state113_pp10_stage0_iter29;
wire    ap_block_state114_pp10_stage0_iter30;
wire    ap_block_state115_pp10_stage0_iter31;
wire    ap_block_state116_pp10_stage0_iter32;
wire    ap_block_state117_pp10_stage0_iter33;
wire    ap_block_state118_pp10_stage0_iter34;
wire    ap_block_state119_pp10_stage0_iter35;
wire    ap_block_state120_pp10_stage0_iter36;
wire    ap_block_state121_pp10_stage0_iter37;
wire    ap_block_state122_pp10_stage0_iter38;
wire    ap_block_state123_pp10_stage0_iter39;
wire    ap_block_state124_pp10_stage0_iter40;
wire    ap_block_state125_pp10_stage0_iter41;
wire    ap_block_state126_pp10_stage0_iter42;
wire    ap_block_state127_pp10_stage0_iter43;
wire    ap_block_state128_pp10_stage0_iter44;
wire    ap_block_state129_pp10_stage0_iter45;
wire    ap_block_state130_pp10_stage0_iter46;
wire    ap_block_state131_pp10_stage0_iter47;
wire    ap_block_state132_pp10_stage0_iter48;
wire    ap_block_state133_pp10_stage0_iter49;
wire    ap_block_state134_pp10_stage0_iter50;
wire    ap_block_state135_pp10_stage0_iter51;
wire    ap_block_pp10_stage0_11001;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter1_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter2_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter3_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter4_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter5_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter6_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter7_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter8_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter9_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter10_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter11_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter12_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter13_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter14_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter15_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter16_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter17_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter18_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter19_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter20_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter21_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter22_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter23_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter24_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter25_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter26_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter27_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter28_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter29_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter30_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter31_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter32_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter33_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter34_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter35_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter36_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter37_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter38_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter39_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter40_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter41_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter42_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter43_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter44_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter45_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter46_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter47_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter48_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter49_reg;
reg   [0:0] icmp_ln1013_reg_7637_pp10_iter50_reg;
wire   [2:0] add_ln1015_fu_4464_p2;
reg   [2:0] add_ln1015_reg_7641;
reg    ap_enable_reg_pp10_iter0;
wire   [63:0] trunc_ln1015_cast_fu_4470_p1;
reg   [63:0] trunc_ln1015_cast_reg_7647;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter1_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter2_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter3_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter4_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter5_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter6_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter7_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter8_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter9_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter10_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter11_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter12_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter13_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter14_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter15_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter16_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter17_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter18_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter19_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter20_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter21_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter22_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter23_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter24_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter25_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter26_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter27_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter28_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter29_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter30_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter31_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter32_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter33_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter34_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter35_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter36_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter37_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter38_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter39_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter40_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter41_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter42_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter43_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter44_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter45_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter46_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter47_reg;
reg   [63:0] trunc_ln1015_cast_reg_7647_pp10_iter48_reg;
wire   [2:0] add_ln1014_fu_4475_p2;
reg   [2:0] add_ln1014_reg_7657;
reg   [2:0] add_ln1014_reg_7657_pp10_iter1_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter2_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter3_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter4_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter5_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter6_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter7_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter8_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter9_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter10_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter11_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter12_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter13_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter14_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter15_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter16_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter17_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter18_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter19_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter20_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter21_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter22_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter23_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter24_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter25_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter26_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter27_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter28_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter29_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter30_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter31_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter32_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter33_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter34_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter35_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter36_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter37_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter38_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter39_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter40_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter41_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter42_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter43_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter44_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter45_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter46_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter47_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter48_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter49_reg;
reg   [2:0] add_ln1014_reg_7657_pp10_iter50_reg;
reg   [31:0] this_V_write_assign_reg_7672;
wire   [0:0] tobool_i_i483_fu_4572_p2;
reg   [0:0] tobool_i_i483_reg_7677;
wire    ap_CS_fsm_state136;
wire   [0:0] p_Result_146_fu_4578_p3;
reg   [0:0] p_Result_146_reg_7682;
wire   [31:0] tmp_V_26_fu_4592_p3;
reg   [31:0] tmp_V_26_reg_7687;
wire   [63:0] m_75_fu_4600_p1;
reg   [63:0] m_75_reg_7694;
wire   [2:0] add_ln1027_fu_4604_p2;
reg    ap_enable_reg_pp11_iter0;
wire   [0:0] icmp_ln1027_fu_4610_p2;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter1_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter2_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter3_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter4_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter5_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter6_reg;
reg   [0:0] icmp_ln1027_reg_7705_pp11_iter7_reg;
wire   [1:0] trunc_ln1033_fu_4621_p1;
reg   [1:0] trunc_ln1033_reg_7714;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter1_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter2_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter3_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter4_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter5_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter6_reg;
reg   [1:0] trunc_ln1033_reg_7714_pp11_iter7_reg;
reg   [0:0] p_Result_142_reg_7719;
wire   [31:0] tmp_V_17_fu_4633_p2;
reg   [31:0] tmp_V_17_reg_7725;
wire   [31:0] select_ln935_3_fu_4918_p3;
reg   [31:0] select_ln935_3_reg_7730;
wire   [31:0] retval_0_i_i545_fu_5184_p3;
reg   [31:0] retval_0_i_i545_reg_7735;
wire   [30:0] p_Result_150_fu_5195_p1;
reg   [30:0] p_Result_150_reg_7740;
wire   [31:0] bitcast_ln351_2_fu_5202_p1;
reg   [0:0] p_Result_151_reg_7750;
reg   [10:0] exp_tmp_3_reg_7755;
wire   [51:0] trunc_ln565_3_fu_5233_p1;
reg   [51:0] trunc_ln565_3_reg_7760;
wire   [0:0] icmp_ln571_3_fu_5237_p2;
reg   [0:0] icmp_ln571_3_reg_7765;
wire   [31:0] layerSMin_V_2_fu_5472_p3;
reg    ap_enable_reg_pp11_iter8;
wire   [31:0] layerWithSmallestShift_2_fu_5480_p3;
wire   [11:0] select_ln985_fu_5497_p3;
reg   [11:0] select_ln985_reg_7782;
wire    ap_CS_fsm_state146;
wire   [0:0] p_Result_153_fu_5528_p3;
reg   [0:0] p_Result_153_reg_7800;
wire   [0:0] icmp_ln935_5_fu_5522_p2;
wire   [31:0] tmp_V_27_fu_5542_p3;
reg   [31:0] tmp_V_27_reg_7805;
wire   [31:0] bitcast_ln744_7_fu_5853_p1;
wire    ap_CS_fsm_state148;
wire   [31:0] bitcast_ln351_fu_5869_p1;
wire    ap_CS_fsm_state149;
wire   [0:0] icmp_ln1050_fu_5892_p2;
reg   [0:0] icmp_ln1050_reg_7821;
wire   [0:0] icmp_ln1050_1_fu_5898_p2;
reg   [0:0] icmp_ln1050_1_reg_7826;
wire    ap_CS_fsm_state151;
wire   [0:0] and_ln1050_fu_5908_p2;
wire   [31:0] z_bits_1_fu_5945_p1;
wire    ap_CS_fsm_state152;
wire   [0:0] p_Result_158_fu_5968_p3;
reg   [0:0] p_Result_158_reg_7847;
wire    ap_CS_fsm_state153;
wire   [0:0] icmp_ln935_7_fu_5962_p2;
wire   [31:0] tmp_V_28_fu_5982_p3;
reg   [31:0] tmp_V_28_reg_7852;
wire   [31:0] bitcast_ln744_8_fu_6293_p1;
wire    ap_CS_fsm_state154;
wire   [31:0] bitcast_ln351_3_fu_6309_p1;
wire    ap_CS_fsm_state155;
wire   [0:0] icmp_ln1055_fu_6332_p2;
reg   [0:0] icmp_ln1055_reg_7868;
wire   [0:0] icmp_ln1055_1_fu_6338_p2;
reg   [0:0] icmp_ln1055_1_reg_7873;
wire    ap_CS_fsm_state157;
wire   [0:0] and_ln1055_fu_6348_p2;
wire   [31:0] z_bits_2_fu_6393_p1;
wire    ap_CS_fsm_state158;
wire   [0:0] p_Result_163_fu_6416_p3;
reg   [0:0] p_Result_163_reg_7894;
wire    ap_CS_fsm_state159;
wire   [0:0] icmp_ln935_8_fu_6410_p2;
wire   [31:0] tmp_V_29_fu_6430_p3;
reg   [31:0] tmp_V_29_reg_7899;
wire   [31:0] bitcast_ln744_9_fu_6741_p1;
wire    ap_CS_fsm_state160;
wire   [31:0] bitcast_ln351_4_fu_6757_p1;
wire    ap_CS_fsm_state161;
wire   [0:0] icmp_ln1060_fu_6780_p2;
reg   [0:0] icmp_ln1060_reg_7915;
wire   [0:0] icmp_ln1060_1_fu_6786_p2;
reg   [0:0] icmp_ln1060_1_reg_7920;
wire   [0:0] and_ln1060_fu_6796_p2;
reg   [0:0] and_ln1060_reg_7925;
wire    ap_CS_fsm_state163;
wire   [31:0] z_bits_3_fu_6841_p1;
wire    ap_CS_fsm_state164;
wire   [31:0] z_top_min_V_10_fu_6871_p3;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state12;
wire    grp_patch_buffer_add_patch2_fu_1330_ap_ready;
wire    grp_patch_buffer_add_patch2_fu_1330_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state27;
wire    ap_CS_fsm_state43;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state44;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state59;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state61;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state62;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state65;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state64;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state67;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_enable_reg_pp7_iter5;
wire    ap_CS_fsm_state73;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state74;
reg    ap_enable_reg_pp8_iter1;
reg    ap_enable_reg_pp8_iter2;
reg    ap_enable_reg_pp8_iter3;
reg    ap_enable_reg_pp8_iter4;
wire    ap_CS_fsm_state79;
wire    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state80;
reg    ap_enable_reg_pp9_iter1;
reg    ap_enable_reg_pp9_iter2;
wire    ap_CS_fsm_state83;
wire    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state84;
reg    ap_enable_reg_pp10_iter1;
reg    ap_enable_reg_pp10_iter2;
reg    ap_enable_reg_pp10_iter3;
reg    ap_enable_reg_pp10_iter4;
reg    ap_enable_reg_pp10_iter5;
reg    ap_enable_reg_pp10_iter6;
reg    ap_enable_reg_pp10_iter7;
reg    ap_enable_reg_pp10_iter8;
reg    ap_enable_reg_pp10_iter9;
reg    ap_enable_reg_pp10_iter10;
reg    ap_enable_reg_pp10_iter11;
reg    ap_enable_reg_pp10_iter12;
reg    ap_enable_reg_pp10_iter13;
reg    ap_enable_reg_pp10_iter14;
reg    ap_enable_reg_pp10_iter15;
reg    ap_enable_reg_pp10_iter16;
reg    ap_enable_reg_pp10_iter17;
reg    ap_enable_reg_pp10_iter18;
reg    ap_enable_reg_pp10_iter19;
reg    ap_enable_reg_pp10_iter20;
reg    ap_enable_reg_pp10_iter21;
reg    ap_enable_reg_pp10_iter22;
reg    ap_enable_reg_pp10_iter23;
reg    ap_enable_reg_pp10_iter24;
reg    ap_enable_reg_pp10_iter25;
reg    ap_enable_reg_pp10_iter26;
reg    ap_enable_reg_pp10_iter27;
reg    ap_enable_reg_pp10_iter28;
reg    ap_enable_reg_pp10_iter29;
reg    ap_enable_reg_pp10_iter30;
reg    ap_enable_reg_pp10_iter31;
reg    ap_enable_reg_pp10_iter32;
reg    ap_enable_reg_pp10_iter33;
reg    ap_enable_reg_pp10_iter34;
reg    ap_enable_reg_pp10_iter35;
reg    ap_enable_reg_pp10_iter36;
reg    ap_enable_reg_pp10_iter37;
reg    ap_enable_reg_pp10_iter38;
reg    ap_enable_reg_pp10_iter39;
reg    ap_enable_reg_pp10_iter40;
reg    ap_enable_reg_pp10_iter41;
reg    ap_enable_reg_pp10_iter42;
reg    ap_enable_reg_pp10_iter43;
reg    ap_enable_reg_pp10_iter44;
reg    ap_enable_reg_pp10_iter45;
reg    ap_enable_reg_pp10_iter46;
reg    ap_enable_reg_pp10_iter47;
reg    ap_enable_reg_pp10_iter48;
reg    ap_enable_reg_pp10_iter49;
reg    ap_enable_reg_pp10_iter50;
reg    ap_enable_reg_pp10_iter51;
wire    ap_block_pp11_stage0_subdone;
reg    ap_condition_pp11_flush_enable;
reg    ap_enable_reg_pp11_iter2;
reg    ap_enable_reg_pp11_iter3;
reg    ap_enable_reg_pp11_iter4;
reg    ap_enable_reg_pp11_iter5;
reg    ap_enable_reg_pp11_iter6;
reg    ap_enable_reg_pp11_iter7;
reg   [6:0] init_patch_V_address0;
reg    init_patch_V_ce0;
reg    init_patch_V_we0;
wire   [95:0] init_patch_V_q0;
reg   [6:0] init_patch_V_address1;
reg    init_patch_V_ce1;
reg    init_patch_V_we1;
wire   [95:0] init_patch_V_q1;
reg   [6:0] init_patch_V_1_address0;
reg    init_patch_V_1_ce0;
reg    init_patch_V_1_we0;
wire   [95:0] init_patch_V_1_q0;
reg   [6:0] init_patch_V_1_address1;
reg    init_patch_V_1_ce1;
reg    init_patch_V_1_we1;
wire   [95:0] init_patch_V_1_q1;
reg   [2:0] current_z_i_index_V_address0;
reg    current_z_i_index_V_ce0;
reg    current_z_i_index_V_we0;
reg   [31:0] current_z_i_index_V_d0;
wire   [31:0] current_z_i_index_V_q0;
reg   [2:0] new_z_i_index_V_address0;
reg    new_z_i_index_V_ce0;
reg    new_z_i_index_V_we0;
reg   [31:0] new_z_i_index_V_d0;
wire   [31:0] new_z_i_index_V_q0;
reg   [2:0] new_z_i_index_V_address1;
reg    new_z_i_index_V_ce1;
reg    new_z_i_index_V_we1;
wire   [31:0] new_z_i_index_V_d1;
wire   [31:0] new_z_i_index_V_q1;
reg   [2:0] new_z_i_V_address0;
reg    new_z_i_V_ce0;
reg    new_z_i_V_we0;
reg   [31:0] new_z_i_V_d0;
wire   [31:0] new_z_i_V_q0;
reg   [2:0] new_z_i_atTop_V_address0;
reg    new_z_i_atTop_V_ce0;
reg    new_z_i_atTop_V_we0;
reg   [31:0] new_z_i_atTop_V_d0;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_ap_start;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_ap_done;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_ap_idle;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_ap_ready;
wire   [11:0] grp_alignedtoline_per_layer_loop3_fu_1250_points_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_points_ce0;
wire   [11:0] grp_alignedtoline_per_layer_loop3_fu_1250_points_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_points_ce1;
wire   [2:0] grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce0;
wire   [2:0] grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce1;
reg   [31:0] grp_alignedtoline_per_layer_loop3_fu_1250_p_read;
reg   [31:0] grp_alignedtoline_per_layer_loop3_fu_1250_z_top;
reg   [0:0] grp_alignedtoline_per_layer_loop3_fu_1250_leftRight_offset;
wire   [6:0] grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce0;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we0;
wire   [95:0] grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d0;
wire   [6:0] grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce1;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we1;
wire   [95:0] grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d1;
reg   [2:0] grp_alignedtoline_per_layer_loop3_fu_1250_i_offset;
wire    grp_getParallelograms_fu_1285_ap_start;
wire    grp_getParallelograms_fu_1285_ap_done;
wire    grp_getParallelograms_fu_1285_ap_idle;
wire    grp_getParallelograms_fu_1285_ap_ready;
wire   [7:0] grp_getParallelograms_fu_1285_superpoints_address0;
wire    grp_getParallelograms_fu_1285_superpoints_ce0;
wire   [7:0] grp_getParallelograms_fu_1285_superpoints_address1;
wire    grp_getParallelograms_fu_1285_superpoints_ce1;
wire   [3:0] grp_getParallelograms_fu_1285_pSlope_address0;
wire    grp_getParallelograms_fu_1285_pSlope_ce0;
wire    grp_getParallelograms_fu_1285_pSlope_we0;
wire   [31:0] grp_getParallelograms_fu_1285_pSlope_d0;
wire   [3:0] grp_getParallelograms_fu_1285_shadow_bottomL_jR_address0;
wire    grp_getParallelograms_fu_1285_shadow_bottomL_jR_ce0;
wire    grp_getParallelograms_fu_1285_shadow_bottomL_jR_we0;
wire   [31:0] grp_getParallelograms_fu_1285_shadow_bottomL_jR_d0;
wire   [3:0] grp_getParallelograms_fu_1285_shadow_bottomR_jR_address0;
wire    grp_getParallelograms_fu_1285_shadow_bottomR_jR_ce0;
wire    grp_getParallelograms_fu_1285_shadow_bottomR_jR_we0;
wire   [31:0] grp_getParallelograms_fu_1285_shadow_bottomR_jR_d0;
wire   [3:0] grp_getParallelograms_fu_1285_shadow_bottomL_jL_address0;
wire    grp_getParallelograms_fu_1285_shadow_bottomL_jL_ce0;
wire    grp_getParallelograms_fu_1285_shadow_bottomL_jL_we0;
wire   [31:0] grp_getParallelograms_fu_1285_shadow_bottomL_jL_d0;
wire   [3:0] grp_getParallelograms_fu_1285_shadow_bottomR_jL_address0;
wire    grp_getParallelograms_fu_1285_shadow_bottomR_jL_ce0;
wire    grp_getParallelograms_fu_1285_shadow_bottomR_jL_we0;
wire   [31:0] grp_getParallelograms_fu_1285_shadow_bottomR_jL_d0;
wire   [3:0] grp_getParallelograms_fu_1285_z1_min_address0;
wire    grp_getParallelograms_fu_1285_z1_min_ce0;
wire    grp_getParallelograms_fu_1285_z1_min_we0;
wire   [25:0] grp_getParallelograms_fu_1285_z1_min_d0;
wire   [3:0] grp_getParallelograms_fu_1285_z1_max_address0;
wire    grp_getParallelograms_fu_1285_z1_max_ce0;
wire    grp_getParallelograms_fu_1285_z1_max_we0;
wire   [25:0] grp_getParallelograms_fu_1285_z1_max_d0;
wire    grp_get_index_from_z_fu_1317_ap_start;
wire    grp_get_index_from_z_fu_1317_ap_done;
wire    grp_get_index_from_z_fu_1317_ap_idle;
wire    grp_get_index_from_z_fu_1317_ap_ready;
wire   [11:0] grp_get_index_from_z_fu_1317_points_address0;
wire    grp_get_index_from_z_fu_1317_points_ce0;
wire   [2:0] grp_get_index_from_z_fu_1317_num_points_address0;
wire    grp_get_index_from_z_fu_1317_num_points_ce0;
reg   [2:0] grp_get_index_from_z_fu_1317_layer;
reg   [31:0] grp_get_index_from_z_fu_1317_z_value;
wire    grp_patch_buffer_add_patch2_fu_1330_ap_start;
wire    grp_patch_buffer_add_patch2_fu_1330_ap_idle;
wire   [6:0] grp_patch_buffer_add_patch2_fu_1330_new_patch_address0;
wire    grp_patch_buffer_add_patch2_fu_1330_new_patch_ce0;
reg   [95:0] grp_patch_buffer_add_patch2_fu_1330_new_patch_q0;
wire   [6:0] grp_patch_buffer_add_patch2_fu_1330_new_patch_address1;
wire    grp_patch_buffer_add_patch2_fu_1330_new_patch_ce1;
reg   [95:0] grp_patch_buffer_add_patch2_fu_1330_new_patch_q1;
wire   [7:0] grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address0;
wire    grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce0;
wire    grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we0;
wire   [31:0] grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d0;
wire   [7:0] grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address1;
wire    grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce1;
wire    grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we1;
wire   [31:0] grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d1;
wire   [1:0] grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o;
wire    grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o_ap_vld;
wire   [31:0] grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o;
wire    grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o_ap_vld;
wire    grp_get_acceptanceCorners_fu_1341_ap_start;
wire    grp_get_acceptanceCorners_fu_1341_ap_done;
wire    grp_get_acceptanceCorners_fu_1341_ap_idle;
wire    grp_get_acceptanceCorners_fu_1341_ap_ready;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address0;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address1;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address0;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address1;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address0;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address1;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address0;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address1;
wire    grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_z1_min_address0;
wire    grp_get_acceptanceCorners_fu_1341_z1_min_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_1341_z1_max_address0;
wire    grp_get_acceptanceCorners_fu_1341_z1_max_ce0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_a_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_1341_a_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_1341_a_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_1341_a_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_a_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_1341_a_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_1341_a_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_1341_a_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_b_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_1341_b_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_1341_b_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_1341_b_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_b_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_1341_b_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_1341_b_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_1341_b_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_c_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_1341_c_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_1341_c_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_1341_c_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_c_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_1341_c_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_1341_c_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_1341_c_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_d_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_1341_d_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_1341_d_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_1341_d_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_d_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_1341_d_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_1341_d_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_1341_d_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_squareAcceptance_address0;
wire    grp_get_acceptanceCorners_fu_1341_squareAcceptance_ce0;
wire    grp_get_acceptanceCorners_fu_1341_squareAcceptance_we0;
wire   [0:0] grp_get_acceptanceCorners_fu_1341_squareAcceptance_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_flatTop_address0;
wire    grp_get_acceptanceCorners_fu_1341_flatTop_ce0;
wire    grp_get_acceptanceCorners_fu_1341_flatTop_we0;
wire   [0:0] grp_get_acceptanceCorners_fu_1341_flatTop_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_flatBottom_address0;
wire    grp_get_acceptanceCorners_fu_1341_flatBottom_ce0;
wire    grp_get_acceptanceCorners_fu_1341_flatBottom_we0;
wire   [0:0] grp_get_acceptanceCorners_fu_1341_flatBottom_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_1341_triangleAcceptance_address0;
wire    grp_get_acceptanceCorners_fu_1341_triangleAcceptance_ce0;
wire    grp_get_acceptanceCorners_fu_1341_triangleAcceptance_we0;
wire   [0:0] grp_get_acceptanceCorners_fu_1341_triangleAcceptance_d0;
reg   [2:0] ap_phi_mux_layer_phi_fu_833_p4;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
reg  signed [31:0] rhs_reg_921;
reg   [31:0] z_top_min_V_reg_955;
reg   [2:0] ap_phi_mux_layer_1_phi_fu_1000_p4;
reg  signed [31:0] z_top_min_V_11_reg_1018;
reg   [31:0] previous_z_top_min_V_reg_1029;
reg   [2:0] i_6_reg_1042;
wire    ap_CS_fsm_state58;
wire   [31:0] current_z_top_index_V_1_fu_2964_p2;
reg   [31:0] current_z_top_index_V_2_reg_1065;
wire   [31:0] current_z_top_index_V_3_fu_2994_p2;
reg   [31:0] current_z_top_index_V_5_reg_1086;
wire   [31:0] current_z_top_index_V_4_fu_2987_p2;
reg   [2:0] ap_phi_mux_i_12_phi_fu_1133_p4;
wire    ap_block_pp9_stage0;
reg   [2:0] ap_phi_mux_i_13_phi_fu_1145_p4;
wire    ap_block_pp10_stage0;
reg   [31:0] dc_1_reg_1186;
reg  signed [31:0] z_top_min_V_13_reg_1197;
reg   [31:0] dc_2_reg_1207;
reg  signed [31:0] z_top_min_V_14_reg_1218;
reg   [31:0] dc_3_reg_1229;
reg  signed [31:0] z_top_min_V_15_reg_1240;
reg    grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_ce0;
wire   [2:0] grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_address0;
reg    grp_getParallelograms_fu_1285_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state47;
reg    grp_get_index_from_z_fu_1317_ap_start_reg;
wire    ap_CS_fsm_state52;
reg    grp_patch_buffer_add_patch2_fu_1330_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state42;
reg    grp_get_acceptanceCorners_fu_1341_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state49;
wire   [63:0] zext_ln40_1_fu_1517_p1;
wire   [63:0] zext_ln50_23_fu_2015_p1;
wire   [63:0] zext_ln50_25_fu_2063_p1;
wire   [63:0] zext_ln40_3_fu_2675_p1;
wire   [63:0] zext_ln875_fu_2691_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire    ap_block_pp6_stage0;
wire   [63:0] i_10_cast_fu_3037_p1;
wire    ap_block_pp7_stage0;
wire   [63:0] i_11_cast_fu_3715_p1;
wire    ap_block_pp8_stage0;
wire   [63:0] zext_ln1004_fu_4448_p1;
wire   [63:0] zext_ln1014_fu_4568_p1;
wire   [63:0] i_15_cast_fu_4616_p1;
wire    ap_block_pp11_stage0;
wire   [63:0] zext_ln1048_fu_5504_p1;
wire   [63:0] zext_ln1052_fu_5940_p1;
wire   [63:0] zext_ln1057_fu_6388_p1;
wire   [63:0] zext_ln1062_fu_6836_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [31:0] shl_ln731_fu_2940_p2;
wire   [31:0] grp_fu_1430_p2;
wire   [31:0] add_ln703_1_fu_3018_p2;
wire   [31:0] select_ln571_9_fu_3694_p3;
wire   [31:0] z_bits_fu_4453_p1;
wire   [31:0] grp_fu_1387_p0;
reg   [31:0] grp_fu_1390_p0;
reg   [31:0] grp_fu_1393_p0;
reg   [31:0] grp_fu_1393_p1;
wire   [0:0] icmp_ln39_fu_1477_p2;
wire   [2:0] add_ln37_fu_1471_p2;
wire   [4:0] select_ln37_fu_1483_p3;
wire   [6:0] tmp_85_fu_1499_p3;
wire   [6:0] zext_ln40_fu_1507_p1;
wire   [6:0] add_ln40_fu_1511_p2;
wire   [5:0] tmp_83_fu_1546_p3;
wire   [7:0] tmp_82_fu_1538_p3;
wire   [7:0] zext_ln50_fu_1554_p1;
wire  signed [31:0] sext_ln703_7_fu_1574_p0;
wire  signed [32:0] sext_ln703_fu_1570_p1;
wire   [32:0] ret_V_23_fu_1578_p2;
wire   [31:0] trunc_ln1118_fu_1584_p1;
wire   [50:0] tmp_84_fu_1596_p3;
wire   [51:0] shl_ln_fu_1588_p3;
wire  signed [51:0] sext_ln1118_2_fu_1604_p1;
wire  signed [31:0] lhs_7_fu_1614_p1;
wire   [51:0] r_V_3_fu_1608_p2;
wire   [51:0] lhs_7_fu_1614_p3;
wire   [51:0] ret_V_9_fu_1622_p2;
wire   [0:0] icmp_ln1494_fu_1638_p2;
wire   [0:0] and_ln1494_fu_1644_p2;
wire  signed [31:0] icmp_ln935_fu_1656_p0;
wire  signed [31:0] p_Result_120_fu_1662_p1;
wire  signed [31:0] tmp_V_fu_1670_p1;
wire   [31:0] tmp_V_fu_1670_p2;
wire  signed [31:0] m_67_fu_1676_p2;
reg   [31:0] p_Result_121_fu_1684_p4;
reg   [31:0] l_fu_1694_p3;
wire   [31:0] lsb_index_fu_1708_p2;
wire   [30:0] tmp_41_fu_1714_p4;
wire   [5:0] trunc_ln947_fu_1730_p1;
wire   [5:0] sub_ln947_fu_1734_p2;
wire   [31:0] zext_ln947_fu_1740_p1;
wire   [31:0] lshr_ln947_fu_1744_p2;
wire   [31:0] shl_ln949_fu_1750_p2;
wire   [31:0] or_ln949_12_fu_1756_p2;
wire   [31:0] and_ln949_fu_1762_p2;
wire   [0:0] tmp_42_fu_1774_p3;
wire   [0:0] p_Result_122_fu_1788_p3;
wire   [0:0] xor_ln949_fu_1782_p2;
wire   [0:0] icmp_ln946_fu_1724_p2;
wire   [0:0] icmp_ln949_fu_1768_p2;
wire   [0:0] select_ln946_fu_1808_p3;
wire   [0:0] and_ln949_6_fu_1802_p2;
wire   [31:0] projectionOfCornerToBeam_V_fu_1628_p4;
wire   [31:0] sub_ln959_fu_1837_p2;
wire   [63:0] zext_ln959_10_fu_1834_p1;
wire   [63:0] zext_ln959_fu_1842_p1;
wire   [31:0] add_ln958_fu_1852_p2;
wire   [63:0] zext_ln958_fu_1857_p1;
wire   [63:0] lshr_ln958_fu_1861_p2;
wire   [63:0] shl_ln959_fu_1846_p2;
wire   [63:0] m_fu_1867_p3;
wire   [63:0] zext_ln961_fu_1874_p1;
wire   [63:0] m_35_fu_1877_p2;
wire   [62:0] m_68_fu_1883_p4;
wire   [0:0] p_Result_s_fu_1897_p3;
wire   [7:0] sub_ln964_fu_1913_p2;
wire   [7:0] select_ln943_fu_1905_p3;
wire   [7:0] add_ln964_fu_1918_p2;
wire   [63:0] zext_ln962_fu_1893_p1;
wire   [8:0] tmp_2_fu_1924_p3;
wire   [63:0] p_Result_123_fu_1931_p5;
wire   [31:0] LD_fu_1943_p1;
wire   [22:0] trunc_ln_fu_1952_p4;
wire   [0:0] or_ln971_fu_1974_p2;
wire   [0:0] grp_fu_1393_p2;
wire   [0:0] and_ln971_fu_1978_p2;
wire   [0:0] or_ln935_fu_1984_p2;
wire   [7:0] zext_ln50_22_fu_2006_p1;
wire   [7:0] add_ln50_5_fu_2010_p2;
wire   [0:0] icmp_ln1495_6_fu_2020_p2;
wire   [7:0] zext_ln50_24_fu_2054_p1;
wire   [7:0] add_ln50_6_fu_2058_p2;
wire   [0:0] icmp_ln1495_7_fu_2068_p2;
wire   [31:0] tmp_V_10_fu_2104_p2;
wire   [31:0] m_69_fu_2110_p3;
reg   [31:0] p_Result_125_fu_2118_p4;
reg   [31:0] l_4_fu_2128_p3;
wire   [31:0] sub_ln944_3_fu_2136_p2;
wire   [31:0] lsb_index_4_fu_2142_p2;
wire   [30:0] tmp_46_fu_2148_p4;
wire   [5:0] trunc_ln947_3_fu_2164_p1;
wire   [5:0] sub_ln947_3_fu_2168_p2;
wire   [31:0] zext_ln947_3_fu_2174_p1;
wire   [31:0] lshr_ln947_3_fu_2178_p2;
wire   [31:0] shl_ln949_3_fu_2184_p2;
wire   [31:0] or_ln949_fu_2190_p2;
wire   [31:0] and_ln949_7_fu_2196_p2;
wire   [0:0] tmp_47_fu_2208_p3;
wire   [0:0] p_Result_126_fu_2222_p3;
wire   [0:0] xor_ln949_3_fu_2216_p2;
wire   [31:0] sub_ln959_3_fu_2246_p2;
wire   [63:0] zext_ln959_11_fu_2242_p1;
wire   [63:0] zext_ln959_5_fu_2252_p1;
wire   [0:0] icmp_ln946_3_fu_2158_p2;
wire   [0:0] icmp_ln949_3_fu_2202_p2;
wire   [31:0] add_ln958_3_fu_2270_p2;
wire   [63:0] zext_ln958_3_fu_2276_p1;
wire   [0:0] icmp_ln958_3_fu_2230_p2;
wire   [0:0] select_ln946_3_fu_2262_p3;
wire   [0:0] and_ln949_9_fu_2236_p2;
wire   [63:0] lshr_ln958_3_fu_2280_p2;
wire   [63:0] shl_ln959_3_fu_2256_p2;
wire   [0:0] select_ln958_7_fu_2286_p3;
wire   [63:0] m_39_fu_2294_p3;
wire   [63:0] zext_ln961_3_fu_2302_p1;
wire   [63:0] m_40_fu_2306_p2;
wire   [7:0] sub_ln964_3_fu_2344_p2;
wire   [7:0] select_ln943_3_fu_2337_p3;
wire   [7:0] add_ln964_3_fu_2349_p2;
wire   [63:0] zext_ln962_3_fu_2334_p1;
wire   [8:0] tmp_4_fu_2355_p3;
wire   [63:0] p_Result_127_fu_2362_p5;
wire   [31:0] LD_5_fu_2374_p1;
wire   [31:0] bitcast_ln744_2_fu_2378_p1;
wire   [31:0] bitcast_ln224_fu_2391_p1;
wire   [7:0] tmp_14_fu_2395_p4;
wire   [22:0] trunc_ln224_fu_2405_p1;
wire   [0:0] or_ln224_fu_2421_p2;
wire   [0:0] and_ln224_fu_2425_p2;
wire   [63:0] bitcast_ln702_fu_2431_p1;
wire   [63:0] ireg_fu_2435_p3;
wire   [10:0] exp_tmp_fu_2455_p4;
wire   [51:0] trunc_ln565_fu_2469_p1;
wire   [52:0] p_Result_129_fu_2473_p3;
wire   [53:0] zext_ln569_fu_2481_p1;
wire   [0:0] p_Result_128_fu_2447_p3;
wire   [53:0] man_V_5_fu_2485_p2;
wire   [62:0] trunc_ln555_fu_2443_p1;
wire   [11:0] zext_ln455_fu_2465_p1;
wire   [11:0] F2_fu_2505_p2;
wire   [11:0] add_ln581_fu_2517_p2;
wire   [11:0] sub_ln581_fu_2523_p2;
wire  signed [11:0] sh_amt_fu_2529_p3;
wire   [53:0] man_V_6_fu_2491_p3;
wire   [6:0] tmp_51_fu_2551_p4;
wire   [31:0] trunc_ln602_fu_2547_p1;
wire  signed [31:0] sext_ln581_fu_2537_p1;
wire   [0:0] tmp_52_fu_2579_p3;
wire   [5:0] trunc_ln586_fu_2595_p1;
wire   [53:0] zext_ln586_fu_2599_p1;
wire   [53:0] ashr_ln586_fu_2603_p2;
wire   [0:0] icmp_ln39_1_fu_2635_p2;
wire   [2:0] add_ln37_1_fu_2629_p2;
wire   [4:0] select_ln37_2_fu_2641_p3;
wire   [6:0] tmp_86_fu_2657_p3;
wire   [6:0] zext_ln40_2_fu_2665_p1;
wire   [6:0] add_ln40_1_fu_2669_p2;
wire  signed [32:0] sext_ln703_3_fu_2697_p1;
wire  signed [32:0] sext_ln703_4_fu_2706_p1;
wire  signed [32:0] sext_ln703_5_fu_2709_p1;
wire   [32:0] ret_V_fu_2701_p2;
wire   [32:0] ret_V_10_fu_2713_p2;
wire   [0:0] icmp_ln1495_8_fu_2719_p2;
wire   [32:0] select_ln703_fu_2725_p3;
wire   [31:0] white_space_height_V_fu_2733_p1;
wire   [11:0] trunc_ln984_fu_2749_p1;
wire   [32:0] ret_V_24_fu_2775_p2;
wire   [4:0] trunc_ln731_fu_2813_p1;
wire   [24:0] radius_k_V_fu_2817_p3;
wire   [24:0] radius_k_V_2_fu_2825_p3;
wire   [25:0] zext_ln1193_fu_2832_p1;
wire   [25:0] ret_V_11_fu_2836_p2;
wire  signed [45:0] tmp_87_fu_2842_p3;
wire   [54:0] mul_ln1148_fu_2854_p1;
wire   [99:0] sub_ln1148_fu_2878_p2;
wire   [21:0] tmp_56_fu_2883_p4;
wire   [21:0] select_ln1148_fu_2893_p3;
wire  signed [28:0] sext_ln1148_2_fu_2899_p1;
wire   [28:0] sub_ln1148_2_fu_2903_p2;
wire   [28:0] select_ln1148_2_fu_2909_p3;
wire  signed [32:0] r_V_5_fu_2920_p0;
wire  signed [23:0] r_V_5_fu_2920_p1;
wire   [51:0] ret_V_13_fu_2925_p2;
wire   [31:0] tmp_V_13_fu_3057_p2;
reg   [31:0] p_Result_131_fu_3071_p4;
reg   [31:0] l_5_fu_3081_p3;
wire   [31:0] lsb_index_5_fu_3095_p2;
wire   [30:0] tmp_59_fu_3101_p4;
wire   [5:0] trunc_ln947_4_fu_3117_p1;
wire   [5:0] sub_ln947_4_fu_3121_p2;
wire   [31:0] zext_ln947_4_fu_3127_p1;
wire   [31:0] lshr_ln947_4_fu_3131_p2;
wire   [31:0] shl_ln949_4_fu_3137_p2;
wire   [31:0] or_ln949_13_fu_3143_p2;
wire   [31:0] and_ln949_11_fu_3149_p2;
wire   [0:0] tmp_60_fu_3161_p3;
wire   [0:0] p_Result_132_fu_3175_p3;
wire   [0:0] xor_ln949_4_fu_3169_p2;
wire   [0:0] icmp_ln946_4_fu_3111_p2;
wire   [0:0] icmp_ln949_4_fu_3155_p2;
wire   [0:0] select_ln946_4_fu_3195_p3;
wire   [0:0] and_ln949_13_fu_3189_p2;
wire   [31:0] sub_ln959_4_fu_3218_p2;
wire   [63:0] zext_ln959_12_fu_3215_p1;
wire   [63:0] zext_ln959_6_fu_3223_p1;
wire   [31:0] add_ln958_4_fu_3233_p2;
wire   [63:0] zext_ln958_4_fu_3238_p1;
wire   [63:0] lshr_ln958_4_fu_3242_p2;
wire   [63:0] shl_ln959_4_fu_3227_p2;
wire   [63:0] m_43_fu_3248_p3;
wire   [63:0] zext_ln961_4_fu_3255_p1;
wire   [63:0] m_44_fu_3258_p2;
wire   [62:0] m_72_fu_3264_p4;
wire   [0:0] p_Result_63_fu_3278_p3;
wire   [7:0] sub_ln964_4_fu_3294_p2;
wire   [7:0] select_ln943_4_fu_3286_p3;
wire   [7:0] add_ln964_4_fu_3299_p2;
wire   [63:0] zext_ln962_4_fu_3274_p1;
wire   [8:0] tmp_7_fu_3305_p3;
wire   [63:0] p_Result_133_fu_3312_p5;
wire   [31:0] LD_6_fu_3324_p1;
wire   [31:0] bitcast_ln744_3_fu_3328_p1;
wire   [31:0] bitcast_ln200_fu_3340_p1;
wire   [31:0] bitcast_ln200_1_fu_3357_p1;
wire   [7:0] tmp_16_fu_3343_p4;
wire   [22:0] trunc_ln200_fu_3353_p1;
wire   [0:0] icmp_ln200_2_fu_3380_p2;
wire   [0:0] icmp_ln200_1_fu_3374_p2;
wire   [7:0] tmp_17_fu_3360_p4;
wire   [22:0] trunc_ln200_1_fu_3370_p1;
wire   [0:0] icmp_ln200_4_fu_3398_p2;
wire   [0:0] icmp_ln200_3_fu_3392_p2;
wire   [0:0] or_ln200_fu_3386_p2;
wire   [0:0] or_ln200_1_fu_3404_p2;
wire   [0:0] and_ln200_fu_3410_p2;
wire   [0:0] and_ln200_1_fu_3416_p2;
wire   [63:0] ireg_1_fu_3429_p1;
wire   [10:0] exp_tmp_1_fu_3445_p4;
wire   [51:0] trunc_ln565_1_fu_3459_p1;
wire   [52:0] p_Result_135_fu_3463_p3;
wire   [53:0] zext_ln569_1_fu_3471_p1;
wire   [0:0] p_Result_134_fu_3437_p3;
wire   [53:0] man_V_8_fu_3475_p2;
wire   [62:0] trunc_ln555_1_fu_3433_p1;
wire   [11:0] zext_ln455_1_fu_3455_p1;
wire   [11:0] F2_1_fu_3495_p2;
wire   [0:0] icmp_ln581_1_fu_3501_p2;
wire   [11:0] add_ln581_1_fu_3507_p2;
wire   [11:0] sub_ln581_1_fu_3513_p2;
wire   [53:0] man_V_9_fu_3481_p3;
wire   [6:0] tmp_63_fu_3537_p4;
wire   [5:0] trunc_ln586_4_fu_3553_p1;
wire   [53:0] zext_ln586_1_fu_3557_p1;
wire   [53:0] ashr_ln586_1_fu_3561_p2;
wire   [31:0] bitcast_ln702_3_fu_3571_p1;
wire   [0:0] tmp_64_fu_3574_p3;
wire   [0:0] or_ln582_fu_3590_p2;
wire   [0:0] xor_ln582_fu_3596_p2;
wire   [0:0] icmp_ln585_1_fu_3608_p2;
wire   [0:0] or_ln581_fu_3620_p2;
wire   [0:0] icmp_ln603_1_fu_3547_p2;
wire   [0:0] xor_ln581_fu_3626_p2;
wire   [0:0] and_ln603_fu_3632_p2;
wire   [0:0] and_ln585_fu_3614_p2;
wire   [31:0] select_ln588_1_fu_3582_p3;
wire   [31:0] trunc_ln586_5_fu_3567_p1;
wire  signed [31:0] sext_ln581_1_fu_3652_p1;
wire   [0:0] xor_ln571_fu_3660_p2;
wire   [31:0] shl_ln604_1_fu_3655_p2;
wire   [0:0] and_ln582_fu_3665_p2;
wire   [31:0] select_ln571_fu_3670_p3;
wire   [0:0] or_ln571_4_fu_3690_p2;
wire   [31:0] select_ln571_8_fu_3684_p3;
wire   [31:0] select_ln571_7_fu_3677_p3;
wire   [31:0] tmp_V_15_fu_3734_p2;
reg   [31:0] p_Result_137_fu_3748_p4;
reg   [31:0] l_6_fu_3758_p3;
wire   [31:0] lsb_index_6_fu_3772_p2;
wire   [30:0] tmp_66_fu_3778_p4;
wire   [5:0] trunc_ln947_5_fu_3794_p1;
wire   [5:0] sub_ln947_5_fu_3798_p2;
wire   [31:0] zext_ln947_5_fu_3804_p1;
wire   [31:0] lshr_ln947_5_fu_3808_p2;
wire   [31:0] shl_ln949_5_fu_3814_p2;
wire   [31:0] or_ln949_14_fu_3820_p2;
wire   [31:0] and_ln949_14_fu_3826_p2;
wire   [0:0] tmp_67_fu_3838_p3;
wire   [0:0] p_Result_138_fu_3852_p3;
wire   [0:0] xor_ln949_5_fu_3846_p2;
wire   [0:0] icmp_ln946_5_fu_3788_p2;
wire   [0:0] icmp_ln949_5_fu_3832_p2;
wire   [0:0] select_ln946_5_fu_3872_p3;
wire   [0:0] and_ln949_15_fu_3866_p2;
wire   [31:0] sub_ln959_5_fu_3895_p2;
wire   [63:0] zext_ln959_13_fu_3892_p1;
wire   [63:0] zext_ln959_7_fu_3900_p1;
wire   [31:0] add_ln958_5_fu_3910_p2;
wire   [63:0] zext_ln958_5_fu_3915_p1;
wire   [63:0] lshr_ln958_5_fu_3919_p2;
wire   [63:0] shl_ln959_5_fu_3904_p2;
wire   [63:0] m_47_fu_3925_p3;
wire   [63:0] zext_ln961_5_fu_3932_p1;
wire   [63:0] m_48_fu_3935_p2;
wire   [62:0] m_74_fu_3941_p4;
wire   [0:0] p_Result_70_fu_3955_p3;
wire   [7:0] sub_ln964_5_fu_3971_p2;
wire   [7:0] select_ln943_5_fu_3963_p3;
wire   [7:0] add_ln964_5_fu_3976_p2;
wire   [63:0] zext_ln962_5_fu_3951_p1;
wire   [8:0] tmp_9_fu_3982_p3;
wire   [63:0] p_Result_139_fu_3989_p5;
wire   [31:0] LD_8_fu_4001_p1;
wire   [31:0] bitcast_ln744_4_fu_4005_p1;
wire   [31:0] bitcast_ln224_1_fu_4018_p1;
wire   [7:0] tmp_19_fu_4022_p4;
wire   [22:0] trunc_ln224_1_fu_4032_p1;
wire   [0:0] or_ln224_1_fu_4048_p2;
wire   [0:0] and_ln224_1_fu_4052_p2;
wire   [63:0] bitcast_ln702_2_fu_4058_p1;
wire   [63:0] ireg_2_fu_4062_p3;
wire   [10:0] exp_tmp_2_fu_4082_p4;
wire   [51:0] trunc_ln565_2_fu_4096_p1;
wire   [52:0] p_Result_141_fu_4100_p3;
wire   [53:0] zext_ln569_2_fu_4108_p1;
wire   [0:0] p_Result_140_fu_4074_p3;
wire   [53:0] man_V_11_fu_4112_p2;
wire   [62:0] trunc_ln555_2_fu_4070_p1;
wire   [11:0] zext_ln455_2_fu_4092_p1;
wire   [11:0] F2_2_fu_4132_p2;
wire   [0:0] icmp_ln581_2_fu_4138_p2;
wire   [11:0] add_ln581_2_fu_4144_p2;
wire   [11:0] sub_ln581_2_fu_4150_p2;
wire   [53:0] man_V_12_fu_4118_p3;
wire   [6:0] tmp_70_fu_4174_p4;
wire   [5:0] trunc_ln586_6_fu_4190_p1;
wire   [53:0] zext_ln586_2_fu_4194_p1;
wire   [53:0] ashr_ln586_2_fu_4198_p2;
wire   [0:0] tmp_71_fu_4208_p3;
wire   [0:0] or_ln582_1_fu_4224_p2;
wire   [0:0] xor_ln582_1_fu_4230_p2;
wire   [0:0] icmp_ln585_2_fu_4242_p2;
wire   [0:0] or_ln581_1_fu_4254_p2;
wire   [0:0] icmp_ln603_2_fu_4184_p2;
wire   [0:0] xor_ln581_1_fu_4260_p2;
wire   [0:0] and_ln603_2_fu_4266_p2;
wire   [0:0] and_ln585_2_fu_4248_p2;
wire   [31:0] select_ln588_2_fu_4216_p3;
wire   [31:0] trunc_ln586_7_fu_4204_p1;
wire  signed [31:0] sext_ln581_2_fu_4286_p1;
wire   [0:0] xor_ln571_1_fu_4294_p2;
wire   [31:0] shl_ln604_2_fu_4289_p2;
wire   [0:0] and_ln582_2_fu_4299_p2;
wire   [31:0] select_ln571_10_fu_4304_p3;
wire   [0:0] or_ln571_6_fu_4324_p2;
wire   [31:0] select_ln571_13_fu_4318_p3;
wire   [31:0] select_ln571_12_fu_4311_p3;
wire   [19:0] trunc_ln851_fu_4372_p1;
wire   [11:0] ret_V_7_fu_4354_p4;
wire   [0:0] icmp_ln851_fu_4376_p2;
wire   [11:0] ret_V_14_fu_4382_p2;
wire   [0:0] p_Result_74_fu_4364_p3;
wire   [11:0] select_ln850_fu_4388_p3;
wire   [11:0] ret_V_15_fu_4396_p3;
wire   [15:0] shl_ln1004_1_fu_4412_p3;
wire   [15:0] shl_ln5_fu_4404_p3;
wire   [15:0] add_ln1004_fu_4420_p2;
wire   [2:0] lshr_ln_fu_4426_p4;
wire   [8:0] trunc_ln1004_fu_4436_p1;
wire   [11:0] tmp_88_fu_4440_p3;
wire   [4:0] trunc_ln731_1_fu_4486_p1;
wire   [0:0] icmp_ln870_1_fu_4481_p2;
wire   [24:0] radius_j_V_fu_4490_p3;
wire   [24:0] radius_j_V_4_fu_4498_p3;
wire   [25:0] zext_ln1193_1_fu_4506_p1;
wire  signed [25:0] ret_V_16_fu_4510_p2;
wire   [31:0] grp_fu_4520_p2;
wire  signed [32:0] sext_ln703_13_fu_4530_p1;
wire  signed [32:0] ret_V_25_fu_4534_p2;
wire  signed [31:0] radii_leverArm_fu_4526_p1;
wire   [51:0] r_V_7_fu_4547_p2;
wire   [51:0] ret_V_18_fu_4553_p2;
wire   [31:0] sub_i_i487_fu_4586_p2;
wire   [31:0] m_76_fu_4645_p3;
reg   [31:0] p_Result_143_fu_4651_p4;
reg   [31:0] l_7_fu_4661_p3;
wire   [31:0] sub_ln944_6_fu_4669_p2;
wire   [31:0] lsb_index_7_fu_4675_p2;
wire   [30:0] tmp_77_fu_4681_p4;
wire   [5:0] trunc_ln947_6_fu_4697_p1;
wire   [5:0] sub_ln947_6_fu_4701_p2;
wire   [31:0] zext_ln947_6_fu_4707_p1;
wire   [31:0] lshr_ln947_6_fu_4711_p2;
wire   [31:0] shl_ln949_6_fu_4717_p2;
wire   [31:0] or_ln949_15_fu_4723_p2;
wire   [31:0] and_ln949_16_fu_4729_p2;
wire   [0:0] tmp_78_fu_4741_p3;
wire   [0:0] p_Result_144_fu_4755_p3;
wire   [0:0] xor_ln949_6_fu_4749_p2;
wire   [31:0] sub_ln959_6_fu_4779_p2;
wire   [63:0] zext_ln959_14_fu_4775_p1;
wire   [63:0] zext_ln959_8_fu_4785_p1;
wire   [0:0] icmp_ln946_6_fu_4691_p2;
wire   [0:0] icmp_ln949_6_fu_4735_p2;
wire   [31:0] add_ln958_6_fu_4803_p2;
wire   [63:0] zext_ln958_6_fu_4809_p1;
wire   [0:0] icmp_ln958_6_fu_4763_p2;
wire   [0:0] select_ln946_6_fu_4795_p3;
wire   [0:0] and_ln949_17_fu_4769_p2;
wire   [63:0] lshr_ln958_6_fu_4813_p2;
wire   [63:0] shl_ln959_6_fu_4789_p2;
wire   [0:0] select_ln958_13_fu_4819_p3;
wire   [63:0] m_51_fu_4827_p3;
wire   [63:0] zext_ln961_6_fu_4835_p1;
wire   [63:0] m_52_fu_4839_p2;
wire   [62:0] m_77_fu_4845_p4;
wire   [0:0] p_Result_80_fu_4859_p3;
wire   [7:0] trunc_ln943_6_fu_4875_p1;
wire   [7:0] sub_ln964_6_fu_4879_p2;
wire   [7:0] select_ln943_6_fu_4867_p3;
wire   [7:0] add_ln964_6_fu_4885_p2;
wire   [63:0] zext_ln962_6_fu_4855_p1;
wire   [8:0] tmp_6_fu_4891_p3;
wire   [63:0] p_Result_145_fu_4898_p5;
wire   [31:0] LD_9_fu_4910_p1;
wire   [0:0] icmp_ln935_6_fu_4639_p2;
wire   [31:0] bitcast_ln744_5_fu_4914_p1;
reg   [31:0] p_Result_147_fu_4926_p4;
reg   [31:0] l_8_fu_4935_p3;
wire   [31:0] sub_ln944_7_fu_4943_p2;
wire   [31:0] lsb_index_8_fu_4949_p2;
wire   [30:0] tmp_80_fu_4955_p4;
wire   [5:0] trunc_ln947_7_fu_4971_p1;
wire   [5:0] sub_ln947_7_fu_4975_p2;
wire   [31:0] zext_ln947_7_fu_4981_p1;
wire   [31:0] lshr_ln947_7_fu_4985_p2;
wire   [31:0] shl_ln949_7_fu_4991_p2;
wire   [31:0] or_ln949_16_fu_4997_p2;
wire   [31:0] and_ln949_22_fu_5003_p2;
wire   [0:0] tmp_81_fu_5014_p3;
wire   [0:0] p_Result_148_fu_5028_p3;
wire   [0:0] xor_ln949_7_fu_5022_p2;
wire   [31:0] sub_ln959_7_fu_5047_p2;
wire   [63:0] zext_ln959_9_fu_5053_p1;
wire   [0:0] icmp_ln946_7_fu_4965_p2;
wire   [0:0] icmp_ln949_7_fu_5008_p2;
wire   [31:0] add_ln958_7_fu_5070_p2;
wire   [63:0] zext_ln958_7_fu_5076_p1;
wire   [0:0] icmp_ln958_7_fu_5035_p2;
wire   [0:0] select_ln946_7_fu_5062_p3;
wire   [0:0] and_ln949_18_fu_5041_p2;
wire   [63:0] lshr_ln958_7_fu_5080_p2;
wire   [63:0] shl_ln959_7_fu_5057_p2;
wire   [0:0] select_ln958_15_fu_5085_p3;
wire   [63:0] m_55_fu_5093_p3;
wire   [63:0] zext_ln961_7_fu_5101_p1;
wire   [63:0] m_56_fu_5105_p2;
wire   [62:0] m_78_fu_5111_p4;
wire   [0:0] p_Result_85_fu_5125_p3;
wire   [7:0] trunc_ln943_7_fu_5141_p1;
wire   [7:0] sub_ln964_7_fu_5145_p2;
wire   [7:0] select_ln943_7_fu_5133_p3;
wire   [7:0] add_ln964_7_fu_5151_p2;
wire   [63:0] zext_ln962_7_fu_5121_p1;
wire   [8:0] tmp_8_fu_5157_p3;
wire   [63:0] p_Result_149_fu_5164_p5;
wire   [31:0] LD_10_fu_5176_p1;
wire   [31:0] bitcast_ln744_6_fu_5180_p1;
wire   [31:0] grp_fu_1383_p2;
wire   [31:0] data_V_fu_5191_p1;
wire   [31:0] zext_ln368_2_fu_5199_p1;
wire   [63:0] ireg_3_fu_5207_p1;
wire   [62:0] trunc_ln555_3_fu_5211_p1;
wire   [52:0] p_Result_152_fu_5246_p3;
wire   [53:0] zext_ln569_3_fu_5253_p1;
wire   [53:0] man_V_14_fu_5257_p2;
wire   [11:0] zext_ln455_3_fu_5243_p1;
wire   [11:0] F2_3_fu_5270_p2;
wire   [0:0] icmp_ln581_3_fu_5276_p2;
wire   [11:0] add_ln581_3_fu_5282_p2;
wire   [11:0] sub_ln581_3_fu_5288_p2;
wire  signed [11:0] sh_amt_3_fu_5294_p3;
wire   [53:0] man_V_15_fu_5263_p3;
wire   [6:0] tmp_91_fu_5322_p4;
wire   [5:0] trunc_ln586_8_fu_5338_p1;
wire   [53:0] zext_ln586_3_fu_5342_p1;
wire   [53:0] ashr_ln586_3_fu_5346_p2;
wire   [31:0] trunc_ln583_3_fu_5312_p1;
wire  signed [31:0] sext_ln581_3_fu_5302_p1;
wire   [0:0] icmp_ln582_3_fu_5306_p2;
wire   [0:0] xor_ln571_2_fu_5362_p2;
wire   [0:0] and_ln582_3_fu_5367_p2;
wire   [0:0] or_ln582_2_fu_5381_p2;
wire   [0:0] xor_ln582_2_fu_5386_p2;
wire   [0:0] and_ln581_2_fu_5392_p2;
wire   [0:0] icmp_ln585_3_fu_5316_p2;
wire   [0:0] and_ln585_3_fu_5398_p2;
wire   [31:0] trunc_ln586_9_fu_5352_p1;
wire   [31:0] select_ln582_fu_5373_p3;
wire   [0:0] or_ln581_2_fu_5412_p2;
wire   [0:0] icmp_ln603_3_fu_5332_p2;
wire   [0:0] xor_ln581_2_fu_5418_p2;
wire   [0:0] and_ln603_3_fu_5424_p2;
wire   [31:0] shl_ln604_3_fu_5356_p2;
wire   [31:0] select_ln585_fu_5404_p3;
wire   [0:0] xor_ln585_fu_5438_p2;
wire   [0:0] and_ln585_4_fu_5444_p2;
wire   [0:0] or_ln585_fu_5450_p2;
wire   [31:0] select_ln603_fu_5430_p3;
wire   [31:0] layerSMin_V_1_fu_5455_p3;
wire   [0:0] icmp_ln1495_9_fu_5463_p2;
wire   [31:0] zext_ln1033_fu_5469_p1;
wire   [0:0] icmp_ln200_fu_5488_p2;
wire   [11:0] trunc_ln985_fu_5493_p1;
wire  signed [31:0] sext_ln703_6_fu_5509_p0;
wire  signed [32:0] sext_ln703_6_fu_5509_p1;
wire   [32:0] ret_V_26_fu_5513_p2;
wire  signed [31:0] icmp_ln935_5_fu_5522_p0;
wire   [31:0] trunc_ln1193_fu_5518_p1;
wire   [31:0] tmp_V_20_fu_5536_p2;
wire   [32:0] zext_ln937_fu_5550_p1;
reg   [32:0] p_Result_91_fu_5553_p4;
wire   [63:0] p_Result_154_fu_5563_p3;
reg   [63:0] tmp_1_fu_5571_p3;
wire   [31:0] l_9_fu_5579_p1;
wire   [31:0] sub_ln944_8_fu_5583_p2;
wire   [31:0] lsb_index_9_fu_5589_p2;
wire   [30:0] tmp_93_fu_5595_p4;
wire   [5:0] trunc_ln947_8_fu_5611_p1;
wire   [5:0] sub_ln947_8_fu_5615_p2;
wire   [32:0] zext_ln947_8_fu_5621_p1;
wire   [32:0] lshr_ln947_8_fu_5625_p2;
wire   [32:0] zext_ln949_fu_5637_p1;
wire   [32:0] shl_ln949_8_fu_5641_p2;
wire   [31:0] trunc_ln949_fu_5647_p1;
wire   [32:0] p_Result_93_fu_5631_p2;
wire   [31:0] trunc_ln949_1_fu_5656_p1;
wire   [31:0] and_ln949_8_fu_5651_p2;
wire   [31:0] or_ln949_9_fu_5660_p2;
wire   [32:0] or_ln949_8_fu_5666_p3;
wire   [0:0] tmp_94_fu_5680_p3;
wire   [0:0] p_Result_155_fu_5694_p3;
wire   [0:0] xor_ln949_8_fu_5688_p2;
wire   [31:0] sub_ln955_fu_5714_p2;
wire   [32:0] zext_ln955_fu_5720_p1;
wire   [0:0] icmp_ln946_8_fu_5605_p2;
wire   [0:0] icmp_ln949_8_fu_5674_p2;
wire   [31:0] add_ln954_fu_5738_p2;
wire   [32:0] zext_ln954_fu_5744_p1;
wire   [0:0] icmp_ln954_fu_5702_p2;
wire   [0:0] select_ln946_8_fu_5730_p3;
wire   [0:0] and_ln949_19_fu_5708_p2;
wire   [32:0] lshr_ln954_fu_5748_p2;
wire   [32:0] shl_ln955_fu_5724_p2;
wire   [32:0] m_58_fu_5762_p3;
wire   [0:0] select_ln954_fu_5754_p3;
wire   [33:0] zext_ln951_fu_5770_p1;
wire   [33:0] zext_ln961_8_fu_5774_p1;
wire   [33:0] m_59_fu_5778_p2;
wire   [32:0] m_9_fu_5784_p4;
wire   [0:0] p_Result_95_fu_5798_p3;
wire   [7:0] trunc_ln943_8_fu_5814_p1;
wire   [7:0] sub_ln964_8_fu_5818_p2;
wire   [7:0] select_ln943_8_fu_5806_p3;
wire   [7:0] add_ln964_8_fu_5824_p2;
wire   [63:0] zext_ln951_1_fu_5794_p1;
wire   [8:0] tmp_10_fu_5830_p3;
wire   [63:0] p_Result_156_fu_5837_p5;
wire   [31:0] LD_12_fu_5849_p1;
wire   [31:0] data_V_2_fu_5857_p1;
wire   [30:0] p_Result_157_fu_5861_p1;
wire   [31:0] zext_ln368_fu_5865_p1;
wire   [63:0] bitcast_ln1050_fu_5874_p1;
wire   [10:0] tmp_22_fu_5878_p4;
wire   [51:0] trunc_ln1050_fu_5888_p1;
wire   [0:0] or_ln1050_fu_5904_p2;
wire   [0:0] grp_fu_1401_p2;
wire   [2:0] trunc_ln2_fu_5914_p4;
wire   [2:0] xor_ln1052_fu_5923_p2;
wire   [8:0] trunc_ln1052_fu_5929_p1;
wire   [11:0] tmp_89_fu_5932_p3;
wire  signed [32:0] sext_ln703_8_fu_5949_p1;
wire   [32:0] ret_V_27_fu_5953_p2;
wire   [31:0] trunc_ln1193_1_fu_5958_p1;
wire   [31:0] tmp_V_22_fu_5976_p2;
wire   [32:0] zext_ln937_1_fu_5990_p1;
reg   [32:0] p_Result_101_fu_5993_p4;
wire   [63:0] p_Result_159_fu_6003_p3;
reg   [63:0] tmp_3_fu_6011_p3;
wire   [31:0] l_10_fu_6019_p1;
wire   [31:0] sub_ln944_9_fu_6023_p2;
wire   [31:0] lsb_index_10_fu_6029_p2;
wire   [30:0] tmp_98_fu_6035_p4;
wire   [5:0] trunc_ln947_9_fu_6051_p1;
wire   [5:0] sub_ln947_9_fu_6055_p2;
wire   [32:0] zext_ln947_9_fu_6061_p1;
wire   [32:0] lshr_ln947_9_fu_6065_p2;
wire   [32:0] zext_ln949_1_fu_6077_p1;
wire   [32:0] shl_ln949_9_fu_6081_p2;
wire   [31:0] trunc_ln949_2_fu_6087_p1;
wire   [32:0] p_Result_103_fu_6071_p2;
wire   [31:0] trunc_ln949_3_fu_6096_p1;
wire   [31:0] and_ln949_10_fu_6091_p2;
wire   [31:0] or_ln949_10_fu_6100_p2;
wire   [32:0] or_ln949_s_fu_6106_p3;
wire   [0:0] tmp_99_fu_6120_p3;
wire   [0:0] p_Result_160_fu_6134_p3;
wire   [0:0] xor_ln949_9_fu_6128_p2;
wire   [31:0] sub_ln955_1_fu_6154_p2;
wire   [32:0] zext_ln955_1_fu_6160_p1;
wire   [0:0] icmp_ln946_9_fu_6045_p2;
wire   [0:0] icmp_ln949_9_fu_6114_p2;
wire   [31:0] add_ln954_1_fu_6178_p2;
wire   [32:0] zext_ln954_1_fu_6184_p1;
wire   [0:0] icmp_ln954_1_fu_6142_p2;
wire   [0:0] select_ln946_9_fu_6170_p3;
wire   [0:0] and_ln949_20_fu_6148_p2;
wire   [32:0] lshr_ln954_1_fu_6188_p2;
wire   [32:0] shl_ln955_1_fu_6164_p2;
wire   [32:0] m_61_fu_6202_p3;
wire   [0:0] select_ln954_2_fu_6194_p3;
wire   [33:0] zext_ln951_2_fu_6210_p1;
wire   [33:0] zext_ln961_9_fu_6214_p1;
wire   [33:0] m_62_fu_6218_p2;
wire   [32:0] m_s_fu_6224_p4;
wire   [0:0] p_Result_105_fu_6238_p3;
wire   [7:0] trunc_ln943_9_fu_6254_p1;
wire   [7:0] sub_ln964_9_fu_6258_p2;
wire   [7:0] select_ln943_9_fu_6246_p3;
wire   [7:0] add_ln964_9_fu_6264_p2;
wire   [63:0] zext_ln951_3_fu_6234_p1;
wire   [8:0] tmp_11_fu_6270_p3;
wire   [63:0] p_Result_161_fu_6277_p5;
wire   [31:0] LD_13_fu_6289_p1;
wire   [31:0] data_V_3_fu_6297_p1;
wire   [30:0] p_Result_162_fu_6301_p1;
wire   [31:0] zext_ln368_3_fu_6305_p1;
wire   [63:0] bitcast_ln1055_fu_6314_p1;
wire   [10:0] tmp_25_fu_6318_p4;
wire   [51:0] trunc_ln1055_fu_6328_p1;
wire   [0:0] or_ln1055_fu_6344_p2;
wire   [15:0] shl_ln6_fu_6354_p3;
wire   [15:0] add_ln1057_fu_6361_p2;
wire   [2:0] lshr_ln4_fu_6367_p4;
wire   [8:0] trunc_ln1057_fu_6377_p1;
wire   [11:0] tmp_90_fu_6380_p3;
wire  signed [32:0] sext_ln703_9_fu_6397_p1;
wire   [32:0] ret_V_28_fu_6401_p2;
wire   [31:0] trunc_ln1193_2_fu_6406_p1;
wire   [31:0] tmp_V_24_fu_6424_p2;
wire   [32:0] zext_ln937_2_fu_6438_p1;
reg   [32:0] p_Result_111_fu_6441_p4;
wire   [63:0] p_Result_164_fu_6451_p3;
reg   [63:0] tmp_5_fu_6459_p3;
wire   [31:0] l_11_fu_6467_p1;
wire   [31:0] sub_ln944_10_fu_6471_p2;
wire   [31:0] lsb_index_11_fu_6477_p2;
wire   [30:0] tmp_103_fu_6483_p4;
wire   [5:0] trunc_ln947_10_fu_6499_p1;
wire   [5:0] sub_ln947_10_fu_6503_p2;
wire   [32:0] zext_ln947_10_fu_6509_p1;
wire   [32:0] lshr_ln947_10_fu_6513_p2;
wire   [32:0] zext_ln949_2_fu_6525_p1;
wire   [32:0] shl_ln949_10_fu_6529_p2;
wire   [31:0] trunc_ln949_4_fu_6535_p1;
wire   [32:0] p_Result_113_fu_6519_p2;
wire   [31:0] trunc_ln949_5_fu_6544_p1;
wire   [31:0] and_ln949_12_fu_6539_p2;
wire   [31:0] or_ln949_11_fu_6548_p2;
wire   [32:0] or_ln949_1_fu_6554_p3;
wire   [0:0] tmp_104_fu_6568_p3;
wire   [0:0] p_Result_165_fu_6582_p3;
wire   [0:0] xor_ln949_10_fu_6576_p2;
wire   [31:0] sub_ln955_2_fu_6602_p2;
wire   [32:0] zext_ln955_2_fu_6608_p1;
wire   [0:0] icmp_ln946_10_fu_6493_p2;
wire   [0:0] icmp_ln949_10_fu_6562_p2;
wire   [31:0] add_ln954_2_fu_6626_p2;
wire   [32:0] zext_ln954_2_fu_6632_p1;
wire   [0:0] icmp_ln954_2_fu_6590_p2;
wire   [0:0] select_ln946_10_fu_6618_p3;
wire   [0:0] and_ln949_21_fu_6596_p2;
wire   [32:0] lshr_ln954_2_fu_6636_p2;
wire   [32:0] shl_ln955_2_fu_6612_p2;
wire   [32:0] m_64_fu_6650_p3;
wire   [0:0] select_ln954_4_fu_6642_p3;
wire   [33:0] zext_ln951_4_fu_6658_p1;
wire   [33:0] zext_ln961_10_fu_6662_p1;
wire   [33:0] m_65_fu_6666_p2;
wire   [32:0] m_1_fu_6672_p4;
wire   [0:0] p_Result_115_fu_6686_p3;
wire   [7:0] trunc_ln943_10_fu_6702_p1;
wire   [7:0] sub_ln964_10_fu_6706_p2;
wire   [7:0] select_ln943_10_fu_6694_p3;
wire   [7:0] add_ln964_10_fu_6712_p2;
wire   [63:0] zext_ln951_5_fu_6682_p1;
wire   [8:0] tmp_12_fu_6718_p3;
wire   [63:0] p_Result_166_fu_6725_p5;
wire   [31:0] LD_14_fu_6737_p1;
wire   [31:0] data_V_4_fu_6745_p1;
wire   [30:0] p_Result_167_fu_6749_p1;
wire   [31:0] zext_ln368_4_fu_6753_p1;
wire   [63:0] bitcast_ln1060_fu_6762_p1;
wire   [10:0] tmp_28_fu_6766_p4;
wire   [51:0] trunc_ln1060_fu_6776_p1;
wire   [0:0] or_ln1060_fu_6792_p2;
wire   [15:0] shl_ln7_fu_6802_p3;
wire   [15:0] add_ln1062_fu_6809_p2;
wire   [2:0] lshr_ln5_fu_6815_p4;
wire   [8:0] trunc_ln1062_fu_6825_p1;
wire   [11:0] tmp_92_fu_6828_p3;
wire  signed [32:0] sext_ln703_10_fu_6845_p1;
wire  signed [32:0] ret_V_29_fu_6849_p2;
wire  signed [31:0] r_V_9_fu_6858_p1;
wire   [63:0] r_V_9_fu_6858_p2;
wire   [0:0] tmp_107_fu_6863_p3;
reg   [4:0] grp_fu_1393_opcode;
wire    ap_block_pp7_stage0_00001;
wire    ap_block_pp8_stage0_00001;
reg   [87:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp11;
wire    ap_enable_pp11;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 88'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp11_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp11_iter0 = 1'b0;
#0 ap_enable_reg_pp11_iter8 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter2 = 1'b0;
#0 ap_enable_reg_pp10_iter3 = 1'b0;
#0 ap_enable_reg_pp10_iter4 = 1'b0;
#0 ap_enable_reg_pp10_iter5 = 1'b0;
#0 ap_enable_reg_pp10_iter6 = 1'b0;
#0 ap_enable_reg_pp10_iter7 = 1'b0;
#0 ap_enable_reg_pp10_iter8 = 1'b0;
#0 ap_enable_reg_pp10_iter9 = 1'b0;
#0 ap_enable_reg_pp10_iter10 = 1'b0;
#0 ap_enable_reg_pp10_iter11 = 1'b0;
#0 ap_enable_reg_pp10_iter12 = 1'b0;
#0 ap_enable_reg_pp10_iter13 = 1'b0;
#0 ap_enable_reg_pp10_iter14 = 1'b0;
#0 ap_enable_reg_pp10_iter15 = 1'b0;
#0 ap_enable_reg_pp10_iter16 = 1'b0;
#0 ap_enable_reg_pp10_iter17 = 1'b0;
#0 ap_enable_reg_pp10_iter18 = 1'b0;
#0 ap_enable_reg_pp10_iter19 = 1'b0;
#0 ap_enable_reg_pp10_iter20 = 1'b0;
#0 ap_enable_reg_pp10_iter21 = 1'b0;
#0 ap_enable_reg_pp10_iter22 = 1'b0;
#0 ap_enable_reg_pp10_iter23 = 1'b0;
#0 ap_enable_reg_pp10_iter24 = 1'b0;
#0 ap_enable_reg_pp10_iter25 = 1'b0;
#0 ap_enable_reg_pp10_iter26 = 1'b0;
#0 ap_enable_reg_pp10_iter27 = 1'b0;
#0 ap_enable_reg_pp10_iter28 = 1'b0;
#0 ap_enable_reg_pp10_iter29 = 1'b0;
#0 ap_enable_reg_pp10_iter30 = 1'b0;
#0 ap_enable_reg_pp10_iter31 = 1'b0;
#0 ap_enable_reg_pp10_iter32 = 1'b0;
#0 ap_enable_reg_pp10_iter33 = 1'b0;
#0 ap_enable_reg_pp10_iter34 = 1'b0;
#0 ap_enable_reg_pp10_iter35 = 1'b0;
#0 ap_enable_reg_pp10_iter36 = 1'b0;
#0 ap_enable_reg_pp10_iter37 = 1'b0;
#0 ap_enable_reg_pp10_iter38 = 1'b0;
#0 ap_enable_reg_pp10_iter39 = 1'b0;
#0 ap_enable_reg_pp10_iter40 = 1'b0;
#0 ap_enable_reg_pp10_iter41 = 1'b0;
#0 ap_enable_reg_pp10_iter42 = 1'b0;
#0 ap_enable_reg_pp10_iter43 = 1'b0;
#0 ap_enable_reg_pp10_iter44 = 1'b0;
#0 ap_enable_reg_pp10_iter45 = 1'b0;
#0 ap_enable_reg_pp10_iter46 = 1'b0;
#0 ap_enable_reg_pp10_iter47 = 1'b0;
#0 ap_enable_reg_pp10_iter48 = 1'b0;
#0 ap_enable_reg_pp10_iter49 = 1'b0;
#0 ap_enable_reg_pp10_iter50 = 1'b0;
#0 ap_enable_reg_pp10_iter51 = 1'b0;
#0 ap_enable_reg_pp11_iter2 = 1'b0;
#0 ap_enable_reg_pp11_iter3 = 1'b0;
#0 ap_enable_reg_pp11_iter4 = 1'b0;
#0 ap_enable_reg_pp11_iter5 = 1'b0;
#0 ap_enable_reg_pp11_iter6 = 1'b0;
#0 ap_enable_reg_pp11_iter7 = 1'b0;
#0 grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg = 1'b0;
#0 grp_getParallelograms_fu_1285_ap_start_reg = 1'b0;
#0 grp_get_index_from_z_fu_1317_ap_start_reg = 1'b0;
#0 grp_patch_buffer_add_patch2_fu_1330_ap_start_reg = 1'b0;
#0 grp_get_acceptanceCorners_fu_1341_ap_start_reg = 1'b0;
end

system_top_alignedtoline_per_layer_loop3_get_radiiradii #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
get_radiiradii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_radiiradii_address0),
    .ce0(get_radiiradii_ce0),
    .q0(get_radiiradii_q0)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_init_patch_V #(
    .DataWidth( 96 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
init_patch_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_address0),
    .ce0(init_patch_V_ce0),
    .we0(init_patch_V_we0),
    .d0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d0),
    .q0(init_patch_V_q0),
    .address1(init_patch_V_address1),
    .ce1(init_patch_V_ce1),
    .we1(init_patch_V_we1),
    .d1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d1),
    .q1(init_patch_V_q1)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_init_patch_V #(
    .DataWidth( 96 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
init_patch_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_1_address0),
    .ce0(init_patch_V_1_ce0),
    .we0(init_patch_V_1_we0),
    .d0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d0),
    .q0(init_patch_V_1_q0),
    .address1(init_patch_V_1_address1),
    .ce1(init_patch_V_1_ce1),
    .we1(init_patch_V_1_we1),
    .d1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d1),
    .q1(init_patch_V_1_q1)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_current_z_i_index_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
current_z_i_index_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(current_z_i_index_V_address0),
    .ce0(current_z_i_index_V_ce0),
    .we0(current_z_i_index_V_we0),
    .d0(current_z_i_index_V_d0),
    .q0(current_z_i_index_V_q0)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_new_z_i_index_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_index_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_index_V_address0),
    .ce0(new_z_i_index_V_ce0),
    .we0(new_z_i_index_V_we0),
    .d0(new_z_i_index_V_d0),
    .q0(new_z_i_index_V_q0),
    .address1(new_z_i_index_V_address1),
    .ce1(new_z_i_index_V_ce1),
    .we1(new_z_i_index_V_we1),
    .d1(new_z_i_index_V_d1),
    .q1(new_z_i_index_V_q1)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_current_z_i_index_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_V_address0),
    .ce0(new_z_i_V_ce0),
    .we0(new_z_i_V_we0),
    .d0(new_z_i_V_d0),
    .q0(new_z_i_V_q0)
);

system_top_p_shadowquilt_main_loop_make_verticle_strip_current_z_i_index_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_atTop_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_atTop_V_address0),
    .ce0(new_z_i_atTop_V_ce0),
    .we0(new_z_i_atTop_V_we0),
    .d0(new_z_i_atTop_V_d0),
    .q0(new_z_i_atTop_V_q0)
);

system_top_alignedtoline_per_layer_loop3 grp_alignedtoline_per_layer_loop3_fu_1250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_alignedtoline_per_layer_loop3_fu_1250_ap_start),
    .ap_done(grp_alignedtoline_per_layer_loop3_fu_1250_ap_done),
    .ap_idle(grp_alignedtoline_per_layer_loop3_fu_1250_ap_idle),
    .ap_ready(grp_alignedtoline_per_layer_loop3_fu_1250_ap_ready),
    .points_address0(grp_alignedtoline_per_layer_loop3_fu_1250_points_address0),
    .points_ce0(grp_alignedtoline_per_layer_loop3_fu_1250_points_ce0),
    .points_q0(points_q0),
    .points_address1(grp_alignedtoline_per_layer_loop3_fu_1250_points_address1),
    .points_ce1(grp_alignedtoline_per_layer_loop3_fu_1250_points_ce1),
    .points_q1(points_q1),
    .num_points_address0(grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address0),
    .num_points_ce0(grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce0),
    .num_points_q0(num_points_q0),
    .num_points_address1(grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address1),
    .num_points_ce1(grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce1),
    .num_points_q1(num_points_q1),
    .p_read(grp_alignedtoline_per_layer_loop3_fu_1250_p_read),
    .z_top(grp_alignedtoline_per_layer_loop3_fu_1250_z_top),
    .leftRight_offset(grp_alignedtoline_per_layer_loop3_fu_1250_leftRight_offset),
    .init_patch_address0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address0),
    .init_patch_ce0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce0),
    .init_patch_we0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we0),
    .init_patch_d0(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d0),
    .init_patch_address1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address1),
    .init_patch_ce1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce1),
    .init_patch_we1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we1),
    .init_patch_d1(grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_d1),
    .i_offset(grp_alignedtoline_per_layer_loop3_fu_1250_i_offset)
);

system_top_getParallelograms grp_getParallelograms_fu_1285(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getParallelograms_fu_1285_ap_start),
    .ap_done(grp_getParallelograms_fu_1285_ap_done),
    .ap_idle(grp_getParallelograms_fu_1285_ap_idle),
    .ap_ready(grp_getParallelograms_fu_1285_ap_ready),
    .superpoints_address0(grp_getParallelograms_fu_1285_superpoints_address0),
    .superpoints_ce0(grp_getParallelograms_fu_1285_superpoints_ce0),
    .superpoints_q0(patch_buffer_q0),
    .superpoints_address1(grp_getParallelograms_fu_1285_superpoints_address1),
    .superpoints_ce1(grp_getParallelograms_fu_1285_superpoints_ce1),
    .superpoints_q1(patch_buffer_q1),
    .superpoints_offset(reg_1437),
    .pSlope_address0(grp_getParallelograms_fu_1285_pSlope_address0),
    .pSlope_ce0(grp_getParallelograms_fu_1285_pSlope_ce0),
    .pSlope_we0(grp_getParallelograms_fu_1285_pSlope_we0),
    .pSlope_d0(grp_getParallelograms_fu_1285_pSlope_d0),
    .pSlope_offset(reg_1437),
    .shadow_bottomL_jR_address0(grp_getParallelograms_fu_1285_shadow_bottomL_jR_address0),
    .shadow_bottomL_jR_ce0(grp_getParallelograms_fu_1285_shadow_bottomL_jR_ce0),
    .shadow_bottomL_jR_we0(grp_getParallelograms_fu_1285_shadow_bottomL_jR_we0),
    .shadow_bottomL_jR_d0(grp_getParallelograms_fu_1285_shadow_bottomL_jR_d0),
    .shadow_bottomL_jR_offset(reg_1437),
    .shadow_bottomR_jR_address0(grp_getParallelograms_fu_1285_shadow_bottomR_jR_address0),
    .shadow_bottomR_jR_ce0(grp_getParallelograms_fu_1285_shadow_bottomR_jR_ce0),
    .shadow_bottomR_jR_we0(grp_getParallelograms_fu_1285_shadow_bottomR_jR_we0),
    .shadow_bottomR_jR_d0(grp_getParallelograms_fu_1285_shadow_bottomR_jR_d0),
    .shadow_bottomR_jR_offset(reg_1437),
    .shadow_bottomL_jL_address0(grp_getParallelograms_fu_1285_shadow_bottomL_jL_address0),
    .shadow_bottomL_jL_ce0(grp_getParallelograms_fu_1285_shadow_bottomL_jL_ce0),
    .shadow_bottomL_jL_we0(grp_getParallelograms_fu_1285_shadow_bottomL_jL_we0),
    .shadow_bottomL_jL_d0(grp_getParallelograms_fu_1285_shadow_bottomL_jL_d0),
    .shadow_bottomL_jL_offset(reg_1437),
    .shadow_bottomR_jL_address0(grp_getParallelograms_fu_1285_shadow_bottomR_jL_address0),
    .shadow_bottomR_jL_ce0(grp_getParallelograms_fu_1285_shadow_bottomR_jL_ce0),
    .shadow_bottomR_jL_we0(grp_getParallelograms_fu_1285_shadow_bottomR_jL_we0),
    .shadow_bottomR_jL_d0(grp_getParallelograms_fu_1285_shadow_bottomR_jL_d0),
    .shadow_bottomR_jL_offset(reg_1437),
    .z1_min_address0(grp_getParallelograms_fu_1285_z1_min_address0),
    .z1_min_ce0(grp_getParallelograms_fu_1285_z1_min_ce0),
    .z1_min_we0(grp_getParallelograms_fu_1285_z1_min_we0),
    .z1_min_d0(grp_getParallelograms_fu_1285_z1_min_d0),
    .z1_min_offset(reg_1437),
    .z1_max_address0(grp_getParallelograms_fu_1285_z1_max_address0),
    .z1_max_ce0(grp_getParallelograms_fu_1285_z1_max_ce0),
    .z1_max_we0(grp_getParallelograms_fu_1285_z1_max_we0),
    .z1_max_d0(grp_getParallelograms_fu_1285_z1_max_d0),
    .z1_max_offset(reg_1437)
);

system_top_get_index_from_z grp_get_index_from_z_fu_1317(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_index_from_z_fu_1317_ap_start),
    .ap_done(grp_get_index_from_z_fu_1317_ap_done),
    .ap_idle(grp_get_index_from_z_fu_1317_ap_idle),
    .ap_ready(grp_get_index_from_z_fu_1317_ap_ready),
    .points_address0(grp_get_index_from_z_fu_1317_points_address0),
    .points_ce0(grp_get_index_from_z_fu_1317_points_ce0),
    .points_q0(points_q0),
    .num_points_address0(grp_get_index_from_z_fu_1317_num_points_address0),
    .num_points_ce0(grp_get_index_from_z_fu_1317_num_points_ce0),
    .num_points_q0(num_points_q0),
    .layer(grp_get_index_from_z_fu_1317_layer),
    .z_value(grp_get_index_from_z_fu_1317_z_value),
    .ap_return(grp_get_index_from_z_fu_1317_ap_return)
);

system_top_patch_buffer_add_patch2 grp_patch_buffer_add_patch2_fu_1330(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_patch_buffer_add_patch2_fu_1330_ap_start),
    .ap_done(grp_patch_buffer_add_patch2_fu_1330_ap_done),
    .ap_idle(grp_patch_buffer_add_patch2_fu_1330_ap_idle),
    .ap_ready(grp_patch_buffer_add_patch2_fu_1330_ap_ready),
    .new_patch_address0(grp_patch_buffer_add_patch2_fu_1330_new_patch_address0),
    .new_patch_ce0(grp_patch_buffer_add_patch2_fu_1330_new_patch_ce0),
    .new_patch_q0(grp_patch_buffer_add_patch2_fu_1330_new_patch_q0),
    .new_patch_address1(grp_patch_buffer_add_patch2_fu_1330_new_patch_address1),
    .new_patch_ce1(grp_patch_buffer_add_patch2_fu_1330_new_patch_ce1),
    .new_patch_q1(grp_patch_buffer_add_patch2_fu_1330_new_patch_q1),
    .patch_buffer_address0(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address0),
    .patch_buffer_ce0(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce0),
    .patch_buffer_we0(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we0),
    .patch_buffer_d0(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d0),
    .patch_buffer_address1(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address1),
    .patch_buffer_ce1(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce1),
    .patch_buffer_we1(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we1),
    .patch_buffer_d1(grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d1),
    .latest_patch_index_constprop_i(latest_patch_index_constprop_i),
    .latest_patch_index_constprop_o(grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o),
    .latest_patch_index_constprop_o_ap_vld(grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o_ap_vld),
    .num_patches_constprop_i(num_patches_constprop_i),
    .num_patches_constprop_o(grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o),
    .num_patches_constprop_o_ap_vld(grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o_ap_vld)
);

system_top_get_acceptanceCorners grp_get_acceptanceCorners_fu_1341(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_acceptanceCorners_fu_1341_ap_start),
    .ap_done(grp_get_acceptanceCorners_fu_1341_ap_done),
    .ap_idle(grp_get_acceptanceCorners_fu_1341_ap_idle),
    .ap_ready(grp_get_acceptanceCorners_fu_1341_ap_ready),
    .shadow_bottomL_jR_address0(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address0),
    .shadow_bottomL_jR_ce0(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce0),
    .shadow_bottomL_jR_q0(shadow_bottomL_jR_q0),
    .shadow_bottomL_jR_address1(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address1),
    .shadow_bottomL_jR_ce1(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce1),
    .shadow_bottomL_jR_q1(shadow_bottomL_jR_q1),
    .shadow_bottomR_jR_address0(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address0),
    .shadow_bottomR_jR_ce0(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce0),
    .shadow_bottomR_jR_q0(shadow_bottomR_jR_q0),
    .shadow_bottomR_jR_address1(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address1),
    .shadow_bottomR_jR_ce1(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce1),
    .shadow_bottomR_jR_q1(shadow_bottomR_jR_q1),
    .shadow_bottomL_jL_address0(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address0),
    .shadow_bottomL_jL_ce0(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce0),
    .shadow_bottomL_jL_q0(shadow_bottomL_jL_q0),
    .shadow_bottomL_jL_address1(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address1),
    .shadow_bottomL_jL_ce1(grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce1),
    .shadow_bottomL_jL_q1(shadow_bottomL_jL_q1),
    .shadow_bottomR_jL_address0(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address0),
    .shadow_bottomR_jL_ce0(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce0),
    .shadow_bottomR_jL_q0(shadow_bottomR_jL_q0),
    .shadow_bottomR_jL_address1(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address1),
    .shadow_bottomR_jL_ce1(grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce1),
    .shadow_bottomR_jL_q1(shadow_bottomR_jL_q1),
    .z1_min_address0(grp_get_acceptanceCorners_fu_1341_z1_min_address0),
    .z1_min_ce0(grp_get_acceptanceCorners_fu_1341_z1_min_ce0),
    .z1_min_q0(z1_min_q0),
    .z1_max_address0(grp_get_acceptanceCorners_fu_1341_z1_max_address0),
    .z1_max_ce0(grp_get_acceptanceCorners_fu_1341_z1_max_ce0),
    .z1_max_q0(z1_max_q0),
    .a_corner_0_address0(grp_get_acceptanceCorners_fu_1341_a_corner_0_address0),
    .a_corner_0_ce0(grp_get_acceptanceCorners_fu_1341_a_corner_0_ce0),
    .a_corner_0_we0(grp_get_acceptanceCorners_fu_1341_a_corner_0_we0),
    .a_corner_0_d0(grp_get_acceptanceCorners_fu_1341_a_corner_0_d0),
    .a_corner_1_address0(grp_get_acceptanceCorners_fu_1341_a_corner_1_address0),
    .a_corner_1_ce0(grp_get_acceptanceCorners_fu_1341_a_corner_1_ce0),
    .a_corner_1_we0(grp_get_acceptanceCorners_fu_1341_a_corner_1_we0),
    .a_corner_1_d0(grp_get_acceptanceCorners_fu_1341_a_corner_1_d0),
    .b_corner_0_address0(grp_get_acceptanceCorners_fu_1341_b_corner_0_address0),
    .b_corner_0_ce0(grp_get_acceptanceCorners_fu_1341_b_corner_0_ce0),
    .b_corner_0_we0(grp_get_acceptanceCorners_fu_1341_b_corner_0_we0),
    .b_corner_0_d0(grp_get_acceptanceCorners_fu_1341_b_corner_0_d0),
    .b_corner_1_address0(grp_get_acceptanceCorners_fu_1341_b_corner_1_address0),
    .b_corner_1_ce0(grp_get_acceptanceCorners_fu_1341_b_corner_1_ce0),
    .b_corner_1_we0(grp_get_acceptanceCorners_fu_1341_b_corner_1_we0),
    .b_corner_1_d0(grp_get_acceptanceCorners_fu_1341_b_corner_1_d0),
    .c_corner_0_address0(grp_get_acceptanceCorners_fu_1341_c_corner_0_address0),
    .c_corner_0_ce0(grp_get_acceptanceCorners_fu_1341_c_corner_0_ce0),
    .c_corner_0_we0(grp_get_acceptanceCorners_fu_1341_c_corner_0_we0),
    .c_corner_0_d0(grp_get_acceptanceCorners_fu_1341_c_corner_0_d0),
    .c_corner_1_address0(grp_get_acceptanceCorners_fu_1341_c_corner_1_address0),
    .c_corner_1_ce0(grp_get_acceptanceCorners_fu_1341_c_corner_1_ce0),
    .c_corner_1_we0(grp_get_acceptanceCorners_fu_1341_c_corner_1_we0),
    .c_corner_1_d0(grp_get_acceptanceCorners_fu_1341_c_corner_1_d0),
    .d_corner_0_address0(grp_get_acceptanceCorners_fu_1341_d_corner_0_address0),
    .d_corner_0_ce0(grp_get_acceptanceCorners_fu_1341_d_corner_0_ce0),
    .d_corner_0_we0(grp_get_acceptanceCorners_fu_1341_d_corner_0_we0),
    .d_corner_0_d0(grp_get_acceptanceCorners_fu_1341_d_corner_0_d0),
    .d_corner_1_address0(grp_get_acceptanceCorners_fu_1341_d_corner_1_address0),
    .d_corner_1_ce0(grp_get_acceptanceCorners_fu_1341_d_corner_1_ce0),
    .d_corner_1_we0(grp_get_acceptanceCorners_fu_1341_d_corner_1_we0),
    .d_corner_1_d0(grp_get_acceptanceCorners_fu_1341_d_corner_1_d0),
    .squareAcceptance_address0(grp_get_acceptanceCorners_fu_1341_squareAcceptance_address0),
    .squareAcceptance_ce0(grp_get_acceptanceCorners_fu_1341_squareAcceptance_ce0),
    .squareAcceptance_we0(grp_get_acceptanceCorners_fu_1341_squareAcceptance_we0),
    .squareAcceptance_d0(grp_get_acceptanceCorners_fu_1341_squareAcceptance_d0),
    .flatTop_address0(grp_get_acceptanceCorners_fu_1341_flatTop_address0),
    .flatTop_ce0(grp_get_acceptanceCorners_fu_1341_flatTop_ce0),
    .flatTop_we0(grp_get_acceptanceCorners_fu_1341_flatTop_we0),
    .flatTop_d0(grp_get_acceptanceCorners_fu_1341_flatTop_d0),
    .flatBottom_address0(grp_get_acceptanceCorners_fu_1341_flatBottom_address0),
    .flatBottom_ce0(grp_get_acceptanceCorners_fu_1341_flatBottom_ce0),
    .flatBottom_we0(grp_get_acceptanceCorners_fu_1341_flatBottom_we0),
    .flatBottom_d0(grp_get_acceptanceCorners_fu_1341_flatBottom_d0),
    .triangleAcceptance_address0(grp_get_acceptanceCorners_fu_1341_triangleAcceptance_address0),
    .triangleAcceptance_ce0(grp_get_acceptanceCorners_fu_1341_triangleAcceptance_ce0),
    .triangleAcceptance_we0(grp_get_acceptanceCorners_fu_1341_triangleAcceptance_we0),
    .triangleAcceptance_d0(grp_get_acceptanceCorners_fu_1341_triangleAcceptance_d0),
    .latest_patch_index_constprop(latest_patch_index_constprop_i)
);

system_top_fsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln935_3_reg_7730),
    .din1(retval_0_i_i545_reg_7735),
    .ce(1'b1),
    .dout(grp_fu_1383_p2)
);

system_top_uitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_2_no_dsp_1_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1387_p0),
    .ce(1'b1),
    .dout(grp_fu_1387_p1)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1390_p0),
    .ce(1'b1),
    .dout(grp_fu_1390_p1)
);

system_top_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1393_p0),
    .din1(grp_fu_1393_p1),
    .ce(1'b1),
    .opcode(grp_fu_1393_opcode),
    .dout(grp_fu_1393_p2)
);

system_top_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1390_p1),
    .din1(64'd4517329193108106638),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1401_p2)
);

system_top_mul_46s_55ns_100_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 55 ),
    .dout_WIDTH( 100 ))
mul_46s_55ns_100_1_1_U118(
    .din0(tmp_87_fu_2842_p3),
    .din1(mul_ln1148_fu_2854_p1),
    .dout(mul_ln1148_fu_2854_p2)
);

system_top_mul_33s_24s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 52 ))
mul_33s_24s_52_1_1_U119(
    .din0(r_V_5_fu_2920_p0),
    .din1(r_V_5_fu_2920_p1),
    .dout(r_V_5_fu_2920_p2)
);

system_top_sdiv_46ns_26s_32_50_1 #(
    .ID( 1 ),
    .NUM_STAGE( 50 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 32 ))
sdiv_46ns_26s_32_50_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(46'd21990232555520),
    .din1(ret_V_16_fu_4510_p2),
    .ce(1'b1),
    .dout(grp_fu_4520_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U121(
    .din0(ret_V_25_fu_4534_p2),
    .din1(radii_leverArm_fu_4526_p1),
    .dout(r_V_7_fu_4547_p2)
);

system_top_mul_33s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33s_32s_64_1_1_U122(
    .din0(ret_V_29_fu_6849_p2),
    .din1(r_V_9_fu_6858_p1),
    .dout(r_V_9_fu_6858_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp10_stage0_subdone) & (1'b1 == ap_condition_pp10_exit_iter0_state84) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp10_exit_iter0_state84)) begin
                ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state84);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter10 <= ap_enable_reg_pp10_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter11 <= ap_enable_reg_pp10_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter12 <= ap_enable_reg_pp10_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter13 <= ap_enable_reg_pp10_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter14 <= ap_enable_reg_pp10_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter15 <= ap_enable_reg_pp10_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter16 <= ap_enable_reg_pp10_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter17 <= ap_enable_reg_pp10_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter18 <= ap_enable_reg_pp10_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter19 <= ap_enable_reg_pp10_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter2 <= ap_enable_reg_pp10_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter20 <= ap_enable_reg_pp10_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter21 <= ap_enable_reg_pp10_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter22 <= ap_enable_reg_pp10_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter23 <= ap_enable_reg_pp10_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter24 <= ap_enable_reg_pp10_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter25 <= ap_enable_reg_pp10_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter26 <= ap_enable_reg_pp10_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter27 <= ap_enable_reg_pp10_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter28 <= ap_enable_reg_pp10_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter29 <= ap_enable_reg_pp10_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter3 <= ap_enable_reg_pp10_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter30 <= ap_enable_reg_pp10_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter31 <= ap_enable_reg_pp10_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter32 <= ap_enable_reg_pp10_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter33 <= ap_enable_reg_pp10_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter34 <= ap_enable_reg_pp10_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter35 <= ap_enable_reg_pp10_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter36 <= ap_enable_reg_pp10_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter37 <= ap_enable_reg_pp10_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter38 <= ap_enable_reg_pp10_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter39 <= ap_enable_reg_pp10_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter4 <= ap_enable_reg_pp10_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter40 <= ap_enable_reg_pp10_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter41 <= ap_enable_reg_pp10_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter42 <= ap_enable_reg_pp10_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter43 <= ap_enable_reg_pp10_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter44 <= ap_enable_reg_pp10_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter45 <= ap_enable_reg_pp10_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter46 <= ap_enable_reg_pp10_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter47 <= ap_enable_reg_pp10_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter48 <= ap_enable_reg_pp10_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter49 <= ap_enable_reg_pp10_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter5 <= ap_enable_reg_pp10_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter50 <= ap_enable_reg_pp10_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter51 <= ap_enable_reg_pp10_iter50;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp10_iter51 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter6 <= ap_enable_reg_pp10_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter7 <= ap_enable_reg_pp10_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter8 <= ap_enable_reg_pp10_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter9 <= ap_enable_reg_pp10_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp11_flush_enable)) begin
            ap_enable_reg_pp11_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state136)) begin
            ap_enable_reg_pp11_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter1 <= ap_enable_reg_pp11_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter2 <= ap_enable_reg_pp11_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter3 <= ap_enable_reg_pp11_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter4 <= ap_enable_reg_pp11_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter5 <= ap_enable_reg_pp11_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter6 <= ap_enable_reg_pp11_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter7 <= ap_enable_reg_pp11_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter8 <= ap_enable_reg_pp11_iter7;
        end else if ((1'b1 == ap_CS_fsm_state136)) begin
            ap_enable_reg_pp11_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state23))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state23);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state27))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state27))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state44))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state44))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state44);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state59))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((icmp_ln1498_fu_2807_p2 == 1'd1) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state59))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state59);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((icmp_ln1498_fu_2807_p2 == 1'd1) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state62))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((tmp_53_reg_7213 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state62))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state62);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((tmp_53_reg_7213 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state65))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((tmp_53_reg_7213 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state65))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state65);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((tmp_53_reg_7213 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state67))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state67)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state67);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp7_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b1 == ap_condition_pp8_exit_iter0_state74))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter0_state74)) begin
                ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state74);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_enable_reg_pp8_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage0_subdone) & (1'b1 == ap_condition_pp9_exit_iter0_state80) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter0_state80)) begin
                ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state80);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp9_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg <= 1'b1;
        end else if ((grp_alignedtoline_per_layer_loop3_fu_1250_ap_ready == 1'b1)) begin
            grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getParallelograms_fu_1285_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state15))) begin
            grp_getParallelograms_fu_1285_ap_start_reg <= 1'b1;
        end else if ((grp_getParallelograms_fu_1285_ap_ready == 1'b1)) begin
            grp_getParallelograms_fu_1285_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_acceptanceCorners_fu_1341_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17))) begin
            grp_get_acceptanceCorners_fu_1341_ap_start_reg <= 1'b1;
        end else if ((grp_get_acceptanceCorners_fu_1341_ap_ready == 1'b1)) begin
            grp_get_acceptanceCorners_fu_1341_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_index_from_z_fu_1317_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
            grp_get_index_from_z_fu_1317_ap_start_reg <= 1'b1;
        end else if ((grp_get_index_from_z_fu_1317_ap_ready == 1'b1)) begin
            grp_get_index_from_z_fu_1317_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_patch_buffer_add_patch2_fu_1330_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_patch_buffer_add_patch2_fu_1330_ap_start_reg <= 1'b1;
        end else if ((grp_patch_buffer_add_patch2_fu_1330_ap_ready == 1'b1)) begin
            grp_patch_buffer_add_patch2_fu_1330_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1498_fu_2807_p2 == 1'd0) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        current_z_top_index_V_2_reg_1065 <= current_z_top_index_V_reg_7259;
    end else if (((icmp_ln1498_reg_7302 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
        current_z_top_index_V_2_reg_1065 <= current_z_top_index_V_1_fu_2964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        if ((tmp_53_reg_7213 == 1'd0)) begin
            current_z_top_index_V_5_reg_1086 <= current_z_top_index_V_4_fu_2987_p2;
        end else if ((tmp_53_reg_7213 == 1'd1)) begin
            current_z_top_index_V_5_reg_1086 <= current_z_top_index_V_3_fu_2994_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state147) & (icmp_ln935_5_fu_5522_p2 == 1'd1))) begin
        dc_1_reg_1186 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        dc_1_reg_1186 <= bitcast_ln744_7_fu_5853_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln935_7_fu_5962_p2 == 1'd1))) begin
        dc_2_reg_1207 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        dc_2_reg_1207 <= bitcast_ln744_8_fu_6293_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln935_8_fu_6410_p2 == 1'd1))) begin
        dc_3_reg_1229 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        dc_3_reg_1229 <= bitcast_ln744_9_fu_6741_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
        empty_258_reg_874 <= 32'd1073741824;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln49_reg_7032 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_258_reg_874 <= select_ln51_2_fu_2034_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        empty_260_reg_909 <= 32'd1073741824;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln49_1_reg_7065 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        empty_260_reg_909 <= select_ln51_3_fu_2082_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_fu_3031_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_10_reg_1107 <= add_ln987_fu_3025_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        i_10_reg_1107 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_11_reg_1118 <= 3'd0;
    end else if (((icmp_ln997_fu_3709_p2 == 1'd0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_11_reg_1118 <= add_ln997_fu_3703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (icmp_ln1003_reg_7618 == 1'd0))) begin
        i_12_reg_1129 <= add_ln1003_reg_7613;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        i_12_reg_1129 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (icmp_ln1013_reg_7637 == 1'd0))) begin
        i_13_reg_1141 <= add_ln1015_reg_7641;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_13_reg_1141 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln1027_fu_4610_p2 == 1'd0) & (ap_enable_reg_pp11_iter0 == 1'b1))) begin
        i_15_reg_1152 <= add_ln1027_fu_4604_p2;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        i_15_reg_1152 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        i_5_reg_886 <= 5'd0;
    end else if (((icmp_ln49_1_fu_2048_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_5_reg_886 <= add_ln49_1_fu_2042_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_get_index_from_z_fu_1317_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state58)) begin
            i_6_reg_1042 <= add_ln933_reg_7278;
        end else if ((1'b1 == ap_CS_fsm_state53)) begin
            i_6_reg_1042 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1498_fu_2807_p2 == 1'd1) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        i_7_reg_1054 <= 3'd0;
    end else if (((icmp_ln952_fu_2953_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_7_reg_1054 <= add_ln952_fu_2947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_53_reg_7213 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
        i_8_reg_1096 <= 3'd0;
    end else if (((icmp_ln967_fu_3007_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        i_8_reg_1096 <= add_ln967_fu_3001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_53_reg_7213 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        i_9_reg_1075 <= 3'd0;
    end else if (((icmp_ln974_fu_2976_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_9_reg_1075 <= add_ln974_fu_2970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
        i_reg_851 <= 5'd0;
    end else if (((icmp_ln49_fu_2000_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_851 <= add_ln49_fu_1994_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_1_fu_2623_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten7_reg_985 <= add_ln37_3_fu_2617_p2;
    end else if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        indvar_flatten7_reg_985 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_1465_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_818 <= add_ln37_2_fu_1459_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        indvar_flatten_reg_818 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter8 == 1'b1) & (icmp_ln1027_reg_7705_pp11_iter7_reg == 1'd0))) begin
        layerSMin_V_reg_1175 <= layerSMin_V_2_fu_5472_p3;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        layerSMin_V_reg_1175 <= 32'd2146435072;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter8 == 1'b1) & (icmp_ln1027_reg_7705_pp11_iter7_reg == 1'd0))) begin
        layerWithSmallestShift_reg_1163 <= layerWithSmallestShift_2_fu_5480_p3;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        layerWithSmallestShift_reg_1163 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        layer_1_reg_996 <= select_ln37_3_reg_7169;
    end else if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        layer_1_reg_996 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_6884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_reg_829 <= select_ln37_1_reg_6888;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        layer_reg_829 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        min_z_V_2_reg_897 <= 32'd1073741824;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln49_1_reg_7065 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        min_z_V_2_reg_897 <= min_z_V_3_fu_2074_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
        min_z_V_reg_862 <= 32'd1073741824;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln49_reg_7032 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        min_z_V_reg_862 <= min_z_V_1_fu_2026_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_1_fu_2623_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        point_1_reg_1007 <= add_ln39_1_fu_2680_p2;
    end else if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        point_1_reg_1007 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_1465_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        point_reg_840 <= add_ln39_fu_1522_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
        point_reg_840 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i_reg_7184 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
        previous_z_top_min_V_reg_1029 <= z_top_min_V_11_reg_1018;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        previous_z_top_min_V_reg_1029 <= 32'd2147483648;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln582_fu_2541_p2 == 1'd1) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln585_fu_2573_p2 == 1'd1) & (icmp_ln581_fu_2511_p2 == 1'd1) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln585_fu_2573_p2 == 1'd0) & (icmp_ln581_fu_2511_p2 == 1'd1) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln603_fu_2561_p2 == 1'd1) & (icmp_ln581_fu_2511_p2 == 1'd0) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln603_fu_2561_p2 == 1'd0) & (icmp_ln581_fu_2511_p2 == 1'd0) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln571_fu_2499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((triangleAcceptance_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state26)))) begin
        rhs_reg_921 <= min_z_V_reg_862;
    end else if ((((1'd0 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22)) | ((notChoppedPatch_fu_1650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)))) begin
        rhs_reg_921 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i_reg_7184 == 1'd0) & (1'b1 == ap_CS_fsm_state165))) begin
        z_top_min_V_11_reg_1018 <= z_top_min_V_10_fu_6871_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        z_top_min_V_11_reg_1018 <= z_top_min_V_reg_955;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1050_fu_5908_p2) & (1'b1 == ap_CS_fsm_state151))) begin
        z_top_min_V_13_reg_1197 <= reg_1449;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        z_top_min_V_13_reg_1197 <= z_bits_1_fu_5945_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1055_fu_6348_p2) & (1'b1 == ap_CS_fsm_state157))) begin
        z_top_min_V_14_reg_1218 <= z_top_min_V_13_reg_1197;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        z_top_min_V_14_reg_1218 <= z_bits_2_fu_6393_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1060_fu_6796_p2) & (1'b1 == ap_CS_fsm_state163))) begin
        z_top_min_V_15_reg_1240 <= z_top_min_V_14_reg_1218;
    end else if (((1'd1 == and_ln1060_reg_7925) & (1'b1 == ap_CS_fsm_state164))) begin
        z_top_min_V_15_reg_1240 <= z_bits_3_fu_6841_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln603_fu_2561_p2 == 1'd1) & (icmp_ln581_fu_2511_p2 == 1'd0) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_top_min_V_reg_955 <= shl_ln604_fu_2567_p2;
    end else if (((icmp_ln585_fu_2573_p2 == 1'd0) & (icmp_ln581_fu_2511_p2 == 1'd1) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_top_min_V_reg_955 <= select_ln588_fu_2587_p3;
    end else if (((icmp_ln585_fu_2573_p2 == 1'd1) & (icmp_ln581_fu_2511_p2 == 1'd1) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_top_min_V_reg_955 <= trunc_ln586_3_fu_2609_p1;
    end else if (((icmp_ln582_fu_2541_p2 == 1'd1) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_top_min_V_reg_955 <= trunc_ln583_fu_2613_p1;
    end else if ((((icmp_ln603_fu_2561_p2 == 1'd0) & (icmp_ln581_fu_2511_p2 == 1'd0) & (icmp_ln582_fu_2541_p2 == 1'd0) & (icmp_ln571_fu_2499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln571_fu_2499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        z_top_min_V_reg_955 <= 32'd0;
    end else if (((triangleAcceptance_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        z_top_min_V_reg_955 <= original_d_V_reg_6948;
    end else if ((((1'd0 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22)) | ((notChoppedPatch_fu_1650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)))) begin
        z_top_min_V_reg_955 <= 32'd4242538496;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
        add_ln1003_reg_7613 <= add_ln1003_fu_4337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln1013_fu_4458_p2 == 1'd0))) begin
        add_ln1014_reg_7657 <= add_ln1014_fu_4475_p2;
        trunc_ln1015_cast_reg_7647[2 : 0] <= trunc_ln1015_cast_fu_4470_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp10_stage0_11001)) begin
        add_ln1014_reg_7657_pp10_iter10_reg <= add_ln1014_reg_7657_pp10_iter9_reg;
        add_ln1014_reg_7657_pp10_iter11_reg <= add_ln1014_reg_7657_pp10_iter10_reg;
        add_ln1014_reg_7657_pp10_iter12_reg <= add_ln1014_reg_7657_pp10_iter11_reg;
        add_ln1014_reg_7657_pp10_iter13_reg <= add_ln1014_reg_7657_pp10_iter12_reg;
        add_ln1014_reg_7657_pp10_iter14_reg <= add_ln1014_reg_7657_pp10_iter13_reg;
        add_ln1014_reg_7657_pp10_iter15_reg <= add_ln1014_reg_7657_pp10_iter14_reg;
        add_ln1014_reg_7657_pp10_iter16_reg <= add_ln1014_reg_7657_pp10_iter15_reg;
        add_ln1014_reg_7657_pp10_iter17_reg <= add_ln1014_reg_7657_pp10_iter16_reg;
        add_ln1014_reg_7657_pp10_iter18_reg <= add_ln1014_reg_7657_pp10_iter17_reg;
        add_ln1014_reg_7657_pp10_iter19_reg <= add_ln1014_reg_7657_pp10_iter18_reg;
        add_ln1014_reg_7657_pp10_iter20_reg <= add_ln1014_reg_7657_pp10_iter19_reg;
        add_ln1014_reg_7657_pp10_iter21_reg <= add_ln1014_reg_7657_pp10_iter20_reg;
        add_ln1014_reg_7657_pp10_iter22_reg <= add_ln1014_reg_7657_pp10_iter21_reg;
        add_ln1014_reg_7657_pp10_iter23_reg <= add_ln1014_reg_7657_pp10_iter22_reg;
        add_ln1014_reg_7657_pp10_iter24_reg <= add_ln1014_reg_7657_pp10_iter23_reg;
        add_ln1014_reg_7657_pp10_iter25_reg <= add_ln1014_reg_7657_pp10_iter24_reg;
        add_ln1014_reg_7657_pp10_iter26_reg <= add_ln1014_reg_7657_pp10_iter25_reg;
        add_ln1014_reg_7657_pp10_iter27_reg <= add_ln1014_reg_7657_pp10_iter26_reg;
        add_ln1014_reg_7657_pp10_iter28_reg <= add_ln1014_reg_7657_pp10_iter27_reg;
        add_ln1014_reg_7657_pp10_iter29_reg <= add_ln1014_reg_7657_pp10_iter28_reg;
        add_ln1014_reg_7657_pp10_iter2_reg <= add_ln1014_reg_7657_pp10_iter1_reg;
        add_ln1014_reg_7657_pp10_iter30_reg <= add_ln1014_reg_7657_pp10_iter29_reg;
        add_ln1014_reg_7657_pp10_iter31_reg <= add_ln1014_reg_7657_pp10_iter30_reg;
        add_ln1014_reg_7657_pp10_iter32_reg <= add_ln1014_reg_7657_pp10_iter31_reg;
        add_ln1014_reg_7657_pp10_iter33_reg <= add_ln1014_reg_7657_pp10_iter32_reg;
        add_ln1014_reg_7657_pp10_iter34_reg <= add_ln1014_reg_7657_pp10_iter33_reg;
        add_ln1014_reg_7657_pp10_iter35_reg <= add_ln1014_reg_7657_pp10_iter34_reg;
        add_ln1014_reg_7657_pp10_iter36_reg <= add_ln1014_reg_7657_pp10_iter35_reg;
        add_ln1014_reg_7657_pp10_iter37_reg <= add_ln1014_reg_7657_pp10_iter36_reg;
        add_ln1014_reg_7657_pp10_iter38_reg <= add_ln1014_reg_7657_pp10_iter37_reg;
        add_ln1014_reg_7657_pp10_iter39_reg <= add_ln1014_reg_7657_pp10_iter38_reg;
        add_ln1014_reg_7657_pp10_iter3_reg <= add_ln1014_reg_7657_pp10_iter2_reg;
        add_ln1014_reg_7657_pp10_iter40_reg <= add_ln1014_reg_7657_pp10_iter39_reg;
        add_ln1014_reg_7657_pp10_iter41_reg <= add_ln1014_reg_7657_pp10_iter40_reg;
        add_ln1014_reg_7657_pp10_iter42_reg <= add_ln1014_reg_7657_pp10_iter41_reg;
        add_ln1014_reg_7657_pp10_iter43_reg <= add_ln1014_reg_7657_pp10_iter42_reg;
        add_ln1014_reg_7657_pp10_iter44_reg <= add_ln1014_reg_7657_pp10_iter43_reg;
        add_ln1014_reg_7657_pp10_iter45_reg <= add_ln1014_reg_7657_pp10_iter44_reg;
        add_ln1014_reg_7657_pp10_iter46_reg <= add_ln1014_reg_7657_pp10_iter45_reg;
        add_ln1014_reg_7657_pp10_iter47_reg <= add_ln1014_reg_7657_pp10_iter46_reg;
        add_ln1014_reg_7657_pp10_iter48_reg <= add_ln1014_reg_7657_pp10_iter47_reg;
        add_ln1014_reg_7657_pp10_iter49_reg <= add_ln1014_reg_7657_pp10_iter48_reg;
        add_ln1014_reg_7657_pp10_iter4_reg <= add_ln1014_reg_7657_pp10_iter3_reg;
        add_ln1014_reg_7657_pp10_iter50_reg <= add_ln1014_reg_7657_pp10_iter49_reg;
        add_ln1014_reg_7657_pp10_iter5_reg <= add_ln1014_reg_7657_pp10_iter4_reg;
        add_ln1014_reg_7657_pp10_iter6_reg <= add_ln1014_reg_7657_pp10_iter5_reg;
        add_ln1014_reg_7657_pp10_iter7_reg <= add_ln1014_reg_7657_pp10_iter6_reg;
        add_ln1014_reg_7657_pp10_iter8_reg <= add_ln1014_reg_7657_pp10_iter7_reg;
        add_ln1014_reg_7657_pp10_iter9_reg <= add_ln1014_reg_7657_pp10_iter8_reg;
        icmp_ln1013_reg_7637_pp10_iter10_reg <= icmp_ln1013_reg_7637_pp10_iter9_reg;
        icmp_ln1013_reg_7637_pp10_iter11_reg <= icmp_ln1013_reg_7637_pp10_iter10_reg;
        icmp_ln1013_reg_7637_pp10_iter12_reg <= icmp_ln1013_reg_7637_pp10_iter11_reg;
        icmp_ln1013_reg_7637_pp10_iter13_reg <= icmp_ln1013_reg_7637_pp10_iter12_reg;
        icmp_ln1013_reg_7637_pp10_iter14_reg <= icmp_ln1013_reg_7637_pp10_iter13_reg;
        icmp_ln1013_reg_7637_pp10_iter15_reg <= icmp_ln1013_reg_7637_pp10_iter14_reg;
        icmp_ln1013_reg_7637_pp10_iter16_reg <= icmp_ln1013_reg_7637_pp10_iter15_reg;
        icmp_ln1013_reg_7637_pp10_iter17_reg <= icmp_ln1013_reg_7637_pp10_iter16_reg;
        icmp_ln1013_reg_7637_pp10_iter18_reg <= icmp_ln1013_reg_7637_pp10_iter17_reg;
        icmp_ln1013_reg_7637_pp10_iter19_reg <= icmp_ln1013_reg_7637_pp10_iter18_reg;
        icmp_ln1013_reg_7637_pp10_iter20_reg <= icmp_ln1013_reg_7637_pp10_iter19_reg;
        icmp_ln1013_reg_7637_pp10_iter21_reg <= icmp_ln1013_reg_7637_pp10_iter20_reg;
        icmp_ln1013_reg_7637_pp10_iter22_reg <= icmp_ln1013_reg_7637_pp10_iter21_reg;
        icmp_ln1013_reg_7637_pp10_iter23_reg <= icmp_ln1013_reg_7637_pp10_iter22_reg;
        icmp_ln1013_reg_7637_pp10_iter24_reg <= icmp_ln1013_reg_7637_pp10_iter23_reg;
        icmp_ln1013_reg_7637_pp10_iter25_reg <= icmp_ln1013_reg_7637_pp10_iter24_reg;
        icmp_ln1013_reg_7637_pp10_iter26_reg <= icmp_ln1013_reg_7637_pp10_iter25_reg;
        icmp_ln1013_reg_7637_pp10_iter27_reg <= icmp_ln1013_reg_7637_pp10_iter26_reg;
        icmp_ln1013_reg_7637_pp10_iter28_reg <= icmp_ln1013_reg_7637_pp10_iter27_reg;
        icmp_ln1013_reg_7637_pp10_iter29_reg <= icmp_ln1013_reg_7637_pp10_iter28_reg;
        icmp_ln1013_reg_7637_pp10_iter2_reg <= icmp_ln1013_reg_7637_pp10_iter1_reg;
        icmp_ln1013_reg_7637_pp10_iter30_reg <= icmp_ln1013_reg_7637_pp10_iter29_reg;
        icmp_ln1013_reg_7637_pp10_iter31_reg <= icmp_ln1013_reg_7637_pp10_iter30_reg;
        icmp_ln1013_reg_7637_pp10_iter32_reg <= icmp_ln1013_reg_7637_pp10_iter31_reg;
        icmp_ln1013_reg_7637_pp10_iter33_reg <= icmp_ln1013_reg_7637_pp10_iter32_reg;
        icmp_ln1013_reg_7637_pp10_iter34_reg <= icmp_ln1013_reg_7637_pp10_iter33_reg;
        icmp_ln1013_reg_7637_pp10_iter35_reg <= icmp_ln1013_reg_7637_pp10_iter34_reg;
        icmp_ln1013_reg_7637_pp10_iter36_reg <= icmp_ln1013_reg_7637_pp10_iter35_reg;
        icmp_ln1013_reg_7637_pp10_iter37_reg <= icmp_ln1013_reg_7637_pp10_iter36_reg;
        icmp_ln1013_reg_7637_pp10_iter38_reg <= icmp_ln1013_reg_7637_pp10_iter37_reg;
        icmp_ln1013_reg_7637_pp10_iter39_reg <= icmp_ln1013_reg_7637_pp10_iter38_reg;
        icmp_ln1013_reg_7637_pp10_iter3_reg <= icmp_ln1013_reg_7637_pp10_iter2_reg;
        icmp_ln1013_reg_7637_pp10_iter40_reg <= icmp_ln1013_reg_7637_pp10_iter39_reg;
        icmp_ln1013_reg_7637_pp10_iter41_reg <= icmp_ln1013_reg_7637_pp10_iter40_reg;
        icmp_ln1013_reg_7637_pp10_iter42_reg <= icmp_ln1013_reg_7637_pp10_iter41_reg;
        icmp_ln1013_reg_7637_pp10_iter43_reg <= icmp_ln1013_reg_7637_pp10_iter42_reg;
        icmp_ln1013_reg_7637_pp10_iter44_reg <= icmp_ln1013_reg_7637_pp10_iter43_reg;
        icmp_ln1013_reg_7637_pp10_iter45_reg <= icmp_ln1013_reg_7637_pp10_iter44_reg;
        icmp_ln1013_reg_7637_pp10_iter46_reg <= icmp_ln1013_reg_7637_pp10_iter45_reg;
        icmp_ln1013_reg_7637_pp10_iter47_reg <= icmp_ln1013_reg_7637_pp10_iter46_reg;
        icmp_ln1013_reg_7637_pp10_iter48_reg <= icmp_ln1013_reg_7637_pp10_iter47_reg;
        icmp_ln1013_reg_7637_pp10_iter49_reg <= icmp_ln1013_reg_7637_pp10_iter48_reg;
        icmp_ln1013_reg_7637_pp10_iter4_reg <= icmp_ln1013_reg_7637_pp10_iter3_reg;
        icmp_ln1013_reg_7637_pp10_iter50_reg <= icmp_ln1013_reg_7637_pp10_iter49_reg;
        icmp_ln1013_reg_7637_pp10_iter5_reg <= icmp_ln1013_reg_7637_pp10_iter4_reg;
        icmp_ln1013_reg_7637_pp10_iter6_reg <= icmp_ln1013_reg_7637_pp10_iter5_reg;
        icmp_ln1013_reg_7637_pp10_iter7_reg <= icmp_ln1013_reg_7637_pp10_iter6_reg;
        icmp_ln1013_reg_7637_pp10_iter8_reg <= icmp_ln1013_reg_7637_pp10_iter7_reg;
        icmp_ln1013_reg_7637_pp10_iter9_reg <= icmp_ln1013_reg_7637_pp10_iter8_reg;
        trunc_ln1015_cast_reg_7647_pp10_iter10_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter9_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter11_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter10_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter12_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter11_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter13_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter12_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter14_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter13_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter15_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter14_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter16_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter15_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter17_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter16_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter18_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter17_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter19_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter18_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter20_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter19_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter21_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter20_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter22_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter21_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter23_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter22_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter24_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter23_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter25_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter24_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter26_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter25_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter27_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter26_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter28_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter27_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter29_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter28_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter2_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter1_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter30_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter29_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter31_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter30_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter32_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter31_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter33_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter32_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter34_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter33_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter35_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter34_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter36_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter35_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter37_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter36_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter38_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter37_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter39_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter38_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter3_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter2_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter40_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter39_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter41_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter40_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter42_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter41_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter43_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter42_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter44_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter43_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter45_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter44_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter46_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter45_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter47_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter46_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter48_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter47_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter4_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter3_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter5_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter4_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter6_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter5_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter7_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter6_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter8_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter7_reg[2 : 0];
        trunc_ln1015_cast_reg_7647_pp10_iter9_reg[2 : 0] <= trunc_ln1015_cast_reg_7647_pp10_iter8_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        add_ln1014_reg_7657_pp10_iter1_reg <= add_ln1014_reg_7657;
        icmp_ln1013_reg_7637 <= icmp_ln1013_fu_4458_p2;
        icmp_ln1013_reg_7637_pp10_iter1_reg <= icmp_ln1013_reg_7637;
        trunc_ln1015_cast_reg_7647_pp10_iter1_reg[2 : 0] <= trunc_ln1015_cast_reg_7647[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (icmp_ln1013_fu_4458_p2 == 1'd0))) begin
        add_ln1015_reg_7641 <= add_ln1015_fu_4464_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln50_4_reg_6943[7 : 4] <= add_ln50_4_fu_1564_p2[7 : 4];
        add_ln50_reg_6938[7 : 4] <= add_ln50_fu_1558_p2[7 : 4];
        nPatchesAtOriginal_V_reg_6962 <= num_patches_constprop_i;
        original_d_V_reg_6948 <= d_corner_1_q0;
        sext_ln703_7_reg_6954 <= sext_ln703_7_fu_1574_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln933_reg_7278 <= add_ln933_fu_2784_p2;
        zext_ln931_reg_7283[2 : 0] <= zext_ln931_fu_2790_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        add_ln985_reg_7254 <= add_ln985_fu_2765_p2;
        lhs_12_reg_7248[51 : 20] <= lhs_12_fu_2757_p3[51 : 20];
        p_v_cast_reg_7227 <= p_v_cast_fu_2745_p1;
        sext_ln703_11_reg_7242 <= sext_ln703_11_fu_2753_p1;
        tmp_53_reg_7213 <= select_ln703_fu_2725_p3[32'd31];
        x_reg_7237 <= grp_fu_1423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        and_ln1060_reg_7925 <= and_ln1060_fu_6796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln997_reg_7513_pp8_iter2_reg == 1'd0))) begin
        and_ln581_1_reg_7597 <= and_ln581_1_fu_4236_p2;
        icmp_ln571_2_reg_7575 <= icmp_ln571_2_fu_4126_p2;
        icmp_ln582_2_reg_7586 <= icmp_ln582_2_fu_4164_p2;
        or_ln571_5_reg_7602 <= or_ln571_5_fu_4272_p2;
        select_ln571_11_reg_7608 <= select_ln571_11_fu_4278_p3;
        sh_amt_2_reg_7581 <= sh_amt_2_fu_4156_p3;
        trunc_ln583_2_reg_7591 <= trunc_ln583_2_fu_4170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_reg_7394_pp7_iter3_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        and_ln581_reg_7492 <= and_ln581_fu_3602_p2;
        icmp_ln571_1_reg_7470 <= icmp_ln571_1_fu_3489_p2;
        icmp_ln582_1_reg_7481 <= icmp_ln582_1_fu_3527_p2;
        or_ln571_reg_7497 <= or_ln571_fu_3638_p2;
        select_ln571_6_reg_7503 <= select_ln571_6_fu_3644_p3;
        sh_amt_1_reg_7476 <= sh_amt_1_fu_3519_p3;
        trunc_ln583_1_reg_7486 <= trunc_ln583_1_fu_3533_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        cmp_i_i_reg_7184 <= cmp_i_i_fu_2686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_reg_7394_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        conv_reg_7457 <= grp_fu_1387_p1;
        select_ln935_1_reg_7450 <= select_ln935_1_fu_3332_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        current_z_top_index_V_reg_7259 <= grp_get_index_from_z_fu_1317_ap_return;
        sext_ln1115_1_reg_7273 <= sext_ln1115_1_fu_2780_p1;
        sext_ln703_12_reg_7265 <= sext_ln703_12_fu_2771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (icmp_ln1027_reg_7705_pp11_iter6_reg == 1'd0))) begin
        exp_tmp_3_reg_7755 <= {{ireg_3_fu_5207_p1[62:52]}};
        icmp_ln571_3_reg_7765 <= icmp_ln571_3_fu_5237_p2;
        p_Result_151_reg_7750 <= ireg_3_fu_5207_p1[32'd63];
        trunc_ln565_3_reg_7760 <= trunc_ln565_3_fu_5233_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln1003_fu_4343_p2 == 1'd0))) begin
        i_12_cast4_reg_7622[2 : 0] <= i_12_cast4_fu_4349_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        i_12_cast4_reg_7622_pp9_iter1_reg[2 : 0] <= i_12_cast4_reg_7622[2 : 0];
        icmp_ln1003_reg_7618 <= icmp_ln1003_fu_4343_p2;
        icmp_ln1003_reg_7618_pp9_iter1_reg <= icmp_ln1003_reg_7618;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln952_fu_2953_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_7_cast_reg_7341[2 : 0] <= i_7_cast_fu_2959_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln967_fu_3007_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        i_8_cast_reg_7379[2 : 0] <= i_8_cast_fu_3013_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln974_fu_2976_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_9_cast_reg_7360[2 : 0] <= i_9_cast_fu_2982_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        icmp_ln1027_reg_7705 <= icmp_ln1027_fu_4610_p2;
        icmp_ln1027_reg_7705_pp11_iter1_reg <= icmp_ln1027_reg_7705;
        trunc_ln1033_reg_7714_pp11_iter1_reg <= trunc_ln1033_reg_7714;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp11_stage0_11001)) begin
        icmp_ln1027_reg_7705_pp11_iter2_reg <= icmp_ln1027_reg_7705_pp11_iter1_reg;
        icmp_ln1027_reg_7705_pp11_iter3_reg <= icmp_ln1027_reg_7705_pp11_iter2_reg;
        icmp_ln1027_reg_7705_pp11_iter4_reg <= icmp_ln1027_reg_7705_pp11_iter3_reg;
        icmp_ln1027_reg_7705_pp11_iter5_reg <= icmp_ln1027_reg_7705_pp11_iter4_reg;
        icmp_ln1027_reg_7705_pp11_iter6_reg <= icmp_ln1027_reg_7705_pp11_iter5_reg;
        icmp_ln1027_reg_7705_pp11_iter7_reg <= icmp_ln1027_reg_7705_pp11_iter6_reg;
        trunc_ln1033_reg_7714_pp11_iter2_reg <= trunc_ln1033_reg_7714_pp11_iter1_reg;
        trunc_ln1033_reg_7714_pp11_iter3_reg <= trunc_ln1033_reg_7714_pp11_iter2_reg;
        trunc_ln1033_reg_7714_pp11_iter4_reg <= trunc_ln1033_reg_7714_pp11_iter3_reg;
        trunc_ln1033_reg_7714_pp11_iter5_reg <= trunc_ln1033_reg_7714_pp11_iter4_reg;
        trunc_ln1033_reg_7714_pp11_iter6_reg <= trunc_ln1033_reg_7714_pp11_iter5_reg;
        trunc_ln1033_reg_7714_pp11_iter7_reg <= trunc_ln1033_reg_7714_pp11_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        icmp_ln1050_1_reg_7826 <= icmp_ln1050_1_fu_5898_p2;
        icmp_ln1050_reg_7821 <= icmp_ln1050_fu_5892_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        icmp_ln1055_1_reg_7873 <= icmp_ln1055_1_fu_6338_p2;
        icmp_ln1055_reg_7868 <= icmp_ln1055_fu_6332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        icmp_ln1060_1_reg_7920 <= icmp_ln1060_1_fu_6786_p2;
        icmp_ln1060_reg_7915 <= icmp_ln1060_fu_6780_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((notChoppedPatch_fu_1650_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        icmp_ln1495_reg_7003 <= icmp_ln1495_fu_1828_p2;
        icmp_ln935_reg_6967 <= icmp_ln935_fu_1656_p2;
        icmp_ln958_reg_6988 <= icmp_ln958_fu_1796_p2;
        m_67_reg_6977 <= m_67_fu_1676_p3;
        p_Result_120_reg_6972 <= p_Result_120_fu_1662_p1[32'd31];
        select_ln958_reg_6993 <= select_ln958_fu_1816_p3;
        sub_ln944_reg_6982 <= sub_ln944_fu_1702_p2;
        trunc_ln943_reg_6998 <= trunc_ln943_fu_1824_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        icmp_ln1498_reg_7302 <= icmp_ln1498_fu_2807_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln224_1_reg_7120 <= icmp_ln224_1_fu_2415_p2;
        icmp_ln224_reg_7115 <= icmp_ln224_fu_2409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (icmp_ln997_reg_7513_pp8_iter1_reg == 1'd0))) begin
        icmp_ln224_2_reg_7565 <= icmp_ln224_2_fu_4036_p2;
        icmp_ln224_3_reg_7570 <= icmp_ln224_3_fu_4042_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln37_1_reg_7165 <= icmp_ln37_1_fu_2623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln37_reg_6884 <= icmp_ln37_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln49_1_reg_7065 <= icmp_ln49_1_fu_2048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln49_reg_7032 <= icmp_ln49_fu_2000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln931_fu_2795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        icmp_ln870_reg_7292 <= icmp_ln870_fu_2801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        icmp_ln935_2_reg_7084 <= icmp_ln935_2_fu_2090_p2;
        m_70_reg_7094 <= {{m_40_fu_2306_p2[63:1]}};
        p_Result_124_reg_7089 <= min_z_V_2_reg_897[32'd31];
        p_Result_54_reg_7099 <= m_40_fu_2306_p2[32'd25];
        trunc_ln943_3_reg_7104 <= trunc_ln943_3_fu_2330_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_reg_7394 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln935_3_reg_7409 <= icmp_ln935_3_fu_3043_p2;
        icmp_ln958_4_reg_7430 <= icmp_ln958_4_fu_3183_p2;
        m_71_reg_7419 <= m_71_fu_3063_p3;
        p_Result_130_reg_7414 <= new_z_i_index_V_q1[32'd31];
        select_ln958_9_reg_7435 <= select_ln958_9_fu_3203_p3;
        sub_ln944_4_reg_7424 <= sub_ln944_4_fu_3089_p2;
        trunc_ln943_4_reg_7440 <= trunc_ln943_4_fu_3211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln997_reg_7513 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln935_4_reg_7523 <= icmp_ln935_4_fu_3720_p2;
        icmp_ln958_5_reg_7544 <= icmp_ln958_5_fu_3860_p2;
        m_73_reg_7533 <= m_73_fu_3740_p3;
        p_Result_136_reg_7528 <= new_z_i_index_V_q0[32'd31];
        select_ln958_11_reg_7549 <= select_ln958_11_fu_3880_p3;
        sub_ln944_5_reg_7538 <= sub_ln944_5_fu_3766_p2;
        trunc_ln943_5_reg_7554 <= trunc_ln943_5_fu_3888_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln952_reg_7337 <= icmp_ln952_fu_2953_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln967_reg_7375 <= icmp_ln967_fu_3007_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        icmp_ln971_1_reg_7018 <= icmp_ln971_1_fu_1968_p2;
        icmp_ln971_reg_7013 <= icmp_ln971_fu_1962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln974_reg_7356 <= icmp_ln974_fu_2976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln987_reg_7394 <= icmp_ln987_fu_3031_p2;
        icmp_ln987_reg_7394_pp7_iter1_reg <= icmp_ln987_reg_7394;
        new_z_i_index_V_addr_3_reg_7398_pp7_iter1_reg <= new_z_i_index_V_addr_3_reg_7398;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln987_reg_7394_pp7_iter2_reg <= icmp_ln987_reg_7394_pp7_iter1_reg;
        icmp_ln987_reg_7394_pp7_iter3_reg <= icmp_ln987_reg_7394_pp7_iter2_reg;
        icmp_ln987_reg_7394_pp7_iter4_reg <= icmp_ln987_reg_7394_pp7_iter3_reg;
        new_z_i_index_V_addr_3_reg_7398_pp7_iter2_reg <= new_z_i_index_V_addr_3_reg_7398_pp7_iter1_reg;
        new_z_i_index_V_addr_3_reg_7398_pp7_iter3_reg <= new_z_i_index_V_addr_3_reg_7398_pp7_iter2_reg;
        new_z_i_index_V_addr_3_reg_7398_pp7_iter4_reg <= new_z_i_index_V_addr_3_reg_7398_pp7_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln997_reg_7513 <= icmp_ln997_fu_3709_p2;
        icmp_ln997_reg_7513_pp8_iter1_reg <= icmp_ln997_reg_7513;
        new_z_i_index_V_addr_4_reg_7517_pp8_iter1_reg <= new_z_i_index_V_addr_4_reg_7517;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp8_stage0_11001)) begin
        icmp_ln997_reg_7513_pp8_iter2_reg <= icmp_ln997_reg_7513_pp8_iter1_reg;
        icmp_ln997_reg_7513_pp8_iter3_reg <= icmp_ln997_reg_7513_pp8_iter2_reg;
        new_z_i_index_V_addr_4_reg_7517_pp8_iter2_reg <= new_z_i_index_V_addr_4_reg_7517_pp8_iter1_reg;
        new_z_i_index_V_addr_4_reg_7517_pp8_iter3_reg <= new_z_i_index_V_addr_4_reg_7517_pp8_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        m_75_reg_7694[31 : 0] <= m_75_fu_4600_p1[31 : 0];
        p_Result_146_reg_7682 <= z_top_min_V_11_reg_1018[32'd31];
        tmp_V_26_reg_7687 <= tmp_V_26_fu_4592_p3;
        tobool_i_i483_reg_7677 <= tobool_i_i483_fu_4572_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        mul_ln1148_reg_7306 <= mul_ln1148_fu_2854_p2;
        tmp_55_reg_7311 <= ret_V_11_fu_2836_p2[32'd25];
        tmp_57_reg_7317 <= {{mul_ln1148_fu_2854_p2[99:78]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_fu_3031_p2 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        new_z_i_index_V_addr_3_reg_7398 <= i_10_cast_fu_3037_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln997_fu_3709_p2 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        new_z_i_index_V_addr_4_reg_7517 <= i_11_cast_fu_3715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7705 == 1'd0) & (1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        p_Result_142_reg_7719 <= new_z_i_atTop_V_q0[32'd31];
        tmp_V_17_reg_7725 <= tmp_V_17_fu_4633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (icmp_ln1027_reg_7705_pp11_iter4_reg == 1'd0))) begin
        p_Result_150_reg_7740 <= p_Result_150_fu_5195_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state147) & (icmp_ln935_5_fu_5522_p2 == 1'd0))) begin
        p_Result_153_reg_7800 <= ret_V_26_fu_5513_p2[32'd32];
        tmp_V_27_reg_7805 <= tmp_V_27_fu_5542_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln935_7_fu_5962_p2 == 1'd0))) begin
        p_Result_158_reg_7847 <= ret_V_27_fu_5953_p2[32'd32];
        tmp_V_28_reg_7852 <= tmp_V_28_fu_5982_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln935_8_fu_6410_p2 == 1'd0))) begin
        p_Result_163_reg_7894 <= ret_V_28_fu_6401_p2[32'd32];
        tmp_V_29_reg_7899 <= tmp_V_29_fu_6430_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        r_V_5_reg_7322 <= r_V_5_fu_2920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_1437 <= latest_patch_index_constprop_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state147) | ((icmp_ln1027_reg_7705 == 1'd0) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0)))) begin
        reg_1449 <= new_z_i_atTop_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (icmp_ln1027_reg_7705_pp11_iter1_reg == 1'd0))) begin
        retval_0_i_i545_reg_7735 <= retval_0_i_i545_fu_5184_p3;
        select_ln935_3_reg_7730 <= select_ln935_3_fu_4918_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_1465_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln37_1_reg_6888 <= select_ln37_1_fu_1491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_1_fu_2623_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln37_3_reg_7169 <= select_ln37_3_fu_2649_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        select_ln985_reg_7782 <= select_ln985_fu_5497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln987_reg_7394_pp7_iter2_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln989_reg_7464 <= select_ln989_fu_3422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (icmp_ln1013_reg_7637_pp10_iter49_reg == 1'd0))) begin
        this_V_write_assign_reg_7672 <= {{ret_V_18_fu_4553_p2[51:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln1027_fu_4610_p2 == 1'd0))) begin
        trunc_ln1033_reg_7714 <= trunc_ln1033_fu_4621_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        z_value_tmp_V_reg_7327 <= {{ret_V_13_fu_2925_p2[51:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        zext_ln671_reg_6903[1 : 0] <= zext_ln671_fu_1528_p1[1 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        a_corner_0_ce0 = grp_get_acceptanceCorners_fu_1341_a_corner_0_ce0;
    end else begin
        a_corner_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        a_corner_0_we0 = grp_get_acceptanceCorners_fu_1341_a_corner_0_we0;
    end else begin
        a_corner_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        a_corner_1_address0 = zext_ln875_fu_2691_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_corner_1_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        a_corner_1_address0 = grp_get_acceptanceCorners_fu_1341_a_corner_1_address0;
    end else begin
        a_corner_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state19))) begin
        a_corner_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        a_corner_1_ce0 = grp_get_acceptanceCorners_fu_1341_a_corner_1_ce0;
    end else begin
        a_corner_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        a_corner_1_we0 = grp_get_acceptanceCorners_fu_1341_a_corner_1_we0;
    end else begin
        a_corner_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_1465_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1013_fu_4458_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state84 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state84 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp11_stage0_subdone) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln1027_fu_4610_p2 == 1'd1))) begin
        ap_condition_pp11_flush_enable = 1'b1;
    end else begin
        ap_condition_pp11_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln49_fu_2000_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln49_1_fu_2048_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln37_1_fu_2623_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln952_fu_2953_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln974_fu_2976_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state62 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state62 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln967_fu_3007_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln987_fu_3031_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state67 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state67 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln997_fu_3709_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state74 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state74 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1003_fu_4343_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state80 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state80 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((cmp_i_i_reg_7184 == 1'd1) & (1'b1 == ap_CS_fsm_state165)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter51 == 1'b0) & (ap_enable_reg_pp10_iter50 == 1'b0) & (ap_enable_reg_pp10_iter49 == 1'b0) & (ap_enable_reg_pp10_iter48 == 1'b0) & (ap_enable_reg_pp10_iter47 == 1'b0) & (ap_enable_reg_pp10_iter46 == 1'b0) & (ap_enable_reg_pp10_iter45 == 1'b0) & (ap_enable_reg_pp10_iter44 == 1'b0) & (ap_enable_reg_pp10_iter43 == 1'b0) & (ap_enable_reg_pp10_iter42 == 1'b0) & (ap_enable_reg_pp10_iter41 == 1'b0) & (ap_enable_reg_pp10_iter40 == 1'b0) & (ap_enable_reg_pp10_iter39 == 1'b0) & (ap_enable_reg_pp10_iter38 == 1'b0) & (ap_enable_reg_pp10_iter37 == 1'b0) & (ap_enable_reg_pp10_iter36 == 1'b0) & (ap_enable_reg_pp10_iter35 == 1'b0) & (ap_enable_reg_pp10_iter34 == 1'b0) & (ap_enable_reg_pp10_iter33 == 1'b0) & (ap_enable_reg_pp10_iter32 == 1'b0) & (ap_enable_reg_pp10_iter31 == 1'b0) & (ap_enable_reg_pp10_iter30 == 1'b0) & (ap_enable_reg_pp10_iter29 == 1'b0) & (ap_enable_reg_pp10_iter28 == 1'b0) & (ap_enable_reg_pp10_iter27 == 1'b0) & (ap_enable_reg_pp10_iter26 == 1'b0) & (ap_enable_reg_pp10_iter25 == 1'b0) & (ap_enable_reg_pp10_iter24 == 1'b0) & (ap_enable_reg_pp10_iter23 == 1'b0) & (ap_enable_reg_pp10_iter22 == 1'b0) & (ap_enable_reg_pp10_iter21 == 1'b0) & (ap_enable_reg_pp10_iter20 == 1'b0) & (ap_enable_reg_pp10_iter19 == 1'b0) & (ap_enable_reg_pp10_iter18 == 1'b0) & (ap_enable_reg_pp10_iter17 == 1'b0) & (ap_enable_reg_pp10_iter16 == 1'b0) & (ap_enable_reg_pp10_iter15 == 1'b0) & (ap_enable_reg_pp10_iter14 == 1'b0) & (ap_enable_reg_pp10_iter13 == 1'b0) & (ap_enable_reg_pp10_iter12 == 1'b0) & (ap_enable_reg_pp10_iter11 == 1'b0) & (ap_enable_reg_pp10_iter10 == 1'b0) & (ap_enable_reg_pp10_iter9 == 1'b0) & (ap_enable_reg_pp10_iter8 == 1'b0) & (ap_enable_reg_pp10_iter7 == 1'b0) & (ap_enable_reg_pp10_iter6 == 1'b0) & (ap_enable_reg_pp10_iter5 == 1'b0) & (ap_enable_reg_pp10_iter4 == 1'b0) & (ap_enable_reg_pp10_iter3 == 1'b0) & (ap_enable_reg_pp10_iter2 == 1'b0) & (ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp11_iter1 == 1'b0) & (ap_enable_reg_pp11_iter7 == 1'b0) & (ap_enable_reg_pp11_iter6 == 1'b0) & (ap_enable_reg_pp11_iter5 == 1'b0) & (ap_enable_reg_pp11_iter4 == 1'b0) & (ap_enable_reg_pp11_iter3 == 1'b0) & (ap_enable_reg_pp11_iter2 == 1'b0) & (ap_enable_reg_pp11_iter8 == 1'b0) & (ap_enable_reg_pp11_iter0 == 1'b0))) begin
        ap_idle_pp11 = 1'b1;
    end else begin
        ap_idle_pp11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (icmp_ln1003_reg_7618 == 1'd0))) begin
        ap_phi_mux_i_12_phi_fu_1133_p4 = add_ln1003_reg_7613;
    end else begin
        ap_phi_mux_i_12_phi_fu_1133_p4 = i_12_reg_1129;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (icmp_ln1013_reg_7637 == 1'd0))) begin
        ap_phi_mux_i_13_phi_fu_1145_p4 = add_ln1015_reg_7641;
    end else begin
        ap_phi_mux_i_13_phi_fu_1145_p4 = i_13_reg_1141;
    end
end

always @ (*) begin
    if (((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_layer_1_phi_fu_1000_p4 = select_ln37_3_reg_7169;
    end else begin
        ap_phi_mux_layer_1_phi_fu_1000_p4 = layer_1_reg_996;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_6884 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_layer_phi_fu_833_p4 = select_ln37_1_reg_6888;
    end else begin
        ap_phi_mux_layer_phi_fu_833_p4 = layer_reg_829;
    end
end

always @ (*) begin
    if (((cmp_i_i_reg_7184 == 1'd1) & (1'b1 == ap_CS_fsm_state165))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        b_corner_0_ce0 = grp_get_acceptanceCorners_fu_1341_b_corner_0_ce0;
    end else begin
        b_corner_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        b_corner_0_we0 = grp_get_acceptanceCorners_fu_1341_b_corner_0_we0;
    end else begin
        b_corner_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        b_corner_1_address0 = zext_ln875_fu_2691_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        b_corner_1_address0 = grp_get_acceptanceCorners_fu_1341_b_corner_1_address0;
    end else begin
        b_corner_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        b_corner_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        b_corner_1_ce0 = grp_get_acceptanceCorners_fu_1341_b_corner_1_ce0;
    end else begin
        b_corner_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        b_corner_1_we0 = grp_get_acceptanceCorners_fu_1341_b_corner_1_we0;
    end else begin
        b_corner_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_corner_0_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_0_address0 = grp_get_acceptanceCorners_fu_1341_c_corner_0_address0;
    end else begin
        c_corner_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_corner_0_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_0_ce0 = grp_get_acceptanceCorners_fu_1341_c_corner_0_ce0;
    end else begin
        c_corner_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_0_we0 = grp_get_acceptanceCorners_fu_1341_c_corner_0_we0;
    end else begin
        c_corner_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_corner_1_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_1_address0 = grp_get_acceptanceCorners_fu_1341_c_corner_1_address0;
    end else begin
        c_corner_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_corner_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_1_ce0 = grp_get_acceptanceCorners_fu_1341_c_corner_1_ce0;
    end else begin
        c_corner_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        c_corner_1_we0 = grp_get_acceptanceCorners_fu_1341_c_corner_1_we0;
    end else begin
        c_corner_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        current_z_i_index_V_address0 = i_8_cast_fu_3013_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        current_z_i_index_V_address0 = i_9_cast_fu_2982_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        current_z_i_index_V_address0 = i_7_cast_fu_2959_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        current_z_i_index_V_address0 = zext_ln931_reg_7283;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        current_z_i_index_V_address0 = 64'd0;
    end else begin
        current_z_i_index_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((grp_get_index_from_z_fu_1317_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58)))) begin
        current_z_i_index_V_ce0 = 1'b1;
    end else begin
        current_z_i_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        current_z_i_index_V_d0 = shl_ln731_fu_2940_p2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        current_z_i_index_V_d0 = 32'd2146435072;
    end else begin
        current_z_i_index_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | ((grp_get_index_from_z_fu_1317_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58)))) begin
        current_z_i_index_V_we0 = 1'b1;
    end else begin
        current_z_i_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        d_corner_0_ce0 = grp_get_acceptanceCorners_fu_1341_d_corner_0_ce0;
    end else begin
        d_corner_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        d_corner_0_we0 = grp_get_acceptanceCorners_fu_1341_d_corner_0_we0;
    end else begin
        d_corner_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        d_corner_1_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        d_corner_1_address0 = grp_get_acceptanceCorners_fu_1341_d_corner_1_address0;
    end else begin
        d_corner_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        d_corner_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        d_corner_1_ce0 = grp_get_acceptanceCorners_fu_1341_d_corner_1_ce0;
    end else begin
        d_corner_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        d_corner_1_we0 = grp_get_acceptanceCorners_fu_1341_d_corner_1_we0;
    end else begin
        d_corner_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        flatBottom_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        flatBottom_address0 = grp_get_acceptanceCorners_fu_1341_flatBottom_address0;
    end else begin
        flatBottom_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        flatBottom_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        flatBottom_ce0 = grp_get_acceptanceCorners_fu_1341_flatBottom_ce0;
    end else begin
        flatBottom_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        flatBottom_we0 = grp_get_acceptanceCorners_fu_1341_flatBottom_we0;
    end else begin
        flatBottom_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        flatTop_ce0 = grp_get_acceptanceCorners_fu_1341_flatTop_ce0;
    end else begin
        flatTop_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        flatTop_we0 = grp_get_acceptanceCorners_fu_1341_flatTop_we0;
    end else begin
        flatTop_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter0 == 1'b1))) begin
        get_radiiradii_address0 = trunc_ln1015_cast_fu_4470_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        get_radiiradii_address0 = zext_ln931_fu_2790_p1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        get_radiiradii_address0 = 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        get_radiiradii_address0 = grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_address0;
    end else begin
        get_radiiradii_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | ((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter0 == 1'b1)))) begin
        get_radiiradii_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        get_radiiradii_ce0 = 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        get_radiiradii_ce0 = grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_ce0;
    end else begin
        get_radiiradii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 3'd0;
    end else begin
        grp_alignedtoline_per_layer_loop3_fu_1250_i_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_leftRight_offset = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_leftRight_offset = 1'd0;
    end else begin
        grp_alignedtoline_per_layer_loop3_fu_1250_leftRight_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_p_read = rhs_reg_921;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_p_read = 32'd23068776;
    end else begin
        grp_alignedtoline_per_layer_loop3_fu_1250_p_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_z_top = z_top_min_V_reg_955;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_alignedtoline_per_layer_loop3_fu_1250_z_top = 32'd52428800;
    end else begin
        grp_alignedtoline_per_layer_loop3_fu_1250_z_top = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_1390_p0 = bitcast_ln351_4_fu_6757_p1;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1390_p0 = bitcast_ln351_3_fu_6309_p1;
    end else if ((1'b1 == ap_CS_fsm_state149)) begin
        grp_fu_1390_p0 = bitcast_ln351_fu_5869_p1;
    end else if (((1'b0 == ap_block_pp11_stage0) & (ap_enable_reg_pp11_iter6 == 1'b1))) begin
        grp_fu_1390_p0 = bitcast_ln351_2_fu_5202_p1;
    end else if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
        grp_fu_1390_p0 = select_ln935_2_fu_4009_p3;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        grp_fu_1390_p0 = select_ln989_fu_3422_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1390_p0 = select_ln935_fu_2382_p3;
    end else begin
        grp_fu_1390_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln987_reg_7394_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_00001) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp8_stage0_00001) & (ap_enable_reg_pp8_iter2 == 1'b1) & (icmp_ln997_reg_7513_pp8_iter1_reg == 1'd0)))) begin
        grp_fu_1393_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1393_opcode = 5'd2;
    end else begin
        grp_fu_1393_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
        grp_fu_1393_p0 = select_ln935_2_fu_4009_p3;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        grp_fu_1393_p0 = grp_fu_1387_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1393_p0 = select_ln935_fu_2382_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1393_p0 = bitcast_ln744_fu_1947_p1;
    end else begin
        grp_fu_1393_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter2 == 1'b1))) begin
        grp_fu_1393_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        grp_fu_1393_p1 = select_ln935_1_fu_3332_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1393_p1 = 32'd3259498496;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1393_p1 = 32'd3259498522;
    end else begin
        grp_fu_1393_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_get_index_from_z_fu_1317_layer = i_6_reg_1042;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_get_index_from_z_fu_1317_layer = 3'd4;
    end else begin
        grp_get_index_from_z_fu_1317_layer = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_get_index_from_z_fu_1317_z_value = z_value_tmp_V_reg_7327;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_get_index_from_z_fu_1317_z_value = z_top_min_V_11_reg_1018;
    end else begin
        grp_get_index_from_z_fu_1317_z_value = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q0 = init_patch_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q0 = init_patch_V_1_q0;
    end else begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q1 = init_patch_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q1 = init_patch_V_1_q1;
    end else begin
        grp_patch_buffer_add_patch2_fu_1330_new_patch_q1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        init_patch_V_1_address0 = zext_ln40_1_fu_1517_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_1_address0 = grp_patch_buffer_add_patch2_fu_1330_new_patch_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_address0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address0;
    end else begin
        init_patch_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_1_address1 = grp_patch_buffer_add_patch2_fu_1330_new_patch_address1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_address1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address1;
    end else begin
        init_patch_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        init_patch_V_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_1_ce0 = grp_patch_buffer_add_patch2_fu_1330_new_patch_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_ce0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce0;
    end else begin
        init_patch_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_1_ce1 = grp_patch_buffer_add_patch2_fu_1330_new_patch_ce1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_ce1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce1;
    end else begin
        init_patch_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_we0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we0;
    end else begin
        init_patch_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_1_we1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we1;
    end else begin
        init_patch_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        init_patch_V_address0 = zext_ln40_3_fu_2675_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        init_patch_V_address0 = grp_patch_buffer_add_patch2_fu_1330_new_patch_address0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_address0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address0;
    end else begin
        init_patch_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        init_patch_V_address1 = grp_patch_buffer_add_patch2_fu_1330_new_patch_address1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_address1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_address1;
    end else begin
        init_patch_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        init_patch_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        init_patch_V_ce0 = grp_patch_buffer_add_patch2_fu_1330_new_patch_ce0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_ce0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce0;
    end else begin
        init_patch_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        init_patch_V_ce1 = grp_patch_buffer_add_patch2_fu_1330_new_patch_ce1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_ce1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_ce1;
    end else begin
        init_patch_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_we0 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we0;
    end else begin
        init_patch_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        init_patch_V_we1 = grp_alignedtoline_per_layer_loop3_fu_1250_init_patch_we1;
    end else begin
        init_patch_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        latest_patch_index_constprop_o = grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o;
    end else begin
        latest_patch_index_constprop_o = latest_patch_index_constprop_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        latest_patch_index_constprop_o_ap_vld = grp_patch_buffer_add_patch2_fu_1330_latest_patch_index_constprop_o_ap_vld;
    end else begin
        latest_patch_index_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter49 == 1'b1))) begin
        new_z_i_V_address0 = trunc_ln1015_cast_reg_7647_pp10_iter48_reg;
    end else if (((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter2 == 1'b1))) begin
        new_z_i_V_address0 = i_12_cast4_reg_7622_pp9_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        new_z_i_V_address0 = 64'd0;
    end else begin
        new_z_i_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter49 == 1'b1)) | ((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter2 == 1'b1)))) begin
        new_z_i_V_ce0 = 1'b1;
    end else begin
        new_z_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter2 == 1'b1))) begin
        new_z_i_V_d0 = z_bits_fu_4453_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        new_z_i_V_d0 = 32'd2146435072;
    end else begin
        new_z_i_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln1003_reg_7618_pp9_iter1_reg == 1'd0)))) begin
        new_z_i_V_we0 = 1'b1;
    end else begin
        new_z_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        new_z_i_atTop_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        new_z_i_atTop_V_address0 = zext_ln1048_fu_5504_p1;
    end else if (((1'b0 == ap_block_pp11_stage0) & (1'b1 == ap_CS_fsm_pp11_stage0) & (ap_enable_reg_pp11_iter0 == 1'b1))) begin
        new_z_i_atTop_V_address0 = i_15_cast_fu_4616_p1;
    end else if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter51 == 1'b1))) begin
        new_z_i_atTop_V_address0 = zext_ln1014_fu_4568_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        new_z_i_atTop_V_address0 = 64'd0;
    end else begin
        new_z_i_atTop_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state146) | ((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0) & (ap_enable_reg_pp11_iter0 == 1'b1)) | ((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter51 == 1'b1)))) begin
        new_z_i_atTop_V_ce0 = 1'b1;
    end else begin
        new_z_i_atTop_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter51 == 1'b1))) begin
        new_z_i_atTop_V_d0 = this_V_write_assign_reg_7672;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        new_z_i_atTop_V_d0 = 32'd2146435072;
    end else begin
        new_z_i_atTop_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter51 == 1'b1) & (icmp_ln1013_reg_7637_pp10_iter50_reg == 1'd0)))) begin
        new_z_i_atTop_V_we0 = 1'b1;
    end else begin
        new_z_i_atTop_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        new_z_i_index_V_address0 = i_11_cast_fu_3715_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter5 == 1'b1))) begin
        new_z_i_index_V_address0 = new_z_i_index_V_addr_3_reg_7398_pp7_iter4_reg;
    end else if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        new_z_i_index_V_address0 = i_8_cast_reg_7379;
    end else if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        new_z_i_index_V_address0 = i_9_cast_reg_7360;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        new_z_i_index_V_address0 = i_7_cast_reg_7341;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        new_z_i_index_V_address0 = 64'd0;
    end else begin
        new_z_i_index_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
        new_z_i_index_V_address1 = i_12_cast4_fu_4349_p1;
    end else if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter4 == 1'b1))) begin
        new_z_i_index_V_address1 = new_z_i_index_V_addr_4_reg_7517_pp8_iter3_reg;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        new_z_i_index_V_address1 = i_10_cast_fu_3037_p1;
    end else begin
        new_z_i_index_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | ((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)))) begin
        new_z_i_index_V_ce0 = 1'b1;
    end else begin
        new_z_i_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter4 == 1'b1)) | ((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1)))) begin
        new_z_i_index_V_ce1 = 1'b1;
    end else begin
        new_z_i_index_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter5 == 1'b1))) begin
        new_z_i_index_V_d0 = select_ln571_9_fu_3694_p3;
    end else if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        new_z_i_index_V_d0 = add_ln703_1_fu_3018_p2;
    end else if ((((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)))) begin
        new_z_i_index_V_d0 = grp_fu_1430_p2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        new_z_i_index_V_d0 = 32'd2146435072;
    end else begin
        new_z_i_index_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | ((icmp_ln987_reg_7394_pp7_iter4_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1)) | ((icmp_ln967_reg_7375 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((icmp_ln974_reg_7356 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((icmp_ln952_reg_7337 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)))) begin
        new_z_i_index_V_we0 = 1'b1;
    end else begin
        new_z_i_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter4 == 1'b1) & (icmp_ln997_reg_7513_pp8_iter3_reg == 1'd0))) begin
        new_z_i_index_V_we1 = 1'b1;
    end else begin
        new_z_i_index_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        num_patches_constprop_o = grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o;
    end else begin
        num_patches_constprop_o = num_patches_constprop_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        num_patches_constprop_o_ap_vld = grp_patch_buffer_add_patch2_fu_1330_num_patches_constprop_o_ap_vld;
    end else begin
        num_patches_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        num_points_address0 = i_10_cast_fu_3037_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        num_points_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state58))) begin
        num_points_address0 = grp_get_index_from_z_fu_1317_num_points_address0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_address0 = grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address0;
    end else begin
        num_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)))) begin
        num_points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state58))) begin
        num_points_ce0 = grp_get_index_from_z_fu_1317_num_points_ce0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce0 = grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce0;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce1 = grp_alignedtoline_per_layer_loop3_fu_1250_num_points_ce1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        pSlope_ce0 = grp_getParallelograms_fu_1285_pSlope_ce0;
    end else begin
        pSlope_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        pSlope_we0 = grp_getParallelograms_fu_1285_pSlope_we0;
    end else begin
        pSlope_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        patch_buffer_address0 = zext_ln50_25_fu_2063_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        patch_buffer_address0 = zext_ln50_23_fu_2015_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_address0 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        patch_buffer_address0 = grp_getParallelograms_fu_1285_superpoints_address0;
    end else begin
        patch_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_address1 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_address1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        patch_buffer_address1 = grp_getParallelograms_fu_1285_superpoints_address1;
    end else begin
        patch_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        patch_buffer_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_ce0 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        patch_buffer_ce0 = grp_getParallelograms_fu_1285_superpoints_ce0;
    end else begin
        patch_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_ce1 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_ce1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        patch_buffer_ce1 = grp_getParallelograms_fu_1285_superpoints_ce1;
    end else begin
        patch_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_we0 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we0;
    end else begin
        patch_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12))) begin
        patch_buffer_we1 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_we1;
    end else begin
        patch_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln37_reg_6884 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        patch_stream_V_blk_n = patch_stream_V_full_n;
    end else begin
        patch_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_01001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        patch_stream_V_din = init_patch_V_q0;
    end else if (((icmp_ln37_reg_6884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        patch_stream_V_din = init_patch_V_1_q0;
    end else begin
        patch_stream_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln37_reg_6884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        patch_stream_V_write = 1'b1;
    end else begin
        patch_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        points_address0 = zext_ln1062_fu_6836_p1;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        points_address0 = zext_ln1057_fu_6388_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        points_address0 = zext_ln1052_fu_5940_p1;
    end else if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        points_address0 = zext_ln1004_fu_4448_p1;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state58))) begin
        points_address0 = grp_get_index_from_z_fu_1317_points_address0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_address0 = grp_alignedtoline_per_layer_loop3_fu_1250_points_address0;
    end else begin
        points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state151) | ((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1)))) begin
        points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state58))) begin
        points_ce0 = grp_get_index_from_z_fu_1317_points_ce0;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce0 = grp_alignedtoline_per_layer_loop3_fu_1250_points_ce0;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce1 = grp_alignedtoline_per_layer_loop3_fu_1250_points_ce1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jL_address0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jL_address0 = grp_getParallelograms_fu_1285_shadow_bottomL_jL_address0;
    end else begin
        shadow_bottomL_jL_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jL_ce0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jL_ce0 = grp_getParallelograms_fu_1285_shadow_bottomL_jL_ce0;
    end else begin
        shadow_bottomL_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jL_ce1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_ce1;
    end else begin
        shadow_bottomL_jL_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jL_we0 = grp_getParallelograms_fu_1285_shadow_bottomL_jL_we0;
    end else begin
        shadow_bottomL_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jR_address0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jR_address0 = grp_getParallelograms_fu_1285_shadow_bottomL_jR_address0;
    end else begin
        shadow_bottomL_jR_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jR_ce0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jR_ce0 = grp_getParallelograms_fu_1285_shadow_bottomL_jR_ce0;
    end else begin
        shadow_bottomL_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomL_jR_ce1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_ce1;
    end else begin
        shadow_bottomL_jR_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomL_jR_we0 = grp_getParallelograms_fu_1285_shadow_bottomL_jR_we0;
    end else begin
        shadow_bottomL_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jL_address0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jL_address0 = grp_getParallelograms_fu_1285_shadow_bottomR_jL_address0;
    end else begin
        shadow_bottomR_jL_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jL_ce0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jL_ce0 = grp_getParallelograms_fu_1285_shadow_bottomR_jL_ce0;
    end else begin
        shadow_bottomR_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jL_ce1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_ce1;
    end else begin
        shadow_bottomR_jL_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jL_we0 = grp_getParallelograms_fu_1285_shadow_bottomR_jL_we0;
    end else begin
        shadow_bottomR_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jR_address0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jR_address0 = grp_getParallelograms_fu_1285_shadow_bottomR_jR_address0;
    end else begin
        shadow_bottomR_jR_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jR_ce0 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jR_ce0 = grp_getParallelograms_fu_1285_shadow_bottomR_jR_ce0;
    end else begin
        shadow_bottomR_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        shadow_bottomR_jR_ce1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_ce1;
    end else begin
        shadow_bottomR_jR_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        shadow_bottomR_jR_we0 = grp_getParallelograms_fu_1285_shadow_bottomR_jR_we0;
    end else begin
        shadow_bottomR_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        squareAcceptance_address0 = zext_ln671_fu_1528_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        squareAcceptance_address0 = grp_get_acceptanceCorners_fu_1341_squareAcceptance_address0;
    end else begin
        squareAcceptance_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        squareAcceptance_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        squareAcceptance_ce0 = grp_get_acceptanceCorners_fu_1341_squareAcceptance_ce0;
    end else begin
        squareAcceptance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        squareAcceptance_we0 = grp_get_acceptanceCorners_fu_1341_squareAcceptance_we0;
    end else begin
        squareAcceptance_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        triangleAcceptance_address0 = zext_ln671_reg_6903;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        triangleAcceptance_address0 = grp_get_acceptanceCorners_fu_1341_triangleAcceptance_address0;
    end else begin
        triangleAcceptance_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        triangleAcceptance_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        triangleAcceptance_ce0 = grp_get_acceptanceCorners_fu_1341_triangleAcceptance_ce0;
    end else begin
        triangleAcceptance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        triangleAcceptance_we0 = grp_get_acceptanceCorners_fu_1341_triangleAcceptance_we0;
    end else begin
        triangleAcceptance_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        z1_max_address0 = grp_get_acceptanceCorners_fu_1341_z1_max_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_max_address0 = grp_getParallelograms_fu_1285_z1_max_address0;
    end else begin
        z1_max_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        z1_max_ce0 = grp_get_acceptanceCorners_fu_1341_z1_max_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_max_ce0 = grp_getParallelograms_fu_1285_z1_max_ce0;
    end else begin
        z1_max_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_max_we0 = grp_getParallelograms_fu_1285_z1_max_we0;
    end else begin
        z1_max_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        z1_min_address0 = grp_get_acceptanceCorners_fu_1341_z1_min_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_min_address0 = grp_getParallelograms_fu_1285_z1_min_address0;
    end else begin
        z1_min_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state18))) begin
        z1_min_ce0 = grp_get_acceptanceCorners_fu_1341_z1_min_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_min_ce0 = grp_getParallelograms_fu_1285_z1_min_ce0;
    end else begin
        z1_min_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state16))) begin
        z1_min_we0 = grp_getParallelograms_fu_1285_z1_min_we0;
    end else begin
        z1_min_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln37_fu_1465_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln37_fu_1465_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_getParallelograms_fu_1285_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_get_acceptanceCorners_fu_1341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((notChoppedPatch_fu_1650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'd1 == and_ln741_fu_1989_p2) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln49_fu_2000_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln49_fu_2000_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((triangleAcceptance_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln49_1_fu_2048_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln49_1_fu_2048_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_1250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (grp_patch_buffer_add_patch2_fu_1330_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln37_1_fu_2623_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln37_1_fu_2623_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((grp_getParallelograms_fu_1285_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((grp_get_acceptanceCorners_fu_1341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_get_index_from_z_fu_1317_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln1498_fu_2807_p2 == 1'd1) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln1498_fu_2807_p2 == 1'd0) & (icmp_ln931_fu_2795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_get_index_from_z_fu_1317_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln952_fu_2953_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln952_fu_2953_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((tmp_53_reg_7213 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((icmp_ln974_fu_2976_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln974_fu_2976_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((icmp_ln967_fu_3007_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln967_fu_3007_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln987_fu_3031_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter5 == 1'b1) & (ap_enable_reg_pp7_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln987_fu_3031_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter5 == 1'b1) & (ap_enable_reg_pp7_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((icmp_ln997_fu_3709_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((icmp_ln997_fu_3709_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) | ((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter4 == 1'b1) & (ap_enable_reg_pp8_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0) & (icmp_ln1003_fu_4343_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter2 == 1'b1) & (ap_enable_reg_pp9_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter2 == 1'b1) & (ap_enable_reg_pp9_iter1 == 1'b0)) | ((1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0) & (icmp_ln1003_fu_4343_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_pp10_stage0;
        end
        ap_ST_fsm_pp10_stage0 : begin
            if ((~((1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (icmp_ln1013_fu_4458_p2 == 1'd1)) & ~((1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter51 == 1'b1) & (ap_enable_reg_pp10_iter50 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if ((((1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter51 == 1'b1) & (ap_enable_reg_pp10_iter50 == 1'b0)) | ((1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (icmp_ln1013_fu_4458_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_pp11_stage0;
        end
        ap_ST_fsm_pp11_stage0 : begin
            if (~((1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter7 == 1'b0) & (ap_enable_reg_pp11_iter8 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end else if (((1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter7 == 1'b0) & (ap_enable_reg_pp11_iter8 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state146;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            if (((1'b1 == ap_CS_fsm_state147) & (icmp_ln935_5_fu_5522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state149;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state148;
            end
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            if (((1'd0 == and_ln1050_fu_5908_p2) & (1'b1 == ap_CS_fsm_state151))) begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((1'b1 == ap_CS_fsm_state153) & (icmp_ln935_7_fu_5962_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            if (((1'd0 == and_ln1055_fu_6348_p2) & (1'b1 == ap_CS_fsm_state157))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln935_8_fu_6410_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state161;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            if (((cmp_i_i_reg_7184 == 1'd1) & (1'b1 == ap_CS_fsm_state165))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_3495_p2 = (12'd1075 - zext_ln455_1_fu_3455_p1);

assign F2_2_fu_4132_p2 = (12'd1075 - zext_ln455_2_fu_4092_p1);

assign F2_3_fu_5270_p2 = (12'd1075 - zext_ln455_3_fu_5243_p1);

assign F2_fu_2505_p2 = (12'd1075 - zext_ln455_fu_2465_p1);

assign LD_10_fu_5176_p1 = p_Result_149_fu_5164_p5[31:0];

assign LD_12_fu_5849_p1 = p_Result_156_fu_5837_p5[31:0];

assign LD_13_fu_6289_p1 = p_Result_161_fu_6277_p5[31:0];

assign LD_14_fu_6737_p1 = p_Result_166_fu_6725_p5[31:0];

assign LD_5_fu_2374_p1 = p_Result_127_fu_2362_p5[31:0];

assign LD_6_fu_3324_p1 = p_Result_133_fu_3312_p5[31:0];

assign LD_8_fu_4001_p1 = p_Result_139_fu_3989_p5[31:0];

assign LD_9_fu_4910_p1 = p_Result_145_fu_4898_p5[31:0];

assign LD_fu_1943_p1 = p_Result_123_fu_1931_p5[31:0];

assign a_corner_0_address0 = grp_get_acceptanceCorners_fu_1341_a_corner_0_address0;

assign a_corner_0_d0 = grp_get_acceptanceCorners_fu_1341_a_corner_0_d0;

assign a_corner_1_d0 = grp_get_acceptanceCorners_fu_1341_a_corner_1_d0;

assign add_ln1003_fu_4337_p2 = (ap_phi_mux_i_12_phi_fu_1133_p4 + 3'd1);

assign add_ln1004_fu_4420_p2 = (shl_ln1004_1_fu_4412_p3 + shl_ln5_fu_4404_p3);

assign add_ln1014_fu_4475_p2 = ($signed(ap_phi_mux_i_13_phi_fu_1145_p4) + $signed(3'd7));

assign add_ln1015_fu_4464_p2 = (ap_phi_mux_i_13_phi_fu_1145_p4 + 3'd1);

assign add_ln1027_fu_4604_p2 = (i_15_reg_1152 + 3'd1);

assign add_ln1057_fu_6361_p2 = (shl_ln6_fu_6354_p3 + 16'd24576);

assign add_ln1062_fu_6809_p2 = (shl_ln7_fu_6802_p3 + 16'd16384);

assign add_ln37_1_fu_2629_p2 = (ap_phi_mux_layer_1_phi_fu_1000_p4 + 3'd1);

assign add_ln37_2_fu_1459_p2 = (indvar_flatten_reg_818 + 7'd1);

assign add_ln37_3_fu_2617_p2 = (indvar_flatten7_reg_985 + 7'd1);

assign add_ln37_fu_1471_p2 = (ap_phi_mux_layer_phi_fu_833_p4 + 3'd1);

assign add_ln39_1_fu_2680_p2 = (select_ln37_2_fu_2641_p3 + 5'd1);

assign add_ln39_fu_1522_p2 = (select_ln37_fu_1483_p3 + 5'd1);

assign add_ln40_1_fu_2669_p2 = (tmp_86_fu_2657_p3 + zext_ln40_2_fu_2665_p1);

assign add_ln40_fu_1511_p2 = (tmp_85_fu_1499_p3 + zext_ln40_fu_1507_p1);

assign add_ln49_1_fu_2042_p2 = (i_5_reg_886 + 5'd1);

assign add_ln49_fu_1994_p2 = (i_reg_851 + 5'd1);

assign add_ln50_4_fu_1564_p2 = (add_ln50_fu_1558_p2 + 8'd64);

assign add_ln50_5_fu_2010_p2 = (add_ln50_reg_6938 + zext_ln50_22_fu_2006_p1);

assign add_ln50_6_fu_2058_p2 = (add_ln50_4_reg_6943 + zext_ln50_24_fu_2054_p1);

assign add_ln50_fu_1558_p2 = (tmp_82_fu_1538_p3 + zext_ln50_fu_1554_p1);

assign add_ln581_1_fu_3507_p2 = ($signed(F2_1_fu_3495_p2) + $signed(12'd4076));

assign add_ln581_2_fu_4144_p2 = ($signed(F2_2_fu_4132_p2) + $signed(12'd4076));

assign add_ln581_3_fu_5282_p2 = ($signed(F2_3_fu_5270_p2) + $signed(12'd4076));

assign add_ln581_fu_2517_p2 = ($signed(F2_fu_2505_p2) + $signed(12'd4076));

assign add_ln703_1_fu_3018_p2 = ($signed(current_z_i_index_V_q0) + $signed(32'd4293918720));

assign add_ln933_fu_2784_p2 = (i_6_reg_1042 + 3'd1);

assign add_ln952_fu_2947_p2 = (i_7_reg_1054 + 3'd1);

assign add_ln954_1_fu_6178_p2 = ($signed(sub_ln944_9_fu_6023_p2) + $signed(32'd4294967271));

assign add_ln954_2_fu_6626_p2 = ($signed(sub_ln944_10_fu_6471_p2) + $signed(32'd4294967271));

assign add_ln954_fu_5738_p2 = ($signed(sub_ln944_8_fu_5583_p2) + $signed(32'd4294967271));

assign add_ln958_3_fu_2270_p2 = ($signed(sub_ln944_3_fu_2136_p2) + $signed(32'd4294967271));

assign add_ln958_4_fu_3233_p2 = ($signed(sub_ln944_4_reg_7424) + $signed(32'd4294967271));

assign add_ln958_5_fu_3910_p2 = ($signed(sub_ln944_5_reg_7538) + $signed(32'd4294967271));

assign add_ln958_6_fu_4803_p2 = ($signed(sub_ln944_6_fu_4669_p2) + $signed(32'd4294967271));

assign add_ln958_7_fu_5070_p2 = ($signed(sub_ln944_7_fu_4943_p2) + $signed(32'd4294967271));

assign add_ln958_fu_1852_p2 = ($signed(sub_ln944_reg_6982) + $signed(32'd4294967271));

assign add_ln964_10_fu_6712_p2 = (sub_ln964_10_fu_6706_p2 + select_ln943_10_fu_6694_p3);

assign add_ln964_3_fu_2349_p2 = (sub_ln964_3_fu_2344_p2 + select_ln943_3_fu_2337_p3);

assign add_ln964_4_fu_3299_p2 = (sub_ln964_4_fu_3294_p2 + select_ln943_4_fu_3286_p3);

assign add_ln964_5_fu_3976_p2 = (sub_ln964_5_fu_3971_p2 + select_ln943_5_fu_3963_p3);

assign add_ln964_6_fu_4885_p2 = (sub_ln964_6_fu_4879_p2 + select_ln943_6_fu_4867_p3);

assign add_ln964_7_fu_5151_p2 = (sub_ln964_7_fu_5145_p2 + select_ln943_7_fu_5133_p3);

assign add_ln964_8_fu_5824_p2 = (sub_ln964_8_fu_5818_p2 + select_ln943_8_fu_5806_p3);

assign add_ln964_9_fu_6264_p2 = (sub_ln964_9_fu_6258_p2 + select_ln943_9_fu_6246_p3);

assign add_ln964_fu_1918_p2 = (sub_ln964_fu_1913_p2 + select_ln943_fu_1905_p3);

assign add_ln967_fu_3001_p2 = (i_8_reg_1096 + 3'd1);

assign add_ln974_fu_2970_p2 = (i_9_reg_1075 + 3'd1);

assign add_ln985_fu_2765_p2 = ($signed(trunc_ln984_fu_2749_p1) + $signed(12'd4095));

assign add_ln987_fu_3025_p2 = (i_10_reg_1107 + 3'd1);

assign add_ln997_fu_3703_p2 = (i_11_reg_1118 + 3'd1);

assign and_ln1050_fu_5908_p2 = (or_ln1050_fu_5904_p2 & grp_fu_1401_p2);

assign and_ln1055_fu_6348_p2 = (or_ln1055_fu_6344_p2 & grp_fu_1401_p2);

assign and_ln1060_fu_6796_p2 = (or_ln1060_fu_6792_p2 & grp_fu_1401_p2);

assign and_ln1494_fu_1644_p2 = (icmp_ln1494_fu_1638_p2 & flatBottom_q0);

assign and_ln200_1_fu_3416_p2 = (grp_fu_1393_p2 & and_ln200_fu_3410_p2);

assign and_ln200_fu_3410_p2 = (or_ln200_fu_3386_p2 & or_ln200_1_fu_3404_p2);

assign and_ln224_1_fu_4052_p2 = (or_ln224_1_fu_4048_p2 & grp_fu_1393_p2);

assign and_ln224_fu_2425_p2 = (or_ln224_fu_2421_p2 & grp_fu_1393_p2);

assign and_ln581_1_fu_4236_p2 = (xor_ln582_1_fu_4230_p2 & icmp_ln581_2_fu_4138_p2);

assign and_ln581_2_fu_5392_p2 = (xor_ln582_2_fu_5386_p2 & icmp_ln581_3_fu_5276_p2);

assign and_ln581_fu_3602_p2 = (xor_ln582_fu_3596_p2 & icmp_ln581_1_fu_3501_p2);

assign and_ln582_2_fu_4299_p2 = (xor_ln571_1_fu_4294_p2 & icmp_ln582_2_reg_7586);

assign and_ln582_3_fu_5367_p2 = (xor_ln571_2_fu_5362_p2 & icmp_ln582_3_fu_5306_p2);

assign and_ln582_fu_3665_p2 = (xor_ln571_fu_3660_p2 & icmp_ln582_1_reg_7481);

assign and_ln585_2_fu_4248_p2 = (icmp_ln585_2_fu_4242_p2 & and_ln581_1_fu_4236_p2);

assign and_ln585_3_fu_5398_p2 = (icmp_ln585_3_fu_5316_p2 & and_ln581_2_fu_5392_p2);

assign and_ln585_4_fu_5444_p2 = (xor_ln585_fu_5438_p2 & and_ln581_2_fu_5392_p2);

assign and_ln585_fu_3614_p2 = (icmp_ln585_1_fu_3608_p2 & and_ln581_fu_3602_p2);

assign and_ln603_2_fu_4266_p2 = (xor_ln581_1_fu_4260_p2 & icmp_ln603_2_fu_4184_p2);

assign and_ln603_3_fu_5424_p2 = (xor_ln581_2_fu_5418_p2 & icmp_ln603_3_fu_5332_p2);

assign and_ln603_fu_3632_p2 = (xor_ln581_fu_3626_p2 & icmp_ln603_1_fu_3547_p2);

assign and_ln741_fu_1989_p2 = (or_ln935_fu_1984_p2 & icmp_ln1495_reg_7003);

assign and_ln949_10_fu_6091_p2 = (trunc_ln949_2_fu_6087_p1 & tmp_V_28_reg_7852);

assign and_ln949_11_fu_3149_p2 = (or_ln949_13_fu_3143_p2 & m_71_fu_3063_p3);

assign and_ln949_12_fu_6539_p2 = (trunc_ln949_4_fu_6535_p1 & tmp_V_29_reg_7899);

assign and_ln949_13_fu_3189_p2 = (xor_ln949_4_fu_3169_p2 & p_Result_132_fu_3175_p3);

assign and_ln949_14_fu_3826_p2 = (or_ln949_14_fu_3820_p2 & m_73_fu_3740_p3);

assign and_ln949_15_fu_3866_p2 = (xor_ln949_5_fu_3846_p2 & p_Result_138_fu_3852_p3);

assign and_ln949_16_fu_4729_p2 = (or_ln949_15_fu_4723_p2 & m_76_fu_4645_p3);

assign and_ln949_17_fu_4769_p2 = (xor_ln949_6_fu_4749_p2 & p_Result_144_fu_4755_p3);

assign and_ln949_18_fu_5041_p2 = (xor_ln949_7_fu_5022_p2 & p_Result_148_fu_5028_p3);

assign and_ln949_19_fu_5708_p2 = (xor_ln949_8_fu_5688_p2 & p_Result_155_fu_5694_p3);

assign and_ln949_20_fu_6148_p2 = (xor_ln949_9_fu_6128_p2 & p_Result_160_fu_6134_p3);

assign and_ln949_21_fu_6596_p2 = (xor_ln949_10_fu_6576_p2 & p_Result_165_fu_6582_p3);

assign and_ln949_22_fu_5003_p2 = (tmp_V_26_reg_7687 & or_ln949_16_fu_4997_p2);

assign and_ln949_6_fu_1802_p2 = (xor_ln949_fu_1782_p2 & p_Result_122_fu_1788_p3);

assign and_ln949_7_fu_2196_p2 = (or_ln949_fu_2190_p2 & m_69_fu_2110_p3);

assign and_ln949_8_fu_5651_p2 = (trunc_ln949_fu_5647_p1 & tmp_V_27_reg_7805);

assign and_ln949_9_fu_2236_p2 = (xor_ln949_3_fu_2216_p2 & p_Result_126_fu_2222_p3);

assign and_ln949_fu_1762_p2 = (or_ln949_12_fu_1756_p2 & m_67_fu_1676_p3);

assign and_ln971_fu_1978_p2 = (or_ln971_fu_1974_p2 & grp_fu_1393_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp11_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln37_reg_6884 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln37_reg_6884 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln37_reg_6884 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp11_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp11_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp11_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((icmp_ln37_1_reg_7165 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp10_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp10_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp10_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp10_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp10_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp10_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp10_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp10_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp10_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp10_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp10_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp10_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp10_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp10_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp10_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp10_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp10_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp10_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp10_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp10_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp10_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp10_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp10_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp10_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp10_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp10_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp10_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp10_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp10_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp10_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp10_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp10_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp10_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp10_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp10_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp10_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp11_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp11_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp11_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp11_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp11_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp11_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp11_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp11_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp11_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter1 = ((icmp_ln37_reg_6884 == 1'd0) & (patch_stream_V_full_n == 1'b0));
end

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp3_stage0_iter1 = ((icmp_ln37_1_reg_7165 == 1'd0) & (patch_stream_V_full_n == 1'b0));
end

assign ap_block_state59_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp8_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp10_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp10_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp10_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp10_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp10_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp10_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp10_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp10_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp10_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp10_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp10_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp10_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp10_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp10_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp10_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp11 = (ap_idle_pp11 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign ashr_ln586_1_fu_3561_p2 = $signed(man_V_9_fu_3481_p3) >>> zext_ln586_1_fu_3557_p1;

assign ashr_ln586_2_fu_4198_p2 = $signed(man_V_12_fu_4118_p3) >>> zext_ln586_2_fu_4194_p1;

assign ashr_ln586_3_fu_5346_p2 = $signed(man_V_15_fu_5263_p3) >>> zext_ln586_3_fu_5342_p1;

assign ashr_ln586_fu_2603_p2 = $signed(man_V_6_fu_2491_p3) >>> zext_ln586_fu_2599_p1;

assign b_corner_0_address0 = grp_get_acceptanceCorners_fu_1341_b_corner_0_address0;

assign b_corner_0_d0 = grp_get_acceptanceCorners_fu_1341_b_corner_0_d0;

assign b_corner_1_d0 = grp_get_acceptanceCorners_fu_1341_b_corner_1_d0;

assign bitcast_ln1050_fu_5874_p1 = grp_fu_1390_p1;

assign bitcast_ln1055_fu_6314_p1 = grp_fu_1390_p1;

assign bitcast_ln1060_fu_6762_p1 = grp_fu_1390_p1;

assign bitcast_ln200_1_fu_3357_p1 = select_ln935_1_reg_7450;

assign bitcast_ln200_fu_3340_p1 = conv_reg_7457;

assign bitcast_ln224_1_fu_4018_p1 = select_ln935_2_fu_4009_p3;

assign bitcast_ln224_fu_2391_p1 = select_ln935_fu_2382_p3;

assign bitcast_ln351_2_fu_5202_p1 = zext_ln368_2_fu_5199_p1;

assign bitcast_ln351_3_fu_6309_p1 = zext_ln368_3_fu_6305_p1;

assign bitcast_ln351_4_fu_6757_p1 = zext_ln368_4_fu_6753_p1;

assign bitcast_ln351_fu_5869_p1 = zext_ln368_fu_5865_p1;

assign bitcast_ln702_2_fu_4058_p1 = grp_fu_1390_p1;

assign bitcast_ln702_3_fu_3571_p1 = select_ln989_reg_7464;

assign bitcast_ln702_fu_2431_p1 = grp_fu_1390_p1;

assign bitcast_ln744_2_fu_2378_p1 = LD_5_fu_2374_p1;

assign bitcast_ln744_3_fu_3328_p1 = LD_6_fu_3324_p1;

assign bitcast_ln744_4_fu_4005_p1 = LD_8_fu_4001_p1;

assign bitcast_ln744_5_fu_4914_p1 = LD_9_fu_4910_p1;

assign bitcast_ln744_6_fu_5180_p1 = LD_10_fu_5176_p1;

assign bitcast_ln744_7_fu_5853_p1 = LD_12_fu_5849_p1;

assign bitcast_ln744_8_fu_6293_p1 = LD_13_fu_6289_p1;

assign bitcast_ln744_9_fu_6741_p1 = LD_14_fu_6737_p1;

assign bitcast_ln744_fu_1947_p1 = LD_fu_1943_p1;

assign c_corner_0_d0 = grp_get_acceptanceCorners_fu_1341_c_corner_0_d0;

assign c_corner_1_d0 = grp_get_acceptanceCorners_fu_1341_c_corner_1_d0;

assign cmp_i_i_fu_2686_p2 = (($signed(num_patches_constprop_i) > $signed(nPatchesAtOriginal_V_reg_6962)) ? 1'b1 : 1'b0);

assign current_z_top_index_V_1_fu_2964_p2 = (current_z_top_index_V_reg_7259 + 32'd1);

assign current_z_top_index_V_3_fu_2994_p2 = ($signed(current_z_top_index_V_2_reg_1065) + $signed(32'd4294967295));

assign current_z_top_index_V_4_fu_2987_p2 = (current_z_top_index_V_2_reg_1065 + 32'd1);

assign d_corner_0_address0 = grp_get_acceptanceCorners_fu_1341_d_corner_0_address0;

assign d_corner_0_d0 = grp_get_acceptanceCorners_fu_1341_d_corner_0_d0;

assign d_corner_1_d0 = grp_get_acceptanceCorners_fu_1341_d_corner_1_d0;

assign data_V_2_fu_5857_p1 = dc_1_reg_1186;

assign data_V_3_fu_6297_p1 = dc_2_reg_1207;

assign data_V_4_fu_6745_p1 = dc_3_reg_1229;

assign data_V_fu_5191_p1 = grp_fu_1383_p2;

assign exp_tmp_1_fu_3445_p4 = {{ireg_1_fu_3429_p1[62:52]}};

assign exp_tmp_2_fu_4082_p4 = {{ireg_2_fu_4062_p3[62:52]}};

assign exp_tmp_fu_2455_p4 = {{ireg_fu_2435_p3[62:52]}};

assign flatBottom_d0 = grp_get_acceptanceCorners_fu_1341_flatBottom_d0;

assign flatTop_address0 = grp_get_acceptanceCorners_fu_1341_flatTop_address0;

assign flatTop_d0 = grp_get_acceptanceCorners_fu_1341_flatTop_d0;

assign grp_alignedtoline_per_layer_loop3_fu_1250_ap_start = grp_alignedtoline_per_layer_loop3_fu_1250_ap_start_reg;

assign grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_address0 = 3'd0;

assign grp_alignedtoline_per_layer_loop3_fu_1250_get_radiiradii_ce0 = 1'b0;

assign grp_fu_1387_p0 = ($signed(num_points_q0) + $signed(32'd4294967295));

assign grp_fu_1423_p2 = ($signed(num_points_q0) + $signed(32'd4294967295));

assign grp_fu_1430_p2 = (current_z_i_index_V_q0 + 32'd1048576);

assign grp_getParallelograms_fu_1285_ap_start = grp_getParallelograms_fu_1285_ap_start_reg;

assign grp_get_acceptanceCorners_fu_1341_ap_start = grp_get_acceptanceCorners_fu_1341_ap_start_reg;

assign grp_get_index_from_z_fu_1317_ap_start = grp_get_index_from_z_fu_1317_ap_start_reg;

assign grp_patch_buffer_add_patch2_fu_1330_ap_start = grp_patch_buffer_add_patch2_fu_1330_ap_start_reg;

assign i_10_cast_fu_3037_p1 = i_10_reg_1107;

assign i_11_cast_fu_3715_p1 = i_11_reg_1118;

assign i_12_cast4_fu_4349_p1 = ap_phi_mux_i_12_phi_fu_1133_p4;

assign i_15_cast_fu_4616_p1 = i_15_reg_1152;

assign i_7_cast_fu_2959_p1 = i_7_reg_1054;

assign i_8_cast_fu_3013_p1 = i_8_reg_1096;

assign i_9_cast_fu_2982_p1 = i_9_reg_1075;

assign icmp_ln1003_fu_4343_p2 = ((ap_phi_mux_i_12_phi_fu_1133_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1013_fu_4458_p2 = ((ap_phi_mux_i_13_phi_fu_1145_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_4610_p2 = ((i_15_reg_1152 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1050_1_fu_5898_p2 = ((trunc_ln1050_fu_5888_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1050_fu_5892_p2 = ((tmp_22_fu_5878_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1055_1_fu_6338_p2 = ((trunc_ln1055_fu_6328_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1055_fu_6332_p2 = ((tmp_25_fu_6318_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1060_1_fu_6786_p2 = ((trunc_ln1060_fu_6776_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1060_fu_6780_p2 = ((tmp_28_fu_6766_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1638_p2 = (($signed(a_corner_1_q0) > $signed(32'd52428800)) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_2020_p2 = (($signed(patch_buffer_q0) < $signed(empty_258_reg_874)) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_2068_p2 = (($signed(patch_buffer_q0) < $signed(empty_260_reg_909)) ? 1'b1 : 1'b0);

assign icmp_ln1495_8_fu_2719_p2 = (($signed(ret_V_fu_2701_p2) < $signed(ret_V_10_fu_2713_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_5463_p2 = (($signed(layerSMin_V_1_fu_5455_p3) < $signed(layerSMin_V_reg_1175)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_1828_p2 = (($signed(projectionOfCornerToBeam_V_fu_1628_p4) < $signed(32'd15728640)) ? 1'b1 : 1'b0);

assign icmp_ln1498_fu_2807_p2 = ((z_top_min_V_11_reg_1018 == previous_z_top_min_V_reg_1029) ? 1'b1 : 1'b0);

assign icmp_ln200_1_fu_3374_p2 = ((tmp_16_fu_3343_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln200_2_fu_3380_p2 = ((trunc_ln200_fu_3353_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln200_3_fu_3392_p2 = ((tmp_17_fu_3360_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln200_4_fu_3398_p2 = ((trunc_ln200_1_fu_3370_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_5488_p2 = (($signed(x_reg_7237) < $signed(current_z_top_index_V_5_reg_1086)) ? 1'b1 : 1'b0);

assign icmp_ln224_1_fu_2415_p2 = ((trunc_ln224_fu_2405_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln224_2_fu_4036_p2 = ((tmp_19_fu_4022_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln224_3_fu_4042_p2 = ((trunc_ln224_1_fu_4032_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_2409_p2 = ((tmp_14_fu_2395_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln37_1_fu_2623_p2 = ((indvar_flatten7_reg_985 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1465_p2 = ((indvar_flatten_reg_818 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln39_1_fu_2635_p2 = ((point_1_reg_1007 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1477_p2 = ((point_reg_840 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_2048_p2 = ((i_5_reg_886 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_2000_p2 = ((i_reg_851 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_3489_p2 = ((trunc_ln555_1_fu_3433_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_4126_p2 = ((trunc_ln555_2_fu_4070_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_5237_p2 = ((trunc_ln555_3_fu_5211_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_2499_p2 = ((trunc_ln555_fu_2443_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_3501_p2 = (($signed(F2_1_fu_3495_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_4138_p2 = (($signed(F2_2_fu_4132_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_3_fu_5276_p2 = (($signed(F2_3_fu_5270_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_2511_p2 = (($signed(F2_fu_2505_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_3527_p2 = ((F2_1_fu_3495_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_4164_p2 = ((F2_2_fu_4132_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_3_fu_5306_p2 = ((F2_3_fu_5270_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_2541_p2 = ((F2_fu_2505_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_3608_p2 = ((sh_amt_1_fu_3519_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_4242_p2 = ((sh_amt_2_fu_4156_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_3_fu_5316_p2 = ((sh_amt_3_fu_5294_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_2573_p2 = ((sh_amt_fu_2529_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_3547_p2 = ((tmp_63_fu_3537_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_4184_p2 = ((tmp_70_fu_4174_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_3_fu_5332_p2 = ((tmp_91_fu_5322_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_2561_p2 = ((tmp_51_fu_2551_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_4376_p2 = ((trunc_ln851_fu_4372_p1 == 20'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_4481_p2 = ((add_ln1015_reg_7641 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_2801_p2 = ((add_ln933_fu_2784_p2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln931_fu_2795_p2 = ((i_6_reg_1042 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln935_2_fu_2090_p2 = ((min_z_V_2_reg_897 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_3_fu_3043_p2 = ((new_z_i_index_V_q1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_4_fu_3720_p2 = ((new_z_i_index_V_q0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_5_fu_5522_p0 = new_z_i_atTop_V_q0;

assign icmp_ln935_5_fu_5522_p2 = ((icmp_ln935_5_fu_5522_p0 == z_top_min_V_11_reg_1018) ? 1'b1 : 1'b0);

assign icmp_ln935_6_fu_4639_p2 = ((reg_1449 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_7_fu_5962_p2 = ((z_top_min_V_13_reg_1197 == z_top_min_V_11_reg_1018) ? 1'b1 : 1'b0);

assign icmp_ln935_8_fu_6410_p2 = ((z_top_min_V_14_reg_1218 == z_top_min_V_11_reg_1018) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1656_p0 = c_corner_1_q0;

assign icmp_ln935_fu_1656_p2 = ((icmp_ln935_fu_1656_p0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_10_fu_6493_p2 = (($signed(tmp_103_fu_6483_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_3_fu_2158_p2 = (($signed(tmp_46_fu_2148_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_4_fu_3111_p2 = (($signed(tmp_59_fu_3101_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_5_fu_3788_p2 = (($signed(tmp_66_fu_3778_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_6_fu_4691_p2 = (($signed(tmp_77_fu_4681_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_7_fu_4965_p2 = (($signed(tmp_80_fu_4955_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_8_fu_5605_p2 = (($signed(tmp_93_fu_5595_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_9_fu_6045_p2 = (($signed(tmp_98_fu_6035_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_1724_p2 = (($signed(tmp_41_fu_1714_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_10_fu_6562_p2 = ((or_ln949_1_fu_6554_p3 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_3_fu_2202_p2 = ((and_ln949_7_fu_2196_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_4_fu_3155_p2 = ((and_ln949_11_fu_3149_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_5_fu_3832_p2 = ((and_ln949_14_fu_3826_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_6_fu_4735_p2 = ((and_ln949_16_fu_4729_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_7_fu_5008_p2 = ((and_ln949_22_fu_5003_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_8_fu_5674_p2 = ((or_ln949_8_fu_5666_p3 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_9_fu_6114_p2 = ((or_ln949_s_fu_6106_p3 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_1768_p2 = ((and_ln949_fu_1762_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln952_fu_2953_p2 = ((i_7_reg_1054 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln954_1_fu_6142_p2 = (($signed(lsb_index_10_fu_6029_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_2_fu_6590_p2 = (($signed(lsb_index_11_fu_6477_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_5702_p2 = (($signed(lsb_index_9_fu_5589_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_3_fu_2230_p2 = (($signed(lsb_index_4_fu_2142_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_4_fu_3183_p2 = (($signed(lsb_index_5_fu_3095_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_5_fu_3860_p2 = (($signed(lsb_index_6_fu_3772_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_6_fu_4763_p2 = (($signed(lsb_index_7_fu_4675_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_7_fu_5035_p2 = (($signed(lsb_index_8_fu_4949_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1796_p2 = (($signed(lsb_index_fu_1708_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln967_fu_3007_p2 = ((i_8_reg_1096 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln971_1_fu_1968_p2 = ((trunc_ln_fu_1952_p4 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln971_fu_1962_p2 = ((add_ln964_fu_1918_p2 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln974_fu_2976_p2 = ((i_9_reg_1075 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln987_fu_3031_p2 = ((i_10_reg_1107 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln997_fu_3709_p2 = ((i_11_reg_1118 == 3'd5) ? 1'b1 : 1'b0);

assign ireg_1_fu_3429_p1 = grp_fu_1390_p1;

assign ireg_2_fu_4062_p3 = ((and_ln224_1_fu_4052_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln702_2_fu_4058_p1);

assign ireg_3_fu_5207_p1 = grp_fu_1390_p1;

assign ireg_fu_2435_p3 = ((and_ln224_fu_2425_p2[0:0] == 1'b1) ? bitcast_ln702_fu_2431_p1 : 64'd13855605728582041600);

assign l_10_fu_6019_p1 = tmp_3_fu_6011_p3[31:0];

assign l_11_fu_6467_p1 = tmp_5_fu_6459_p3[31:0];


always @ (p_Result_125_fu_2118_p4) begin
    if (p_Result_125_fu_2118_p4[0] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd0;
    end else if (p_Result_125_fu_2118_p4[1] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd1;
    end else if (p_Result_125_fu_2118_p4[2] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd2;
    end else if (p_Result_125_fu_2118_p4[3] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd3;
    end else if (p_Result_125_fu_2118_p4[4] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd4;
    end else if (p_Result_125_fu_2118_p4[5] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd5;
    end else if (p_Result_125_fu_2118_p4[6] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd6;
    end else if (p_Result_125_fu_2118_p4[7] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd7;
    end else if (p_Result_125_fu_2118_p4[8] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd8;
    end else if (p_Result_125_fu_2118_p4[9] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd9;
    end else if (p_Result_125_fu_2118_p4[10] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd10;
    end else if (p_Result_125_fu_2118_p4[11] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd11;
    end else if (p_Result_125_fu_2118_p4[12] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd12;
    end else if (p_Result_125_fu_2118_p4[13] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd13;
    end else if (p_Result_125_fu_2118_p4[14] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd14;
    end else if (p_Result_125_fu_2118_p4[15] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd15;
    end else if (p_Result_125_fu_2118_p4[16] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd16;
    end else if (p_Result_125_fu_2118_p4[17] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd17;
    end else if (p_Result_125_fu_2118_p4[18] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd18;
    end else if (p_Result_125_fu_2118_p4[19] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd19;
    end else if (p_Result_125_fu_2118_p4[20] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd20;
    end else if (p_Result_125_fu_2118_p4[21] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd21;
    end else if (p_Result_125_fu_2118_p4[22] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd22;
    end else if (p_Result_125_fu_2118_p4[23] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd23;
    end else if (p_Result_125_fu_2118_p4[24] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd24;
    end else if (p_Result_125_fu_2118_p4[25] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd25;
    end else if (p_Result_125_fu_2118_p4[26] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd26;
    end else if (p_Result_125_fu_2118_p4[27] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd27;
    end else if (p_Result_125_fu_2118_p4[28] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd28;
    end else if (p_Result_125_fu_2118_p4[29] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd29;
    end else if (p_Result_125_fu_2118_p4[30] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd30;
    end else if (p_Result_125_fu_2118_p4[31] == 1'b1) begin
        l_4_fu_2128_p3 = 32'd31;
    end else begin
        l_4_fu_2128_p3 = 32'd32;
    end
end


always @ (p_Result_131_fu_3071_p4) begin
    if (p_Result_131_fu_3071_p4[0] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd0;
    end else if (p_Result_131_fu_3071_p4[1] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd1;
    end else if (p_Result_131_fu_3071_p4[2] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd2;
    end else if (p_Result_131_fu_3071_p4[3] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd3;
    end else if (p_Result_131_fu_3071_p4[4] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd4;
    end else if (p_Result_131_fu_3071_p4[5] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd5;
    end else if (p_Result_131_fu_3071_p4[6] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd6;
    end else if (p_Result_131_fu_3071_p4[7] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd7;
    end else if (p_Result_131_fu_3071_p4[8] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd8;
    end else if (p_Result_131_fu_3071_p4[9] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd9;
    end else if (p_Result_131_fu_3071_p4[10] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd10;
    end else if (p_Result_131_fu_3071_p4[11] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd11;
    end else if (p_Result_131_fu_3071_p4[12] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd12;
    end else if (p_Result_131_fu_3071_p4[13] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd13;
    end else if (p_Result_131_fu_3071_p4[14] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd14;
    end else if (p_Result_131_fu_3071_p4[15] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd15;
    end else if (p_Result_131_fu_3071_p4[16] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd16;
    end else if (p_Result_131_fu_3071_p4[17] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd17;
    end else if (p_Result_131_fu_3071_p4[18] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd18;
    end else if (p_Result_131_fu_3071_p4[19] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd19;
    end else if (p_Result_131_fu_3071_p4[20] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd20;
    end else if (p_Result_131_fu_3071_p4[21] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd21;
    end else if (p_Result_131_fu_3071_p4[22] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd22;
    end else if (p_Result_131_fu_3071_p4[23] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd23;
    end else if (p_Result_131_fu_3071_p4[24] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd24;
    end else if (p_Result_131_fu_3071_p4[25] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd25;
    end else if (p_Result_131_fu_3071_p4[26] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd26;
    end else if (p_Result_131_fu_3071_p4[27] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd27;
    end else if (p_Result_131_fu_3071_p4[28] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd28;
    end else if (p_Result_131_fu_3071_p4[29] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd29;
    end else if (p_Result_131_fu_3071_p4[30] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd30;
    end else if (p_Result_131_fu_3071_p4[31] == 1'b1) begin
        l_5_fu_3081_p3 = 32'd31;
    end else begin
        l_5_fu_3081_p3 = 32'd32;
    end
end


always @ (p_Result_137_fu_3748_p4) begin
    if (p_Result_137_fu_3748_p4[0] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd0;
    end else if (p_Result_137_fu_3748_p4[1] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd1;
    end else if (p_Result_137_fu_3748_p4[2] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd2;
    end else if (p_Result_137_fu_3748_p4[3] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd3;
    end else if (p_Result_137_fu_3748_p4[4] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd4;
    end else if (p_Result_137_fu_3748_p4[5] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd5;
    end else if (p_Result_137_fu_3748_p4[6] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd6;
    end else if (p_Result_137_fu_3748_p4[7] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd7;
    end else if (p_Result_137_fu_3748_p4[8] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd8;
    end else if (p_Result_137_fu_3748_p4[9] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd9;
    end else if (p_Result_137_fu_3748_p4[10] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd10;
    end else if (p_Result_137_fu_3748_p4[11] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd11;
    end else if (p_Result_137_fu_3748_p4[12] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd12;
    end else if (p_Result_137_fu_3748_p4[13] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd13;
    end else if (p_Result_137_fu_3748_p4[14] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd14;
    end else if (p_Result_137_fu_3748_p4[15] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd15;
    end else if (p_Result_137_fu_3748_p4[16] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd16;
    end else if (p_Result_137_fu_3748_p4[17] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd17;
    end else if (p_Result_137_fu_3748_p4[18] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd18;
    end else if (p_Result_137_fu_3748_p4[19] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd19;
    end else if (p_Result_137_fu_3748_p4[20] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd20;
    end else if (p_Result_137_fu_3748_p4[21] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd21;
    end else if (p_Result_137_fu_3748_p4[22] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd22;
    end else if (p_Result_137_fu_3748_p4[23] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd23;
    end else if (p_Result_137_fu_3748_p4[24] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd24;
    end else if (p_Result_137_fu_3748_p4[25] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd25;
    end else if (p_Result_137_fu_3748_p4[26] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd26;
    end else if (p_Result_137_fu_3748_p4[27] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd27;
    end else if (p_Result_137_fu_3748_p4[28] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd28;
    end else if (p_Result_137_fu_3748_p4[29] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd29;
    end else if (p_Result_137_fu_3748_p4[30] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd30;
    end else if (p_Result_137_fu_3748_p4[31] == 1'b1) begin
        l_6_fu_3758_p3 = 32'd31;
    end else begin
        l_6_fu_3758_p3 = 32'd32;
    end
end


always @ (p_Result_143_fu_4651_p4) begin
    if (p_Result_143_fu_4651_p4[0] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd0;
    end else if (p_Result_143_fu_4651_p4[1] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd1;
    end else if (p_Result_143_fu_4651_p4[2] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd2;
    end else if (p_Result_143_fu_4651_p4[3] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd3;
    end else if (p_Result_143_fu_4651_p4[4] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd4;
    end else if (p_Result_143_fu_4651_p4[5] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd5;
    end else if (p_Result_143_fu_4651_p4[6] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd6;
    end else if (p_Result_143_fu_4651_p4[7] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd7;
    end else if (p_Result_143_fu_4651_p4[8] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd8;
    end else if (p_Result_143_fu_4651_p4[9] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd9;
    end else if (p_Result_143_fu_4651_p4[10] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd10;
    end else if (p_Result_143_fu_4651_p4[11] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd11;
    end else if (p_Result_143_fu_4651_p4[12] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd12;
    end else if (p_Result_143_fu_4651_p4[13] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd13;
    end else if (p_Result_143_fu_4651_p4[14] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd14;
    end else if (p_Result_143_fu_4651_p4[15] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd15;
    end else if (p_Result_143_fu_4651_p4[16] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd16;
    end else if (p_Result_143_fu_4651_p4[17] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd17;
    end else if (p_Result_143_fu_4651_p4[18] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd18;
    end else if (p_Result_143_fu_4651_p4[19] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd19;
    end else if (p_Result_143_fu_4651_p4[20] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd20;
    end else if (p_Result_143_fu_4651_p4[21] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd21;
    end else if (p_Result_143_fu_4651_p4[22] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd22;
    end else if (p_Result_143_fu_4651_p4[23] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd23;
    end else if (p_Result_143_fu_4651_p4[24] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd24;
    end else if (p_Result_143_fu_4651_p4[25] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd25;
    end else if (p_Result_143_fu_4651_p4[26] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd26;
    end else if (p_Result_143_fu_4651_p4[27] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd27;
    end else if (p_Result_143_fu_4651_p4[28] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd28;
    end else if (p_Result_143_fu_4651_p4[29] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd29;
    end else if (p_Result_143_fu_4651_p4[30] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd30;
    end else if (p_Result_143_fu_4651_p4[31] == 1'b1) begin
        l_7_fu_4661_p3 = 32'd31;
    end else begin
        l_7_fu_4661_p3 = 32'd32;
    end
end


always @ (p_Result_147_fu_4926_p4) begin
    if (p_Result_147_fu_4926_p4[0] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd0;
    end else if (p_Result_147_fu_4926_p4[1] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd1;
    end else if (p_Result_147_fu_4926_p4[2] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd2;
    end else if (p_Result_147_fu_4926_p4[3] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd3;
    end else if (p_Result_147_fu_4926_p4[4] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd4;
    end else if (p_Result_147_fu_4926_p4[5] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd5;
    end else if (p_Result_147_fu_4926_p4[6] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd6;
    end else if (p_Result_147_fu_4926_p4[7] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd7;
    end else if (p_Result_147_fu_4926_p4[8] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd8;
    end else if (p_Result_147_fu_4926_p4[9] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd9;
    end else if (p_Result_147_fu_4926_p4[10] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd10;
    end else if (p_Result_147_fu_4926_p4[11] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd11;
    end else if (p_Result_147_fu_4926_p4[12] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd12;
    end else if (p_Result_147_fu_4926_p4[13] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd13;
    end else if (p_Result_147_fu_4926_p4[14] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd14;
    end else if (p_Result_147_fu_4926_p4[15] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd15;
    end else if (p_Result_147_fu_4926_p4[16] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd16;
    end else if (p_Result_147_fu_4926_p4[17] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd17;
    end else if (p_Result_147_fu_4926_p4[18] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd18;
    end else if (p_Result_147_fu_4926_p4[19] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd19;
    end else if (p_Result_147_fu_4926_p4[20] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd20;
    end else if (p_Result_147_fu_4926_p4[21] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd21;
    end else if (p_Result_147_fu_4926_p4[22] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd22;
    end else if (p_Result_147_fu_4926_p4[23] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd23;
    end else if (p_Result_147_fu_4926_p4[24] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd24;
    end else if (p_Result_147_fu_4926_p4[25] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd25;
    end else if (p_Result_147_fu_4926_p4[26] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd26;
    end else if (p_Result_147_fu_4926_p4[27] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd27;
    end else if (p_Result_147_fu_4926_p4[28] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd28;
    end else if (p_Result_147_fu_4926_p4[29] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd29;
    end else if (p_Result_147_fu_4926_p4[30] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd30;
    end else if (p_Result_147_fu_4926_p4[31] == 1'b1) begin
        l_8_fu_4935_p3 = 32'd31;
    end else begin
        l_8_fu_4935_p3 = 32'd32;
    end
end

assign l_9_fu_5579_p1 = tmp_1_fu_5571_p3[31:0];


always @ (p_Result_121_fu_1684_p4) begin
    if (p_Result_121_fu_1684_p4[0] == 1'b1) begin
        l_fu_1694_p3 = 32'd0;
    end else if (p_Result_121_fu_1684_p4[1] == 1'b1) begin
        l_fu_1694_p3 = 32'd1;
    end else if (p_Result_121_fu_1684_p4[2] == 1'b1) begin
        l_fu_1694_p3 = 32'd2;
    end else if (p_Result_121_fu_1684_p4[3] == 1'b1) begin
        l_fu_1694_p3 = 32'd3;
    end else if (p_Result_121_fu_1684_p4[4] == 1'b1) begin
        l_fu_1694_p3 = 32'd4;
    end else if (p_Result_121_fu_1684_p4[5] == 1'b1) begin
        l_fu_1694_p3 = 32'd5;
    end else if (p_Result_121_fu_1684_p4[6] == 1'b1) begin
        l_fu_1694_p3 = 32'd6;
    end else if (p_Result_121_fu_1684_p4[7] == 1'b1) begin
        l_fu_1694_p3 = 32'd7;
    end else if (p_Result_121_fu_1684_p4[8] == 1'b1) begin
        l_fu_1694_p3 = 32'd8;
    end else if (p_Result_121_fu_1684_p4[9] == 1'b1) begin
        l_fu_1694_p3 = 32'd9;
    end else if (p_Result_121_fu_1684_p4[10] == 1'b1) begin
        l_fu_1694_p3 = 32'd10;
    end else if (p_Result_121_fu_1684_p4[11] == 1'b1) begin
        l_fu_1694_p3 = 32'd11;
    end else if (p_Result_121_fu_1684_p4[12] == 1'b1) begin
        l_fu_1694_p3 = 32'd12;
    end else if (p_Result_121_fu_1684_p4[13] == 1'b1) begin
        l_fu_1694_p3 = 32'd13;
    end else if (p_Result_121_fu_1684_p4[14] == 1'b1) begin
        l_fu_1694_p3 = 32'd14;
    end else if (p_Result_121_fu_1684_p4[15] == 1'b1) begin
        l_fu_1694_p3 = 32'd15;
    end else if (p_Result_121_fu_1684_p4[16] == 1'b1) begin
        l_fu_1694_p3 = 32'd16;
    end else if (p_Result_121_fu_1684_p4[17] == 1'b1) begin
        l_fu_1694_p3 = 32'd17;
    end else if (p_Result_121_fu_1684_p4[18] == 1'b1) begin
        l_fu_1694_p3 = 32'd18;
    end else if (p_Result_121_fu_1684_p4[19] == 1'b1) begin
        l_fu_1694_p3 = 32'd19;
    end else if (p_Result_121_fu_1684_p4[20] == 1'b1) begin
        l_fu_1694_p3 = 32'd20;
    end else if (p_Result_121_fu_1684_p4[21] == 1'b1) begin
        l_fu_1694_p3 = 32'd21;
    end else if (p_Result_121_fu_1684_p4[22] == 1'b1) begin
        l_fu_1694_p3 = 32'd22;
    end else if (p_Result_121_fu_1684_p4[23] == 1'b1) begin
        l_fu_1694_p3 = 32'd23;
    end else if (p_Result_121_fu_1684_p4[24] == 1'b1) begin
        l_fu_1694_p3 = 32'd24;
    end else if (p_Result_121_fu_1684_p4[25] == 1'b1) begin
        l_fu_1694_p3 = 32'd25;
    end else if (p_Result_121_fu_1684_p4[26] == 1'b1) begin
        l_fu_1694_p3 = 32'd26;
    end else if (p_Result_121_fu_1684_p4[27] == 1'b1) begin
        l_fu_1694_p3 = 32'd27;
    end else if (p_Result_121_fu_1684_p4[28] == 1'b1) begin
        l_fu_1694_p3 = 32'd28;
    end else if (p_Result_121_fu_1684_p4[29] == 1'b1) begin
        l_fu_1694_p3 = 32'd29;
    end else if (p_Result_121_fu_1684_p4[30] == 1'b1) begin
        l_fu_1694_p3 = 32'd30;
    end else if (p_Result_121_fu_1684_p4[31] == 1'b1) begin
        l_fu_1694_p3 = 32'd31;
    end else begin
        l_fu_1694_p3 = 32'd32;
    end
end

assign layerSMin_V_1_fu_5455_p3 = ((or_ln585_fu_5450_p2[0:0] == 1'b1) ? 32'd0 : select_ln603_fu_5430_p3);

assign layerSMin_V_2_fu_5472_p3 = ((icmp_ln1495_9_fu_5463_p2[0:0] == 1'b1) ? layerSMin_V_1_fu_5455_p3 : layerSMin_V_reg_1175);

assign layerWithSmallestShift_2_fu_5480_p3 = ((icmp_ln1495_9_fu_5463_p2[0:0] == 1'b1) ? zext_ln1033_fu_5469_p1 : layerWithSmallestShift_reg_1163);

assign lhs_12_fu_2757_p3 = {{rhs_reg_921}, {20'd0}};

assign lhs_7_fu_1614_p1 = c_corner_1_q0;

assign lhs_7_fu_1614_p3 = {{lhs_7_fu_1614_p1}, {20'd0}};

assign lsb_index_10_fu_6029_p2 = ($signed(sub_ln944_9_fu_6023_p2) + $signed(32'd4294967272));

assign lsb_index_11_fu_6477_p2 = ($signed(sub_ln944_10_fu_6471_p2) + $signed(32'd4294967272));

assign lsb_index_4_fu_2142_p2 = ($signed(sub_ln944_3_fu_2136_p2) + $signed(32'd4294967272));

assign lsb_index_5_fu_3095_p2 = ($signed(sub_ln944_4_fu_3089_p2) + $signed(32'd4294967272));

assign lsb_index_6_fu_3772_p2 = ($signed(sub_ln944_5_fu_3766_p2) + $signed(32'd4294967272));

assign lsb_index_7_fu_4675_p2 = ($signed(sub_ln944_6_fu_4669_p2) + $signed(32'd4294967272));

assign lsb_index_8_fu_4949_p2 = ($signed(sub_ln944_7_fu_4943_p2) + $signed(32'd4294967272));

assign lsb_index_9_fu_5589_p2 = ($signed(sub_ln944_8_fu_5583_p2) + $signed(32'd4294967272));

assign lsb_index_fu_1708_p2 = ($signed(sub_ln944_fu_1702_p2) + $signed(32'd4294967272));

assign lshr_ln4_fu_6367_p4 = {{add_ln1057_fu_6361_p2[15:13]}};

assign lshr_ln5_fu_6815_p4 = {{add_ln1062_fu_6809_p2[15:13]}};

assign lshr_ln947_10_fu_6513_p2 = 33'd8589934591 >> zext_ln947_10_fu_6509_p1;

assign lshr_ln947_3_fu_2178_p2 = 32'd4294967295 >> zext_ln947_3_fu_2174_p1;

assign lshr_ln947_4_fu_3131_p2 = 32'd4294967295 >> zext_ln947_4_fu_3127_p1;

assign lshr_ln947_5_fu_3808_p2 = 32'd4294967295 >> zext_ln947_5_fu_3804_p1;

assign lshr_ln947_6_fu_4711_p2 = 32'd4294967295 >> zext_ln947_6_fu_4707_p1;

assign lshr_ln947_7_fu_4985_p2 = 32'd4294967295 >> zext_ln947_7_fu_4981_p1;

assign lshr_ln947_8_fu_5625_p2 = 33'd8589934591 >> zext_ln947_8_fu_5621_p1;

assign lshr_ln947_9_fu_6065_p2 = 33'd8589934591 >> zext_ln947_9_fu_6061_p1;

assign lshr_ln947_fu_1744_p2 = 32'd4294967295 >> zext_ln947_fu_1740_p1;

assign lshr_ln954_1_fu_6188_p2 = zext_ln937_1_fu_5990_p1 >> zext_ln954_1_fu_6184_p1;

assign lshr_ln954_2_fu_6636_p2 = zext_ln937_2_fu_6438_p1 >> zext_ln954_2_fu_6632_p1;

assign lshr_ln954_fu_5748_p2 = zext_ln937_fu_5550_p1 >> zext_ln954_fu_5744_p1;

assign lshr_ln958_3_fu_2280_p2 = zext_ln959_11_fu_2242_p1 >> zext_ln958_3_fu_2276_p1;

assign lshr_ln958_4_fu_3242_p2 = zext_ln959_12_fu_3215_p1 >> zext_ln958_4_fu_3238_p1;

assign lshr_ln958_5_fu_3919_p2 = zext_ln959_13_fu_3892_p1 >> zext_ln958_5_fu_3915_p1;

assign lshr_ln958_6_fu_4813_p2 = zext_ln959_14_fu_4775_p1 >> zext_ln958_6_fu_4809_p1;

assign lshr_ln958_7_fu_5080_p2 = m_75_reg_7694 >> zext_ln958_7_fu_5076_p1;

assign lshr_ln958_fu_1861_p2 = zext_ln959_10_fu_1834_p1 >> zext_ln958_fu_1857_p1;

assign lshr_ln_fu_4426_p4 = {{add_ln1004_fu_4420_p2[15:13]}};

assign m_1_fu_6672_p4 = {{m_65_fu_6666_p2[33:1]}};

assign m_35_fu_1877_p2 = (m_fu_1867_p3 + zext_ln961_fu_1874_p1);

assign m_39_fu_2294_p3 = ((icmp_ln958_3_fu_2230_p2[0:0] == 1'b1) ? lshr_ln958_3_fu_2280_p2 : shl_ln959_3_fu_2256_p2);

assign m_40_fu_2306_p2 = (m_39_fu_2294_p3 + zext_ln961_3_fu_2302_p1);

assign m_43_fu_3248_p3 = ((icmp_ln958_4_reg_7430[0:0] == 1'b1) ? lshr_ln958_4_fu_3242_p2 : shl_ln959_4_fu_3227_p2);

assign m_44_fu_3258_p2 = (m_43_fu_3248_p3 + zext_ln961_4_fu_3255_p1);

assign m_47_fu_3925_p3 = ((icmp_ln958_5_reg_7544[0:0] == 1'b1) ? lshr_ln958_5_fu_3919_p2 : shl_ln959_5_fu_3904_p2);

assign m_48_fu_3935_p2 = (m_47_fu_3925_p3 + zext_ln961_5_fu_3932_p1);

assign m_51_fu_4827_p3 = ((icmp_ln958_6_fu_4763_p2[0:0] == 1'b1) ? lshr_ln958_6_fu_4813_p2 : shl_ln959_6_fu_4789_p2);

assign m_52_fu_4839_p2 = (m_51_fu_4827_p3 + zext_ln961_6_fu_4835_p1);

assign m_55_fu_5093_p3 = ((icmp_ln958_7_fu_5035_p2[0:0] == 1'b1) ? lshr_ln958_7_fu_5080_p2 : shl_ln959_7_fu_5057_p2);

assign m_56_fu_5105_p2 = (m_55_fu_5093_p3 + zext_ln961_7_fu_5101_p1);

assign m_58_fu_5762_p3 = ((icmp_ln954_fu_5702_p2[0:0] == 1'b1) ? lshr_ln954_fu_5748_p2 : shl_ln955_fu_5724_p2);

assign m_59_fu_5778_p2 = (zext_ln951_fu_5770_p1 + zext_ln961_8_fu_5774_p1);

assign m_61_fu_6202_p3 = ((icmp_ln954_1_fu_6142_p2[0:0] == 1'b1) ? lshr_ln954_1_fu_6188_p2 : shl_ln955_1_fu_6164_p2);

assign m_62_fu_6218_p2 = (zext_ln951_2_fu_6210_p1 + zext_ln961_9_fu_6214_p1);

assign m_64_fu_6650_p3 = ((icmp_ln954_2_fu_6590_p2[0:0] == 1'b1) ? lshr_ln954_2_fu_6636_p2 : shl_ln955_2_fu_6612_p2);

assign m_65_fu_6666_p2 = (zext_ln951_4_fu_6658_p1 + zext_ln961_10_fu_6662_p1);

assign m_67_fu_1676_p2 = c_corner_1_q0;

assign m_67_fu_1676_p3 = ((p_Result_120_fu_1662_p3[0:0] == 1'b1) ? tmp_V_fu_1670_p2 : m_67_fu_1676_p2);

assign m_68_fu_1883_p4 = {{m_35_fu_1877_p2[63:1]}};

assign m_69_fu_2110_p3 = ((p_Result_124_fu_2096_p3[0:0] == 1'b1) ? tmp_V_10_fu_2104_p2 : min_z_V_2_reg_897);

assign m_71_fu_3063_p3 = ((p_Result_130_fu_3049_p3[0:0] == 1'b1) ? tmp_V_13_fu_3057_p2 : new_z_i_index_V_q1);

assign m_72_fu_3264_p4 = {{m_44_fu_3258_p2[63:1]}};

assign m_73_fu_3740_p3 = ((p_Result_136_fu_3726_p3[0:0] == 1'b1) ? tmp_V_15_fu_3734_p2 : new_z_i_index_V_q0);

assign m_74_fu_3941_p4 = {{m_48_fu_3935_p2[63:1]}};

assign m_75_fu_4600_p1 = tmp_V_26_fu_4592_p3;

assign m_76_fu_4645_p3 = ((p_Result_142_reg_7719[0:0] == 1'b1) ? tmp_V_17_reg_7725 : reg_1449);

assign m_77_fu_4845_p4 = {{m_52_fu_4839_p2[63:1]}};

assign m_78_fu_5111_p4 = {{m_56_fu_5105_p2[63:1]}};

assign m_9_fu_5784_p4 = {{m_59_fu_5778_p2[33:1]}};

assign m_fu_1867_p3 = ((icmp_ln958_reg_6988[0:0] == 1'b1) ? lshr_ln958_fu_1861_p2 : shl_ln959_fu_1846_p2);

assign m_s_fu_6224_p4 = {{m_62_fu_6218_p2[33:1]}};

assign man_V_11_fu_4112_p2 = (54'd0 - zext_ln569_2_fu_4108_p1);

assign man_V_12_fu_4118_p3 = ((p_Result_140_fu_4074_p3[0:0] == 1'b1) ? man_V_11_fu_4112_p2 : zext_ln569_2_fu_4108_p1);

assign man_V_14_fu_5257_p2 = (54'd0 - zext_ln569_3_fu_5253_p1);

assign man_V_15_fu_5263_p3 = ((p_Result_151_reg_7750[0:0] == 1'b1) ? man_V_14_fu_5257_p2 : zext_ln569_3_fu_5253_p1);

assign man_V_5_fu_2485_p2 = (54'd0 - zext_ln569_fu_2481_p1);

assign man_V_6_fu_2491_p3 = ((p_Result_128_fu_2447_p3[0:0] == 1'b1) ? man_V_5_fu_2485_p2 : zext_ln569_fu_2481_p1);

assign man_V_8_fu_3475_p2 = (54'd0 - zext_ln569_1_fu_3471_p1);

assign man_V_9_fu_3481_p3 = ((p_Result_134_fu_3437_p3[0:0] == 1'b1) ? man_V_8_fu_3475_p2 : zext_ln569_1_fu_3471_p1);

assign min_z_V_1_fu_2026_p3 = ((icmp_ln1495_6_fu_2020_p2[0:0] == 1'b1) ? patch_buffer_q0 : min_z_V_reg_862);

assign min_z_V_3_fu_2074_p3 = ((icmp_ln1495_7_fu_2068_p2[0:0] == 1'b1) ? patch_buffer_q0 : min_z_V_2_reg_897);

assign mul_ln1148_fu_2854_p1 = 100'd14411518807585588;

assign new_z_i_index_V_d1 = ((or_ln571_6_fu_4324_p2[0:0] == 1'b1) ? select_ln571_13_fu_4318_p3 : select_ln571_12_fu_4311_p3);

assign notChoppedPatch_fu_1650_p2 = (squareAcceptance_q0 | and_ln1494_fu_1644_p2);

assign num_points_address1 = grp_alignedtoline_per_layer_loop3_fu_1250_num_points_address1;

assign or_ln1050_fu_5904_p2 = (icmp_ln1050_reg_7821 | icmp_ln1050_1_reg_7826);

assign or_ln1055_fu_6344_p2 = (icmp_ln1055_reg_7868 | icmp_ln1055_1_reg_7873);

assign or_ln1060_fu_6792_p2 = (icmp_ln1060_reg_7915 | icmp_ln1060_1_reg_7920);

assign or_ln200_1_fu_3404_p2 = (icmp_ln200_4_fu_3398_p2 | icmp_ln200_3_fu_3392_p2);

assign or_ln200_fu_3386_p2 = (icmp_ln200_2_fu_3380_p2 | icmp_ln200_1_fu_3374_p2);

assign or_ln224_1_fu_4048_p2 = (icmp_ln224_3_reg_7570 | icmp_ln224_2_reg_7565);

assign or_ln224_fu_2421_p2 = (icmp_ln224_reg_7115 | icmp_ln224_1_reg_7120);

assign or_ln571_4_fu_3690_p2 = (or_ln571_reg_7497 | and_ln581_reg_7492);

assign or_ln571_5_fu_4272_p2 = (icmp_ln571_2_fu_4126_p2 | and_ln603_2_fu_4266_p2);

assign or_ln571_6_fu_4324_p2 = (or_ln571_5_reg_7602 | and_ln581_1_reg_7597);

assign or_ln571_fu_3638_p2 = (icmp_ln571_1_fu_3489_p2 | and_ln603_fu_3632_p2);

assign or_ln581_1_fu_4254_p2 = (or_ln582_1_fu_4224_p2 | icmp_ln581_2_fu_4138_p2);

assign or_ln581_2_fu_5412_p2 = (or_ln582_2_fu_5381_p2 | icmp_ln581_3_fu_5276_p2);

assign or_ln581_fu_3620_p2 = (or_ln582_fu_3590_p2 | icmp_ln581_1_fu_3501_p2);

assign or_ln582_1_fu_4224_p2 = (icmp_ln582_2_fu_4164_p2 | icmp_ln571_2_fu_4126_p2);

assign or_ln582_2_fu_5381_p2 = (icmp_ln582_3_fu_5306_p2 | icmp_ln571_3_reg_7765);

assign or_ln582_fu_3590_p2 = (icmp_ln582_1_fu_3527_p2 | icmp_ln571_1_fu_3489_p2);

assign or_ln585_fu_5450_p2 = (icmp_ln571_3_reg_7765 | and_ln585_4_fu_5444_p2);

assign or_ln935_fu_1984_p2 = (icmp_ln935_reg_6967 | and_ln971_fu_1978_p2);

assign or_ln949_10_fu_6100_p2 = (trunc_ln949_3_fu_6096_p1 | and_ln949_10_fu_6091_p2);

assign or_ln949_11_fu_6548_p2 = (trunc_ln949_5_fu_6544_p1 | and_ln949_12_fu_6539_p2);

assign or_ln949_12_fu_1756_p2 = (shl_ln949_fu_1750_p2 | lshr_ln947_fu_1744_p2);

assign or_ln949_13_fu_3143_p2 = (shl_ln949_4_fu_3137_p2 | lshr_ln947_4_fu_3131_p2);

assign or_ln949_14_fu_3820_p2 = (shl_ln949_5_fu_3814_p2 | lshr_ln947_5_fu_3808_p2);

assign or_ln949_15_fu_4723_p2 = (shl_ln949_6_fu_4717_p2 | lshr_ln947_6_fu_4711_p2);

assign or_ln949_16_fu_4997_p2 = (shl_ln949_7_fu_4991_p2 | lshr_ln947_7_fu_4985_p2);

assign or_ln949_1_fu_6554_p3 = {{1'd0}, {or_ln949_11_fu_6548_p2}};

assign or_ln949_8_fu_5666_p3 = {{1'd0}, {or_ln949_9_fu_5660_p2}};

assign or_ln949_9_fu_5660_p2 = (trunc_ln949_1_fu_5656_p1 | and_ln949_8_fu_5651_p2);

assign or_ln949_fu_2190_p2 = (shl_ln949_3_fu_2184_p2 | lshr_ln947_3_fu_2178_p2);

assign or_ln949_s_fu_6106_p3 = {{1'd0}, {or_ln949_10_fu_6100_p2}};

assign or_ln971_fu_1974_p2 = (icmp_ln971_reg_7013 | icmp_ln971_1_reg_7018);

assign pSlope_address0 = grp_getParallelograms_fu_1285_pSlope_address0;

assign pSlope_d0 = grp_getParallelograms_fu_1285_pSlope_d0;

integer ap_tvar_int_0;

always @ (zext_ln937_1_fu_5990_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_101_fu_5993_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_101_fu_5993_p4[ap_tvar_int_0] = zext_ln937_1_fu_5990_p1[32 - ap_tvar_int_0];
        end
    end
end

assign p_Result_103_fu_6071_p2 = (zext_ln937_1_fu_5990_p1 & lshr_ln947_9_fu_6065_p2);

assign p_Result_105_fu_6238_p3 = m_62_fu_6218_p2[32'd25];

integer ap_tvar_int_1;

always @ (zext_ln937_2_fu_6438_p1) begin
    for (ap_tvar_int_1 = 33 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 32 - 0) begin
            p_Result_111_fu_6441_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_111_fu_6441_p4[ap_tvar_int_1] = zext_ln937_2_fu_6438_p1[32 - ap_tvar_int_1];
        end
    end
end

assign p_Result_113_fu_6519_p2 = (zext_ln937_2_fu_6438_p1 & lshr_ln947_10_fu_6513_p2);

assign p_Result_115_fu_6686_p3 = m_65_fu_6666_p2[32'd25];

assign p_Result_120_fu_1662_p1 = c_corner_1_q0;

assign p_Result_120_fu_1662_p3 = p_Result_120_fu_1662_p1[32'd31];

integer ap_tvar_int_2;

always @ (m_67_fu_1676_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_121_fu_1684_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_121_fu_1684_p4[ap_tvar_int_2] = m_67_fu_1676_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_122_fu_1788_p3 = m_67_fu_1676_p3[lsb_index_fu_1708_p2];

assign p_Result_123_fu_1931_p5 = {{zext_ln962_fu_1893_p1[63:32]}, {tmp_2_fu_1924_p3}, {zext_ln962_fu_1893_p1[22:0]}};

assign p_Result_124_fu_2096_p3 = min_z_V_2_reg_897[32'd31];

integer ap_tvar_int_3;

always @ (m_69_fu_2110_p3) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_125_fu_2118_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_125_fu_2118_p4[ap_tvar_int_3] = m_69_fu_2110_p3[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_126_fu_2222_p3 = m_69_fu_2110_p3[lsb_index_4_fu_2142_p2];

assign p_Result_127_fu_2362_p5 = {{zext_ln962_3_fu_2334_p1[63:32]}, {tmp_4_fu_2355_p3}, {zext_ln962_3_fu_2334_p1[22:0]}};

assign p_Result_128_fu_2447_p3 = ireg_fu_2435_p3[32'd63];

assign p_Result_129_fu_2473_p3 = {{1'd1}, {trunc_ln565_fu_2469_p1}};

assign p_Result_130_fu_3049_p3 = new_z_i_index_V_q1[32'd31];

integer ap_tvar_int_4;

always @ (m_71_fu_3063_p3) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            p_Result_131_fu_3071_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_131_fu_3071_p4[ap_tvar_int_4] = m_71_fu_3063_p3[31 - ap_tvar_int_4];
        end
    end
end

assign p_Result_132_fu_3175_p3 = m_71_fu_3063_p3[lsb_index_5_fu_3095_p2];

assign p_Result_133_fu_3312_p5 = {{zext_ln962_4_fu_3274_p1[63:32]}, {tmp_7_fu_3305_p3}, {zext_ln962_4_fu_3274_p1[22:0]}};

assign p_Result_134_fu_3437_p3 = ireg_1_fu_3429_p1[32'd63];

assign p_Result_135_fu_3463_p3 = {{1'd1}, {trunc_ln565_1_fu_3459_p1}};

assign p_Result_136_fu_3726_p3 = new_z_i_index_V_q0[32'd31];

integer ap_tvar_int_5;

always @ (m_73_fu_3740_p3) begin
    for (ap_tvar_int_5 = 32 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 31 - 0) begin
            p_Result_137_fu_3748_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_137_fu_3748_p4[ap_tvar_int_5] = m_73_fu_3740_p3[31 - ap_tvar_int_5];
        end
    end
end

assign p_Result_138_fu_3852_p3 = m_73_fu_3740_p3[lsb_index_6_fu_3772_p2];

assign p_Result_139_fu_3989_p5 = {{zext_ln962_5_fu_3951_p1[63:32]}, {tmp_9_fu_3982_p3}, {zext_ln962_5_fu_3951_p1[22:0]}};

assign p_Result_140_fu_4074_p3 = ireg_2_fu_4062_p3[32'd63];

assign p_Result_141_fu_4100_p3 = {{1'd1}, {trunc_ln565_2_fu_4096_p1}};

integer ap_tvar_int_6;

always @ (m_76_fu_4645_p3) begin
    for (ap_tvar_int_6 = 32 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 31 - 0) begin
            p_Result_143_fu_4651_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            p_Result_143_fu_4651_p4[ap_tvar_int_6] = m_76_fu_4645_p3[31 - ap_tvar_int_6];
        end
    end
end

assign p_Result_144_fu_4755_p3 = m_76_fu_4645_p3[lsb_index_7_fu_4675_p2];

assign p_Result_145_fu_4898_p5 = {{zext_ln962_6_fu_4855_p1[63:32]}, {tmp_6_fu_4891_p3}, {zext_ln962_6_fu_4855_p1[22:0]}};

assign p_Result_146_fu_4578_p3 = z_top_min_V_11_reg_1018[32'd31];

integer ap_tvar_int_7;

always @ (tmp_V_26_reg_7687) begin
    for (ap_tvar_int_7 = 32 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 31 - 0) begin
            p_Result_147_fu_4926_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            p_Result_147_fu_4926_p4[ap_tvar_int_7] = tmp_V_26_reg_7687[31 - ap_tvar_int_7];
        end
    end
end

assign p_Result_148_fu_5028_p3 = tmp_V_26_reg_7687[lsb_index_8_fu_4949_p2];

assign p_Result_149_fu_5164_p5 = {{zext_ln962_7_fu_5121_p1[63:32]}, {tmp_8_fu_5157_p3}, {zext_ln962_7_fu_5121_p1[22:0]}};

assign p_Result_150_fu_5195_p1 = data_V_fu_5191_p1[30:0];

assign p_Result_152_fu_5246_p3 = {{1'd1}, {trunc_ln565_3_reg_7760}};

assign p_Result_153_fu_5528_p3 = ret_V_26_fu_5513_p2[32'd32];

assign p_Result_154_fu_5563_p3 = {{31'd2147483647}, {p_Result_91_fu_5553_p4}};

assign p_Result_155_fu_5694_p3 = zext_ln937_fu_5550_p1[lsb_index_9_fu_5589_p2];

assign p_Result_156_fu_5837_p5 = {{zext_ln951_1_fu_5794_p1[63:32]}, {tmp_10_fu_5830_p3}, {zext_ln951_1_fu_5794_p1[22:0]}};

assign p_Result_157_fu_5861_p1 = data_V_2_fu_5857_p1[30:0];

assign p_Result_158_fu_5968_p3 = ret_V_27_fu_5953_p2[32'd32];

assign p_Result_159_fu_6003_p3 = {{31'd2147483647}, {p_Result_101_fu_5993_p4}};

assign p_Result_160_fu_6134_p3 = zext_ln937_1_fu_5990_p1[lsb_index_10_fu_6029_p2];

assign p_Result_161_fu_6277_p5 = {{zext_ln951_3_fu_6234_p1[63:32]}, {tmp_11_fu_6270_p3}, {zext_ln951_3_fu_6234_p1[22:0]}};

assign p_Result_162_fu_6301_p1 = data_V_3_fu_6297_p1[30:0];

assign p_Result_163_fu_6416_p3 = ret_V_28_fu_6401_p2[32'd32];

assign p_Result_164_fu_6451_p3 = {{31'd2147483647}, {p_Result_111_fu_6441_p4}};

assign p_Result_165_fu_6582_p3 = zext_ln937_2_fu_6438_p1[lsb_index_11_fu_6477_p2];

assign p_Result_166_fu_6725_p5 = {{zext_ln951_5_fu_6682_p1[63:32]}, {tmp_12_fu_6718_p3}, {zext_ln951_5_fu_6682_p1[22:0]}};

assign p_Result_167_fu_6749_p1 = data_V_4_fu_6745_p1[30:0];

assign p_Result_63_fu_3278_p3 = m_44_fu_3258_p2[32'd25];

assign p_Result_70_fu_3955_p3 = m_48_fu_3935_p2[32'd25];

assign p_Result_74_fu_4364_p3 = new_z_i_index_V_q1[32'd31];

assign p_Result_80_fu_4859_p3 = m_52_fu_4839_p2[32'd25];

assign p_Result_85_fu_5125_p3 = m_56_fu_5105_p2[32'd25];

integer ap_tvar_int_8;

always @ (zext_ln937_fu_5550_p1) begin
    for (ap_tvar_int_8 = 33 - 1; ap_tvar_int_8 >= 0; ap_tvar_int_8 = ap_tvar_int_8 - 1) begin
        if (ap_tvar_int_8 > 32 - 0) begin
            p_Result_91_fu_5553_p4[ap_tvar_int_8] = 1'b0;
        end else begin
            p_Result_91_fu_5553_p4[ap_tvar_int_8] = zext_ln937_fu_5550_p1[32 - ap_tvar_int_8];
        end
    end
end

assign p_Result_93_fu_5631_p2 = (zext_ln937_fu_5550_p1 & lshr_ln947_8_fu_5625_p2);

assign p_Result_95_fu_5798_p3 = m_59_fu_5778_p2[32'd25];

assign p_Result_s_fu_1897_p3 = m_35_fu_1877_p2[32'd25];

assign p_v_cast_fu_2745_p1 = $signed(white_space_height_V_fu_2733_p1);

assign patch_buffer_d0 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d0;

assign patch_buffer_d1 = grp_patch_buffer_add_patch2_fu_1330_patch_buffer_d1;

assign points_address1 = grp_alignedtoline_per_layer_loop3_fu_1250_points_address1;

assign projectionOfCornerToBeam_V_fu_1628_p4 = {{ret_V_9_fu_1622_p2[51:20]}};

assign r_V_3_fu_1608_p2 = ($signed(shl_ln_fu_1588_p3) + $signed(sext_ln1118_2_fu_1604_p1));

assign r_V_5_fu_2920_p0 = sext_ln1115_1_reg_7273;

assign r_V_5_fu_2920_p1 = select_ln1148_2_fu_2909_p3;

assign r_V_9_fu_6858_p1 = p_v_cast_reg_7227;

assign radii_leverArm_fu_4526_p1 = grp_fu_4520_p2[31:0];

assign radius_j_V_4_fu_4498_p3 = ((icmp_ln870_1_fu_4481_p2[0:0] == 1'b1) ? 25'd0 : radius_j_V_fu_4490_p3);

assign radius_j_V_fu_4490_p3 = {{trunc_ln731_1_fu_4486_p1}, {20'd0}};

assign radius_k_V_2_fu_2825_p3 = ((icmp_ln870_reg_7292[0:0] == 1'b1) ? 25'd0 : radius_k_V_fu_2817_p3);

assign radius_k_V_fu_2817_p3 = {{trunc_ln731_fu_2813_p1}, {20'd0}};

assign ret_V_10_fu_2713_p2 = ($signed(sext_ln703_4_fu_2706_p1) - $signed(sext_ln703_5_fu_2709_p1));

assign ret_V_11_fu_2836_p2 = ($signed(zext_ln1193_fu_2832_p1) + $signed(26'd61865984));

assign ret_V_13_fu_2925_p2 = (r_V_5_reg_7322 + lhs_12_reg_7248);

assign ret_V_14_fu_4382_p2 = (ret_V_7_fu_4354_p4 + 12'd1);

assign ret_V_15_fu_4396_p3 = ((p_Result_74_fu_4364_p3[0:0] == 1'b1) ? select_ln850_fu_4388_p3 : ret_V_7_fu_4354_p4);

assign ret_V_16_fu_4510_p2 = ($signed(zext_ln1193_1_fu_4506_p1) + $signed(26'd61865984));

assign ret_V_18_fu_4553_p2 = (r_V_7_fu_4547_p2 + lhs_12_reg_7248);

assign ret_V_23_fu_1578_p2 = ($signed(sext_ln703_fu_1570_p1) - $signed(sext_ln703_7_fu_1574_p1));

assign ret_V_24_fu_2775_p2 = ($signed(sext_ln703_12_fu_2771_p1) - $signed(sext_ln703_11_reg_7242));

assign ret_V_25_fu_4534_p2 = ($signed(sext_ln703_13_fu_4530_p1) - $signed(sext_ln703_11_reg_7242));

assign ret_V_26_fu_5513_p2 = ($signed(sext_ln703_6_fu_5509_p1) - $signed(sext_ln703_12_reg_7265));

assign ret_V_27_fu_5953_p2 = ($signed(sext_ln703_8_fu_5949_p1) - $signed(sext_ln703_12_reg_7265));

assign ret_V_28_fu_6401_p2 = ($signed(sext_ln703_9_fu_6397_p1) - $signed(sext_ln703_12_reg_7265));

assign ret_V_29_fu_6849_p2 = ($signed(sext_ln703_10_fu_6845_p1) - $signed(sext_ln703_12_reg_7265));

assign ret_V_7_fu_4354_p4 = {{new_z_i_index_V_q1[31:20]}};

assign ret_V_9_fu_1622_p2 = (r_V_3_fu_1608_p2 + lhs_7_fu_1614_p3);

assign ret_V_fu_2701_p2 = ($signed(sext_ln703_7_reg_6954) - $signed(sext_ln703_3_fu_2697_p1));

assign retval_0_i_i545_fu_5184_p3 = ((tobool_i_i483_reg_7677[0:0] == 1'b1) ? bitcast_ln744_6_fu_5180_p1 : 32'd0);

assign select_ln1148_2_fu_2909_p3 = ((tmp_55_reg_7311[0:0] == 1'b1) ? sub_ln1148_2_fu_2903_p2 : sext_ln1148_2_fu_2899_p1);

assign select_ln1148_fu_2893_p3 = ((tmp_55_reg_7311[0:0] == 1'b1) ? tmp_56_fu_2883_p4 : tmp_57_reg_7317);

assign select_ln37_1_fu_1491_p3 = ((icmp_ln39_fu_1477_p2[0:0] == 1'b1) ? add_ln37_fu_1471_p2 : ap_phi_mux_layer_phi_fu_833_p4);

assign select_ln37_2_fu_2641_p3 = ((icmp_ln39_1_fu_2635_p2[0:0] == 1'b1) ? 5'd0 : point_1_reg_1007);

assign select_ln37_3_fu_2649_p3 = ((icmp_ln39_1_fu_2635_p2[0:0] == 1'b1) ? add_ln37_1_fu_2629_p2 : ap_phi_mux_layer_1_phi_fu_1000_p4);

assign select_ln37_fu_1483_p3 = ((icmp_ln39_fu_1477_p2[0:0] == 1'b1) ? 5'd0 : point_reg_840);

assign select_ln51_2_fu_2034_p3 = ((icmp_ln1495_6_fu_2020_p2[0:0] == 1'b1) ? patch_buffer_q0 : empty_258_reg_874);

assign select_ln51_3_fu_2082_p3 = ((icmp_ln1495_7_fu_2068_p2[0:0] == 1'b1) ? patch_buffer_q0 : empty_260_reg_909);

assign select_ln571_10_fu_4304_p3 = ((icmp_ln571_2_reg_7575[0:0] == 1'b1) ? 32'd0 : shl_ln604_2_fu_4289_p2);

assign select_ln571_11_fu_4278_p3 = ((and_ln585_2_fu_4248_p2[0:0] == 1'b1) ? select_ln588_2_fu_4216_p3 : trunc_ln586_7_fu_4204_p1);

assign select_ln571_12_fu_4311_p3 = ((and_ln582_2_fu_4299_p2[0:0] == 1'b1) ? trunc_ln583_2_reg_7591 : 32'd0);

assign select_ln571_13_fu_4318_p3 = ((or_ln571_5_reg_7602[0:0] == 1'b1) ? select_ln571_10_fu_4304_p3 : select_ln571_11_reg_7608);

assign select_ln571_6_fu_3644_p3 = ((and_ln585_fu_3614_p2[0:0] == 1'b1) ? select_ln588_1_fu_3582_p3 : trunc_ln586_5_fu_3567_p1);

assign select_ln571_7_fu_3677_p3 = ((and_ln582_fu_3665_p2[0:0] == 1'b1) ? trunc_ln583_1_reg_7486 : 32'd0);

assign select_ln571_8_fu_3684_p3 = ((or_ln571_reg_7497[0:0] == 1'b1) ? select_ln571_fu_3670_p3 : select_ln571_6_reg_7503);

assign select_ln571_9_fu_3694_p3 = ((or_ln571_4_fu_3690_p2[0:0] == 1'b1) ? select_ln571_8_fu_3684_p3 : select_ln571_7_fu_3677_p3);

assign select_ln571_fu_3670_p3 = ((icmp_ln571_1_reg_7470[0:0] == 1'b1) ? 32'd0 : shl_ln604_1_fu_3655_p2);

assign select_ln582_fu_5373_p3 = ((and_ln582_3_fu_5367_p2[0:0] == 1'b1) ? trunc_ln583_3_fu_5312_p1 : 32'd0);

assign select_ln585_fu_5404_p3 = ((and_ln585_3_fu_5398_p2[0:0] == 1'b1) ? trunc_ln586_9_fu_5352_p1 : select_ln582_fu_5373_p3);

assign select_ln588_1_fu_3582_p3 = ((tmp_64_fu_3574_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_2_fu_4216_p3 = ((tmp_71_fu_4208_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_2587_p3 = ((tmp_52_fu_2579_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_fu_5430_p3 = ((and_ln603_3_fu_5424_p2[0:0] == 1'b1) ? shl_ln604_3_fu_5356_p2 : select_ln585_fu_5404_p3);

assign select_ln703_fu_2725_p3 = ((icmp_ln1495_8_fu_2719_p2[0:0] == 1'b1) ? ret_V_10_fu_2713_p2 : ret_V_fu_2701_p2);

assign select_ln850_fu_4388_p3 = ((icmp_ln851_fu_4376_p2[0:0] == 1'b1) ? ret_V_7_fu_4354_p4 : ret_V_14_fu_4382_p2);

assign select_ln935_1_fu_3332_p3 = ((icmp_ln935_3_reg_7409[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_3_fu_3328_p1);

assign select_ln935_2_fu_4009_p3 = ((icmp_ln935_4_reg_7523[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_4_fu_4005_p1);

assign select_ln935_3_fu_4918_p3 = ((icmp_ln935_6_fu_4639_p2[0:0] == 1'b1) ? bitcast_ln744_5_fu_4914_p1 : 32'd0);

assign select_ln935_fu_2382_p3 = ((icmp_ln935_2_reg_7084[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_2_fu_2378_p1);

assign select_ln943_10_fu_6694_p3 = ((p_Result_115_fu_6686_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_3_fu_2337_p3 = ((p_Result_54_reg_7099[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_4_fu_3286_p3 = ((p_Result_63_fu_3278_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_5_fu_3963_p3 = ((p_Result_70_fu_3955_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_6_fu_4867_p3 = ((p_Result_80_fu_4859_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_7_fu_5133_p3 = ((p_Result_85_fu_5125_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_8_fu_5806_p3 = ((p_Result_95_fu_5798_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_9_fu_6246_p3 = ((p_Result_105_fu_6238_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_1905_p3 = ((p_Result_s_fu_1897_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_10_fu_6618_p3 = ((icmp_ln946_10_fu_6493_p2[0:0] == 1'b1) ? icmp_ln949_10_fu_6562_p2 : p_Result_165_fu_6582_p3);

assign select_ln946_3_fu_2262_p3 = ((icmp_ln946_3_fu_2158_p2[0:0] == 1'b1) ? icmp_ln949_3_fu_2202_p2 : p_Result_126_fu_2222_p3);

assign select_ln946_4_fu_3195_p3 = ((icmp_ln946_4_fu_3111_p2[0:0] == 1'b1) ? icmp_ln949_4_fu_3155_p2 : p_Result_132_fu_3175_p3);

assign select_ln946_5_fu_3872_p3 = ((icmp_ln946_5_fu_3788_p2[0:0] == 1'b1) ? icmp_ln949_5_fu_3832_p2 : p_Result_138_fu_3852_p3);

assign select_ln946_6_fu_4795_p3 = ((icmp_ln946_6_fu_4691_p2[0:0] == 1'b1) ? icmp_ln949_6_fu_4735_p2 : p_Result_144_fu_4755_p3);

assign select_ln946_7_fu_5062_p3 = ((icmp_ln946_7_fu_4965_p2[0:0] == 1'b1) ? icmp_ln949_7_fu_5008_p2 : p_Result_148_fu_5028_p3);

assign select_ln946_8_fu_5730_p3 = ((icmp_ln946_8_fu_5605_p2[0:0] == 1'b1) ? icmp_ln949_8_fu_5674_p2 : p_Result_155_fu_5694_p3);

assign select_ln946_9_fu_6170_p3 = ((icmp_ln946_9_fu_6045_p2[0:0] == 1'b1) ? icmp_ln949_9_fu_6114_p2 : p_Result_160_fu_6134_p3);

assign select_ln946_fu_1808_p3 = ((icmp_ln946_fu_1724_p2[0:0] == 1'b1) ? icmp_ln949_fu_1768_p2 : p_Result_122_fu_1788_p3);

assign select_ln954_2_fu_6194_p3 = ((icmp_ln954_1_fu_6142_p2[0:0] == 1'b1) ? select_ln946_9_fu_6170_p3 : and_ln949_20_fu_6148_p2);

assign select_ln954_4_fu_6642_p3 = ((icmp_ln954_2_fu_6590_p2[0:0] == 1'b1) ? select_ln946_10_fu_6618_p3 : and_ln949_21_fu_6596_p2);

assign select_ln954_fu_5754_p3 = ((icmp_ln954_fu_5702_p2[0:0] == 1'b1) ? select_ln946_8_fu_5730_p3 : and_ln949_19_fu_5708_p2);

assign select_ln958_11_fu_3880_p3 = ((icmp_ln958_5_fu_3860_p2[0:0] == 1'b1) ? select_ln946_5_fu_3872_p3 : and_ln949_15_fu_3866_p2);

assign select_ln958_13_fu_4819_p3 = ((icmp_ln958_6_fu_4763_p2[0:0] == 1'b1) ? select_ln946_6_fu_4795_p3 : and_ln949_17_fu_4769_p2);

assign select_ln958_15_fu_5085_p3 = ((icmp_ln958_7_fu_5035_p2[0:0] == 1'b1) ? select_ln946_7_fu_5062_p3 : and_ln949_18_fu_5041_p2);

assign select_ln958_7_fu_2286_p3 = ((icmp_ln958_3_fu_2230_p2[0:0] == 1'b1) ? select_ln946_3_fu_2262_p3 : and_ln949_9_fu_2236_p2);

assign select_ln958_9_fu_3203_p3 = ((icmp_ln958_4_fu_3183_p2[0:0] == 1'b1) ? select_ln946_4_fu_3195_p3 : and_ln949_13_fu_3189_p2);

assign select_ln958_fu_1816_p3 = ((icmp_ln958_fu_1796_p2[0:0] == 1'b1) ? select_ln946_fu_1808_p3 : and_ln949_6_fu_1802_p2);

assign select_ln985_fu_5497_p3 = ((icmp_ln200_fu_5488_p2[0:0] == 1'b1) ? add_ln985_reg_7254 : trunc_ln985_fu_5493_p1);

assign select_ln989_fu_3422_p3 = ((and_ln200_1_fu_3416_p2[0:0] == 1'b1) ? conv_reg_7457 : select_ln935_1_reg_7450);

assign sext_ln1115_1_fu_2780_p1 = $signed(ret_V_24_fu_2775_p2);

assign sext_ln1118_2_fu_1604_p1 = $signed(tmp_84_fu_1596_p3);

assign sext_ln1148_2_fu_2899_p1 = $signed(select_ln1148_fu_2893_p3);

assign sext_ln581_1_fu_3652_p1 = sh_amt_1_reg_7476;

assign sext_ln581_2_fu_4286_p1 = sh_amt_2_reg_7581;

assign sext_ln581_3_fu_5302_p1 = sh_amt_3_fu_5294_p3;

assign sext_ln581_fu_2537_p1 = sh_amt_fu_2529_p3;

assign sext_ln703_10_fu_6845_p1 = z_top_min_V_15_reg_1240;

assign sext_ln703_11_fu_2753_p1 = rhs_reg_921;

assign sext_ln703_12_fu_2771_p1 = z_top_min_V_11_reg_1018;

assign sext_ln703_13_fu_4530_p1 = $signed(new_z_i_V_q0);

assign sext_ln703_3_fu_2697_p1 = $signed(a_corner_1_q0);

assign sext_ln703_4_fu_2706_p1 = original_d_V_reg_6948;

assign sext_ln703_5_fu_2709_p1 = $signed(b_corner_1_q0);

assign sext_ln703_6_fu_5509_p0 = new_z_i_atTop_V_q0;

assign sext_ln703_6_fu_5509_p1 = sext_ln703_6_fu_5509_p0;

assign sext_ln703_7_fu_1574_p0 = c_corner_1_q0;

assign sext_ln703_7_fu_1574_p1 = sext_ln703_7_fu_1574_p0;

assign sext_ln703_8_fu_5949_p1 = z_top_min_V_13_reg_1197;

assign sext_ln703_9_fu_6397_p1 = z_top_min_V_14_reg_1218;

assign sext_ln703_fu_1570_p1 = $signed(c_corner_0_q0);

assign sh_amt_1_fu_3519_p3 = ((icmp_ln581_1_fu_3501_p2[0:0] == 1'b1) ? add_ln581_1_fu_3507_p2 : sub_ln581_1_fu_3513_p2);

assign sh_amt_2_fu_4156_p3 = ((icmp_ln581_2_fu_4138_p2[0:0] == 1'b1) ? add_ln581_2_fu_4144_p2 : sub_ln581_2_fu_4150_p2);

assign sh_amt_3_fu_5294_p3 = ((icmp_ln581_3_fu_5276_p2[0:0] == 1'b1) ? add_ln581_3_fu_5282_p2 : sub_ln581_3_fu_5288_p2);

assign sh_amt_fu_2529_p3 = ((icmp_ln581_fu_2511_p2[0:0] == 1'b1) ? add_ln581_fu_2517_p2 : sub_ln581_fu_2523_p2);

assign shadow_bottomL_jL_address1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jL_address1;

assign shadow_bottomL_jL_d0 = grp_getParallelograms_fu_1285_shadow_bottomL_jL_d0;

assign shadow_bottomL_jR_address1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomL_jR_address1;

assign shadow_bottomL_jR_d0 = grp_getParallelograms_fu_1285_shadow_bottomL_jR_d0;

assign shadow_bottomR_jL_address1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jL_address1;

assign shadow_bottomR_jL_d0 = grp_getParallelograms_fu_1285_shadow_bottomR_jL_d0;

assign shadow_bottomR_jR_address1 = grp_get_acceptanceCorners_fu_1341_shadow_bottomR_jR_address1;

assign shadow_bottomR_jR_d0 = grp_getParallelograms_fu_1285_shadow_bottomR_jR_d0;

assign shl_ln1004_1_fu_4412_p3 = {{ret_V_15_fu_4396_p3}, {4'd0}};

assign shl_ln5_fu_4404_p3 = {{i_12_reg_1129}, {13'd0}};

assign shl_ln604_1_fu_3655_p2 = trunc_ln583_1_reg_7486 << sext_ln581_1_fu_3652_p1;

assign shl_ln604_2_fu_4289_p2 = trunc_ln583_2_reg_7591 << sext_ln581_2_fu_4286_p1;

assign shl_ln604_3_fu_5356_p2 = trunc_ln583_3_fu_5312_p1 << sext_ln581_3_fu_5302_p1;

assign shl_ln604_fu_2567_p2 = trunc_ln602_fu_2547_p1 << sext_ln581_fu_2537_p1;

assign shl_ln6_fu_6354_p3 = {{select_ln985_reg_7782}, {4'd0}};

assign shl_ln731_fu_2940_p2 = grp_get_index_from_z_fu_1317_ap_return << 32'd20;

assign shl_ln7_fu_6802_p3 = {{select_ln985_reg_7782}, {4'd0}};

assign shl_ln949_10_fu_6529_p2 = 33'd1 << zext_ln949_2_fu_6525_p1;

assign shl_ln949_3_fu_2184_p2 = 32'd1 << lsb_index_4_fu_2142_p2;

assign shl_ln949_4_fu_3137_p2 = 32'd1 << lsb_index_5_fu_3095_p2;

assign shl_ln949_5_fu_3814_p2 = 32'd1 << lsb_index_6_fu_3772_p2;

assign shl_ln949_6_fu_4717_p2 = 32'd1 << lsb_index_7_fu_4675_p2;

assign shl_ln949_7_fu_4991_p2 = 32'd1 << lsb_index_8_fu_4949_p2;

assign shl_ln949_8_fu_5641_p2 = 33'd1 << zext_ln949_fu_5637_p1;

assign shl_ln949_9_fu_6081_p2 = 33'd1 << zext_ln949_1_fu_6077_p1;

assign shl_ln949_fu_1750_p2 = 32'd1 << lsb_index_fu_1708_p2;

assign shl_ln955_1_fu_6164_p2 = zext_ln937_1_fu_5990_p1 << zext_ln955_1_fu_6160_p1;

assign shl_ln955_2_fu_6612_p2 = zext_ln937_2_fu_6438_p1 << zext_ln955_2_fu_6608_p1;

assign shl_ln955_fu_5724_p2 = zext_ln937_fu_5550_p1 << zext_ln955_fu_5720_p1;

assign shl_ln959_3_fu_2256_p2 = zext_ln959_11_fu_2242_p1 << zext_ln959_5_fu_2252_p1;

assign shl_ln959_4_fu_3227_p2 = zext_ln959_12_fu_3215_p1 << zext_ln959_6_fu_3223_p1;

assign shl_ln959_5_fu_3904_p2 = zext_ln959_13_fu_3892_p1 << zext_ln959_7_fu_3900_p1;

assign shl_ln959_6_fu_4789_p2 = zext_ln959_14_fu_4775_p1 << zext_ln959_8_fu_4785_p1;

assign shl_ln959_7_fu_5057_p2 = m_75_reg_7694 << zext_ln959_9_fu_5053_p1;

assign shl_ln959_fu_1846_p2 = zext_ln959_10_fu_1834_p1 << zext_ln959_fu_1842_p1;

assign shl_ln_fu_1588_p3 = {{trunc_ln1118_fu_1584_p1}, {20'd0}};

assign squareAcceptance_d0 = grp_get_acceptanceCorners_fu_1341_squareAcceptance_d0;

assign sub_i_i487_fu_4586_p2 = ($signed(32'd0) - $signed(z_top_min_V_11_reg_1018));

assign sub_ln1148_2_fu_2903_p2 = ($signed(29'd0) - $signed(sext_ln1148_2_fu_2899_p1));

assign sub_ln1148_fu_2878_p2 = (100'd0 - mul_ln1148_reg_7306);

assign sub_ln581_1_fu_3513_p2 = (12'd20 - F2_1_fu_3495_p2);

assign sub_ln581_2_fu_4150_p2 = (12'd20 - F2_2_fu_4132_p2);

assign sub_ln581_3_fu_5288_p2 = (12'd20 - F2_3_fu_5270_p2);

assign sub_ln581_fu_2523_p2 = (12'd20 - F2_fu_2505_p2);

assign sub_ln944_10_fu_6471_p2 = (32'd33 - l_11_fu_6467_p1);

assign sub_ln944_3_fu_2136_p2 = (32'd32 - l_4_fu_2128_p3);

assign sub_ln944_4_fu_3089_p2 = (32'd32 - l_5_fu_3081_p3);

assign sub_ln944_5_fu_3766_p2 = (32'd32 - l_6_fu_3758_p3);

assign sub_ln944_6_fu_4669_p2 = (32'd32 - l_7_fu_4661_p3);

assign sub_ln944_7_fu_4943_p2 = (32'd32 - l_8_fu_4935_p3);

assign sub_ln944_8_fu_5583_p2 = (32'd33 - l_9_fu_5579_p1);

assign sub_ln944_9_fu_6023_p2 = (32'd33 - l_10_fu_6019_p1);

assign sub_ln944_fu_1702_p2 = (32'd32 - l_fu_1694_p3);

assign sub_ln947_10_fu_6503_p2 = ($signed(6'd58) - $signed(trunc_ln947_10_fu_6499_p1));

assign sub_ln947_3_fu_2168_p2 = ($signed(6'd57) - $signed(trunc_ln947_3_fu_2164_p1));

assign sub_ln947_4_fu_3121_p2 = ($signed(6'd57) - $signed(trunc_ln947_4_fu_3117_p1));

assign sub_ln947_5_fu_3798_p2 = ($signed(6'd57) - $signed(trunc_ln947_5_fu_3794_p1));

assign sub_ln947_6_fu_4701_p2 = ($signed(6'd57) - $signed(trunc_ln947_6_fu_4697_p1));

assign sub_ln947_7_fu_4975_p2 = ($signed(6'd57) - $signed(trunc_ln947_7_fu_4971_p1));

assign sub_ln947_8_fu_5615_p2 = ($signed(6'd58) - $signed(trunc_ln947_8_fu_5611_p1));

assign sub_ln947_9_fu_6055_p2 = ($signed(6'd58) - $signed(trunc_ln947_9_fu_6051_p1));

assign sub_ln947_fu_1734_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_1730_p1));

assign sub_ln955_1_fu_6154_p2 = (32'd25 - sub_ln944_9_fu_6023_p2);

assign sub_ln955_2_fu_6602_p2 = (32'd25 - sub_ln944_10_fu_6471_p2);

assign sub_ln955_fu_5714_p2 = (32'd25 - sub_ln944_8_fu_5583_p2);

assign sub_ln959_3_fu_2246_p2 = (32'd25 - sub_ln944_3_fu_2136_p2);

assign sub_ln959_4_fu_3218_p2 = (32'd25 - sub_ln944_4_reg_7424);

assign sub_ln959_5_fu_3895_p2 = (32'd25 - sub_ln944_5_reg_7538);

assign sub_ln959_6_fu_4779_p2 = (32'd25 - sub_ln944_6_fu_4669_p2);

assign sub_ln959_7_fu_5047_p2 = (32'd25 - sub_ln944_7_fu_4943_p2);

assign sub_ln959_fu_1837_p2 = (32'd25 - sub_ln944_reg_6982);

assign sub_ln964_10_fu_6706_p2 = (8'd13 - trunc_ln943_10_fu_6702_p1);

assign sub_ln964_3_fu_2344_p2 = (8'd12 - trunc_ln943_3_reg_7104);

assign sub_ln964_4_fu_3294_p2 = (8'd12 - trunc_ln943_4_reg_7440);

assign sub_ln964_5_fu_3971_p2 = (8'd12 - trunc_ln943_5_reg_7554);

assign sub_ln964_6_fu_4879_p2 = (8'd12 - trunc_ln943_6_fu_4875_p1);

assign sub_ln964_7_fu_5145_p2 = (8'd12 - trunc_ln943_7_fu_5141_p1);

assign sub_ln964_8_fu_5818_p2 = (8'd13 - trunc_ln943_8_fu_5814_p1);

assign sub_ln964_9_fu_6258_p2 = (8'd13 - trunc_ln943_9_fu_6254_p1);

assign sub_ln964_fu_1913_p2 = (8'd12 - trunc_ln943_reg_6998);

assign tmp_103_fu_6483_p4 = {{lsb_index_11_fu_6477_p2[31:1]}};

assign tmp_104_fu_6568_p3 = lsb_index_11_fu_6477_p2[32'd31];

assign tmp_107_fu_6863_p3 = r_V_9_fu_6858_p2[32'd63];

assign tmp_10_fu_5830_p3 = {{p_Result_153_reg_7800}, {add_ln964_8_fu_5824_p2}};

assign tmp_11_fu_6270_p3 = {{p_Result_158_reg_7847}, {add_ln964_9_fu_6264_p2}};

assign tmp_12_fu_6718_p3 = {{p_Result_163_reg_7894}, {add_ln964_10_fu_6712_p2}};

assign tmp_14_fu_2395_p4 = {{bitcast_ln224_fu_2391_p1[30:23]}};

assign tmp_16_fu_3343_p4 = {{bitcast_ln200_fu_3340_p1[30:23]}};

assign tmp_17_fu_3360_p4 = {{bitcast_ln200_1_fu_3357_p1[30:23]}};

assign tmp_19_fu_4022_p4 = {{bitcast_ln224_1_fu_4018_p1[30:23]}};


always @ (p_Result_154_fu_5563_p3) begin
    if (p_Result_154_fu_5563_p3[0] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd0;
    end else if (p_Result_154_fu_5563_p3[1] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd1;
    end else if (p_Result_154_fu_5563_p3[2] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd2;
    end else if (p_Result_154_fu_5563_p3[3] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd3;
    end else if (p_Result_154_fu_5563_p3[4] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd4;
    end else if (p_Result_154_fu_5563_p3[5] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd5;
    end else if (p_Result_154_fu_5563_p3[6] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd6;
    end else if (p_Result_154_fu_5563_p3[7] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd7;
    end else if (p_Result_154_fu_5563_p3[8] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd8;
    end else if (p_Result_154_fu_5563_p3[9] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd9;
    end else if (p_Result_154_fu_5563_p3[10] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd10;
    end else if (p_Result_154_fu_5563_p3[11] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd11;
    end else if (p_Result_154_fu_5563_p3[12] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd12;
    end else if (p_Result_154_fu_5563_p3[13] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd13;
    end else if (p_Result_154_fu_5563_p3[14] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd14;
    end else if (p_Result_154_fu_5563_p3[15] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd15;
    end else if (p_Result_154_fu_5563_p3[16] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd16;
    end else if (p_Result_154_fu_5563_p3[17] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd17;
    end else if (p_Result_154_fu_5563_p3[18] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd18;
    end else if (p_Result_154_fu_5563_p3[19] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd19;
    end else if (p_Result_154_fu_5563_p3[20] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd20;
    end else if (p_Result_154_fu_5563_p3[21] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd21;
    end else if (p_Result_154_fu_5563_p3[22] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd22;
    end else if (p_Result_154_fu_5563_p3[23] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd23;
    end else if (p_Result_154_fu_5563_p3[24] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd24;
    end else if (p_Result_154_fu_5563_p3[25] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd25;
    end else if (p_Result_154_fu_5563_p3[26] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd26;
    end else if (p_Result_154_fu_5563_p3[27] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd27;
    end else if (p_Result_154_fu_5563_p3[28] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd28;
    end else if (p_Result_154_fu_5563_p3[29] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd29;
    end else if (p_Result_154_fu_5563_p3[30] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd30;
    end else if (p_Result_154_fu_5563_p3[31] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd31;
    end else if (p_Result_154_fu_5563_p3[32] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd32;
    end else if (p_Result_154_fu_5563_p3[33] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd33;
    end else if (p_Result_154_fu_5563_p3[34] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd34;
    end else if (p_Result_154_fu_5563_p3[35] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd35;
    end else if (p_Result_154_fu_5563_p3[36] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd36;
    end else if (p_Result_154_fu_5563_p3[37] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd37;
    end else if (p_Result_154_fu_5563_p3[38] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd38;
    end else if (p_Result_154_fu_5563_p3[39] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd39;
    end else if (p_Result_154_fu_5563_p3[40] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd40;
    end else if (p_Result_154_fu_5563_p3[41] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd41;
    end else if (p_Result_154_fu_5563_p3[42] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd42;
    end else if (p_Result_154_fu_5563_p3[43] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd43;
    end else if (p_Result_154_fu_5563_p3[44] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd44;
    end else if (p_Result_154_fu_5563_p3[45] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd45;
    end else if (p_Result_154_fu_5563_p3[46] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd46;
    end else if (p_Result_154_fu_5563_p3[47] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd47;
    end else if (p_Result_154_fu_5563_p3[48] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd48;
    end else if (p_Result_154_fu_5563_p3[49] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd49;
    end else if (p_Result_154_fu_5563_p3[50] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd50;
    end else if (p_Result_154_fu_5563_p3[51] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd51;
    end else if (p_Result_154_fu_5563_p3[52] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd52;
    end else if (p_Result_154_fu_5563_p3[53] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd53;
    end else if (p_Result_154_fu_5563_p3[54] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd54;
    end else if (p_Result_154_fu_5563_p3[55] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd55;
    end else if (p_Result_154_fu_5563_p3[56] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd56;
    end else if (p_Result_154_fu_5563_p3[57] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd57;
    end else if (p_Result_154_fu_5563_p3[58] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd58;
    end else if (p_Result_154_fu_5563_p3[59] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd59;
    end else if (p_Result_154_fu_5563_p3[60] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd60;
    end else if (p_Result_154_fu_5563_p3[61] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd61;
    end else if (p_Result_154_fu_5563_p3[62] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd62;
    end else if (p_Result_154_fu_5563_p3[63] == 1'b1) begin
        tmp_1_fu_5571_p3 = 64'd63;
    end else begin
        tmp_1_fu_5571_p3 = 64'd64;
    end
end

assign tmp_22_fu_5878_p4 = {{bitcast_ln1050_fu_5874_p1[62:52]}};

assign tmp_25_fu_6318_p4 = {{bitcast_ln1055_fu_6314_p1[62:52]}};

assign tmp_28_fu_6766_p4 = {{bitcast_ln1060_fu_6762_p1[62:52]}};

assign tmp_2_fu_1924_p3 = {{p_Result_120_reg_6972}, {add_ln964_fu_1918_p2}};


always @ (p_Result_159_fu_6003_p3) begin
    if (p_Result_159_fu_6003_p3[0] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd0;
    end else if (p_Result_159_fu_6003_p3[1] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd1;
    end else if (p_Result_159_fu_6003_p3[2] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd2;
    end else if (p_Result_159_fu_6003_p3[3] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd3;
    end else if (p_Result_159_fu_6003_p3[4] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd4;
    end else if (p_Result_159_fu_6003_p3[5] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd5;
    end else if (p_Result_159_fu_6003_p3[6] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd6;
    end else if (p_Result_159_fu_6003_p3[7] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd7;
    end else if (p_Result_159_fu_6003_p3[8] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd8;
    end else if (p_Result_159_fu_6003_p3[9] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd9;
    end else if (p_Result_159_fu_6003_p3[10] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd10;
    end else if (p_Result_159_fu_6003_p3[11] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd11;
    end else if (p_Result_159_fu_6003_p3[12] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd12;
    end else if (p_Result_159_fu_6003_p3[13] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd13;
    end else if (p_Result_159_fu_6003_p3[14] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd14;
    end else if (p_Result_159_fu_6003_p3[15] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd15;
    end else if (p_Result_159_fu_6003_p3[16] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd16;
    end else if (p_Result_159_fu_6003_p3[17] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd17;
    end else if (p_Result_159_fu_6003_p3[18] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd18;
    end else if (p_Result_159_fu_6003_p3[19] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd19;
    end else if (p_Result_159_fu_6003_p3[20] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd20;
    end else if (p_Result_159_fu_6003_p3[21] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd21;
    end else if (p_Result_159_fu_6003_p3[22] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd22;
    end else if (p_Result_159_fu_6003_p3[23] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd23;
    end else if (p_Result_159_fu_6003_p3[24] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd24;
    end else if (p_Result_159_fu_6003_p3[25] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd25;
    end else if (p_Result_159_fu_6003_p3[26] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd26;
    end else if (p_Result_159_fu_6003_p3[27] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd27;
    end else if (p_Result_159_fu_6003_p3[28] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd28;
    end else if (p_Result_159_fu_6003_p3[29] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd29;
    end else if (p_Result_159_fu_6003_p3[30] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd30;
    end else if (p_Result_159_fu_6003_p3[31] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd31;
    end else if (p_Result_159_fu_6003_p3[32] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd32;
    end else if (p_Result_159_fu_6003_p3[33] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd33;
    end else if (p_Result_159_fu_6003_p3[34] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd34;
    end else if (p_Result_159_fu_6003_p3[35] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd35;
    end else if (p_Result_159_fu_6003_p3[36] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd36;
    end else if (p_Result_159_fu_6003_p3[37] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd37;
    end else if (p_Result_159_fu_6003_p3[38] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd38;
    end else if (p_Result_159_fu_6003_p3[39] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd39;
    end else if (p_Result_159_fu_6003_p3[40] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd40;
    end else if (p_Result_159_fu_6003_p3[41] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd41;
    end else if (p_Result_159_fu_6003_p3[42] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd42;
    end else if (p_Result_159_fu_6003_p3[43] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd43;
    end else if (p_Result_159_fu_6003_p3[44] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd44;
    end else if (p_Result_159_fu_6003_p3[45] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd45;
    end else if (p_Result_159_fu_6003_p3[46] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd46;
    end else if (p_Result_159_fu_6003_p3[47] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd47;
    end else if (p_Result_159_fu_6003_p3[48] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd48;
    end else if (p_Result_159_fu_6003_p3[49] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd49;
    end else if (p_Result_159_fu_6003_p3[50] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd50;
    end else if (p_Result_159_fu_6003_p3[51] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd51;
    end else if (p_Result_159_fu_6003_p3[52] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd52;
    end else if (p_Result_159_fu_6003_p3[53] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd53;
    end else if (p_Result_159_fu_6003_p3[54] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd54;
    end else if (p_Result_159_fu_6003_p3[55] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd55;
    end else if (p_Result_159_fu_6003_p3[56] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd56;
    end else if (p_Result_159_fu_6003_p3[57] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd57;
    end else if (p_Result_159_fu_6003_p3[58] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd58;
    end else if (p_Result_159_fu_6003_p3[59] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd59;
    end else if (p_Result_159_fu_6003_p3[60] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd60;
    end else if (p_Result_159_fu_6003_p3[61] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd61;
    end else if (p_Result_159_fu_6003_p3[62] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd62;
    end else if (p_Result_159_fu_6003_p3[63] == 1'b1) begin
        tmp_3_fu_6011_p3 = 64'd63;
    end else begin
        tmp_3_fu_6011_p3 = 64'd64;
    end
end

assign tmp_41_fu_1714_p4 = {{lsb_index_fu_1708_p2[31:1]}};

assign tmp_42_fu_1774_p3 = lsb_index_fu_1708_p2[32'd31];

assign tmp_46_fu_2148_p4 = {{lsb_index_4_fu_2142_p2[31:1]}};

assign tmp_47_fu_2208_p3 = lsb_index_4_fu_2142_p2[32'd31];

assign tmp_4_fu_2355_p3 = {{p_Result_124_reg_7089}, {add_ln964_3_fu_2349_p2}};

assign tmp_51_fu_2551_p4 = {{sh_amt_fu_2529_p3[11:5]}};

assign tmp_52_fu_2579_p3 = ireg_fu_2435_p3[32'd63];

assign tmp_56_fu_2883_p4 = {{sub_ln1148_fu_2878_p2[99:78]}};

assign tmp_59_fu_3101_p4 = {{lsb_index_5_fu_3095_p2[31:1]}};


always @ (p_Result_164_fu_6451_p3) begin
    if (p_Result_164_fu_6451_p3[0] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd0;
    end else if (p_Result_164_fu_6451_p3[1] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd1;
    end else if (p_Result_164_fu_6451_p3[2] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd2;
    end else if (p_Result_164_fu_6451_p3[3] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd3;
    end else if (p_Result_164_fu_6451_p3[4] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd4;
    end else if (p_Result_164_fu_6451_p3[5] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd5;
    end else if (p_Result_164_fu_6451_p3[6] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd6;
    end else if (p_Result_164_fu_6451_p3[7] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd7;
    end else if (p_Result_164_fu_6451_p3[8] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd8;
    end else if (p_Result_164_fu_6451_p3[9] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd9;
    end else if (p_Result_164_fu_6451_p3[10] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd10;
    end else if (p_Result_164_fu_6451_p3[11] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd11;
    end else if (p_Result_164_fu_6451_p3[12] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd12;
    end else if (p_Result_164_fu_6451_p3[13] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd13;
    end else if (p_Result_164_fu_6451_p3[14] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd14;
    end else if (p_Result_164_fu_6451_p3[15] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd15;
    end else if (p_Result_164_fu_6451_p3[16] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd16;
    end else if (p_Result_164_fu_6451_p3[17] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd17;
    end else if (p_Result_164_fu_6451_p3[18] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd18;
    end else if (p_Result_164_fu_6451_p3[19] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd19;
    end else if (p_Result_164_fu_6451_p3[20] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd20;
    end else if (p_Result_164_fu_6451_p3[21] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd21;
    end else if (p_Result_164_fu_6451_p3[22] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd22;
    end else if (p_Result_164_fu_6451_p3[23] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd23;
    end else if (p_Result_164_fu_6451_p3[24] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd24;
    end else if (p_Result_164_fu_6451_p3[25] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd25;
    end else if (p_Result_164_fu_6451_p3[26] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd26;
    end else if (p_Result_164_fu_6451_p3[27] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd27;
    end else if (p_Result_164_fu_6451_p3[28] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd28;
    end else if (p_Result_164_fu_6451_p3[29] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd29;
    end else if (p_Result_164_fu_6451_p3[30] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd30;
    end else if (p_Result_164_fu_6451_p3[31] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd31;
    end else if (p_Result_164_fu_6451_p3[32] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd32;
    end else if (p_Result_164_fu_6451_p3[33] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd33;
    end else if (p_Result_164_fu_6451_p3[34] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd34;
    end else if (p_Result_164_fu_6451_p3[35] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd35;
    end else if (p_Result_164_fu_6451_p3[36] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd36;
    end else if (p_Result_164_fu_6451_p3[37] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd37;
    end else if (p_Result_164_fu_6451_p3[38] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd38;
    end else if (p_Result_164_fu_6451_p3[39] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd39;
    end else if (p_Result_164_fu_6451_p3[40] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd40;
    end else if (p_Result_164_fu_6451_p3[41] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd41;
    end else if (p_Result_164_fu_6451_p3[42] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd42;
    end else if (p_Result_164_fu_6451_p3[43] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd43;
    end else if (p_Result_164_fu_6451_p3[44] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd44;
    end else if (p_Result_164_fu_6451_p3[45] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd45;
    end else if (p_Result_164_fu_6451_p3[46] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd46;
    end else if (p_Result_164_fu_6451_p3[47] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd47;
    end else if (p_Result_164_fu_6451_p3[48] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd48;
    end else if (p_Result_164_fu_6451_p3[49] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd49;
    end else if (p_Result_164_fu_6451_p3[50] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd50;
    end else if (p_Result_164_fu_6451_p3[51] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd51;
    end else if (p_Result_164_fu_6451_p3[52] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd52;
    end else if (p_Result_164_fu_6451_p3[53] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd53;
    end else if (p_Result_164_fu_6451_p3[54] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd54;
    end else if (p_Result_164_fu_6451_p3[55] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd55;
    end else if (p_Result_164_fu_6451_p3[56] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd56;
    end else if (p_Result_164_fu_6451_p3[57] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd57;
    end else if (p_Result_164_fu_6451_p3[58] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd58;
    end else if (p_Result_164_fu_6451_p3[59] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd59;
    end else if (p_Result_164_fu_6451_p3[60] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd60;
    end else if (p_Result_164_fu_6451_p3[61] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd61;
    end else if (p_Result_164_fu_6451_p3[62] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd62;
    end else if (p_Result_164_fu_6451_p3[63] == 1'b1) begin
        tmp_5_fu_6459_p3 = 64'd63;
    end else begin
        tmp_5_fu_6459_p3 = 64'd64;
    end
end

assign tmp_60_fu_3161_p3 = lsb_index_5_fu_3095_p2[32'd31];

assign tmp_63_fu_3537_p4 = {{sh_amt_1_fu_3519_p3[11:5]}};

assign tmp_64_fu_3574_p3 = bitcast_ln702_3_fu_3571_p1[32'd31];

assign tmp_66_fu_3778_p4 = {{lsb_index_6_fu_3772_p2[31:1]}};

assign tmp_67_fu_3838_p3 = lsb_index_6_fu_3772_p2[32'd31];

assign tmp_6_fu_4891_p3 = {{p_Result_142_reg_7719}, {add_ln964_6_fu_4885_p2}};

assign tmp_70_fu_4174_p4 = {{sh_amt_2_fu_4156_p3[11:5]}};

assign tmp_71_fu_4208_p3 = ireg_2_fu_4062_p3[32'd63];

assign tmp_77_fu_4681_p4 = {{lsb_index_7_fu_4675_p2[31:1]}};

assign tmp_78_fu_4741_p3 = lsb_index_7_fu_4675_p2[32'd31];

assign tmp_7_fu_3305_p3 = {{p_Result_130_reg_7414}, {add_ln964_4_fu_3299_p2}};

assign tmp_80_fu_4955_p4 = {{lsb_index_8_fu_4949_p2[31:1]}};

assign tmp_81_fu_5014_p3 = lsb_index_8_fu_4949_p2[32'd31];

assign tmp_82_fu_1538_p3 = {{reg_1437}, {6'd0}};

assign tmp_83_fu_1546_p3 = {{reg_1437}, {4'd0}};

assign tmp_84_fu_1596_p3 = {{ret_V_23_fu_1578_p2}, {18'd0}};

assign tmp_85_fu_1499_p3 = {{select_ln37_1_fu_1491_p3}, {4'd0}};

assign tmp_86_fu_2657_p3 = {{select_ln37_3_fu_2649_p3}, {4'd0}};

assign tmp_87_fu_2842_p3 = {{ret_V_11_fu_2836_p2}, {20'd0}};

assign tmp_88_fu_4440_p3 = {{lshr_ln_fu_4426_p4}, {trunc_ln1004_fu_4436_p1}};

assign tmp_89_fu_5932_p3 = {{xor_ln1052_fu_5923_p2}, {trunc_ln1052_fu_5929_p1}};

assign tmp_8_fu_5157_p3 = {{p_Result_146_reg_7682}, {add_ln964_7_fu_5151_p2}};

assign tmp_90_fu_6380_p3 = {{lshr_ln4_fu_6367_p4}, {trunc_ln1057_fu_6377_p1}};

assign tmp_91_fu_5322_p4 = {{sh_amt_3_fu_5294_p3[11:5]}};

assign tmp_92_fu_6828_p3 = {{lshr_ln5_fu_6815_p4}, {trunc_ln1062_fu_6825_p1}};

assign tmp_93_fu_5595_p4 = {{lsb_index_9_fu_5589_p2[31:1]}};

assign tmp_94_fu_5680_p3 = lsb_index_9_fu_5589_p2[32'd31];

assign tmp_98_fu_6035_p4 = {{lsb_index_10_fu_6029_p2[31:1]}};

assign tmp_99_fu_6120_p3 = lsb_index_10_fu_6029_p2[32'd31];

assign tmp_9_fu_3982_p3 = {{p_Result_136_reg_7528}, {add_ln964_5_fu_3976_p2}};

assign tmp_V_10_fu_2104_p2 = (32'd0 - min_z_V_2_reg_897);

assign tmp_V_13_fu_3057_p2 = (32'd0 - new_z_i_index_V_q1);

assign tmp_V_15_fu_3734_p2 = (32'd0 - new_z_i_index_V_q0);

assign tmp_V_17_fu_4633_p2 = (32'd0 - new_z_i_atTop_V_q0);

assign tmp_V_20_fu_5536_p2 = (32'd0 - trunc_ln1193_fu_5518_p1);

assign tmp_V_22_fu_5976_p2 = (32'd0 - trunc_ln1193_1_fu_5958_p1);

assign tmp_V_24_fu_6424_p2 = (32'd0 - trunc_ln1193_2_fu_6406_p1);

assign tmp_V_26_fu_4592_p3 = ((p_Result_146_fu_4578_p3[0:0] == 1'b1) ? sub_i_i487_fu_4586_p2 : z_top_min_V_11_reg_1018);

assign tmp_V_27_fu_5542_p3 = ((p_Result_153_fu_5528_p3[0:0] == 1'b1) ? tmp_V_20_fu_5536_p2 : trunc_ln1193_fu_5518_p1);

assign tmp_V_28_fu_5982_p3 = ((p_Result_158_fu_5968_p3[0:0] == 1'b1) ? tmp_V_22_fu_5976_p2 : trunc_ln1193_1_fu_5958_p1);

assign tmp_V_29_fu_6430_p3 = ((p_Result_163_fu_6416_p3[0:0] == 1'b1) ? tmp_V_24_fu_6424_p2 : trunc_ln1193_2_fu_6406_p1);

assign tmp_V_fu_1670_p1 = c_corner_1_q0;

assign tmp_V_fu_1670_p2 = ($signed(32'd0) - $signed(tmp_V_fu_1670_p1));

assign tobool_i_i483_fu_4572_p2 = ((z_top_min_V_11_reg_1018 != 32'd0) ? 1'b1 : 1'b0);

assign triangleAcceptance_d0 = grp_get_acceptanceCorners_fu_1341_triangleAcceptance_d0;

assign trunc_ln1004_fu_4436_p1 = ret_V_15_fu_4396_p3[8:0];

assign trunc_ln1015_cast_fu_4470_p1 = ap_phi_mux_i_13_phi_fu_1145_p4;

assign trunc_ln1033_fu_4621_p1 = i_15_reg_1152[1:0];

assign trunc_ln1050_fu_5888_p1 = bitcast_ln1050_fu_5874_p1[51:0];

assign trunc_ln1052_fu_5929_p1 = select_ln985_reg_7782[8:0];

assign trunc_ln1055_fu_6328_p1 = bitcast_ln1055_fu_6314_p1[51:0];

assign trunc_ln1057_fu_6377_p1 = select_ln985_reg_7782[8:0];

assign trunc_ln1060_fu_6776_p1 = bitcast_ln1060_fu_6762_p1[51:0];

assign trunc_ln1062_fu_6825_p1 = select_ln985_reg_7782[8:0];

assign trunc_ln1118_fu_1584_p1 = ret_V_23_fu_1578_p2[31:0];

assign trunc_ln1193_1_fu_5958_p1 = ret_V_27_fu_5953_p2[31:0];

assign trunc_ln1193_2_fu_6406_p1 = ret_V_28_fu_6401_p2[31:0];

assign trunc_ln1193_fu_5518_p1 = ret_V_26_fu_5513_p2[31:0];

assign trunc_ln200_1_fu_3370_p1 = bitcast_ln200_1_fu_3357_p1[22:0];

assign trunc_ln200_fu_3353_p1 = bitcast_ln200_fu_3340_p1[22:0];

assign trunc_ln224_1_fu_4032_p1 = bitcast_ln224_1_fu_4018_p1[22:0];

assign trunc_ln224_fu_2405_p1 = bitcast_ln224_fu_2391_p1[22:0];

assign trunc_ln2_fu_5914_p4 = {{select_ln985_reg_7782[11:9]}};

assign trunc_ln555_1_fu_3433_p1 = ireg_1_fu_3429_p1[62:0];

assign trunc_ln555_2_fu_4070_p1 = ireg_2_fu_4062_p3[62:0];

assign trunc_ln555_3_fu_5211_p1 = ireg_3_fu_5207_p1[62:0];

assign trunc_ln555_fu_2443_p1 = ireg_fu_2435_p3[62:0];

assign trunc_ln565_1_fu_3459_p1 = ireg_1_fu_3429_p1[51:0];

assign trunc_ln565_2_fu_4096_p1 = ireg_2_fu_4062_p3[51:0];

assign trunc_ln565_3_fu_5233_p1 = ireg_3_fu_5207_p1[51:0];

assign trunc_ln565_fu_2469_p1 = ireg_fu_2435_p3[51:0];

assign trunc_ln583_1_fu_3533_p1 = man_V_9_fu_3481_p3[31:0];

assign trunc_ln583_2_fu_4170_p1 = man_V_12_fu_4118_p3[31:0];

assign trunc_ln583_3_fu_5312_p1 = man_V_15_fu_5263_p3[31:0];

assign trunc_ln583_fu_2613_p1 = man_V_6_fu_2491_p3[31:0];

assign trunc_ln586_3_fu_2609_p1 = ashr_ln586_fu_2603_p2[31:0];

assign trunc_ln586_4_fu_3553_p1 = sh_amt_1_fu_3519_p3[5:0];

assign trunc_ln586_5_fu_3567_p1 = ashr_ln586_1_fu_3561_p2[31:0];

assign trunc_ln586_6_fu_4190_p1 = sh_amt_2_fu_4156_p3[5:0];

assign trunc_ln586_7_fu_4204_p1 = ashr_ln586_2_fu_4198_p2[31:0];

assign trunc_ln586_8_fu_5338_p1 = sh_amt_3_fu_5294_p3[5:0];

assign trunc_ln586_9_fu_5352_p1 = ashr_ln586_3_fu_5346_p2[31:0];

assign trunc_ln586_fu_2595_p1 = sh_amt_fu_2529_p3[5:0];

assign trunc_ln602_fu_2547_p1 = man_V_6_fu_2491_p3[31:0];

assign trunc_ln731_1_fu_4486_p1 = get_radiiradii_q0[4:0];

assign trunc_ln731_fu_2813_p1 = get_radiiradii_q0[4:0];

assign trunc_ln851_fu_4372_p1 = new_z_i_index_V_q1[19:0];

assign trunc_ln943_10_fu_6702_p1 = tmp_5_fu_6459_p3[7:0];

assign trunc_ln943_3_fu_2330_p1 = l_4_fu_2128_p3[7:0];

assign trunc_ln943_4_fu_3211_p1 = l_5_fu_3081_p3[7:0];

assign trunc_ln943_5_fu_3888_p1 = l_6_fu_3758_p3[7:0];

assign trunc_ln943_6_fu_4875_p1 = l_7_fu_4661_p3[7:0];

assign trunc_ln943_7_fu_5141_p1 = l_8_fu_4935_p3[7:0];

assign trunc_ln943_8_fu_5814_p1 = tmp_1_fu_5571_p3[7:0];

assign trunc_ln943_9_fu_6254_p1 = tmp_3_fu_6011_p3[7:0];

assign trunc_ln943_fu_1824_p1 = l_fu_1694_p3[7:0];

assign trunc_ln947_10_fu_6499_p1 = sub_ln944_10_fu_6471_p2[5:0];

assign trunc_ln947_3_fu_2164_p1 = sub_ln944_3_fu_2136_p2[5:0];

assign trunc_ln947_4_fu_3117_p1 = sub_ln944_4_fu_3089_p2[5:0];

assign trunc_ln947_5_fu_3794_p1 = sub_ln944_5_fu_3766_p2[5:0];

assign trunc_ln947_6_fu_4697_p1 = sub_ln944_6_fu_4669_p2[5:0];

assign trunc_ln947_7_fu_4971_p1 = sub_ln944_7_fu_4943_p2[5:0];

assign trunc_ln947_8_fu_5611_p1 = sub_ln944_8_fu_5583_p2[5:0];

assign trunc_ln947_9_fu_6051_p1 = sub_ln944_9_fu_6023_p2[5:0];

assign trunc_ln947_fu_1730_p1 = sub_ln944_fu_1702_p2[5:0];

assign trunc_ln949_1_fu_5656_p1 = p_Result_93_fu_5631_p2[31:0];

assign trunc_ln949_2_fu_6087_p1 = shl_ln949_9_fu_6081_p2[31:0];

assign trunc_ln949_3_fu_6096_p1 = p_Result_103_fu_6071_p2[31:0];

assign trunc_ln949_4_fu_6535_p1 = shl_ln949_10_fu_6529_p2[31:0];

assign trunc_ln949_5_fu_6544_p1 = p_Result_113_fu_6519_p2[31:0];

assign trunc_ln949_fu_5647_p1 = shl_ln949_8_fu_5641_p2[31:0];

assign trunc_ln984_fu_2749_p1 = num_points_q0[11:0];

assign trunc_ln985_fu_5493_p1 = current_z_top_index_V_5_reg_1086[11:0];

assign trunc_ln_fu_1952_p4 = {{m_35_fu_1877_p2[23:1]}};

assign white_space_height_V_fu_2733_p1 = select_ln703_fu_2725_p3[31:0];

assign xor_ln1052_fu_5923_p2 = (trunc_ln2_fu_5914_p4 ^ 3'd4);

assign xor_ln571_1_fu_4294_p2 = (icmp_ln571_2_reg_7575 ^ 1'd1);

assign xor_ln571_2_fu_5362_p2 = (icmp_ln571_3_reg_7765 ^ 1'd1);

assign xor_ln571_fu_3660_p2 = (icmp_ln571_1_reg_7470 ^ 1'd1);

assign xor_ln581_1_fu_4260_p2 = (or_ln581_1_fu_4254_p2 ^ 1'd1);

assign xor_ln581_2_fu_5418_p2 = (or_ln581_2_fu_5412_p2 ^ 1'd1);

assign xor_ln581_fu_3626_p2 = (or_ln581_fu_3620_p2 ^ 1'd1);

assign xor_ln582_1_fu_4230_p2 = (or_ln582_1_fu_4224_p2 ^ 1'd1);

assign xor_ln582_2_fu_5386_p2 = (or_ln582_2_fu_5381_p2 ^ 1'd1);

assign xor_ln582_fu_3596_p2 = (or_ln582_fu_3590_p2 ^ 1'd1);

assign xor_ln585_fu_5438_p2 = (icmp_ln585_3_fu_5316_p2 ^ 1'd1);

assign xor_ln949_10_fu_6576_p2 = (tmp_104_fu_6568_p3 ^ 1'd1);

assign xor_ln949_3_fu_2216_p2 = (tmp_47_fu_2208_p3 ^ 1'd1);

assign xor_ln949_4_fu_3169_p2 = (tmp_60_fu_3161_p3 ^ 1'd1);

assign xor_ln949_5_fu_3846_p2 = (tmp_67_fu_3838_p3 ^ 1'd1);

assign xor_ln949_6_fu_4749_p2 = (tmp_78_fu_4741_p3 ^ 1'd1);

assign xor_ln949_7_fu_5022_p2 = (tmp_81_fu_5014_p3 ^ 1'd1);

assign xor_ln949_8_fu_5688_p2 = (tmp_94_fu_5680_p3 ^ 1'd1);

assign xor_ln949_9_fu_6128_p2 = (tmp_99_fu_6120_p3 ^ 1'd1);

assign xor_ln949_fu_1782_p2 = (tmp_42_fu_1774_p3 ^ 1'd1);

assign z1_max_d0 = grp_getParallelograms_fu_1285_z1_max_d0;

assign z1_min_d0 = grp_getParallelograms_fu_1285_z1_min_d0;

assign z_bits_1_fu_5945_p1 = points_q0[31:0];

assign z_bits_2_fu_6393_p1 = points_q0[31:0];

assign z_bits_3_fu_6841_p1 = points_q0[31:0];

assign z_bits_fu_4453_p1 = points_q0[31:0];

assign z_top_min_V_10_fu_6871_p3 = ((tmp_107_fu_6863_p3[0:0] == 1'b1) ? new_z_i_atTop_V_q0 : z_top_min_V_15_reg_1240);

assign zext_ln1004_fu_4448_p1 = tmp_88_fu_4440_p3;

assign zext_ln1014_fu_4568_p1 = add_ln1014_reg_7657_pp10_iter50_reg;

assign zext_ln1033_fu_5469_p1 = trunc_ln1033_reg_7714_pp11_iter7_reg;

assign zext_ln1048_fu_5504_p1 = layerWithSmallestShift_reg_1163;

assign zext_ln1052_fu_5940_p1 = tmp_89_fu_5932_p3;

assign zext_ln1057_fu_6388_p1 = tmp_90_fu_6380_p3;

assign zext_ln1062_fu_6836_p1 = tmp_92_fu_6828_p3;

assign zext_ln1193_1_fu_4506_p1 = radius_j_V_4_fu_4498_p3;

assign zext_ln1193_fu_2832_p1 = radius_k_V_2_fu_2825_p3;

assign zext_ln368_2_fu_5199_p1 = p_Result_150_reg_7740;

assign zext_ln368_3_fu_6305_p1 = p_Result_162_fu_6301_p1;

assign zext_ln368_4_fu_6753_p1 = p_Result_167_fu_6749_p1;

assign zext_ln368_fu_5865_p1 = p_Result_157_fu_5861_p1;

assign zext_ln40_1_fu_1517_p1 = add_ln40_fu_1511_p2;

assign zext_ln40_2_fu_2665_p1 = select_ln37_2_fu_2641_p3;

assign zext_ln40_3_fu_2675_p1 = add_ln40_1_fu_2669_p2;

assign zext_ln40_fu_1507_p1 = select_ln37_fu_1483_p3;

assign zext_ln455_1_fu_3455_p1 = exp_tmp_1_fu_3445_p4;

assign zext_ln455_2_fu_4092_p1 = exp_tmp_2_fu_4082_p4;

assign zext_ln455_3_fu_5243_p1 = exp_tmp_3_reg_7755;

assign zext_ln455_fu_2465_p1 = exp_tmp_fu_2455_p4;

assign zext_ln50_22_fu_2006_p1 = i_reg_851;

assign zext_ln50_23_fu_2015_p1 = add_ln50_5_fu_2010_p2;

assign zext_ln50_24_fu_2054_p1 = i_5_reg_886;

assign zext_ln50_25_fu_2063_p1 = add_ln50_6_fu_2058_p2;

assign zext_ln50_fu_1554_p1 = tmp_83_fu_1546_p3;

assign zext_ln569_1_fu_3471_p1 = p_Result_135_fu_3463_p3;

assign zext_ln569_2_fu_4108_p1 = p_Result_141_fu_4100_p3;

assign zext_ln569_3_fu_5253_p1 = p_Result_152_fu_5246_p3;

assign zext_ln569_fu_2481_p1 = p_Result_129_fu_2473_p3;

assign zext_ln586_1_fu_3557_p1 = trunc_ln586_4_fu_3553_p1;

assign zext_ln586_2_fu_4194_p1 = trunc_ln586_6_fu_4190_p1;

assign zext_ln586_3_fu_5342_p1 = trunc_ln586_8_fu_5338_p1;

assign zext_ln586_fu_2599_p1 = trunc_ln586_fu_2595_p1;

assign zext_ln671_fu_1528_p1 = latest_patch_index_constprop_i;

assign zext_ln875_fu_2691_p1 = latest_patch_index_constprop_i;

assign zext_ln931_fu_2790_p1 = i_6_reg_1042;

assign zext_ln937_1_fu_5990_p1 = tmp_V_28_reg_7852;

assign zext_ln937_2_fu_6438_p1 = tmp_V_29_reg_7899;

assign zext_ln937_fu_5550_p1 = tmp_V_27_reg_7805;

assign zext_ln947_10_fu_6509_p1 = sub_ln947_10_fu_6503_p2;

assign zext_ln947_3_fu_2174_p1 = sub_ln947_3_fu_2168_p2;

assign zext_ln947_4_fu_3127_p1 = sub_ln947_4_fu_3121_p2;

assign zext_ln947_5_fu_3804_p1 = sub_ln947_5_fu_3798_p2;

assign zext_ln947_6_fu_4707_p1 = sub_ln947_6_fu_4701_p2;

assign zext_ln947_7_fu_4981_p1 = sub_ln947_7_fu_4975_p2;

assign zext_ln947_8_fu_5621_p1 = sub_ln947_8_fu_5615_p2;

assign zext_ln947_9_fu_6061_p1 = sub_ln947_9_fu_6055_p2;

assign zext_ln947_fu_1740_p1 = sub_ln947_fu_1734_p2;

assign zext_ln949_1_fu_6077_p1 = lsb_index_10_fu_6029_p2;

assign zext_ln949_2_fu_6525_p1 = lsb_index_11_fu_6477_p2;

assign zext_ln949_fu_5637_p1 = lsb_index_9_fu_5589_p2;

assign zext_ln951_1_fu_5794_p1 = m_9_fu_5784_p4;

assign zext_ln951_2_fu_6210_p1 = m_61_fu_6202_p3;

assign zext_ln951_3_fu_6234_p1 = m_s_fu_6224_p4;

assign zext_ln951_4_fu_6658_p1 = m_64_fu_6650_p3;

assign zext_ln951_5_fu_6682_p1 = m_1_fu_6672_p4;

assign zext_ln951_fu_5770_p1 = m_58_fu_5762_p3;

assign zext_ln954_1_fu_6184_p1 = add_ln954_1_fu_6178_p2;

assign zext_ln954_2_fu_6632_p1 = add_ln954_2_fu_6626_p2;

assign zext_ln954_fu_5744_p1 = add_ln954_fu_5738_p2;

assign zext_ln955_1_fu_6160_p1 = sub_ln955_1_fu_6154_p2;

assign zext_ln955_2_fu_6608_p1 = sub_ln955_2_fu_6602_p2;

assign zext_ln955_fu_5720_p1 = sub_ln955_fu_5714_p2;

assign zext_ln958_3_fu_2276_p1 = add_ln958_3_fu_2270_p2;

assign zext_ln958_4_fu_3238_p1 = add_ln958_4_fu_3233_p2;

assign zext_ln958_5_fu_3915_p1 = add_ln958_5_fu_3910_p2;

assign zext_ln958_6_fu_4809_p1 = add_ln958_6_fu_4803_p2;

assign zext_ln958_7_fu_5076_p1 = add_ln958_7_fu_5070_p2;

assign zext_ln958_fu_1857_p1 = add_ln958_fu_1852_p2;

assign zext_ln959_10_fu_1834_p1 = m_67_reg_6977;

assign zext_ln959_11_fu_2242_p1 = m_69_fu_2110_p3;

assign zext_ln959_12_fu_3215_p1 = m_71_reg_7419;

assign zext_ln959_13_fu_3892_p1 = m_73_reg_7533;

assign zext_ln959_14_fu_4775_p1 = m_76_fu_4645_p3;

assign zext_ln959_5_fu_2252_p1 = sub_ln959_3_fu_2246_p2;

assign zext_ln959_6_fu_3223_p1 = sub_ln959_4_fu_3218_p2;

assign zext_ln959_7_fu_3900_p1 = sub_ln959_5_fu_3895_p2;

assign zext_ln959_8_fu_4785_p1 = sub_ln959_6_fu_4779_p2;

assign zext_ln959_9_fu_5053_p1 = sub_ln959_7_fu_5047_p2;

assign zext_ln959_fu_1842_p1 = sub_ln959_fu_1837_p2;

assign zext_ln961_10_fu_6662_p1 = select_ln954_4_fu_6642_p3;

assign zext_ln961_3_fu_2302_p1 = select_ln958_7_fu_2286_p3;

assign zext_ln961_4_fu_3255_p1 = select_ln958_9_reg_7435;

assign zext_ln961_5_fu_3932_p1 = select_ln958_11_reg_7549;

assign zext_ln961_6_fu_4835_p1 = select_ln958_13_fu_4819_p3;

assign zext_ln961_7_fu_5101_p1 = select_ln958_15_fu_5085_p3;

assign zext_ln961_8_fu_5774_p1 = select_ln954_fu_5754_p3;

assign zext_ln961_9_fu_6214_p1 = select_ln954_2_fu_6194_p3;

assign zext_ln961_fu_1874_p1 = select_ln958_reg_6993;

assign zext_ln962_3_fu_2334_p1 = m_70_reg_7094;

assign zext_ln962_4_fu_3274_p1 = m_72_fu_3264_p4;

assign zext_ln962_5_fu_3951_p1 = m_74_fu_3941_p4;

assign zext_ln962_6_fu_4855_p1 = m_77_fu_4845_p4;

assign zext_ln962_7_fu_5121_p1 = m_78_fu_5111_p4;

assign zext_ln962_fu_1893_p1 = m_68_fu_1883_p4;

always @ (posedge ap_clk) begin
    zext_ln671_reg_6903[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    add_ln50_reg_6938[3:0] <= 4'b0000;
    add_ln50_4_reg_6943[3:0] <= 4'b0000;
    lhs_12_reg_7248[19:0] <= 20'b00000000000000000000;
    zext_ln931_reg_7283[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_7341[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_7360[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_7379[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_12_cast4_reg_7622[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_12_cast4_reg_7622_pp9_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter8_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter9_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter10_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter11_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter12_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter13_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter14_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter15_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter16_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter17_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter18_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter19_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter20_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter21_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter22_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter23_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter24_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter25_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter26_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter27_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter28_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter29_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter30_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter31_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter32_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter33_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter34_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter35_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter36_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter37_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter38_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter39_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter40_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter41_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter42_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter43_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter44_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter45_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter46_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter47_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    trunc_ln1015_cast_reg_7647_pp10_iter48_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    m_75_reg_7694[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //system_top_p_shadowquilt_main_loop_make_verticle_strip
