// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_starting_index_and_value8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        points_address1,
        points_ce1,
        points_q1,
        projectionToRow_dout,
        projectionToRow_empty_n,
        projectionToRow_read,
        start_index,
        start_index_ap_vld,
        start_value_i,
        start_value_o,
        start_value_o_ap_vld,
        i_dout,
        i_empty_n,
        i_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_pp0_stage2 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
input  [31:0] projectionToRow_dout;
input   projectionToRow_empty_n;
output   projectionToRow_read;
output  [31:0] start_index;
output   start_index_ap_vld;
input  [31:0] start_value_i;
output  [31:0] start_value_o;
output   start_value_o_ap_vld;
input  [2:0] i_dout;
input   i_empty_n;
output   i_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg num_points_ce1;
reg points_ce1;
reg projectionToRow_read;
reg[31:0] start_index;
reg start_index_ap_vld;
reg[31:0] start_value_o;
reg start_value_o_ap_vld;
reg i_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    projectionToRow_blk_n;
reg    i_blk_n;
reg   [31:0] j_reg_196;
reg   [31:0] j_reg_196_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] j_reg_196_pp0_iter2_reg;
reg   [31:0] p_Val2_61_reg_1282;
reg   [2:0] i_16_reg_1290;
reg   [0:0] p_Result_185_reg_1300;
reg   [31:0] num_points_load_reg_1306;
wire    ap_CS_fsm_state2;
wire   [0:0] tobool_i19_i_fu_230_p2;
reg   [0:0] tobool_i19_i_reg_1311;
wire   [31:0] tmp_V_35_fu_240_p3;
reg   [31:0] tmp_V_35_reg_1316;
wire   [63:0] m_113_i_fu_246_p1;
reg   [63:0] m_113_i_reg_1323;
wire   [15:0] shl_ln_fu_250_p3;
reg   [15:0] shl_ln_reg_1329;
wire   [0:0] icmp_ln296_fu_257_p2;
reg   [0:0] icmp_ln296_reg_1334;
wire   [31:0] retval_0_i81_i_fu_564_p3;
reg   [31:0] retval_0_i81_i_reg_1343;
wire   [31:0] z_bits_fu_571_p1;
reg   [31:0] z_bits_reg_1348;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] z_bits_reg_1348_pp0_iter1_reg;
wire   [0:0] p_Result_181_fu_575_p3;
reg   [0:0] p_Result_181_reg_1354;
wire   [31:0] m_93_fu_589_p3;
reg   [31:0] m_93_reg_1359;
wire   [31:0] sub_ln944_fu_615_p2;
reg   [31:0] sub_ln944_reg_1364;
wire   [0:0] icmp_ln958_fu_709_p2;
reg   [0:0] icmp_ln958_reg_1370;
wire   [0:0] select_ln958_fu_729_p3;
reg   [0:0] select_ln958_reg_1375;
wire   [7:0] trunc_ln943_fu_737_p1;
reg   [7:0] trunc_ln943_reg_1380;
wire   [31:0] add_ln296_fu_741_p2;
reg   [31:0] add_ln296_reg_1385;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] select_ln935_fu_869_p3;
reg   [31:0] select_ln935_reg_1390;
wire   [31:0] grp_fu_209_p2;
reg   [31:0] dc_reg_1395;
wire   [0:0] icmp_ln935_9_fu_877_p2;
reg   [0:0] icmp_ln935_9_reg_1400;
wire   [0:0] p_Result_190_fu_883_p3;
reg   [0:0] p_Result_190_reg_1405;
reg   [62:0] m_97_reg_1410;
reg   [0:0] p_Result_178_reg_1415;
wire   [7:0] trunc_ln943_12_fu_1117_p1;
reg   [7:0] trunc_ln943_12_reg_1420;
wire   [0:0] icmp_ln298_fu_1233_p2;
reg   [0:0] icmp_ln298_reg_1435;
wire   [0:0] icmp_ln298_1_fu_1239_p2;
reg   [0:0] icmp_ln298_1_reg_1440;
wire   [0:0] icmp_ln298_2_fu_1245_p2;
reg   [0:0] icmp_ln298_2_reg_1445;
wire   [0:0] icmp_ln298_3_fu_1251_p2;
reg   [0:0] icmp_ln298_3_reg_1450;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_phi_mux_j_phi_fu_201_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] idxprom_i_fu_217_p1;
wire   [63:0] zext_ln297_fu_301_p1;
reg    ap_block_state1;
reg   [31:0] start_index_preg;
wire    ap_block_pp0_stage1_01001;
wire   [0:0] and_ln298_1_fu_1271_p2;
wire   [31:0] sub_ln703_fu_1277_p2;
reg   [31:0] start_value_o_preg;
wire   [31:0] grp_fu_213_p0;
wire   [31:0] grp_fu_213_p1;
wire   [31:0] sub_i23_i_fu_235_p2;
wire   [11:0] trunc_ln297_fu_262_p1;
wire   [15:0] shl_ln297_1_fu_266_p3;
wire   [15:0] add_ln297_fu_274_p2;
wire   [2:0] lshr_ln_fu_279_p4;
wire   [8:0] trunc_ln297_1_fu_289_p1;
wire   [11:0] tmp_93_fu_293_p3;
reg   [31:0] p_Result_186_fu_306_p4;
reg   [31:0] l_12_fu_315_p3;
wire   [31:0] sub_ln944_11_fu_323_p2;
wire   [31:0] lsb_index_12_fu_329_p2;
wire   [30:0] tmp_fu_335_p4;
wire   [5:0] trunc_ln947_11_fu_351_p1;
wire   [5:0] sub_ln947_11_fu_355_p2;
wire   [31:0] zext_ln947_11_fu_361_p1;
wire   [31:0] lshr_ln947_11_fu_365_p2;
wire   [31:0] shl_ln949_11_fu_371_p2;
wire   [31:0] or_ln949_fu_377_p2;
wire   [31:0] and_ln949_25_fu_383_p2;
wire   [0:0] tmp_113_fu_394_p3;
wire   [0:0] p_Result_187_fu_408_p3;
wire   [0:0] xor_ln949_11_fu_402_p2;
wire   [31:0] sub_ln959_8_fu_427_p2;
wire   [63:0] zext_ln959_16_fu_433_p1;
wire   [0:0] icmp_ln946_11_fu_345_p2;
wire   [0:0] icmp_ln949_11_fu_388_p2;
wire   [31:0] add_ln958_8_fu_450_p2;
wire   [63:0] zext_ln958_8_fu_456_p1;
wire   [0:0] icmp_ln958_8_fu_415_p2;
wire   [0:0] select_ln946_11_fu_442_p3;
wire   [0:0] and_ln949_23_fu_421_p2;
wire   [63:0] lshr_ln958_8_fu_460_p2;
wire   [63:0] shl_ln959_8_fu_437_p2;
wire   [0:0] select_ln958_18_fu_465_p3;
wire   [63:0] m_84_fu_473_p3;
wire   [63:0] zext_ln961_11_fu_481_p1;
wire   [63:0] m_85_fu_485_p2;
wire   [62:0] m_95_fu_491_p4;
wire   [0:0] p_Result_172_fu_505_p3;
wire   [7:0] trunc_ln943_11_fu_521_p1;
wire   [7:0] sub_ln964_11_fu_525_p2;
wire   [7:0] select_ln943_11_fu_513_p3;
wire   [7:0] add_ln964_11_fu_531_p2;
wire   [63:0] zext_ln962_8_fu_501_p1;
wire   [8:0] tmp_36_i_fu_537_p3;
wire   [63:0] p_Result_188_fu_544_p5;
wire   [31:0] LD_15_fu_556_p1;
wire   [31:0] bitcast_ln744_10_fu_560_p1;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_V_fu_583_p2;
reg   [31:0] p_Result_182_fu_597_p4;
reg   [31:0] l_fu_607_p3;
wire   [31:0] lsb_index_fu_621_p2;
wire   [30:0] tmp_110_fu_627_p4;
wire   [5:0] trunc_ln947_fu_643_p1;
wire   [5:0] sub_ln947_fu_647_p2;
wire   [31:0] zext_ln947_fu_653_p1;
wire   [31:0] lshr_ln947_fu_657_p2;
wire   [31:0] shl_ln949_fu_663_p2;
wire   [31:0] or_ln949_17_fu_669_p2;
wire   [31:0] and_ln949_fu_675_p2;
wire   [0:0] tmp_111_fu_687_p3;
wire   [0:0] p_Result_183_fu_701_p3;
wire   [0:0] xor_ln949_fu_695_p2;
wire   [0:0] icmp_ln946_fu_637_p2;
wire   [0:0] icmp_ln949_fu_681_p2;
wire   [0:0] select_ln946_fu_721_p3;
wire   [0:0] and_ln949_22_fu_715_p2;
wire    ap_block_pp0_stage2;
wire   [31:0] sub_ln959_fu_755_p2;
wire   [63:0] zext_ln959_fu_752_p1;
wire   [63:0] zext_ln959_15_fu_760_p1;
wire   [31:0] add_ln958_fu_770_p2;
wire   [63:0] zext_ln958_fu_775_p1;
wire   [63:0] lshr_ln958_fu_779_p2;
wire   [63:0] shl_ln959_fu_764_p2;
wire   [63:0] m_fu_785_p3;
wire   [63:0] zext_ln961_fu_792_p1;
wire   [63:0] m_80_fu_795_p2;
wire   [62:0] m_94_fu_801_p4;
wire   [0:0] p_Result_s_fu_815_p3;
wire   [7:0] sub_ln964_fu_831_p2;
wire   [7:0] select_ln943_fu_823_p3;
wire   [7:0] add_ln964_fu_836_p2;
wire   [63:0] zext_ln962_fu_811_p1;
wire   [8:0] tmp_i_fu_842_p3;
wire   [63:0] p_Result_184_fu_849_p5;
wire   [31:0] LD_fu_861_p1;
wire   [0:0] icmp_ln935_fu_747_p2;
wire   [31:0] bitcast_ln744_fu_865_p1;
wire   [31:0] tmp_V_32_fu_891_p2;
wire   [31:0] m_96_fu_897_p3;
reg   [31:0] p_Result_191_fu_905_p4;
reg   [31:0] l_13_fu_915_p3;
wire   [31:0] sub_ln944_12_fu_923_p2;
wire   [31:0] lsb_index_13_fu_929_p2;
wire   [30:0] tmp_116_fu_935_p4;
wire   [5:0] trunc_ln947_12_fu_951_p1;
wire   [5:0] sub_ln947_12_fu_955_p2;
wire   [31:0] zext_ln947_12_fu_961_p1;
wire   [31:0] lshr_ln947_12_fu_965_p2;
wire   [31:0] shl_ln949_12_fu_971_p2;
wire   [31:0] or_ln949_18_fu_977_p2;
wire   [31:0] and_ln949_26_fu_983_p2;
wire   [0:0] tmp_117_fu_995_p3;
wire   [0:0] p_Result_192_fu_1009_p3;
wire   [0:0] xor_ln949_12_fu_1003_p2;
wire   [31:0] sub_ln959_9_fu_1033_p2;
wire   [63:0] zext_ln959_17_fu_1029_p1;
wire   [63:0] zext_ln959_18_fu_1039_p1;
wire   [0:0] icmp_ln946_12_fu_945_p2;
wire   [0:0] icmp_ln949_12_fu_989_p2;
wire   [31:0] add_ln958_9_fu_1057_p2;
wire   [63:0] zext_ln958_9_fu_1063_p1;
wire   [0:0] icmp_ln958_9_fu_1017_p2;
wire   [0:0] select_ln946_12_fu_1049_p3;
wire   [0:0] and_ln949_24_fu_1023_p2;
wire   [63:0] lshr_ln958_9_fu_1067_p2;
wire   [63:0] shl_ln959_9_fu_1043_p2;
wire   [0:0] select_ln958_20_fu_1073_p3;
wire   [63:0] m_89_fu_1081_p3;
wire   [63:0] zext_ln961_12_fu_1089_p1;
wire   [63:0] m_90_fu_1093_p2;
wire   [31:0] data_V_fu_1121_p1;
wire   [30:0] trunc_ln368_fu_1124_p1;
wire   [31:0] p_Result_189_fu_1132_p3;
wire   [7:0] sub_ln964_12_fu_1155_p2;
wire   [7:0] select_ln943_12_fu_1148_p3;
wire   [7:0] add_ln964_12_fu_1160_p2;
wire   [63:0] zext_ln962_9_fu_1145_p1;
wire   [8:0] tmp_38_i_fu_1166_p3;
wire   [63:0] p_Result_193_fu_1173_p5;
wire   [30:0] LD_16_fu_1185_p1;
wire   [30:0] data_V_5_fu_1189_p3;
wire   [31:0] p_Result_194_fu_1200_p3;
wire   [7:0] tmp_s_fu_1213_p4;
wire   [22:0] trunc_ln298_fu_1128_p1;
wire   [7:0] tmp_30_fu_1223_p4;
wire   [22:0] trunc_ln298_1_fu_1196_p1;
wire   [0:0] or_ln298_fu_1257_p2;
wire   [0:0] or_ln298_1_fu_1261_p2;
wire   [0:0] and_ln298_fu_1265_p2;
wire   [0:0] grp_fu_213_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state11;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 start_index_preg = 32'd0;
#0 start_value_o_preg = 32'd0;
end

system_top_fsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln935_reg_1390),
    .din1(retval_0_i81_i_reg_1343),
    .ce(1'b1),
    .dout(grp_fu_209_p2)
);

system_top_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_213_p0),
    .din1(grp_fu_213_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_213_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_index_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
            start_index_preg <= j_reg_196_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_value_o_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
            start_value_o_preg <= sub_ln703_fu_1277_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_reg_1334 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_reg_196 <= add_ln296_reg_1385;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_196 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln296_reg_1385 <= add_ln296_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dc_reg_1395 <= grp_fu_209_p2;
        icmp_ln935_9_reg_1400 <= icmp_ln935_9_fu_877_p2;
        m_97_reg_1410 <= {{m_90_fu_1093_p2[63:1]}};
        p_Result_178_reg_1415 <= m_90_fu_1093_p2[32'd25];
        p_Result_190_reg_1405 <= start_value_i[32'd31];
        trunc_ln943_12_reg_1420 <= trunc_ln943_12_fu_1117_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_16_reg_1290 <= i_dout;
        p_Result_185_reg_1300 <= projectionToRow_dout[32'd31];
        p_Val2_61_reg_1282 <= projectionToRow_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln296_reg_1334 <= icmp_ln296_fu_257_p2;
        icmp_ln298_1_reg_1440 <= icmp_ln298_1_fu_1239_p2;
        icmp_ln298_2_reg_1445 <= icmp_ln298_2_fu_1245_p2;
        icmp_ln298_3_reg_1450 <= icmp_ln298_3_fu_1251_p2;
        icmp_ln298_reg_1435 <= icmp_ln298_fu_1233_p2;
        j_reg_196_pp0_iter1_reg <= j_reg_196;
        j_reg_196_pp0_iter2_reg <= j_reg_196_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_reg_1334 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln958_reg_1370 <= icmp_ln958_fu_709_p2;
        m_93_reg_1359 <= m_93_fu_589_p3;
        p_Result_181_reg_1354 <= points_q1[32'd31];
        select_ln958_reg_1375 <= select_ln958_fu_729_p3;
        sub_ln944_reg_1364 <= sub_ln944_fu_615_p2;
        trunc_ln943_reg_1380 <= trunc_ln943_fu_737_p1;
        z_bits_reg_1348 <= z_bits_fu_571_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_113_i_reg_1323[31 : 0] <= m_113_i_fu_246_p1[31 : 0];
        num_points_load_reg_1306 <= num_points_q1;
        shl_ln_reg_1329[15 : 13] <= shl_ln_fu_250_p3[15 : 13];
        tmp_V_35_reg_1316 <= tmp_V_35_fu_240_p3;
        tobool_i19_i_reg_1311 <= tobool_i19_i_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_fu_257_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        retval_0_i81_i_reg_1343 <= retval_0_i81_i_fu_564_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_reg_1334 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln935_reg_1390 <= select_ln935_fu_869_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        z_bits_reg_1348_pp0_iter1_reg <= z_bits_reg_1348;
    end
end

always @ (*) begin
    if ((icmp_ln296_reg_1334 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln296_reg_1334 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_phi_fu_201_p4 = add_ln296_reg_1385;
    end else begin
        ap_phi_mux_j_phi_fu_201_p4 = j_reg_196;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_points_ce1 = 1'b1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        points_ce1 = 1'b1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_blk_n = projectionToRow_empty_n;
    end else begin
        projectionToRow_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_read = 1'b1;
    end else begin
        projectionToRow_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
        start_index = j_reg_196_pp0_iter2_reg;
    end else begin
        start_index = start_index_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
        start_index_ap_vld = 1'b1;
    end else begin
        start_index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
        start_value_o = sub_ln703_fu_1277_p2;
    end else begin
        start_value_o = start_value_o_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln298_1_fu_1271_p2))) begin
        start_value_o_ap_vld = 1'b1;
    end else begin
        start_value_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((icmp_ln296_reg_1334 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln296_reg_1334 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_15_fu_556_p1 = p_Result_188_fu_544_p5[31:0];

assign LD_16_fu_1185_p1 = p_Result_193_fu_1173_p5[30:0];

assign LD_fu_861_p1 = p_Result_184_fu_849_p5[31:0];

assign add_ln296_fu_741_p2 = (j_reg_196 + 32'd1);

assign add_ln297_fu_274_p2 = (shl_ln297_1_fu_266_p3 + shl_ln_reg_1329);

assign add_ln958_8_fu_450_p2 = ($signed(sub_ln944_11_fu_323_p2) + $signed(32'd4294967271));

assign add_ln958_9_fu_1057_p2 = ($signed(sub_ln944_12_fu_923_p2) + $signed(32'd4294967271));

assign add_ln958_fu_770_p2 = ($signed(sub_ln944_reg_1364) + $signed(32'd4294967271));

assign add_ln964_11_fu_531_p2 = (sub_ln964_11_fu_525_p2 + select_ln943_11_fu_513_p3);

assign add_ln964_12_fu_1160_p2 = (sub_ln964_12_fu_1155_p2 + select_ln943_12_fu_1148_p3);

assign add_ln964_fu_836_p2 = (sub_ln964_fu_831_p2 + select_ln943_fu_823_p3);

assign and_ln298_1_fu_1271_p2 = (grp_fu_213_p2 & and_ln298_fu_1265_p2);

assign and_ln298_fu_1265_p2 = (or_ln298_fu_1257_p2 & or_ln298_1_fu_1261_p2);

assign and_ln949_22_fu_715_p2 = (xor_ln949_fu_695_p2 & p_Result_183_fu_701_p3);

assign and_ln949_23_fu_421_p2 = (xor_ln949_11_fu_402_p2 & p_Result_187_fu_408_p3);

assign and_ln949_24_fu_1023_p2 = (xor_ln949_12_fu_1003_p2 & p_Result_192_fu_1009_p3);

assign and_ln949_25_fu_383_p2 = (tmp_V_35_reg_1316 & or_ln949_fu_377_p2);

assign and_ln949_26_fu_983_p2 = (or_ln949_18_fu_977_p2 & m_96_fu_897_p3);

assign and_ln949_fu_675_p2 = (or_ln949_17_fu_669_p2 & m_93_fu_589_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln744_10_fu_560_p1 = LD_15_fu_556_p1;

assign bitcast_ln744_fu_865_p1 = LD_fu_861_p1;

assign data_V_5_fu_1189_p3 = ((icmp_ln935_9_reg_1400[0:0] == 1'b1) ? 31'd0 : LD_16_fu_1185_p1);

assign data_V_fu_1121_p1 = dc_reg_1395;

assign grp_fu_213_p0 = p_Result_189_fu_1132_p3;

assign grp_fu_213_p1 = p_Result_194_fu_1200_p3;

assign icmp_ln296_fu_257_p2 = ((ap_phi_mux_j_phi_fu_201_p4 == num_points_load_reg_1306) ? 1'b1 : 1'b0);

assign icmp_ln298_1_fu_1239_p2 = ((trunc_ln298_fu_1128_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln298_2_fu_1245_p2 = ((tmp_30_fu_1223_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln298_3_fu_1251_p2 = ((trunc_ln298_1_fu_1196_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_1233_p2 = ((tmp_s_fu_1213_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln935_9_fu_877_p2 = ((start_value_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_747_p2 = ((z_bits_reg_1348 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_11_fu_345_p2 = (($signed(tmp_fu_335_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_12_fu_945_p2 = (($signed(tmp_116_fu_935_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_637_p2 = (($signed(tmp_110_fu_627_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_11_fu_388_p2 = ((and_ln949_25_fu_383_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_12_fu_989_p2 = ((and_ln949_26_fu_983_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_681_p2 = ((and_ln949_fu_675_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_8_fu_415_p2 = (($signed(lsb_index_12_fu_329_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_9_fu_1017_p2 = (($signed(lsb_index_13_fu_929_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_709_p2 = (($signed(lsb_index_fu_621_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_fu_217_p1 = i_dout;


always @ (p_Result_186_fu_306_p4) begin
    if (p_Result_186_fu_306_p4[0] == 1'b1) begin
        l_12_fu_315_p3 = 32'd0;
    end else if (p_Result_186_fu_306_p4[1] == 1'b1) begin
        l_12_fu_315_p3 = 32'd1;
    end else if (p_Result_186_fu_306_p4[2] == 1'b1) begin
        l_12_fu_315_p3 = 32'd2;
    end else if (p_Result_186_fu_306_p4[3] == 1'b1) begin
        l_12_fu_315_p3 = 32'd3;
    end else if (p_Result_186_fu_306_p4[4] == 1'b1) begin
        l_12_fu_315_p3 = 32'd4;
    end else if (p_Result_186_fu_306_p4[5] == 1'b1) begin
        l_12_fu_315_p3 = 32'd5;
    end else if (p_Result_186_fu_306_p4[6] == 1'b1) begin
        l_12_fu_315_p3 = 32'd6;
    end else if (p_Result_186_fu_306_p4[7] == 1'b1) begin
        l_12_fu_315_p3 = 32'd7;
    end else if (p_Result_186_fu_306_p4[8] == 1'b1) begin
        l_12_fu_315_p3 = 32'd8;
    end else if (p_Result_186_fu_306_p4[9] == 1'b1) begin
        l_12_fu_315_p3 = 32'd9;
    end else if (p_Result_186_fu_306_p4[10] == 1'b1) begin
        l_12_fu_315_p3 = 32'd10;
    end else if (p_Result_186_fu_306_p4[11] == 1'b1) begin
        l_12_fu_315_p3 = 32'd11;
    end else if (p_Result_186_fu_306_p4[12] == 1'b1) begin
        l_12_fu_315_p3 = 32'd12;
    end else if (p_Result_186_fu_306_p4[13] == 1'b1) begin
        l_12_fu_315_p3 = 32'd13;
    end else if (p_Result_186_fu_306_p4[14] == 1'b1) begin
        l_12_fu_315_p3 = 32'd14;
    end else if (p_Result_186_fu_306_p4[15] == 1'b1) begin
        l_12_fu_315_p3 = 32'd15;
    end else if (p_Result_186_fu_306_p4[16] == 1'b1) begin
        l_12_fu_315_p3 = 32'd16;
    end else if (p_Result_186_fu_306_p4[17] == 1'b1) begin
        l_12_fu_315_p3 = 32'd17;
    end else if (p_Result_186_fu_306_p4[18] == 1'b1) begin
        l_12_fu_315_p3 = 32'd18;
    end else if (p_Result_186_fu_306_p4[19] == 1'b1) begin
        l_12_fu_315_p3 = 32'd19;
    end else if (p_Result_186_fu_306_p4[20] == 1'b1) begin
        l_12_fu_315_p3 = 32'd20;
    end else if (p_Result_186_fu_306_p4[21] == 1'b1) begin
        l_12_fu_315_p3 = 32'd21;
    end else if (p_Result_186_fu_306_p4[22] == 1'b1) begin
        l_12_fu_315_p3 = 32'd22;
    end else if (p_Result_186_fu_306_p4[23] == 1'b1) begin
        l_12_fu_315_p3 = 32'd23;
    end else if (p_Result_186_fu_306_p4[24] == 1'b1) begin
        l_12_fu_315_p3 = 32'd24;
    end else if (p_Result_186_fu_306_p4[25] == 1'b1) begin
        l_12_fu_315_p3 = 32'd25;
    end else if (p_Result_186_fu_306_p4[26] == 1'b1) begin
        l_12_fu_315_p3 = 32'd26;
    end else if (p_Result_186_fu_306_p4[27] == 1'b1) begin
        l_12_fu_315_p3 = 32'd27;
    end else if (p_Result_186_fu_306_p4[28] == 1'b1) begin
        l_12_fu_315_p3 = 32'd28;
    end else if (p_Result_186_fu_306_p4[29] == 1'b1) begin
        l_12_fu_315_p3 = 32'd29;
    end else if (p_Result_186_fu_306_p4[30] == 1'b1) begin
        l_12_fu_315_p3 = 32'd30;
    end else if (p_Result_186_fu_306_p4[31] == 1'b1) begin
        l_12_fu_315_p3 = 32'd31;
    end else begin
        l_12_fu_315_p3 = 32'd32;
    end
end


always @ (p_Result_191_fu_905_p4) begin
    if (p_Result_191_fu_905_p4[0] == 1'b1) begin
        l_13_fu_915_p3 = 32'd0;
    end else if (p_Result_191_fu_905_p4[1] == 1'b1) begin
        l_13_fu_915_p3 = 32'd1;
    end else if (p_Result_191_fu_905_p4[2] == 1'b1) begin
        l_13_fu_915_p3 = 32'd2;
    end else if (p_Result_191_fu_905_p4[3] == 1'b1) begin
        l_13_fu_915_p3 = 32'd3;
    end else if (p_Result_191_fu_905_p4[4] == 1'b1) begin
        l_13_fu_915_p3 = 32'd4;
    end else if (p_Result_191_fu_905_p4[5] == 1'b1) begin
        l_13_fu_915_p3 = 32'd5;
    end else if (p_Result_191_fu_905_p4[6] == 1'b1) begin
        l_13_fu_915_p3 = 32'd6;
    end else if (p_Result_191_fu_905_p4[7] == 1'b1) begin
        l_13_fu_915_p3 = 32'd7;
    end else if (p_Result_191_fu_905_p4[8] == 1'b1) begin
        l_13_fu_915_p3 = 32'd8;
    end else if (p_Result_191_fu_905_p4[9] == 1'b1) begin
        l_13_fu_915_p3 = 32'd9;
    end else if (p_Result_191_fu_905_p4[10] == 1'b1) begin
        l_13_fu_915_p3 = 32'd10;
    end else if (p_Result_191_fu_905_p4[11] == 1'b1) begin
        l_13_fu_915_p3 = 32'd11;
    end else if (p_Result_191_fu_905_p4[12] == 1'b1) begin
        l_13_fu_915_p3 = 32'd12;
    end else if (p_Result_191_fu_905_p4[13] == 1'b1) begin
        l_13_fu_915_p3 = 32'd13;
    end else if (p_Result_191_fu_905_p4[14] == 1'b1) begin
        l_13_fu_915_p3 = 32'd14;
    end else if (p_Result_191_fu_905_p4[15] == 1'b1) begin
        l_13_fu_915_p3 = 32'd15;
    end else if (p_Result_191_fu_905_p4[16] == 1'b1) begin
        l_13_fu_915_p3 = 32'd16;
    end else if (p_Result_191_fu_905_p4[17] == 1'b1) begin
        l_13_fu_915_p3 = 32'd17;
    end else if (p_Result_191_fu_905_p4[18] == 1'b1) begin
        l_13_fu_915_p3 = 32'd18;
    end else if (p_Result_191_fu_905_p4[19] == 1'b1) begin
        l_13_fu_915_p3 = 32'd19;
    end else if (p_Result_191_fu_905_p4[20] == 1'b1) begin
        l_13_fu_915_p3 = 32'd20;
    end else if (p_Result_191_fu_905_p4[21] == 1'b1) begin
        l_13_fu_915_p3 = 32'd21;
    end else if (p_Result_191_fu_905_p4[22] == 1'b1) begin
        l_13_fu_915_p3 = 32'd22;
    end else if (p_Result_191_fu_905_p4[23] == 1'b1) begin
        l_13_fu_915_p3 = 32'd23;
    end else if (p_Result_191_fu_905_p4[24] == 1'b1) begin
        l_13_fu_915_p3 = 32'd24;
    end else if (p_Result_191_fu_905_p4[25] == 1'b1) begin
        l_13_fu_915_p3 = 32'd25;
    end else if (p_Result_191_fu_905_p4[26] == 1'b1) begin
        l_13_fu_915_p3 = 32'd26;
    end else if (p_Result_191_fu_905_p4[27] == 1'b1) begin
        l_13_fu_915_p3 = 32'd27;
    end else if (p_Result_191_fu_905_p4[28] == 1'b1) begin
        l_13_fu_915_p3 = 32'd28;
    end else if (p_Result_191_fu_905_p4[29] == 1'b1) begin
        l_13_fu_915_p3 = 32'd29;
    end else if (p_Result_191_fu_905_p4[30] == 1'b1) begin
        l_13_fu_915_p3 = 32'd30;
    end else if (p_Result_191_fu_905_p4[31] == 1'b1) begin
        l_13_fu_915_p3 = 32'd31;
    end else begin
        l_13_fu_915_p3 = 32'd32;
    end
end


always @ (p_Result_182_fu_597_p4) begin
    if (p_Result_182_fu_597_p4[0] == 1'b1) begin
        l_fu_607_p3 = 32'd0;
    end else if (p_Result_182_fu_597_p4[1] == 1'b1) begin
        l_fu_607_p3 = 32'd1;
    end else if (p_Result_182_fu_597_p4[2] == 1'b1) begin
        l_fu_607_p3 = 32'd2;
    end else if (p_Result_182_fu_597_p4[3] == 1'b1) begin
        l_fu_607_p3 = 32'd3;
    end else if (p_Result_182_fu_597_p4[4] == 1'b1) begin
        l_fu_607_p3 = 32'd4;
    end else if (p_Result_182_fu_597_p4[5] == 1'b1) begin
        l_fu_607_p3 = 32'd5;
    end else if (p_Result_182_fu_597_p4[6] == 1'b1) begin
        l_fu_607_p3 = 32'd6;
    end else if (p_Result_182_fu_597_p4[7] == 1'b1) begin
        l_fu_607_p3 = 32'd7;
    end else if (p_Result_182_fu_597_p4[8] == 1'b1) begin
        l_fu_607_p3 = 32'd8;
    end else if (p_Result_182_fu_597_p4[9] == 1'b1) begin
        l_fu_607_p3 = 32'd9;
    end else if (p_Result_182_fu_597_p4[10] == 1'b1) begin
        l_fu_607_p3 = 32'd10;
    end else if (p_Result_182_fu_597_p4[11] == 1'b1) begin
        l_fu_607_p3 = 32'd11;
    end else if (p_Result_182_fu_597_p4[12] == 1'b1) begin
        l_fu_607_p3 = 32'd12;
    end else if (p_Result_182_fu_597_p4[13] == 1'b1) begin
        l_fu_607_p3 = 32'd13;
    end else if (p_Result_182_fu_597_p4[14] == 1'b1) begin
        l_fu_607_p3 = 32'd14;
    end else if (p_Result_182_fu_597_p4[15] == 1'b1) begin
        l_fu_607_p3 = 32'd15;
    end else if (p_Result_182_fu_597_p4[16] == 1'b1) begin
        l_fu_607_p3 = 32'd16;
    end else if (p_Result_182_fu_597_p4[17] == 1'b1) begin
        l_fu_607_p3 = 32'd17;
    end else if (p_Result_182_fu_597_p4[18] == 1'b1) begin
        l_fu_607_p3 = 32'd18;
    end else if (p_Result_182_fu_597_p4[19] == 1'b1) begin
        l_fu_607_p3 = 32'd19;
    end else if (p_Result_182_fu_597_p4[20] == 1'b1) begin
        l_fu_607_p3 = 32'd20;
    end else if (p_Result_182_fu_597_p4[21] == 1'b1) begin
        l_fu_607_p3 = 32'd21;
    end else if (p_Result_182_fu_597_p4[22] == 1'b1) begin
        l_fu_607_p3 = 32'd22;
    end else if (p_Result_182_fu_597_p4[23] == 1'b1) begin
        l_fu_607_p3 = 32'd23;
    end else if (p_Result_182_fu_597_p4[24] == 1'b1) begin
        l_fu_607_p3 = 32'd24;
    end else if (p_Result_182_fu_597_p4[25] == 1'b1) begin
        l_fu_607_p3 = 32'd25;
    end else if (p_Result_182_fu_597_p4[26] == 1'b1) begin
        l_fu_607_p3 = 32'd26;
    end else if (p_Result_182_fu_597_p4[27] == 1'b1) begin
        l_fu_607_p3 = 32'd27;
    end else if (p_Result_182_fu_597_p4[28] == 1'b1) begin
        l_fu_607_p3 = 32'd28;
    end else if (p_Result_182_fu_597_p4[29] == 1'b1) begin
        l_fu_607_p3 = 32'd29;
    end else if (p_Result_182_fu_597_p4[30] == 1'b1) begin
        l_fu_607_p3 = 32'd30;
    end else if (p_Result_182_fu_597_p4[31] == 1'b1) begin
        l_fu_607_p3 = 32'd31;
    end else begin
        l_fu_607_p3 = 32'd32;
    end
end

assign lsb_index_12_fu_329_p2 = ($signed(sub_ln944_11_fu_323_p2) + $signed(32'd4294967272));

assign lsb_index_13_fu_929_p2 = ($signed(sub_ln944_12_fu_923_p2) + $signed(32'd4294967272));

assign lsb_index_fu_621_p2 = ($signed(sub_ln944_fu_615_p2) + $signed(32'd4294967272));

assign lshr_ln947_11_fu_365_p2 = 32'd4294967295 >> zext_ln947_11_fu_361_p1;

assign lshr_ln947_12_fu_965_p2 = 32'd4294967295 >> zext_ln947_12_fu_961_p1;

assign lshr_ln947_fu_657_p2 = 32'd4294967295 >> zext_ln947_fu_653_p1;

assign lshr_ln958_8_fu_460_p2 = m_113_i_reg_1323 >> zext_ln958_8_fu_456_p1;

assign lshr_ln958_9_fu_1067_p2 = zext_ln959_17_fu_1029_p1 >> zext_ln958_9_fu_1063_p1;

assign lshr_ln958_fu_779_p2 = zext_ln959_fu_752_p1 >> zext_ln958_fu_775_p1;

assign lshr_ln_fu_279_p4 = {{add_ln297_fu_274_p2[15:13]}};

assign m_113_i_fu_246_p1 = tmp_V_35_fu_240_p3;

assign m_80_fu_795_p2 = (m_fu_785_p3 + zext_ln961_fu_792_p1);

assign m_84_fu_473_p3 = ((icmp_ln958_8_fu_415_p2[0:0] == 1'b1) ? lshr_ln958_8_fu_460_p2 : shl_ln959_8_fu_437_p2);

assign m_85_fu_485_p2 = (m_84_fu_473_p3 + zext_ln961_11_fu_481_p1);

assign m_89_fu_1081_p3 = ((icmp_ln958_9_fu_1017_p2[0:0] == 1'b1) ? lshr_ln958_9_fu_1067_p2 : shl_ln959_9_fu_1043_p2);

assign m_90_fu_1093_p2 = (m_89_fu_1081_p3 + zext_ln961_12_fu_1089_p1);

assign m_93_fu_589_p3 = ((p_Result_181_fu_575_p3[0:0] == 1'b1) ? tmp_V_fu_583_p2 : z_bits_fu_571_p1);

assign m_94_fu_801_p4 = {{m_80_fu_795_p2[63:1]}};

assign m_95_fu_491_p4 = {{m_85_fu_485_p2[63:1]}};

assign m_96_fu_897_p3 = ((p_Result_190_fu_883_p3[0:0] == 1'b1) ? tmp_V_32_fu_891_p2 : start_value_i);

assign m_fu_785_p3 = ((icmp_ln958_reg_1370[0:0] == 1'b1) ? lshr_ln958_fu_779_p2 : shl_ln959_fu_764_p2);

assign num_points_address1 = idxprom_i_fu_217_p1;

assign or_ln298_1_fu_1261_p2 = (icmp_ln298_3_reg_1450 | icmp_ln298_2_reg_1445);

assign or_ln298_fu_1257_p2 = (icmp_ln298_reg_1435 | icmp_ln298_1_reg_1440);

assign or_ln949_17_fu_669_p2 = (shl_ln949_fu_663_p2 | lshr_ln947_fu_657_p2);

assign or_ln949_18_fu_977_p2 = (shl_ln949_12_fu_971_p2 | lshr_ln947_12_fu_965_p2);

assign or_ln949_fu_377_p2 = (shl_ln949_11_fu_371_p2 | lshr_ln947_11_fu_365_p2);

assign p_Result_172_fu_505_p3 = m_85_fu_485_p2[32'd25];

assign p_Result_181_fu_575_p3 = points_q1[32'd31];

integer ap_tvar_int_0;

always @ (m_93_fu_589_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_182_fu_597_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_182_fu_597_p4[ap_tvar_int_0] = m_93_fu_589_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_183_fu_701_p3 = m_93_fu_589_p3[lsb_index_fu_621_p2];

assign p_Result_184_fu_849_p5 = {{zext_ln962_fu_811_p1[63:32]}, {tmp_i_fu_842_p3}, {zext_ln962_fu_811_p1[22:0]}};

integer ap_tvar_int_1;

always @ (tmp_V_35_reg_1316) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_186_fu_306_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_186_fu_306_p4[ap_tvar_int_1] = tmp_V_35_reg_1316[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_187_fu_408_p3 = tmp_V_35_reg_1316[lsb_index_12_fu_329_p2];

assign p_Result_188_fu_544_p5 = {{zext_ln962_8_fu_501_p1[63:32]}, {tmp_36_i_fu_537_p3}, {zext_ln962_8_fu_501_p1[22:0]}};

assign p_Result_189_fu_1132_p3 = {{1'd0}, {trunc_ln368_fu_1124_p1}};

assign p_Result_190_fu_883_p3 = start_value_i[32'd31];

integer ap_tvar_int_2;

always @ (m_96_fu_897_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_191_fu_905_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_191_fu_905_p4[ap_tvar_int_2] = m_96_fu_897_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_192_fu_1009_p3 = m_96_fu_897_p3[lsb_index_13_fu_929_p2];

assign p_Result_193_fu_1173_p5 = {{zext_ln962_9_fu_1145_p1[63:32]}, {tmp_38_i_fu_1166_p3}, {zext_ln962_9_fu_1145_p1[22:0]}};

assign p_Result_194_fu_1200_p3 = {{1'd0}, {data_V_5_fu_1189_p3}};

assign p_Result_s_fu_815_p3 = m_80_fu_795_p2[32'd25];

assign points_address1 = zext_ln297_fu_301_p1;

assign retval_0_i81_i_fu_564_p3 = ((tobool_i19_i_reg_1311[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_10_fu_560_p1);

assign select_ln935_fu_869_p3 = ((icmp_ln935_fu_747_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_865_p1);

assign select_ln943_11_fu_513_p3 = ((p_Result_172_fu_505_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_12_fu_1148_p3 = ((p_Result_178_reg_1415[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_823_p3 = ((p_Result_s_fu_815_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_11_fu_442_p3 = ((icmp_ln946_11_fu_345_p2[0:0] == 1'b1) ? icmp_ln949_11_fu_388_p2 : p_Result_187_fu_408_p3);

assign select_ln946_12_fu_1049_p3 = ((icmp_ln946_12_fu_945_p2[0:0] == 1'b1) ? icmp_ln949_12_fu_989_p2 : p_Result_192_fu_1009_p3);

assign select_ln946_fu_721_p3 = ((icmp_ln946_fu_637_p2[0:0] == 1'b1) ? icmp_ln949_fu_681_p2 : p_Result_183_fu_701_p3);

assign select_ln958_18_fu_465_p3 = ((icmp_ln958_8_fu_415_p2[0:0] == 1'b1) ? select_ln946_11_fu_442_p3 : and_ln949_23_fu_421_p2);

assign select_ln958_20_fu_1073_p3 = ((icmp_ln958_9_fu_1017_p2[0:0] == 1'b1) ? select_ln946_12_fu_1049_p3 : and_ln949_24_fu_1023_p2);

assign select_ln958_fu_729_p3 = ((icmp_ln958_fu_709_p2[0:0] == 1'b1) ? select_ln946_fu_721_p3 : and_ln949_22_fu_715_p2);

assign shl_ln297_1_fu_266_p3 = {{trunc_ln297_fu_262_p1}, {4'd0}};

assign shl_ln949_11_fu_371_p2 = 32'd1 << lsb_index_12_fu_329_p2;

assign shl_ln949_12_fu_971_p2 = 32'd1 << lsb_index_13_fu_929_p2;

assign shl_ln949_fu_663_p2 = 32'd1 << lsb_index_fu_621_p2;

assign shl_ln959_8_fu_437_p2 = m_113_i_reg_1323 << zext_ln959_16_fu_433_p1;

assign shl_ln959_9_fu_1043_p2 = zext_ln959_17_fu_1029_p1 << zext_ln959_18_fu_1039_p1;

assign shl_ln959_fu_764_p2 = zext_ln959_fu_752_p1 << zext_ln959_15_fu_760_p1;

assign shl_ln_fu_250_p3 = {{i_16_reg_1290}, {13'd0}};

assign sub_i23_i_fu_235_p2 = (32'd0 - p_Val2_61_reg_1282);

assign sub_ln703_fu_1277_p2 = (z_bits_reg_1348_pp0_iter1_reg - p_Val2_61_reg_1282);

assign sub_ln944_11_fu_323_p2 = (32'd32 - l_12_fu_315_p3);

assign sub_ln944_12_fu_923_p2 = (32'd32 - l_13_fu_915_p3);

assign sub_ln944_fu_615_p2 = (32'd32 - l_fu_607_p3);

assign sub_ln947_11_fu_355_p2 = ($signed(6'd57) - $signed(trunc_ln947_11_fu_351_p1));

assign sub_ln947_12_fu_955_p2 = ($signed(6'd57) - $signed(trunc_ln947_12_fu_951_p1));

assign sub_ln947_fu_647_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_643_p1));

assign sub_ln959_8_fu_427_p2 = (32'd25 - sub_ln944_11_fu_323_p2);

assign sub_ln959_9_fu_1033_p2 = (32'd25 - sub_ln944_12_fu_923_p2);

assign sub_ln959_fu_755_p2 = (32'd25 - sub_ln944_reg_1364);

assign sub_ln964_11_fu_525_p2 = (8'd12 - trunc_ln943_11_fu_521_p1);

assign sub_ln964_12_fu_1155_p2 = (8'd12 - trunc_ln943_12_reg_1420);

assign sub_ln964_fu_831_p2 = (8'd12 - trunc_ln943_reg_1380);

assign tmp_110_fu_627_p4 = {{lsb_index_fu_621_p2[31:1]}};

assign tmp_111_fu_687_p3 = lsb_index_fu_621_p2[32'd31];

assign tmp_113_fu_394_p3 = lsb_index_12_fu_329_p2[32'd31];

assign tmp_116_fu_935_p4 = {{lsb_index_13_fu_929_p2[31:1]}};

assign tmp_117_fu_995_p3 = lsb_index_13_fu_929_p2[32'd31];

assign tmp_30_fu_1223_p4 = {{data_V_5_fu_1189_p3[30:23]}};

assign tmp_36_i_fu_537_p3 = {{p_Result_185_reg_1300}, {add_ln964_11_fu_531_p2}};

assign tmp_38_i_fu_1166_p3 = {{p_Result_190_reg_1405}, {add_ln964_12_fu_1160_p2}};

assign tmp_93_fu_293_p3 = {{lshr_ln_fu_279_p4}, {trunc_ln297_1_fu_289_p1}};

assign tmp_V_32_fu_891_p2 = (32'd0 - start_value_i);

assign tmp_V_35_fu_240_p3 = ((p_Result_185_reg_1300[0:0] == 1'b1) ? sub_i23_i_fu_235_p2 : p_Val2_61_reg_1282);

assign tmp_V_fu_583_p2 = (32'd0 - z_bits_fu_571_p1);

assign tmp_fu_335_p4 = {{lsb_index_12_fu_329_p2[31:1]}};

assign tmp_i_fu_842_p3 = {{p_Result_181_reg_1354}, {add_ln964_fu_836_p2}};

assign tmp_s_fu_1213_p4 = {{data_V_fu_1121_p1[30:23]}};

assign tobool_i19_i_fu_230_p2 = ((p_Val2_61_reg_1282 == 32'd0) ? 1'b1 : 1'b0);

assign trunc_ln297_1_fu_289_p1 = ap_phi_mux_j_phi_fu_201_p4[8:0];

assign trunc_ln297_fu_262_p1 = ap_phi_mux_j_phi_fu_201_p4[11:0];

assign trunc_ln298_1_fu_1196_p1 = data_V_5_fu_1189_p3[22:0];

assign trunc_ln298_fu_1128_p1 = data_V_fu_1121_p1[22:0];

assign trunc_ln368_fu_1124_p1 = data_V_fu_1121_p1[30:0];

assign trunc_ln943_11_fu_521_p1 = l_12_fu_315_p3[7:0];

assign trunc_ln943_12_fu_1117_p1 = l_13_fu_915_p3[7:0];

assign trunc_ln943_fu_737_p1 = l_fu_607_p3[7:0];

assign trunc_ln947_11_fu_351_p1 = sub_ln944_11_fu_323_p2[5:0];

assign trunc_ln947_12_fu_951_p1 = sub_ln944_12_fu_923_p2[5:0];

assign trunc_ln947_fu_643_p1 = sub_ln944_fu_615_p2[5:0];

assign xor_ln949_11_fu_402_p2 = (tmp_113_fu_394_p3 ^ 1'd1);

assign xor_ln949_12_fu_1003_p2 = (tmp_117_fu_995_p3 ^ 1'd1);

assign xor_ln949_fu_695_p2 = (tmp_111_fu_687_p3 ^ 1'd1);

assign z_bits_fu_571_p1 = points_q1[31:0];

assign zext_ln297_fu_301_p1 = tmp_93_fu_293_p3;

assign zext_ln947_11_fu_361_p1 = sub_ln947_11_fu_355_p2;

assign zext_ln947_12_fu_961_p1 = sub_ln947_12_fu_955_p2;

assign zext_ln947_fu_653_p1 = sub_ln947_fu_647_p2;

assign zext_ln958_8_fu_456_p1 = add_ln958_8_fu_450_p2;

assign zext_ln958_9_fu_1063_p1 = add_ln958_9_fu_1057_p2;

assign zext_ln958_fu_775_p1 = add_ln958_fu_770_p2;

assign zext_ln959_15_fu_760_p1 = sub_ln959_fu_755_p2;

assign zext_ln959_16_fu_433_p1 = sub_ln959_8_fu_427_p2;

assign zext_ln959_17_fu_1029_p1 = m_96_fu_897_p3;

assign zext_ln959_18_fu_1039_p1 = sub_ln959_9_fu_1033_p2;

assign zext_ln959_fu_752_p1 = m_93_reg_1359;

assign zext_ln961_11_fu_481_p1 = select_ln958_18_fu_465_p3;

assign zext_ln961_12_fu_1089_p1 = select_ln958_20_fu_1073_p3;

assign zext_ln961_fu_792_p1 = select_ln958_reg_1375;

assign zext_ln962_8_fu_501_p1 = m_95_fu_491_p4;

assign zext_ln962_9_fu_1145_p1 = m_97_reg_1410;

assign zext_ln962_fu_811_p1 = m_94_fu_801_p4;

always @ (posedge ap_clk) begin
    m_113_i_reg_1323[63:32] <= 32'b00000000000000000000000000000000;
    shl_ln_reg_1329[12:0] <= 13'b0000000000000;
end

endmodule //system_top_p_find_starting_index_and_value8
