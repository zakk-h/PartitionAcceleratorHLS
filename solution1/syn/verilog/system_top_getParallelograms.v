// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_getParallelograms (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        superpoints_address0,
        superpoints_ce0,
        superpoints_q0,
        superpoints_address1,
        superpoints_ce1,
        superpoints_q1,
        superpoints_offset,
        pSlope_address0,
        pSlope_ce0,
        pSlope_we0,
        pSlope_d0,
        pSlope_offset,
        shadow_bottomL_jR_address0,
        shadow_bottomL_jR_ce0,
        shadow_bottomL_jR_we0,
        shadow_bottomL_jR_d0,
        shadow_bottomL_jR_offset,
        shadow_bottomR_jR_address0,
        shadow_bottomR_jR_ce0,
        shadow_bottomR_jR_we0,
        shadow_bottomR_jR_d0,
        shadow_bottomR_jR_offset,
        shadow_bottomL_jL_address0,
        shadow_bottomL_jL_ce0,
        shadow_bottomL_jL_we0,
        shadow_bottomL_jL_d0,
        shadow_bottomL_jL_offset,
        shadow_bottomR_jL_address0,
        shadow_bottomR_jL_ce0,
        shadow_bottomR_jL_we0,
        shadow_bottomR_jL_d0,
        shadow_bottomR_jL_offset,
        z1_min_address0,
        z1_min_ce0,
        z1_min_we0,
        z1_min_d0,
        z1_min_offset,
        z1_max_address0,
        z1_max_ce0,
        z1_max_we0,
        z1_max_d0,
        z1_max_offset
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state4 = 14'd4;
parameter    ap_ST_fsm_pp1_stage0 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_pp2_stage0 = 14'd32;
parameter    ap_ST_fsm_pp2_stage1 = 14'd64;
parameter    ap_ST_fsm_pp2_stage2 = 14'd128;
parameter    ap_ST_fsm_pp2_stage3 = 14'd256;
parameter    ap_ST_fsm_pp2_stage4 = 14'd512;
parameter    ap_ST_fsm_pp2_stage5 = 14'd1024;
parameter    ap_ST_fsm_pp2_stage6 = 14'd2048;
parameter    ap_ST_fsm_pp2_stage7 = 14'd4096;
parameter    ap_ST_fsm_state71 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] superpoints_address0;
output   superpoints_ce0;
input  [31:0] superpoints_q0;
output  [7:0] superpoints_address1;
output   superpoints_ce1;
input  [31:0] superpoints_q1;
input  [1:0] superpoints_offset;
output  [3:0] pSlope_address0;
output   pSlope_ce0;
output   pSlope_we0;
output  [31:0] pSlope_d0;
input  [1:0] pSlope_offset;
output  [3:0] shadow_bottomL_jR_address0;
output   shadow_bottomL_jR_ce0;
output   shadow_bottomL_jR_we0;
output  [31:0] shadow_bottomL_jR_d0;
input  [1:0] shadow_bottomL_jR_offset;
output  [3:0] shadow_bottomR_jR_address0;
output   shadow_bottomR_jR_ce0;
output   shadow_bottomR_jR_we0;
output  [31:0] shadow_bottomR_jR_d0;
input  [1:0] shadow_bottomR_jR_offset;
output  [3:0] shadow_bottomL_jL_address0;
output   shadow_bottomL_jL_ce0;
output   shadow_bottomL_jL_we0;
output  [31:0] shadow_bottomL_jL_d0;
input  [1:0] shadow_bottomL_jL_offset;
output  [3:0] shadow_bottomR_jL_address0;
output   shadow_bottomR_jL_ce0;
output   shadow_bottomR_jL_we0;
output  [31:0] shadow_bottomR_jL_d0;
input  [1:0] shadow_bottomR_jL_offset;
output  [3:0] z1_min_address0;
output   z1_min_ce0;
output   z1_min_we0;
output  [25:0] z1_min_d0;
input  [1:0] z1_min_offset;
output  [3:0] z1_max_address0;
output   z1_max_ce0;
output   z1_max_we0;
output  [25:0] z1_max_d0;
input  [1:0] z1_max_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] superpoints_address0;
reg superpoints_ce0;
reg[7:0] superpoints_address1;
reg superpoints_ce1;
reg pSlope_ce0;
reg pSlope_we0;
reg shadow_bottomL_jR_ce0;
reg shadow_bottomL_jR_we0;
reg shadow_bottomR_jR_ce0;
reg shadow_bottomR_jR_we0;
reg shadow_bottomL_jL_ce0;
reg shadow_bottomL_jL_we0;
reg shadow_bottomR_jL_ce0;
reg shadow_bottomR_jL_we0;
reg z1_min_ce0;
reg z1_min_we0;
reg z1_max_ce0;
reg z1_max_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] get_parallelogram_slopesparallelogram_slopes_address0;
reg    get_parallelogram_slopesparallelogram_slopes_ce0;
wire   [31:0] get_parallelogram_slopesparallelogram_slopes_q0;
reg   [4:0] i_reg_483;
reg   [31:0] p_012_i_reg_494;
reg   [4:0] i_1_reg_506;
reg   [31:0] p_012_i15_reg_517;
reg   [2:0] i_3_reg_529;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;
reg   [31:0] reg_553;
wire    ap_CS_fsm_pp2_stage2;
reg    ap_enable_reg_pp2_iter7;
wire    ap_block_state10_pp2_stage2_iter0;
wire    ap_block_state18_pp2_stage2_iter1;
wire    ap_block_state26_pp2_stage2_iter2;
wire    ap_block_state34_pp2_stage2_iter3;
wire    ap_block_state42_pp2_stage2_iter4;
wire    ap_block_state50_pp2_stage2_iter5;
wire    ap_block_state58_pp2_stage2_iter6;
wire    ap_block_state66_pp2_stage2_iter7;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] icmp_ln120_reg_1995;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter7_reg;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state11_pp2_stage3_iter0;
wire    ap_block_state19_pp2_stage3_iter1;
wire    ap_block_state27_pp2_stage3_iter2;
wire    ap_block_state35_pp2_stage3_iter3;
wire    ap_block_state43_pp2_stage3_iter4;
wire    ap_block_state51_pp2_stage3_iter5;
wire    ap_block_state59_pp2_stage3_iter6;
wire    ap_block_state67_pp2_stage3_iter7;
wire    ap_block_pp2_stage3_11001;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state12_pp2_stage4_iter0;
wire    ap_block_state20_pp2_stage4_iter1;
wire    ap_block_state28_pp2_stage4_iter2;
wire    ap_block_state36_pp2_stage4_iter3;
wire    ap_block_state44_pp2_stage4_iter4;
wire    ap_block_state52_pp2_stage4_iter5;
wire    ap_block_state60_pp2_stage4_iter6;
wire    ap_block_state68_pp2_stage4_iter7;
wire    ap_block_pp2_stage4_11001;
wire    ap_CS_fsm_pp2_stage5;
wire    ap_block_state13_pp2_stage5_iter0;
wire    ap_block_state21_pp2_stage5_iter1;
wire    ap_block_state29_pp2_stage5_iter2;
wire    ap_block_state37_pp2_stage5_iter3;
wire    ap_block_state45_pp2_stage5_iter4;
wire    ap_block_state53_pp2_stage5_iter5;
wire    ap_block_state61_pp2_stage5_iter6;
wire    ap_block_state69_pp2_stage5_iter7;
wire    ap_block_pp2_stage5_11001;
wire   [3:0] add_ln133_fu_573_p2;
reg   [3:0] add_ln133_reg_1899;
wire   [3:0] add_ln132_fu_591_p2;
reg   [3:0] add_ln132_reg_1904;
wire   [3:0] add_ln138_fu_609_p2;
reg   [3:0] add_ln138_reg_1909;
wire   [3:0] add_ln137_fu_627_p2;
reg   [3:0] add_ln137_reg_1914;
wire   [3:0] add_ln136_fu_645_p2;
reg   [3:0] add_ln136_reg_1919;
wire   [3:0] add_ln135_fu_663_p2;
reg   [3:0] add_ln135_reg_1924;
wire   [3:0] add_ln130_fu_681_p2;
reg   [3:0] add_ln130_reg_1929;
wire   [4:0] add_ln50_fu_703_p2;
reg   [4:0] add_ln50_reg_1934;
wire   [7:0] add_ln50_1_fu_729_p2;
reg   [7:0] add_ln50_1_reg_1939;
wire   [4:0] add_ln49_fu_735_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln49_fu_741_p2;
reg   [0:0] icmp_ln49_reg_1950;
wire   [31:0] superpoint_0_min_z_fu_767_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] add_ln63_fu_775_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln63_fu_781_p2;
reg   [0:0] icmp_ln63_reg_1969;
wire   [31:0] superpoint_0_max_z_fu_807_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [25:0] z1_max_tmp_V_1_fu_857_p3;
reg   [25:0] z1_max_tmp_V_1_reg_1983;
wire    ap_CS_fsm_state7;
wire   [25:0] z1_min_tmp_V_1_fu_865_p3;
reg   [25:0] z1_min_tmp_V_1_reg_1989;
wire   [0:0] icmp_ln120_fu_873_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
wire    ap_block_state32_pp2_stage0_iter3;
wire    ap_block_state40_pp2_stage0_iter4;
wire    ap_block_state48_pp2_stage0_iter5;
wire    ap_block_state56_pp2_stage0_iter6;
wire    ap_block_state64_pp2_stage0_iter7;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter1_reg;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter2_reg;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter3_reg;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter4_reg;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter5_reg;
reg   [0:0] icmp_ln120_reg_1995_pp2_iter6_reg;
wire   [7:0] tmp_26_cast_fu_910_p3;
reg   [7:0] tmp_26_cast_reg_1999;
wire   [3:0] zext_ln130_1_fu_939_p1;
reg   [3:0] zext_ln130_1_reg_2032;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter1_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter2_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter3_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter4_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter5_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter6_reg;
reg   [3:0] zext_ln130_1_reg_2032_pp2_iter7_reg;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state9_pp2_stage1_iter0;
wire    ap_block_state17_pp2_stage1_iter1;
wire    ap_block_state25_pp2_stage1_iter2;
wire    ap_block_state33_pp2_stage1_iter3;
wire    ap_block_state41_pp2_stage1_iter4;
wire    ap_block_state49_pp2_stage1_iter5;
wire    ap_block_state57_pp2_stage1_iter6;
wire    ap_block_state65_pp2_stage1_iter7;
wire    ap_block_pp2_stage1_11001;
wire   [31:0] select_ln51_1_fu_1017_p3;
reg   [31:0] select_ln51_1_reg_2051;
wire   [31:0] select_ln65_2_fu_1049_p3;
reg   [31:0] select_ln65_2_reg_2057;
reg   [31:0] get_parallelogram_slopesparallelogram_slopes_load_reg_2063;
wire   [31:0] select_ln51_3_fu_1095_p3;
reg   [31:0] select_ln51_3_reg_2079;
wire   [31:0] select_ln65_4_fu_1121_p3;
reg   [31:0] select_ln65_4_reg_2085;
wire   [62:0] trunc_ln555_fu_1133_p1;
reg   [62:0] trunc_ln555_reg_2091;
reg   [0:0] p_Result_s_reg_2096;
reg   [10:0] exp_tmp_reg_2101;
wire   [51:0] trunc_ln565_fu_1155_p1;
reg   [51:0] trunc_ln565_reg_2106;
wire   [2:0] j_fu_1159_p2;
reg   [2:0] j_reg_2111;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] select_ln51_5_fu_1203_p3;
reg   [31:0] select_ln51_5_reg_2127;
wire   [31:0] select_ln65_6_fu_1229_p3;
reg   [31:0] select_ln65_6_reg_2133;
wire   [0:0] icmp_ln120_1_fu_1237_p2;
reg   [0:0] icmp_ln120_1_reg_2139;
wire  signed [11:0] sh_amt_fu_1299_p3;
reg  signed [11:0] sh_amt_reg_2144;
wire   [31:0] trunc_ln583_fu_1313_p1;
reg   [31:0] trunc_ln583_reg_2149;
wire   [0:0] and_ln582_fu_1382_p2;
reg   [0:0] and_ln582_reg_2155;
wire   [0:0] and_ln581_fu_1400_p2;
reg   [0:0] and_ln581_reg_2161;
wire   [0:0] and_ln571_fu_1442_p2;
reg   [0:0] and_ln571_reg_2166;
wire   [0:0] or_ln571_1_fu_1448_p2;
reg   [0:0] or_ln571_1_reg_2171;
wire   [31:0] select_ln571_1_fu_1454_p3;
reg   [31:0] select_ln571_1_reg_2177;
wire   [31:0] select_ln51_7_fu_1500_p3;
reg   [31:0] select_ln51_7_reg_2192;
wire   [31:0] select_ln65_8_fu_1526_p3;
reg   [31:0] select_ln65_8_reg_2198;
wire   [31:0] select_ln51_9_fu_1633_p3;
reg   [31:0] select_ln51_9_reg_2214;
wire   [31:0] select_ln65_10_fu_1659_p3;
reg   [31:0] select_ln65_10_reg_2220;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_state14_pp2_stage6_iter0;
wire    ap_block_state22_pp2_stage6_iter1;
wire    ap_block_state30_pp2_stage6_iter2;
wire    ap_block_state38_pp2_stage6_iter3;
wire    ap_block_state46_pp2_stage6_iter4;
wire    ap_block_state54_pp2_stage6_iter5;
wire    ap_block_state62_pp2_stage6_iter6;
wire    ap_block_state70_pp2_stage6_iter7;
wire    ap_block_pp2_stage6_11001;
wire   [31:0] select_ln51_11_fu_1705_p3;
reg   [31:0] select_ln51_11_reg_2236;
wire   [31:0] select_ln65_12_fu_1731_p3;
reg   [31:0] select_ln65_12_reg_2242;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state15_pp2_stage7_iter0;
wire    ap_block_state23_pp2_stage7_iter1;
wire    ap_block_state31_pp2_stage7_iter2;
wire    ap_block_state39_pp2_stage7_iter3;
wire    ap_block_state47_pp2_stage7_iter4;
wire    ap_block_state55_pp2_stage7_iter5;
wire    ap_block_state63_pp2_stage7_iter6;
wire    ap_block_pp2_stage7_11001;
wire   [31:0] select_ln51_13_fu_1777_p3;
reg   [31:0] select_ln51_13_reg_2258;
wire   [31:0] select_ln65_14_fu_1803_p3;
reg   [31:0] select_ln65_14_reg_2264;
wire   [31:0] select_ln51_15_fu_1829_p3;
reg   [31:0] select_ln51_15_reg_2270;
wire   [31:0] select_ln65_16_fu_1855_p3;
reg   [31:0] select_ln65_16_reg_2275;
wire   [3:0] add_ln138_1_fu_1891_p2;
reg   [3:0] add_ln138_1_reg_2280;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage7_subdone;
wire    ap_block_pp2_stage6_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready;
reg   [25:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_i_3_phi_fu_533_p4;
wire    ap_block_pp2_stage0;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;
wire    ap_block_pp2_stage1;
wire    ap_block_pp2_stage2;
wire    ap_block_pp2_stage3;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln50_4_fu_756_p1;
wire   [63:0] zext_ln64_1_fu_796_p1;
wire   [63:0] zext_ln50_6_fu_905_p1;
wire   [63:0] zext_ln50_7_fu_924_p1;
wire   [63:0] trunc_ln100_cast_fu_879_p1;
wire   [63:0] zext_ln132_1_fu_948_p1;
wire   [63:0] zext_ln133_1_fu_958_p1;
wire   [63:0] zext_ln50_8_fu_968_p1;
wire   [63:0] zext_ln50_9_fu_978_p1;
wire   [63:0] zext_ln50_10_fu_1062_p1;
wire   [63:0] zext_ln50_11_fu_1072_p1;
wire   [63:0] zext_ln50_12_fu_1170_p1;
wire   [63:0] zext_ln50_13_fu_1180_p1;
wire   [63:0] zext_ln50_14_fu_1467_p1;
wire   [63:0] zext_ln50_15_fu_1477_p1;
wire   [63:0] zext_ln130_2_fu_1590_p1;
wire   [63:0] zext_ln50_16_fu_1600_p1;
wire    ap_block_pp2_stage5;
wire   [63:0] zext_ln50_17_fu_1610_p1;
wire   [63:0] zext_ln50_18_fu_1672_p1;
wire    ap_block_pp2_stage6;
wire   [63:0] zext_ln50_19_fu_1682_p1;
wire   [63:0] zext_ln50_20_fu_1744_p1;
wire    ap_block_pp2_stage7;
wire   [63:0] zext_ln50_21_fu_1754_p1;
wire   [63:0] zext_ln135_1_fu_1868_p1;
wire   [63:0] zext_ln136_1_fu_1877_p1;
wire   [63:0] zext_ln137_1_fu_1886_p1;
wire   [63:0] zext_ln138_1_fu_1895_p1;
wire   [3:0] tmp_fu_565_p3;
wire   [3:0] zext_ln133_fu_561_p1;
wire   [3:0] tmp_s_fu_583_p3;
wire   [3:0] zext_ln132_fu_579_p1;
wire   [3:0] tmp_1_fu_601_p3;
wire   [3:0] zext_ln138_fu_597_p1;
wire   [3:0] tmp_2_fu_619_p3;
wire   [3:0] zext_ln137_fu_615_p1;
wire   [3:0] tmp_3_fu_637_p3;
wire   [3:0] zext_ln136_fu_633_p1;
wire   [3:0] tmp_4_fu_655_p3;
wire   [3:0] zext_ln135_fu_651_p1;
wire   [3:0] tmp_5_fu_673_p3;
wire   [3:0] zext_ln130_fu_669_p1;
wire   [3:0] tmp_6_fu_691_p3;
wire   [4:0] zext_ln50_1_fu_699_p1;
wire   [4:0] zext_ln50_fu_687_p1;
wire   [5:0] tmp_8_fu_717_p3;
wire   [7:0] tmp_7_fu_709_p3;
wire   [7:0] zext_ln50_2_fu_725_p1;
wire   [7:0] zext_ln50_3_fu_747_p1;
wire   [7:0] add_ln50_2_fu_751_p2;
wire   [0:0] icmp_ln1495_fu_761_p2;
wire   [7:0] zext_ln64_fu_787_p1;
wire   [7:0] add_ln64_fu_791_p2;
wire   [0:0] icmp_ln1494_3_fu_801_p2;
wire   [0:0] icmp_ln1495_3_fu_815_p2;
wire   [31:0] z1_min_tmp_V_fu_821_p3;
wire   [0:0] icmp_ln1495_4_fu_833_p2;
wire   [31:0] z1_max_tmp_V_fu_839_p3;
wire   [0:0] icmp_ln1494_fu_851_p2;
wire   [25:0] trunc_ln91_fu_847_p1;
wire   [25:0] trunc_ln90_fu_829_p1;
wire   [4:0] zext_ln50_5_fu_884_p1;
wire   [4:0] add_ln50_3_fu_888_p2;
wire   [8:0] tmp_22_fu_897_p3;
wire   [3:0] trunc_ln50_fu_893_p1;
wire   [7:0] or_ln50_fu_918_p2;
wire   [1:0] trunc_ln129_fu_929_p1;
wire   [1:0] parallelogram_index_fu_933_p2;
wire   [3:0] add_ln132_1_fu_943_p2;
wire   [3:0] add_ln133_1_fu_953_p2;
wire   [7:0] or_ln50_1_fu_963_p2;
wire   [7:0] or_ln50_2_fu_973_p2;
wire   [1:0] tmp_23_fu_987_p4;
wire   [0:0] icmp_ln1495_5_fu_997_p2;
wire   [31:0] select_ln51_fu_1003_p3;
wire   [0:0] icmp_ln1495_6_fu_1011_p2;
wire   [0:0] icmp_ln1494_4_fu_1025_p2;
wire   [30:0] trunc_ln1495_fu_983_p1;
wire   [30:0] select_ln65_1_fu_1031_p3;
wire   [31:0] select_ln65_1_cast_fu_1039_p1;
wire   [0:0] icmp_ln1494_5_fu_1043_p2;
wire   [7:0] or_ln50_3_fu_1057_p2;
wire   [7:0] or_ln50_4_fu_1067_p2;
wire   [0:0] icmp_ln1495_7_fu_1077_p2;
wire   [31:0] select_ln51_2_fu_1082_p3;
wire   [0:0] icmp_ln1495_8_fu_1089_p2;
wire   [0:0] icmp_ln1494_6_fu_1103_p2;
wire   [31:0] select_ln65_3_fu_1108_p3;
wire   [0:0] icmp_ln1494_7_fu_1115_p2;
wire   [63:0] d_fu_550_p1;
wire   [63:0] ireg_fu_1129_p1;
wire   [7:0] or_ln50_5_fu_1165_p2;
wire   [7:0] or_ln50_6_fu_1175_p2;
wire   [0:0] icmp_ln1495_9_fu_1185_p2;
wire   [31:0] select_ln51_4_fu_1190_p3;
wire   [0:0] icmp_ln1495_10_fu_1197_p2;
wire   [0:0] icmp_ln1494_8_fu_1211_p2;
wire   [31:0] select_ln65_5_fu_1216_p3;
wire   [0:0] icmp_ln1494_9_fu_1223_p2;
wire   [52:0] p_Result_31_fu_1246_p3;
wire   [53:0] zext_ln569_fu_1253_p1;
wire   [53:0] man_V_3_fu_1257_p2;
wire   [11:0] zext_ln455_fu_1243_p1;
wire   [11:0] F2_fu_1275_p2;
wire   [0:0] icmp_ln581_fu_1281_p2;
wire   [11:0] add_ln581_fu_1287_p2;
wire   [11:0] sub_ln581_fu_1293_p2;
wire   [53:0] man_V_4_fu_1263_p3;
wire   [6:0] tmp_25_fu_1317_p4;
wire   [5:0] trunc_ln586_fu_1333_p1;
wire   [53:0] zext_ln586_fu_1337_p1;
wire   [53:0] ashr_ln586_fu_1341_p2;
wire   [31:0] bitcast_ln702_fu_1351_p1;
wire   [0:0] tmp_26_fu_1354_p3;
wire   [0:0] icmp_ln571_fu_1270_p2;
wire   [0:0] or_ln571_fu_1370_p2;
wire   [0:0] icmp_ln582_fu_1307_p2;
wire   [0:0] xor_ln571_fu_1376_p2;
wire   [0:0] or_ln582_fu_1388_p2;
wire   [0:0] xor_ln582_fu_1394_p2;
wire   [0:0] icmp_ln585_fu_1406_p2;
wire   [0:0] or_ln581_fu_1418_p2;
wire   [0:0] icmp_ln603_fu_1327_p2;
wire   [0:0] xor_ln581_fu_1424_p2;
wire   [0:0] xor_ln120_fu_1436_p2;
wire   [0:0] and_ln603_fu_1430_p2;
wire   [0:0] and_ln585_fu_1412_p2;
wire   [31:0] select_ln588_fu_1362_p3;
wire   [31:0] trunc_ln586_2_fu_1347_p1;
wire   [7:0] or_ln50_7_fu_1462_p2;
wire   [7:0] or_ln50_8_fu_1472_p2;
wire   [0:0] icmp_ln1495_11_fu_1482_p2;
wire   [31:0] select_ln51_6_fu_1487_p3;
wire   [0:0] icmp_ln1495_12_fu_1494_p2;
wire   [0:0] icmp_ln1494_10_fu_1508_p2;
wire   [31:0] select_ln65_7_fu_1513_p3;
wire   [0:0] icmp_ln1494_11_fu_1520_p2;
wire  signed [31:0] sext_ln581_fu_1534_p1;
wire   [31:0] shl_ln604_fu_1537_p2;
wire   [31:0] select_ln571_fu_1542_p3;
wire   [0:0] or_ln571_2_fu_1555_p2;
wire   [31:0] select_ln571_2_fu_1549_p3;
wire   [0:0] or_ln571_3_fu_1565_p2;
wire   [31:0] select_ln571_3_fu_1559_p3;
wire   [31:0] select_ln571_4_fu_1569_p3;
wire   [3:0] add_ln130_1_fu_1586_p2;
wire   [7:0] or_ln50_9_fu_1595_p2;
wire   [7:0] or_ln50_10_fu_1605_p2;
wire   [0:0] icmp_ln1495_13_fu_1615_p2;
wire   [31:0] select_ln51_8_fu_1620_p3;
wire   [0:0] icmp_ln1495_14_fu_1627_p2;
wire   [0:0] icmp_ln1494_12_fu_1641_p2;
wire   [31:0] select_ln65_9_fu_1646_p3;
wire   [0:0] icmp_ln1494_13_fu_1653_p2;
wire   [7:0] or_ln50_11_fu_1667_p2;
wire   [7:0] or_ln50_12_fu_1677_p2;
wire   [0:0] icmp_ln1495_15_fu_1687_p2;
wire   [31:0] select_ln51_10_fu_1692_p3;
wire   [0:0] icmp_ln1495_16_fu_1699_p2;
wire   [0:0] icmp_ln1494_14_fu_1713_p2;
wire   [31:0] select_ln65_11_fu_1718_p3;
wire   [0:0] icmp_ln1494_15_fu_1725_p2;
wire   [7:0] or_ln50_13_fu_1739_p2;
wire   [7:0] or_ln50_14_fu_1749_p2;
wire   [0:0] icmp_ln1495_17_fu_1759_p2;
wire   [31:0] select_ln51_12_fu_1764_p3;
wire   [0:0] icmp_ln1495_18_fu_1771_p2;
wire   [0:0] icmp_ln1494_16_fu_1785_p2;
wire   [31:0] select_ln65_13_fu_1790_p3;
wire   [0:0] icmp_ln1494_17_fu_1797_p2;
wire   [0:0] icmp_ln1495_19_fu_1811_p2;
wire   [31:0] select_ln51_14_fu_1816_p3;
wire   [0:0] icmp_ln1495_20_fu_1823_p2;
wire   [0:0] icmp_ln1494_18_fu_1837_p2;
wire   [31:0] select_ln65_15_fu_1842_p3;
wire   [0:0] icmp_ln1494_19_fu_1849_p2;
wire   [3:0] add_ln135_1_fu_1864_p2;
wire   [3:0] add_ln136_1_fu_1873_p2;
wire   [3:0] add_ln137_1_fu_1882_p2;
wire    ap_CS_fsm_state71;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_pp2_stage5_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg = 1'b0;
end

system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
get_parallelogram_slopesparallelogram_slopes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_parallelogram_slopesparallelogram_slopes_address0),
    .ce0(get_parallelogram_slopesparallelogram_slopes_ce0),
    .q0(get_parallelogram_slopesparallelogram_slopes_q0)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_541(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready),
    .ap_ce(1'b1),
    .z_i(grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j),
    .j(j_reg_2111),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return)
);

system_top_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U67(
    .din0(get_parallelogram_slopesparallelogram_slopes_load_reg_2063),
    .dout(d_fu_550_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter6 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone)))) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage7_11001)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_506 <= 5'd0;
    end else if (((icmp_ln63_fu_781_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_506 <= add_ln63_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_3_reg_529 <= j_reg_2111;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_3_reg_529 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_483 <= 5'd0;
    end else if (((icmp_ln49_fu_741_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_483 <= add_ln49_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_012_i15_reg_517 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln63_reg_1969 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_012_i15_reg_517 <= superpoint_0_max_z_fu_807_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_012_i_reg_494 <= 32'd1073741824;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln49_reg_1950 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_012_i_reg_494 <= superpoint_0_min_z_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln130_reg_1929 <= add_ln130_fu_681_p2;
        add_ln132_reg_1904 <= add_ln132_fu_591_p2;
        add_ln133_reg_1899 <= add_ln133_fu_573_p2;
        add_ln135_reg_1924 <= add_ln135_fu_663_p2;
        add_ln136_reg_1919 <= add_ln136_fu_645_p2;
        add_ln137_reg_1914 <= add_ln137_fu_627_p2;
        add_ln138_reg_1909 <= add_ln138_fu_609_p2;
        add_ln50_1_reg_1939[7 : 4] <= add_ln50_1_fu_729_p2[7 : 4];
        add_ln50_reg_1934 <= add_ln50_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        add_ln138_1_reg_2280 <= add_ln138_1_fu_1891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        and_ln571_reg_2166 <= and_ln571_fu_1442_p2;
        and_ln581_reg_2161 <= and_ln581_fu_1400_p2;
        and_ln582_reg_2155 <= and_ln582_fu_1382_p2;
        icmp_ln120_1_reg_2139 <= icmp_ln120_1_fu_1237_p2;
        or_ln571_1_reg_2171 <= or_ln571_1_fu_1448_p2;
        select_ln51_5_reg_2127 <= select_ln51_5_fu_1203_p3;
        select_ln571_1_reg_2177 <= select_ln571_1_fu_1454_p3;
        select_ln65_6_reg_2133 <= select_ln65_6_fu_1229_p3;
        sh_amt_reg_2144 <= sh_amt_fu_1299_p3;
        trunc_ln583_reg_2149 <= trunc_ln583_fu_1313_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        exp_tmp_reg_2101 <= {{ireg_fu_1129_p1[62:52]}};
        p_Result_s_reg_2096 <= ireg_fu_1129_p1[32'd63];
        select_ln51_3_reg_2079 <= select_ln51_3_fu_1095_p3;
        select_ln65_4_reg_2085 <= select_ln65_4_fu_1121_p3;
        trunc_ln555_reg_2091 <= trunc_ln555_fu_1133_p1;
        trunc_ln565_reg_2106 <= trunc_ln565_fu_1155_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        get_parallelogram_slopesparallelogram_slopes_load_reg_2063 <= get_parallelogram_slopesparallelogram_slopes_q0;
        select_ln51_1_reg_2051 <= select_ln51_1_fu_1017_p3;
        select_ln65_2_reg_2057 <= select_ln65_2_fu_1049_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln120_reg_1995 <= icmp_ln120_fu_873_p2;
        icmp_ln120_reg_1995_pp2_iter1_reg <= icmp_ln120_reg_1995;
        icmp_ln120_reg_1995_pp2_iter2_reg <= icmp_ln120_reg_1995_pp2_iter1_reg;
        icmp_ln120_reg_1995_pp2_iter3_reg <= icmp_ln120_reg_1995_pp2_iter2_reg;
        icmp_ln120_reg_1995_pp2_iter4_reg <= icmp_ln120_reg_1995_pp2_iter3_reg;
        icmp_ln120_reg_1995_pp2_iter5_reg <= icmp_ln120_reg_1995_pp2_iter4_reg;
        icmp_ln120_reg_1995_pp2_iter6_reg <= icmp_ln120_reg_1995_pp2_iter5_reg;
        icmp_ln120_reg_1995_pp2_iter7_reg <= icmp_ln120_reg_1995_pp2_iter6_reg;
        zext_ln130_1_reg_2032_pp2_iter1_reg[1 : 0] <= zext_ln130_1_reg_2032[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter2_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter1_reg[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter3_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter2_reg[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter4_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter3_reg[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter5_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter4_reg[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter6_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter5_reg[1 : 0];
        zext_ln130_1_reg_2032_pp2_iter7_reg[1 : 0] <= zext_ln130_1_reg_2032_pp2_iter6_reg[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln49_reg_1950 <= icmp_ln49_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln63_reg_1969 <= icmp_ln63_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        j_reg_2111 <= j_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage4_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)))) begin
        reg_553 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage6_11001))) begin
        select_ln51_11_reg_2236 <= select_ln51_11_fu_1705_p3;
        select_ln65_12_reg_2242 <= select_ln65_12_fu_1731_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage7) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage7_11001))) begin
        select_ln51_13_reg_2258 <= select_ln51_13_fu_1777_p3;
        select_ln65_14_reg_2264 <= select_ln65_14_fu_1803_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln51_15_reg_2270 <= select_ln51_15_fu_1829_p3;
        select_ln65_16_reg_2275 <= select_ln65_16_fu_1855_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        select_ln51_7_reg_2192 <= select_ln51_7_fu_1500_p3;
        select_ln65_8_reg_2198 <= select_ln65_8_fu_1526_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        select_ln51_9_reg_2214 <= select_ln51_9_fu_1633_p3;
        select_ln65_10_reg_2220 <= select_ln65_10_fu_1659_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_fu_873_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_26_cast_reg_1999[7 : 4] <= tmp_26_cast_fu_910_p3[7 : 4];
        zext_ln130_1_reg_2032[1 : 0] <= zext_ln130_1_fu_939_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        z1_max_tmp_V_1_reg_1983 <= z1_max_tmp_V_1_fu_857_p3;
        z1_min_tmp_V_1_reg_1989 <= z1_min_tmp_V_1_fu_865_p3;
    end
end

always @ (*) begin
    if ((icmp_ln49_fu_741_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln63_fu_781_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln120_fu_873_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_3_phi_fu_533_p4 = j_reg_2111;
    end else begin
        ap_phi_mux_i_3_phi_fu_533_p4 = i_3_reg_529;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b1;
    end else begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = z1_max_tmp_V_1_reg_1983;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = z1_min_tmp_V_1_reg_1989;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln51_15_reg_2270;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln120_reg_1995_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln65_16_reg_2275;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln65_16_fu_1855_p3;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        pSlope_ce0 = 1'b1;
    end else begin
        pSlope_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln120_reg_1995 == 1'd0) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        pSlope_we0 = 1'b1;
    end else begin
        pSlope_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomL_jL_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomL_jL_we0 = 1'b1;
    end else begin
        shadow_bottomL_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomL_jR_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomL_jR_we0 = 1'b1;
    end else begin
        shadow_bottomL_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomR_jL_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage6) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage6_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomR_jL_we0 = 1'b1;
    end else begin
        shadow_bottomR_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomR_jR_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln120_reg_1995_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage4_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        shadow_bottomR_jR_we0 = 1'b1;
    end else begin
        shadow_bottomR_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
        superpoints_address0 = zext_ln50_20_fu_1744_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
        superpoints_address0 = zext_ln50_18_fu_1672_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
        superpoints_address0 = zext_ln50_16_fu_1600_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        superpoints_address0 = zext_ln50_14_fu_1467_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        superpoints_address0 = zext_ln50_12_fu_1170_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        superpoints_address0 = zext_ln50_10_fu_1062_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        superpoints_address0 = zext_ln50_8_fu_968_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        superpoints_address0 = zext_ln50_7_fu_924_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        superpoints_address0 = zext_ln64_1_fu_796_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        superpoints_address0 = zext_ln50_4_fu_756_p1;
    end else begin
        superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
            superpoints_address1 = zext_ln50_21_fu_1754_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
            superpoints_address1 = zext_ln50_19_fu_1682_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
            superpoints_address1 = zext_ln50_17_fu_1610_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
            superpoints_address1 = zext_ln50_15_fu_1477_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
            superpoints_address1 = zext_ln50_13_fu_1180_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
            superpoints_address1 = zext_ln50_11_fu_1072_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
            superpoints_address1 = zext_ln50_9_fu_978_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
            superpoints_address1 = zext_ln50_6_fu_905_p1;
        end else begin
            superpoints_address1 = 'bx;
        end
    end else begin
        superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        superpoints_ce0 = 1'b1;
    end else begin
        superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)))) begin
        superpoints_ce1 = 1'b1;
    end else begin
        superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_max_ce0 = 1'b1;
    end else begin
        z1_max_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln120_fu_873_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_max_we0 = 1'b1;
    end else begin
        z1_max_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_min_ce0 = 1'b1;
    end else begin
        z1_min_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln120_fu_873_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_min_we0 = 1'b1;
    end else begin
        z1_min_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln49_fu_741_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln49_fu_741_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln63_fu_781_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln63_fu_781_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln120_fu_873_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln120_fu_873_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((~((ap_enable_reg_pp2_iter6 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_subdone) & (ap_enable_reg_pp2_iter7 == 1'b1)) & (1'b0 == ap_block_pp2_stage6_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else if (((ap_enable_reg_pp2_iter6 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_subdone) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1275_p2 = (12'd1075 - zext_ln455_fu_1243_p1);

assign add_ln130_1_fu_1586_p2 = (add_ln130_reg_1929 + zext_ln130_1_reg_2032);

assign add_ln130_fu_681_p2 = (tmp_5_fu_673_p3 + zext_ln130_fu_669_p1);

assign add_ln132_1_fu_943_p2 = (add_ln132_reg_1904 + zext_ln130_1_fu_939_p1);

assign add_ln132_fu_591_p2 = (tmp_s_fu_583_p3 + zext_ln132_fu_579_p1);

assign add_ln133_1_fu_953_p2 = (add_ln133_reg_1899 + zext_ln130_1_fu_939_p1);

assign add_ln133_fu_573_p2 = (tmp_fu_565_p3 + zext_ln133_fu_561_p1);

assign add_ln135_1_fu_1864_p2 = (add_ln135_reg_1924 + zext_ln130_1_reg_2032_pp2_iter7_reg);

assign add_ln135_fu_663_p2 = (tmp_4_fu_655_p3 + zext_ln135_fu_651_p1);

assign add_ln136_1_fu_1873_p2 = (add_ln136_reg_1919 + zext_ln130_1_reg_2032_pp2_iter7_reg);

assign add_ln136_fu_645_p2 = (tmp_3_fu_637_p3 + zext_ln136_fu_633_p1);

assign add_ln137_1_fu_1882_p2 = (add_ln137_reg_1914 + zext_ln130_1_reg_2032_pp2_iter7_reg);

assign add_ln137_fu_627_p2 = (tmp_2_fu_619_p3 + zext_ln137_fu_615_p1);

assign add_ln138_1_fu_1891_p2 = (add_ln138_reg_1909 + zext_ln130_1_reg_2032_pp2_iter7_reg);

assign add_ln138_fu_609_p2 = (tmp_1_fu_601_p3 + zext_ln138_fu_597_p1);

assign add_ln49_fu_735_p2 = (i_reg_483 + 5'd1);

assign add_ln50_1_fu_729_p2 = (tmp_7_fu_709_p3 + zext_ln50_2_fu_725_p1);

assign add_ln50_2_fu_751_p2 = (add_ln50_1_reg_1939 + zext_ln50_3_fu_747_p1);

assign add_ln50_3_fu_888_p2 = (add_ln50_reg_1934 + zext_ln50_5_fu_884_p1);

assign add_ln50_fu_703_p2 = (zext_ln50_1_fu_699_p1 + zext_ln50_fu_687_p1);

assign add_ln581_fu_1287_p2 = ($signed(F2_fu_1275_p2) + $signed(12'd4076));

assign add_ln63_fu_775_p2 = (i_1_reg_506 + 5'd1);

assign add_ln64_fu_791_p2 = (add_ln50_1_reg_1939 + zext_ln64_fu_787_p1);

assign and_ln571_fu_1442_p2 = (xor_ln120_fu_1436_p2 & icmp_ln571_fu_1270_p2);

assign and_ln581_fu_1400_p2 = (xor_ln582_fu_1394_p2 & icmp_ln581_fu_1281_p2);

assign and_ln582_fu_1382_p2 = (xor_ln571_fu_1376_p2 & icmp_ln582_fu_1307_p2);

assign and_ln585_fu_1412_p2 = (icmp_ln585_fu_1406_p2 & and_ln581_fu_1400_p2);

assign and_ln603_fu_1430_p2 = (xor_ln581_fu_1424_p2 & icmp_ln603_fu_1327_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp2_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp2_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp2_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp2_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp2_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp2_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp2_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp2_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp2_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ashr_ln586_fu_1341_p2 = $signed(man_V_4_fu_1263_p3) >>> zext_ln586_fu_1337_p1;

assign bitcast_ln702_fu_1351_p1 = get_parallelogram_slopesparallelogram_slopes_load_reg_2063;

assign get_parallelogram_slopesparallelogram_slopes_address0 = trunc_ln100_cast_fu_879_p1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;

assign icmp_ln120_1_fu_1237_p2 = ((j_fu_1159_p2 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_873_p2 = ((ap_phi_mux_i_3_phi_fu_533_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1494_10_fu_1508_p2 = (($signed(superpoints_q0) > $signed(select_ln65_6_reg_2133)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_1520_p2 = (($signed(superpoints_q1) > $signed(select_ln65_7_fu_1513_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_1641_p2 = (($signed(superpoints_q0) > $signed(select_ln65_8_reg_2198)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1653_p2 = (($signed(superpoints_q1) > $signed(select_ln65_9_fu_1646_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_1713_p2 = (($signed(superpoints_q0) > $signed(select_ln65_10_reg_2220)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_1725_p2 = (($signed(superpoints_q1) > $signed(select_ln65_11_fu_1718_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_1785_p2 = (($signed(superpoints_q0) > $signed(select_ln65_12_reg_2242)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_1797_p2 = (($signed(superpoints_q1) > $signed(select_ln65_13_fu_1790_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_1837_p2 = (($signed(superpoints_q0) > $signed(select_ln65_14_reg_2264)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_1849_p2 = (($signed(superpoints_q1) > $signed(select_ln65_15_fu_1842_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_801_p2 = (($signed(superpoints_q0) > $signed(p_012_i15_reg_517)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_1025_p2 = (($signed(superpoints_q1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_1043_p2 = (($signed(superpoints_q0) > $signed(select_ln65_1_cast_fu_1039_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_1103_p2 = (($signed(superpoints_q0) > $signed(select_ln65_2_reg_2057)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_1115_p2 = (($signed(superpoints_q1) > $signed(select_ln65_3_fu_1108_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_1211_p2 = (($signed(superpoints_q0) > $signed(select_ln65_4_reg_2085)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_1223_p2 = (($signed(superpoints_q1) > $signed(select_ln65_5_fu_1216_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_851_p2 = (($signed(z1_min_tmp_V_fu_821_p3) > $signed(z1_max_tmp_V_fu_839_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_10_fu_1197_p2 = (($signed(superpoints_q1) < $signed(select_ln51_4_fu_1190_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_11_fu_1482_p2 = (($signed(superpoints_q0) < $signed(select_ln51_5_reg_2127)) ? 1'b1 : 1'b0);

assign icmp_ln1495_12_fu_1494_p2 = (($signed(superpoints_q1) < $signed(select_ln51_6_fu_1487_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_13_fu_1615_p2 = (($signed(superpoints_q0) < $signed(select_ln51_7_reg_2192)) ? 1'b1 : 1'b0);

assign icmp_ln1495_14_fu_1627_p2 = (($signed(superpoints_q1) < $signed(select_ln51_8_fu_1620_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_15_fu_1687_p2 = (($signed(superpoints_q0) < $signed(select_ln51_9_reg_2214)) ? 1'b1 : 1'b0);

assign icmp_ln1495_16_fu_1699_p2 = (($signed(superpoints_q1) < $signed(select_ln51_10_fu_1692_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_17_fu_1759_p2 = (($signed(superpoints_q0) < $signed(select_ln51_11_reg_2236)) ? 1'b1 : 1'b0);

assign icmp_ln1495_18_fu_1771_p2 = (($signed(superpoints_q1) < $signed(select_ln51_12_fu_1764_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_19_fu_1811_p2 = (($signed(superpoints_q0) < $signed(select_ln51_13_reg_2258)) ? 1'b1 : 1'b0);

assign icmp_ln1495_20_fu_1823_p2 = (($signed(superpoints_q1) < $signed(select_ln51_14_fu_1816_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_815_p2 = (($signed(p_012_i_reg_494) < $signed(32'd4271898520)) ? 1'b1 : 1'b0);

assign icmp_ln1495_4_fu_833_p2 = (($signed(p_012_i15_reg_517) > $signed(32'd23068776)) ? 1'b1 : 1'b0);

assign icmp_ln1495_5_fu_997_p2 = ((tmp_23_fu_987_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_1011_p2 = (($signed(superpoints_q0) < $signed(select_ln51_fu_1003_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_1077_p2 = (($signed(superpoints_q0) < $signed(select_ln51_1_reg_2051)) ? 1'b1 : 1'b0);

assign icmp_ln1495_8_fu_1089_p2 = (($signed(superpoints_q1) < $signed(select_ln51_2_fu_1082_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_1185_p2 = (($signed(superpoints_q0) < $signed(select_ln51_3_reg_2079)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_761_p2 = (($signed(superpoints_q0) < $signed(p_012_i_reg_494)) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_741_p2 = ((i_reg_483 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1270_p2 = ((trunc_ln555_reg_2091 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1281_p2 = (($signed(F2_fu_1275_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1307_p2 = ((F2_fu_1275_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1406_p2 = ((sh_amt_fu_1299_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1327_p2 = ((tmp_25_fu_1317_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_781_p2 = ((i_1_reg_506 == 5'd16) ? 1'b1 : 1'b0);

assign ireg_fu_1129_p1 = d_fu_550_p1;

assign j_fu_1159_p2 = (i_3_reg_529 + 3'd1);

assign man_V_3_fu_1257_p2 = (54'd0 - zext_ln569_fu_1253_p1);

assign man_V_4_fu_1263_p3 = ((p_Result_s_reg_2096[0:0] == 1'b1) ? man_V_3_fu_1257_p2 : zext_ln569_fu_1253_p1);

assign or_ln50_10_fu_1605_p2 = (tmp_26_cast_reg_1999 | 8'd11);

assign or_ln50_11_fu_1667_p2 = (tmp_26_cast_reg_1999 | 8'd12);

assign or_ln50_12_fu_1677_p2 = (tmp_26_cast_reg_1999 | 8'd13);

assign or_ln50_13_fu_1739_p2 = (tmp_26_cast_reg_1999 | 8'd14);

assign or_ln50_14_fu_1749_p2 = (tmp_26_cast_reg_1999 | 8'd15);

assign or_ln50_1_fu_963_p2 = (tmp_26_cast_reg_1999 | 8'd2);

assign or_ln50_2_fu_973_p2 = (tmp_26_cast_reg_1999 | 8'd3);

assign or_ln50_3_fu_1057_p2 = (tmp_26_cast_reg_1999 | 8'd4);

assign or_ln50_4_fu_1067_p2 = (tmp_26_cast_reg_1999 | 8'd5);

assign or_ln50_5_fu_1165_p2 = (tmp_26_cast_reg_1999 | 8'd6);

assign or_ln50_6_fu_1175_p2 = (tmp_26_cast_reg_1999 | 8'd7);

assign or_ln50_7_fu_1462_p2 = (tmp_26_cast_reg_1999 | 8'd8);

assign or_ln50_8_fu_1472_p2 = (tmp_26_cast_reg_1999 | 8'd9);

assign or_ln50_9_fu_1595_p2 = (tmp_26_cast_reg_1999 | 8'd10);

assign or_ln50_fu_918_p2 = (tmp_26_cast_fu_910_p3 | 8'd1);

assign or_ln571_1_fu_1448_p2 = (and_ln603_fu_1430_p2 | and_ln571_fu_1442_p2);

assign or_ln571_2_fu_1555_p2 = (icmp_ln120_1_reg_2139 | and_ln582_reg_2155);

assign or_ln571_3_fu_1565_p2 = (or_ln571_1_reg_2171 | and_ln581_reg_2161);

assign or_ln571_fu_1370_p2 = (icmp_ln571_fu_1270_p2 | icmp_ln120_1_fu_1237_p2);

assign or_ln581_fu_1418_p2 = (or_ln582_fu_1388_p2 | icmp_ln581_fu_1281_p2);

assign or_ln582_fu_1388_p2 = (or_ln571_fu_1370_p2 | icmp_ln582_fu_1307_p2);

assign pSlope_address0 = zext_ln130_2_fu_1590_p1;

assign pSlope_d0 = ((or_ln571_3_fu_1565_p2[0:0] == 1'b1) ? select_ln571_3_fu_1559_p3 : select_ln571_4_fu_1569_p3);

assign p_Result_31_fu_1246_p3 = {{1'd1}, {trunc_ln565_reg_2106}};

assign parallelogram_index_fu_933_p2 = ($signed(trunc_ln129_fu_929_p1) + $signed(2'd3));

assign select_ln51_10_fu_1692_p3 = ((icmp_ln1495_15_fu_1687_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_9_reg_2214);

assign select_ln51_11_fu_1705_p3 = ((icmp_ln1495_16_fu_1699_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_10_fu_1692_p3);

assign select_ln51_12_fu_1764_p3 = ((icmp_ln1495_17_fu_1759_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_11_reg_2236);

assign select_ln51_13_fu_1777_p3 = ((icmp_ln1495_18_fu_1771_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_12_fu_1764_p3);

assign select_ln51_14_fu_1816_p3 = ((icmp_ln1495_19_fu_1811_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_13_reg_2258);

assign select_ln51_15_fu_1829_p3 = ((icmp_ln1495_20_fu_1823_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_14_fu_1816_p3);

assign select_ln51_1_fu_1017_p3 = ((icmp_ln1495_6_fu_1011_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_fu_1003_p3);

assign select_ln51_2_fu_1082_p3 = ((icmp_ln1495_7_fu_1077_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_1_reg_2051);

assign select_ln51_3_fu_1095_p3 = ((icmp_ln1495_8_fu_1089_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_2_fu_1082_p3);

assign select_ln51_4_fu_1190_p3 = ((icmp_ln1495_9_fu_1185_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_3_reg_2079);

assign select_ln51_5_fu_1203_p3 = ((icmp_ln1495_10_fu_1197_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_4_fu_1190_p3);

assign select_ln51_6_fu_1487_p3 = ((icmp_ln1495_11_fu_1482_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_5_reg_2127);

assign select_ln51_7_fu_1500_p3 = ((icmp_ln1495_12_fu_1494_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_6_fu_1487_p3);

assign select_ln51_8_fu_1620_p3 = ((icmp_ln1495_13_fu_1615_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln51_7_reg_2192);

assign select_ln51_9_fu_1633_p3 = ((icmp_ln1495_14_fu_1627_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln51_8_fu_1620_p3);

assign select_ln51_fu_1003_p3 = ((icmp_ln1495_5_fu_997_p2[0:0] == 1'b1) ? superpoints_q1 : 32'd1073741824);

assign select_ln571_1_fu_1454_p3 = ((and_ln585_fu_1412_p2[0:0] == 1'b1) ? select_ln588_fu_1362_p3 : trunc_ln586_2_fu_1347_p1);

assign select_ln571_2_fu_1549_p3 = ((and_ln582_reg_2155[0:0] == 1'b1) ? trunc_ln583_reg_2149 : 32'd1073741824);

assign select_ln571_3_fu_1559_p3 = ((or_ln571_1_reg_2171[0:0] == 1'b1) ? select_ln571_fu_1542_p3 : select_ln571_1_reg_2177);

assign select_ln571_4_fu_1569_p3 = ((or_ln571_2_fu_1555_p2[0:0] == 1'b1) ? select_ln571_2_fu_1549_p3 : 32'd0);

assign select_ln571_fu_1542_p3 = ((and_ln571_reg_2166[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_1537_p2);

assign select_ln588_fu_1362_p3 = ((tmp_26_fu_1354_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln65_10_fu_1659_p3 = ((icmp_ln1494_13_fu_1653_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_9_fu_1646_p3);

assign select_ln65_11_fu_1718_p3 = ((icmp_ln1494_14_fu_1713_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_10_reg_2220);

assign select_ln65_12_fu_1731_p3 = ((icmp_ln1494_15_fu_1725_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_11_fu_1718_p3);

assign select_ln65_13_fu_1790_p3 = ((icmp_ln1494_16_fu_1785_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_12_reg_2242);

assign select_ln65_14_fu_1803_p3 = ((icmp_ln1494_17_fu_1797_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_13_fu_1790_p3);

assign select_ln65_15_fu_1842_p3 = ((icmp_ln1494_18_fu_1837_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_14_reg_2264);

assign select_ln65_16_fu_1855_p3 = ((icmp_ln1494_19_fu_1849_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_15_fu_1842_p3);

assign select_ln65_1_cast_fu_1039_p1 = select_ln65_1_fu_1031_p3;

assign select_ln65_1_fu_1031_p3 = ((icmp_ln1494_4_fu_1025_p2[0:0] == 1'b1) ? trunc_ln1495_fu_983_p1 : 31'd0);

assign select_ln65_2_fu_1049_p3 = ((icmp_ln1494_5_fu_1043_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_1_cast_fu_1039_p1);

assign select_ln65_3_fu_1108_p3 = ((icmp_ln1494_6_fu_1103_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_2_reg_2057);

assign select_ln65_4_fu_1121_p3 = ((icmp_ln1494_7_fu_1115_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_3_fu_1108_p3);

assign select_ln65_5_fu_1216_p3 = ((icmp_ln1494_8_fu_1211_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_4_reg_2085);

assign select_ln65_6_fu_1229_p3 = ((icmp_ln1494_9_fu_1223_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_5_fu_1216_p3);

assign select_ln65_7_fu_1513_p3 = ((icmp_ln1494_10_fu_1508_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_6_reg_2133);

assign select_ln65_8_fu_1526_p3 = ((icmp_ln1494_11_fu_1520_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln65_7_fu_1513_p3);

assign select_ln65_9_fu_1646_p3 = ((icmp_ln1494_12_fu_1641_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln65_8_reg_2198);

assign sext_ln581_fu_1534_p1 = sh_amt_reg_2144;

assign sh_amt_fu_1299_p3 = ((icmp_ln581_fu_1281_p2[0:0] == 1'b1) ? add_ln581_fu_1287_p2 : sub_ln581_fu_1293_p2);

assign shadow_bottomL_jL_address0 = zext_ln137_1_fu_1886_p1;

assign shadow_bottomL_jL_d0 = reg_553;

assign shadow_bottomL_jR_address0 = zext_ln135_1_fu_1868_p1;

assign shadow_bottomL_jR_d0 = reg_553;

assign shadow_bottomR_jL_address0 = zext_ln138_1_fu_1895_p1;

assign shadow_bottomR_jL_d0 = reg_553;

assign shadow_bottomR_jR_address0 = zext_ln136_1_fu_1877_p1;

assign shadow_bottomR_jR_d0 = reg_553;

assign shl_ln604_fu_1537_p2 = trunc_ln583_reg_2149 << sext_ln581_fu_1534_p1;

assign sub_ln581_fu_1293_p2 = (12'd20 - F2_fu_1275_p2);

assign superpoint_0_max_z_fu_807_p3 = ((icmp_ln1494_3_fu_801_p2[0:0] == 1'b1) ? superpoints_q0 : p_012_i15_reg_517);

assign superpoint_0_min_z_fu_767_p3 = ((icmp_ln1495_fu_761_p2[0:0] == 1'b1) ? superpoints_q0 : p_012_i_reg_494);

assign tmp_1_fu_601_p3 = {{shadow_bottomR_jL_offset}, {2'd0}};

assign tmp_22_fu_897_p3 = {{add_ln50_3_fu_888_p2}, {4'd0}};

assign tmp_23_fu_987_p4 = {{superpoints_q1[31:30]}};

assign tmp_25_fu_1317_p4 = {{sh_amt_fu_1299_p3[11:5]}};

assign tmp_26_cast_fu_910_p3 = {{trunc_ln50_fu_893_p1}, {4'd0}};

assign tmp_26_fu_1354_p3 = bitcast_ln702_fu_1351_p1[32'd31];

assign tmp_2_fu_619_p3 = {{shadow_bottomL_jL_offset}, {2'd0}};

assign tmp_3_fu_637_p3 = {{shadow_bottomR_jR_offset}, {2'd0}};

assign tmp_4_fu_655_p3 = {{shadow_bottomL_jR_offset}, {2'd0}};

assign tmp_5_fu_673_p3 = {{pSlope_offset}, {2'd0}};

assign tmp_6_fu_691_p3 = {{superpoints_offset}, {2'd0}};

assign tmp_7_fu_709_p3 = {{superpoints_offset}, {6'd0}};

assign tmp_8_fu_717_p3 = {{superpoints_offset}, {4'd0}};

assign tmp_fu_565_p3 = {{z1_max_offset}, {2'd0}};

assign tmp_s_fu_583_p3 = {{z1_min_offset}, {2'd0}};

assign trunc_ln100_cast_fu_879_p1 = ap_phi_mux_i_3_phi_fu_533_p4;

assign trunc_ln129_fu_929_p1 = ap_phi_mux_i_3_phi_fu_533_p4[1:0];

assign trunc_ln1495_fu_983_p1 = superpoints_q1[30:0];

assign trunc_ln50_fu_893_p1 = add_ln50_3_fu_888_p2[3:0];

assign trunc_ln555_fu_1133_p1 = ireg_fu_1129_p1[62:0];

assign trunc_ln565_fu_1155_p1 = ireg_fu_1129_p1[51:0];

assign trunc_ln583_fu_1313_p1 = man_V_4_fu_1263_p3[31:0];

assign trunc_ln586_2_fu_1347_p1 = ashr_ln586_fu_1341_p2[31:0];

assign trunc_ln586_fu_1333_p1 = sh_amt_fu_1299_p3[5:0];

assign trunc_ln90_fu_829_p1 = z1_min_tmp_V_fu_821_p3[25:0];

assign trunc_ln91_fu_847_p1 = z1_max_tmp_V_fu_839_p3[25:0];

assign xor_ln120_fu_1436_p2 = (icmp_ln120_1_fu_1237_p2 ^ 1'd1);

assign xor_ln571_fu_1376_p2 = (or_ln571_fu_1370_p2 ^ 1'd1);

assign xor_ln581_fu_1424_p2 = (or_ln581_fu_1418_p2 ^ 1'd1);

assign xor_ln582_fu_1394_p2 = (or_ln582_fu_1388_p2 ^ 1'd1);

assign z1_max_address0 = zext_ln133_1_fu_958_p1;

assign z1_max_d0 = z1_max_tmp_V_1_reg_1983;

assign z1_max_tmp_V_1_fu_857_p3 = ((icmp_ln1494_fu_851_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln91_fu_847_p1);

assign z1_max_tmp_V_fu_839_p3 = ((icmp_ln1495_4_fu_833_p2[0:0] == 1'b1) ? 32'd23068776 : p_012_i15_reg_517);

assign z1_min_address0 = zext_ln132_1_fu_948_p1;

assign z1_min_d0 = z1_min_tmp_V_1_reg_1989;

assign z1_min_tmp_V_1_fu_865_p3 = ((icmp_ln1494_fu_851_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln90_fu_829_p1);

assign z1_min_tmp_V_fu_821_p3 = ((icmp_ln1495_3_fu_815_p2[0:0] == 1'b1) ? 32'd4271898520 : p_012_i_reg_494);

assign zext_ln130_1_fu_939_p1 = parallelogram_index_fu_933_p2;

assign zext_ln130_2_fu_1590_p1 = add_ln130_1_fu_1586_p2;

assign zext_ln130_fu_669_p1 = pSlope_offset;

assign zext_ln132_1_fu_948_p1 = add_ln132_1_fu_943_p2;

assign zext_ln132_fu_579_p1 = z1_min_offset;

assign zext_ln133_1_fu_958_p1 = add_ln133_1_fu_953_p2;

assign zext_ln133_fu_561_p1 = z1_max_offset;

assign zext_ln135_1_fu_1868_p1 = add_ln135_1_fu_1864_p2;

assign zext_ln135_fu_651_p1 = shadow_bottomL_jR_offset;

assign zext_ln136_1_fu_1877_p1 = add_ln136_1_fu_1873_p2;

assign zext_ln136_fu_633_p1 = shadow_bottomR_jR_offset;

assign zext_ln137_1_fu_1886_p1 = add_ln137_1_fu_1882_p2;

assign zext_ln137_fu_615_p1 = shadow_bottomL_jL_offset;

assign zext_ln138_1_fu_1895_p1 = add_ln138_1_reg_2280;

assign zext_ln138_fu_597_p1 = shadow_bottomR_jL_offset;

assign zext_ln455_fu_1243_p1 = exp_tmp_reg_2101;

assign zext_ln50_10_fu_1062_p1 = or_ln50_3_fu_1057_p2;

assign zext_ln50_11_fu_1072_p1 = or_ln50_4_fu_1067_p2;

assign zext_ln50_12_fu_1170_p1 = or_ln50_5_fu_1165_p2;

assign zext_ln50_13_fu_1180_p1 = or_ln50_6_fu_1175_p2;

assign zext_ln50_14_fu_1467_p1 = or_ln50_7_fu_1462_p2;

assign zext_ln50_15_fu_1477_p1 = or_ln50_8_fu_1472_p2;

assign zext_ln50_16_fu_1600_p1 = or_ln50_9_fu_1595_p2;

assign zext_ln50_17_fu_1610_p1 = or_ln50_10_fu_1605_p2;

assign zext_ln50_18_fu_1672_p1 = or_ln50_11_fu_1667_p2;

assign zext_ln50_19_fu_1682_p1 = or_ln50_12_fu_1677_p2;

assign zext_ln50_1_fu_699_p1 = tmp_6_fu_691_p3;

assign zext_ln50_20_fu_1744_p1 = or_ln50_13_fu_1739_p2;

assign zext_ln50_21_fu_1754_p1 = or_ln50_14_fu_1749_p2;

assign zext_ln50_2_fu_725_p1 = tmp_8_fu_717_p3;

assign zext_ln50_3_fu_747_p1 = i_reg_483;

assign zext_ln50_4_fu_756_p1 = add_ln50_2_fu_751_p2;

assign zext_ln50_5_fu_884_p1 = ap_phi_mux_i_3_phi_fu_533_p4;

assign zext_ln50_6_fu_905_p1 = tmp_22_fu_897_p3;

assign zext_ln50_7_fu_924_p1 = or_ln50_fu_918_p2;

assign zext_ln50_8_fu_968_p1 = or_ln50_1_fu_963_p2;

assign zext_ln50_9_fu_978_p1 = or_ln50_2_fu_973_p2;

assign zext_ln50_fu_687_p1 = superpoints_offset;

assign zext_ln569_fu_1253_p1 = p_Result_31_fu_1246_p3;

assign zext_ln586_fu_1337_p1 = trunc_ln586_fu_1333_p1;

assign zext_ln64_1_fu_796_p1 = add_ln64_fu_791_p2;

assign zext_ln64_fu_787_p1 = i_1_reg_506;

always @ (posedge ap_clk) begin
    add_ln50_1_reg_1939[3:0] <= 4'b0000;
    tmp_26_cast_reg_1999[3:0] <= 4'b0000;
    zext_ln130_1_reg_2032[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter1_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter2_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter3_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter4_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter5_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter6_reg[3:2] <= 2'b00;
    zext_ln130_1_reg_2032_pp2_iter7_reg[3:2] <= 2'b00;
end

endmodule //system_top_getParallelograms
