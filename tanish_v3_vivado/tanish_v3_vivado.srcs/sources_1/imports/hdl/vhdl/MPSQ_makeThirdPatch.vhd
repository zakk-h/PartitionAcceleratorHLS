-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_idle : IN STD_LOGIC );
end;


architecture behav of MPSQ_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (81 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (81 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (81 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (81 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (81 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (81 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (81 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (81 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (81 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (81 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FFF0BDC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_24 : STD_LOGIC_VECTOR (11 downto 0) := "000000100100";
    constant ap_const_lv12_2A : STD_LOGIC_VECTOR (11 downto 0) := "000000101010";
    constant ap_const_lv12_1E : STD_LOGIC_VECTOR (11 downto 0) := "000000011110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_11E1A2FF : STD_LOGIC_VECTOR (31 downto 0) := "00010001111000011010001011111111";
    constant ap_const_lv33_1FFFFFF9C : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110011100";
    constant ap_const_lv33_32 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000110010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal reg_575 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal makeHorizontallyShiftedPatch_reg_437 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal empty_fu_586_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_1429 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_1_fu_602_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_1_reg_1437 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln943_fu_628_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln943_reg_1445 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln934_fu_652_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln934_reg_1453 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln934_fu_658_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln934_reg_1460 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal original_topR_jL_V_reg_1470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal and_ln935_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln935_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal patches_parameters_addr_13_reg_1507 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_14_reg_1512 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_15_reg_1517 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_16_reg_1522 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_12_reg_1527 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_17_reg_1532 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_18_reg_1537 : STD_LOGIC_VECTOR (11 downto 0);
    signal phitmp_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal original_topL_jL_V_3_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln886_2_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_2_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln878_2_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_reg_1560 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp4_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal complementary_topR_jR_V_3_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal and_ln945_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln945_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal phitmp3_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal complementary_topL_jR_V_3_reg_1587 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln886_4_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_4_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal icmp_ln878_4_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_reg_1600 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp5_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal or_ln1005_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1005_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1005_2_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1005_2_reg_1628 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal complementary_topR_jL_V_reg_1633 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal complementary_topL_jL_V_reg_1638 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_5_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_5_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalShiftTop_fu_942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal horizontalShiftBottom_fu_946_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln985_fu_976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_1675 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_reg_1689 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_V_1_fu_996_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_1_reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln973_fu_1002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal or_ln1005_1_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1005_1_reg_1706 : STD_LOGIC_VECTOR (0 downto 0);
    signal loopCounter_2_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loopCounter_2_reg_1710 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1005_2_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1005_2_reg_1715 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1005_1_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1005_1_reg_1719 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln534_fu_1092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln534_reg_1723 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_5_fu_1115_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_1728 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln973_1_fu_1122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln973_1_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1025_fu_1130_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1025_reg_1739 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_494_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign1_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal add_ln1031_fu_1141_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1031_reg_1749 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal sub_ln1035_fu_1165_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1035_reg_1757 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal add_ln1035_fu_1171_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1035_reg_1763 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1036_fu_1177_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1036_reg_1768 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal add_ln1037_fu_1191_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1037_reg_1783 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1038_fu_1196_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1038_reg_1788 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal original_topL_jL_V_4_fu_1209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_reg_1803 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_fu_1216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_reg_1810 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_fu_1223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_reg_1817 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_fu_1230_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_reg_1823 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_fu_1237_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_reg_1829 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal complementary_topL_jR_V_4_fu_1244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_4_reg_1836 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_fu_1251_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_fu_1258_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_reg_1850 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_16_fu_1265_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_16_reg_1856 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal sext_ln215_17_fu_1268_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_17_reg_1861 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftTop_1_fu_1271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_1_reg_1866 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_18_fu_1275_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_reg_1871 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_fu_1278_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_reg_1876 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftBottom_1_fu_1281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftBottom_1_reg_1881 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_6_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1886 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal horizontalOverlapTop_V_1_fu_1321_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_1_reg_1890 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_fu_1359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_reg_1895 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1080_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1080_reg_1903 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal icmp_ln1082_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1082_reg_1907 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1084_fu_1404_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1084_reg_1911 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_494_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_494_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_517_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_517_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_517_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_517_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_517_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_superpoints_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getShadows_fu_517_wp_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_517_wp_parameters_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_parameters_we0 : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_517_wp_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_517_wp_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_parameters_we1 : STD_LOGIC;
    signal grp_getShadows_fu_517_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_517_wp_parameters_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_delete_patch_fu_533_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_533_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_533_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_533_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_533_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_533_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_533_index : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_533_patches_superpoints_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_533_patches_superpoints_V_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_533_patches_superpoints_V_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_533_patches_superpoints_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_533_patches_superpoints_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_533_patches_superpoints_V_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_533_patches_parameters_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_533_patches_parameters_V_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_533_patches_parameters_V_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_533_patches_parameters_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_533_patches_parameters_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_533_patches_parameters_V_ce1 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_k : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_70_reg_264 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_71_reg_276 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_72_reg_291 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal empty_73_reg_303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ppl_assign_0_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal icmp_ln1070_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_74_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_75_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_1_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_1_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_1_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_1_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_1_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_reg_425 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_451 : STD_LOGIC_VECTOR (63 downto 0);
    signal loopCounter_reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln166_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_tmp210_0_reg_483 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_494_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_getShadows_fu_517_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_delete_patch_fu_533_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (81 downto 0);
    signal ap_NS_fsm_state8 : STD_LOGIC;
    signal ap_NS_fsm_state18 : STD_LOGIC;
    signal ap_NS_fsm_state28 : STD_LOGIC;
    signal ap_NS_fsm_state38 : STD_LOGIC;
    signal ap_NS_fsm_state45 : STD_LOGIC;
    signal ap_NS_fsm_state46 : STD_LOGIC;
    signal ap_NS_fsm_state65 : STD_LOGIC;
    signal ap_NS_fsm_state73 : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal zext_ln934_1_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln943_1_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln948_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln956_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln957_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln938_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1035_1_fu_1183_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1036_fu_1187_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1037_fu_1201_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1038_fu_1205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_V_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal icmp_ln921_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal secondLastPatchIndex_fu_597_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_617_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_610_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln943_fu_624_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_641_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_634_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln934_fu_648_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln886_fu_668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_673_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln943_fu_684_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln948_fu_694_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln956_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln957_fu_714_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln938_fu_724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln958_fu_734_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln959_fu_744_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_754_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln180_fu_762_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_2_fu_776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_11_fu_783_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_780_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_11_fu_783_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_786_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_13_fu_798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_4_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_13_fu_823_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_12_fu_820_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_13_fu_823_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_7_fu_826_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_3_fu_838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_3_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_5_fu_856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_4_fu_870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_15_fu_877_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_14_fu_874_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_15_fu_877_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_8_fu_880_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_15_fu_892_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_6_fu_900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_958_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shiftOriginal_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i297_not_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1006_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1005_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1047_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1005_1_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1005_3_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1005_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1005_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln534_fu_1100_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_1103_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_1109_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1025_fu_1126_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1031_fu_1137_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_1154_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1147_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1035_fu_1161_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln215_20_fu_1291_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_21_fu_1299_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_9_fu_1294_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_10_fu_1302_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_7_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1053_fu_1313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1053_1_fu_1317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_22_fu_1329_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_23_fu_1337_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_11_fu_1332_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_12_fu_1340_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_8_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1054_fu_1351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1054_1_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_6_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1084_fu_1398_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op404_call_state82 : BOOLEAN;
    signal ap_block_state82_on_subcall_done : BOOLEAN;
    signal ap_block_state56_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        index : IN STD_LOGIC_VECTOR (8 downto 0);
        patches_superpoints_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_V_ce0 : OUT STD_LOGIC;
        patches_superpoints_V_we0 : OUT STD_LOGIC;
        patches_superpoints_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_V_ce1 : OUT STD_LOGIC;
        patches_superpoints_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_V_ce0 : OUT STD_LOGIC;
        patches_parameters_V_we0 : OUT STD_LOGIC;
        patches_parameters_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_V_ce1 : OUT STD_LOGIC;
        patches_parameters_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_makePatch_alignedToLine_fu_494 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_494_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_494_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_494_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_494_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_494_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_494_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_494_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        apexZ0 => trunc_ln973_1_reg_1733,
        z_top => newZtop_V_1_reg_1694,
        p_read => ppl_assign_0_reg_317,
        leftRight => lnot_reg_1689,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_494_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_494_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_494_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_494_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_494_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_494_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_494_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_494_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_makePatch_alignedToLine_fu_494_ap_return);

    grp_getShadows_fu_517 : component MPSQ_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_517_ap_start,
        ap_done => grp_getShadows_fu_517_ap_done,
        ap_idle => grp_getShadows_fu_517_ap_idle,
        ap_ready => grp_getShadows_fu_517_ap_ready,
        wp_superpoints_address0 => grp_getShadows_fu_517_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_getShadows_fu_517_wp_superpoints_ce0,
        wp_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_offset => grp_getShadows_fu_517_wp_superpoints_offset,
        wp_parameters_address0 => grp_getShadows_fu_517_wp_parameters_address0,
        wp_parameters_ce0 => grp_getShadows_fu_517_wp_parameters_ce0,
        wp_parameters_we0 => grp_getShadows_fu_517_wp_parameters_we0,
        wp_parameters_d0 => grp_getShadows_fu_517_wp_parameters_d0,
        wp_parameters_q0 => patches_parameters_q0,
        wp_parameters_address1 => grp_getShadows_fu_517_wp_parameters_address1,
        wp_parameters_ce1 => grp_getShadows_fu_517_wp_parameters_ce1,
        wp_parameters_we1 => grp_getShadows_fu_517_wp_parameters_we1,
        wp_parameters_d1 => grp_getShadows_fu_517_wp_parameters_d1,
        wp_parameters_offset => grp_getShadows_fu_517_wp_parameters_offset,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_533 : component MPSQ_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_533_ap_start,
        ap_done => grp_delete_patch_fu_533_ap_done,
        ap_idle => grp_delete_patch_fu_533_ap_idle,
        ap_ready => grp_delete_patch_fu_533_ap_ready,
        n_patches => grp_delete_patch_fu_533_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_533_n_patches_ap_vld,
        n_patches_read => reg_575,
        index => grp_delete_patch_fu_533_index,
        patches_superpoints_V_address0 => grp_delete_patch_fu_533_patches_superpoints_V_address0,
        patches_superpoints_V_ce0 => grp_delete_patch_fu_533_patches_superpoints_V_ce0,
        patches_superpoints_V_we0 => grp_delete_patch_fu_533_patches_superpoints_V_we0,
        patches_superpoints_V_d0 => grp_delete_patch_fu_533_patches_superpoints_V_d0,
        patches_superpoints_V_address1 => grp_delete_patch_fu_533_patches_superpoints_V_address1,
        patches_superpoints_V_ce1 => grp_delete_patch_fu_533_patches_superpoints_V_ce1,
        patches_superpoints_V_q1 => patches_superpoints_q1,
        patches_parameters_V_address0 => grp_delete_patch_fu_533_patches_parameters_V_address0,
        patches_parameters_V_ce0 => grp_delete_patch_fu_533_patches_parameters_V_ce0,
        patches_parameters_V_we0 => grp_delete_patch_fu_533_patches_parameters_V_we0,
        patches_parameters_V_d0 => grp_delete_patch_fu_533_patches_parameters_V_d0,
        patches_parameters_V_address1 => grp_delete_patch_fu_533_patches_parameters_V_address1,
        patches_parameters_V_ce1 => grp_delete_patch_fu_533_patches_parameters_V_ce1,
        patches_parameters_V_q1 => patches_parameters_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_delete_patch_fu_533_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_533_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                    grp_delete_patch_fu_533_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_533_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_533_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_517_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_517_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_getShadows_fu_517_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_517_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_517_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_494_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_494_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                    grp_makePatch_alignedToLine_fu_494_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_494_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_494_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state73) and ((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state53))) or ((shiftOriginal_1_reg_1675 = ap_const_lv1_1) and (ap_const_logic_1 = ap_NS_fsm_state65) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((ap_const_logic_1 = ap_NS_fsm_state46) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = ap_NS_fsm_state45) and ((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state44))) or ((ap_const_logic_1 = ap_NS_fsm_state38) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_const_logic_1 = ap_NS_fsm_state28) and (ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln945_fu_842_p2)) or ((ap_const_logic_1 = ap_NS_fsm_state18) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_NS_fsm_state8) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln935_fu_678_p2)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp210_0_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                agg_tmp210_0_reg_483 <= newZtop_V_1_reg_1694;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_2_fu_1041_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_1_fu_1080_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_1))))) then 
                agg_tmp210_0_reg_483 <= newZtop_V_reg_425;
            end if; 
        end if;
    end process;

    complementary_topL_jL_V_1_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                complementary_topL_jL_V_1_reg_395 <= complementary_topL_jL_V_3_reg_1823;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                complementary_topL_jL_V_1_reg_395 <= complementary_topL_jL_V_reg_1638;
            end if; 
        end if;
    end process;

    complementary_topL_jR_V_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                complementary_topL_jR_V_reg_375 <= complementary_topL_jR_V_4_reg_1836;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                complementary_topL_jR_V_reg_375 <= complementary_topL_jR_V_3_reg_1587;
            end if; 
        end if;
    end process;

    complementary_topR_jL_V_1_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                complementary_topR_jL_V_1_reg_385 <= complementary_topR_jL_V_3_reg_1817;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                complementary_topR_jL_V_1_reg_385 <= complementary_topR_jL_V_reg_1633;
            end if; 
        end if;
    end process;

    complementary_topR_jR_V_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                complementary_topR_jR_V_reg_345 <= complementary_topR_jR_V_4_reg_1829;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                complementary_topR_jR_V_reg_345 <= complementary_topR_jR_V_3_reg_1569;
            end if; 
        end if;
    end process;

    empty_70_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln935_reg_1498) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                empty_70_reg_264 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln935_reg_1498))) then 
                empty_70_reg_264 <= phitmp_fu_770_p2;
            end if; 
        end if;
    end process;

    empty_71_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_2_fu_792_p2 = ap_const_lv1_0) and (icmp_ln886_2_fu_776_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((icmp_ln886_2_fu_776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
                empty_71_reg_276 <= ap_const_lv1_1;
            elsif (((icmp_ln878_2_reg_1560 = ap_const_lv1_1) and (icmp_ln886_2_reg_1556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                empty_71_reg_276 <= phitmp4_fu_814_p2;
            end if; 
        end if;
    end process;

    empty_72_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln945_reg_1578) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                empty_72_reg_291 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state35) and (ap_const_lv1_1 = and_ln945_reg_1578))) then 
                empty_72_reg_291 <= phitmp3_fu_864_p2;
            end if; 
        end if;
    end process;

    empty_73_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_4_fu_886_p2 = ap_const_lv1_0) and (icmp_ln886_4_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((icmp_ln886_4_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
                empty_73_reg_303 <= ap_const_lv1_1;
            elsif (((icmp_ln878_4_reg_1600 = ap_const_lv1_1) and (icmp_ln886_4_reg_1596 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                empty_73_reg_303 <= phitmp5_fu_908_p2;
            end if; 
        end if;
    end process;

    empty_74_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                empty_74_reg_327 <= horizontalShiftBottom_1_reg_1881;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                empty_74_reg_327 <= horizontalShiftBottom_fu_946_p2;
            end if; 
        end if;
    end process;

    empty_75_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                empty_75_reg_336 <= horizontalShiftTop_1_reg_1866;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                empty_75_reg_336 <= horizontalShiftTop_fu_942_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_V_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                horizontalOverlapBottom_V_fu_116 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1886 = ap_const_lv1_1) and (shiftOriginal_1_reg_1675 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                horizontalOverlapBottom_V_fu_116 <= horizontalOverlapBottom_V_1_reg_1895;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_V_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                horizontalOverlapTop_V_fu_120 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1886 = ap_const_lv1_1) and (shiftOriginal_1_reg_1675 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                horizontalOverlapTop_V_fu_120 <= horizontalOverlapTop_V_1_reg_1890;
            end if; 
        end if;
    end process;

    loopCounter_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                loopCounter_reg_461 <= loopCounter_2_reg_1710;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                loopCounter_reg_461 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                makeHorizontallyShiftedPatch_reg_437 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                makeHorizontallyShiftedPatch_reg_437 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_V_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                newZtop_V_reg_425 <= newZtop_V_1_reg_1694;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                newZtop_V_reg_425 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    original_topL_jL_V_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                original_topL_jL_V_reg_355 <= original_topL_jL_V_4_reg_1803;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                original_topL_jL_V_reg_355 <= original_topL_jL_V_3_reg_1547;
            end if; 
        end if;
    end process;

    original_topL_jR_V_1_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                original_topL_jR_V_1_reg_415 <= original_topL_jR_V_3_reg_1850;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                original_topL_jR_V_1_reg_415 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_V_1_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                original_topR_jL_V_1_reg_365 <= original_topR_jL_V_3_reg_1810;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                original_topR_jL_V_1_reg_365 <= original_topR_jL_V_reg_1470;
            end if; 
        end if;
    end process;

    original_topR_jR_V_1_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                original_topR_jR_V_1_reg_405 <= original_topR_jR_V_3_reg_1843;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                original_topR_jR_V_1_reg_405 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    phi_ln166_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                phi_ln166_reg_473 <= trunc_ln973_1_reg_1733;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_2_fu_1041_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_1_fu_1080_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_1))))) then 
                phi_ln166_reg_473 <= trunc_ln973_fu_1002_p1;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                ppl_assign_0_reg_317 <= ppl_assign1_reg_1744;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                ppl_assign_0_reg_317 <= ppl;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                shifted_Align_2_reg_451 <= shifted_Align_5_reg_1728;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                shifted_Align_2_reg_451 <= sext_ln985_fu_976_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                add_ln1025_reg_1739 <= add_ln1025_fu_1130_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                add_ln1031_reg_1749 <= add_ln1031_fu_1141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                    add_ln1035_reg_1763(11 downto 3) <= add_ln1035_fu_1171_p2(11 downto 3);
                    add_ln1036_reg_1768(11 downto 3) <= add_ln1036_fu_1177_p2(11 downto 3);
                    sub_ln1035_reg_1757(11 downto 3) <= sub_ln1035_fu_1165_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                    add_ln1037_reg_1783(11 downto 3) <= add_ln1037_fu_1191_p2(11 downto 3);
                    add_ln1038_reg_1788(11 downto 3) <= add_ln1038_fu_1196_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    add_ln934_reg_1460(11 downto 3) <= add_ln934_fu_658_p2(11 downto 3);
                    sub_ln934_reg_1453(11 downto 3) <= sub_ln934_fu_652_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1005_1_fu_1022_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                and_ln1005_1_reg_1719 <= and_ln1005_1_fu_1080_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1005_1_fu_1022_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                and_ln1005_2_reg_1715 <= and_ln1005_2_fu_1041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                and_ln1080_reg_1903 <= and_ln1080_fu_1387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                and_ln935_reg_1498 <= and_ln935_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                and_ln945_reg_1578 <= and_ln945_fu_842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                complementary_topL_jL_V_3_reg_1823 <= complementary_topL_jL_V_3_fu_1230_p3;
                complementary_topR_jL_V_3_reg_1817 <= complementary_topR_jL_V_3_fu_1223_p3;
                original_topL_jL_V_4_reg_1803 <= original_topL_jL_V_4_fu_1209_p3;
                original_topR_jL_V_3_reg_1810 <= original_topR_jL_V_3_fu_1216_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                complementary_topL_jL_V_reg_1638 <= patches_parameters_q0;
                complementary_topR_jL_V_reg_1633 <= patches_parameters_q1;
                icmp_ln886_5_reg_1643 <= icmp_ln886_5_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                complementary_topL_jR_V_3_reg_1587 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                complementary_topL_jR_V_4_reg_1836 <= complementary_topL_jR_V_4_fu_1244_p3;
                complementary_topR_jR_V_4_reg_1829 <= complementary_topR_jR_V_4_fu_1237_p3;
                original_topL_jR_V_3_reg_1850 <= original_topL_jR_V_3_fu_1258_p3;
                original_topR_jR_V_3_reg_1843 <= original_topR_jR_V_3_fu_1251_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                complementary_topR_jR_V_3_reg_1569 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_1429 <= empty_fu_586_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_6_fu_1285_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                horizontalOverlapBottom_V_1_reg_1895 <= horizontalOverlapBottom_V_1_fu_1359_p3;
                horizontalOverlapTop_V_1_reg_1890 <= horizontalOverlapTop_V_1_fu_1321_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                horizontalShiftBottom_1_reg_1881 <= horizontalShiftBottom_1_fu_1281_p2;
                horizontalShiftTop_1_reg_1866 <= horizontalShiftTop_1_fu_1271_p2;
                sext_ln215_16_reg_1856 <= sext_ln215_16_fu_1265_p1;
                sext_ln215_17_reg_1861 <= sext_ln215_17_fu_1268_p1;
                sext_ln215_18_reg_1871 <= sext_ln215_18_fu_1275_p1;
                sext_ln215_19_reg_1876 <= sext_ln215_19_fu_1278_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                icmp_ln1082_reg_1907 <= icmp_ln1082_fu_1392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_2_fu_776_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                icmp_ln878_2_reg_1560 <= icmp_ln878_2_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_4_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                icmp_ln878_4_reg_1600 <= icmp_ln878_4_fu_886_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                icmp_ln878_6_reg_1886 <= icmp_ln878_6_fu_1285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_ln886_2_reg_1556 <= icmp_ln886_2_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                icmp_ln886_4_reg_1596 <= icmp_ln886_4_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                lnot_reg_1689 <= lnot_fu_990_p2;
                newZtop_V_1_reg_1694 <= newZtop_V_1_fu_996_p3;
                shiftOriginal_1_reg_1675 <= shiftOriginal_1_fu_980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                loopCounter_2_reg_1710 <= loopCounter_2_fu_1027_p2;
                or_ln1005_1_reg_1706 <= or_ln1005_1_fu_1022_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                or_ln1005_2_reg_1628 <= or_ln1005_2_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                or_ln1005_reg_1623 <= or_ln1005_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                original_topL_jL_V_3_reg_1547 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                original_topR_jL_V_reg_1470 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    patches_parameters_addr_12_reg_1527(11 downto 3) <= zext_ln938_fu_729_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_13_reg_1507(11 downto 3) <= zext_ln943_1_fu_689_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_14_reg_1512(11 downto 3) <= zext_ln948_fu_699_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_15_reg_1517(11 downto 3) <= zext_ln956_fu_709_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_16_reg_1522(11 downto 3) <= zext_ln957_fu_719_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_17_reg_1532(11 downto 3) <= zext_ln958_fu_739_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_18_reg_1537(11 downto 3) <= zext_ln959_fu_749_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                ppl_assign1_reg_1744 <= grp_makePatch_alignedToLine_fu_494_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14))) then
                reg_571 <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state80) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then
                reg_575 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                secondLastPatchIndex_1_reg_1437 <= secondLastPatchIndex_1_fu_602_p3;
                    sub_ln943_reg_1445(11 downto 3) <= sub_ln943_fu_628_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (((or_ln1005_1_fu_1022_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1005_1_fu_1080_p2)) or ((or_ln1005_1_fu_1022_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1005_2_fu_1041_p2))))) then
                select_ln534_reg_1723 <= select_ln534_fu_1092_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                shifted_Align_5_reg_1728 <= shifted_Align_5_fu_1115_p3;
                trunc_ln973_1_reg_1733 <= trunc_ln973_1_fu_1122_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then
                    zext_ln1084_reg_1911(7 downto 0) <= zext_ln1084_fu_1404_p1(7 downto 0);
            end if;
        end if;
    end process;
    sub_ln943_reg_1445(2 downto 0) <= "000";
    sub_ln934_reg_1453(2 downto 0) <= "000";
    add_ln934_reg_1460(2 downto 0) <= "100";
    patches_parameters_addr_13_reg_1507(2 downto 0) <= "010";
    patches_parameters_addr_14_reg_1512(2 downto 0) <= "110";
    patches_parameters_addr_15_reg_1517(2 downto 0) <= "100";
    patches_parameters_addr_16_reg_1522(2 downto 0) <= "000";
    patches_parameters_addr_12_reg_1527(2 downto 0) <= "000";
    patches_parameters_addr_17_reg_1532(2 downto 0) <= "010";
    patches_parameters_addr_18_reg_1537(2 downto 0) <= "110";
    sub_ln1035_reg_1757(2 downto 0) <= "000";
    add_ln1035_reg_1763(2 downto 0) <= "100";
    add_ln1036_reg_1768(2 downto 0) <= "000";
    add_ln1037_reg_1783(2 downto 0) <= "010";
    add_ln1038_reg_1788(2 downto 0) <= "110";
    zext_ln1084_reg_1911(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state54, makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state80, ap_CS_fsm_state2, ap_CS_fsm_state4, and_ln935_reg_1498, ap_CS_fsm_state8, icmp_ln886_2_fu_776_p2, ap_CS_fsm_state17, icmp_ln878_2_fu_792_p2, and_ln945_reg_1578, icmp_ln886_4_fu_870_p2, ap_CS_fsm_state37, icmp_ln878_4_fu_886_p2, shiftOriginal_1_reg_1675, ap_CS_fsm_state53, or_ln1005_1_fu_1022_p2, and_ln1005_2_fu_1041_p2, and_ln1005_1_fu_1080_p2, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state65, and_ln1080_fu_1387_p2, ap_CS_fsm_state79, icmp_ln1082_fu_1392_p2, grp_makePatch_alignedToLine_fu_494_ap_done, grp_getShadows_fu_517_ap_done, ap_CS_fsm_state28, ap_CS_fsm_state72, icmp_ln1070_fu_1375_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4, ap_CS_fsm_state56, ap_CS_fsm_state82, ap_block_state82_on_subcall_done, ap_block_state56_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_getShadows_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_getShadows_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_lv1_0 = and_ln935_reg_1498) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln878_2_fu_792_p2 = ap_const_lv1_1) and (icmp_ln886_2_fu_776_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_lv1_0 = and_ln945_reg_1578) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln878_4_fu_886_p2 = ap_const_lv1_1) and (icmp_ln886_4_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1005_2_fu_1041_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1005_1_fu_1080_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_2_fu_1041_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1005_1_fu_1080_p2) and (or_ln1005_1_fu_1022_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((grp_makePatch_alignedToLine_fu_494_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((grp_getShadows_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                if (((shiftOriginal_1_reg_1675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((icmp_ln1070_fu_1375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((ap_const_lv1_0 = and_ln1080_fu_1387_p2) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                if (((icmp_ln1082_fu_1392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_boolean_0 = ap_block_state82_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_address0;
    GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_494_GDarrayDecoded_ce0;
    GDn_points_address0 <= grp_makePatch_alignedToLine_fu_494_GDn_points_address0;
    GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_494_GDn_points_ce0;
    add_ln1025_fu_1130_p2 <= std_logic_vector(unsigned(zext_ln1025_fu_1126_p1) + unsigned(ap_const_lv9_1FF));
    add_ln1031_fu_1141_p2 <= std_logic_vector(unsigned(trunc_ln1031_fu_1137_p1) + unsigned(ap_const_lv5_1F));
    add_ln1035_fu_1171_p2 <= std_logic_vector(unsigned(sub_ln1035_fu_1165_p2) + unsigned(ap_const_lv12_24));
    add_ln1036_fu_1177_p2 <= std_logic_vector(unsigned(sub_ln1035_fu_1165_p2) + unsigned(ap_const_lv12_18));
    add_ln1037_fu_1191_p2 <= std_logic_vector(unsigned(sub_ln1035_reg_1757) + unsigned(ap_const_lv12_2A));
    add_ln1038_fu_1196_p2 <= std_logic_vector(unsigned(sub_ln1035_reg_1757) + unsigned(ap_const_lv12_1E));
    add_ln1084_fu_1398_p2 <= std_logic_vector(unsigned(reg_575) + unsigned(ap_const_lv8_FD));
    add_ln934_fu_658_p2 <= std_logic_vector(unsigned(sub_ln934_fu_652_p2) + unsigned(ap_const_lv12_24));
    add_ln938_fu_724_p2 <= std_logic_vector(unsigned(sub_ln934_reg_1453) + unsigned(ap_const_lv12_18));
    add_ln943_fu_684_p2 <= std_logic_vector(unsigned(sub_ln943_reg_1445) + unsigned(ap_const_lv12_2A));
    add_ln948_fu_694_p2 <= std_logic_vector(unsigned(sub_ln943_reg_1445) + unsigned(ap_const_lv12_1E));
    add_ln956_fu_704_p2 <= std_logic_vector(unsigned(sub_ln943_reg_1445) + unsigned(ap_const_lv12_24));
    add_ln957_fu_714_p2 <= std_logic_vector(unsigned(sub_ln943_reg_1445) + unsigned(ap_const_lv12_18));
    add_ln958_fu_734_p2 <= std_logic_vector(unsigned(sub_ln934_reg_1453) + unsigned(ap_const_lv12_2A));
    add_ln959_fu_744_p2 <= std_logic_vector(unsigned(sub_ln934_reg_1453) + unsigned(ap_const_lv12_1E));
    and_ln1005_1_fu_1080_p2 <= (grp_fu_561_p2 and and_ln1005_fu_1074_p2);
    and_ln1005_2_fu_1041_p2 <= (grp_fu_566_p2 and grp_fu_561_p2);
    and_ln1005_fu_1074_p2 <= (xor_ln1005_fu_1068_p2 and grp_fu_566_p2);
    and_ln1080_fu_1387_p2 <= (shiftOriginal_1_reg_1675 and icmp_ln886_6_fu_1381_p2);
    and_ln935_fu_678_p2 <= (icmp_ln886_fu_668_p2 and icmp_ln878_fu_673_p2);
    and_ln945_fu_842_p2 <= (icmp_ln886_3_fu_832_p2 and icmp_ln878_3_fu_838_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_NS_fsm_state18 <= ap_NS_fsm(17);
    ap_NS_fsm_state28 <= ap_NS_fsm(27);
    ap_NS_fsm_state38 <= ap_NS_fsm(37);
    ap_NS_fsm_state45 <= ap_NS_fsm(44);
    ap_NS_fsm_state46 <= ap_NS_fsm(45);
    ap_NS_fsm_state65 <= ap_NS_fsm(64);
    ap_NS_fsm_state73 <= ap_NS_fsm(72);
    ap_NS_fsm_state8 <= ap_NS_fsm(7);

    ap_block_state56_on_subcall_done_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, grp_delete_patch_fu_533_ap_done)
    begin
                ap_block_state56_on_subcall_done <= ((grp_delete_patch_fu_533_ap_done = ap_const_logic_0) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1));
    end process;


    ap_block_state82_on_subcall_done_assign_proc : process(grp_delete_patch_fu_533_ap_done, ap_predicate_op404_call_state82)
    begin
                ap_block_state82_on_subcall_done <= ((grp_delete_patch_fu_533_ap_done = ap_const_logic_0) and (ap_predicate_op404_call_state82 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state82, ap_block_state82_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_boolean_0 = ap_block_state82_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_442_p4 <= makeHorizontallyShiftedPatch_reg_437;

    ap_predicate_op404_call_state82_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, and_ln1080_reg_1903, icmp_ln1082_reg_1907)
    begin
                ap_predicate_op404_call_state82 <= ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state82, ap_block_state82_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state82) and (ap_const_boolean_0 = ap_block_state82_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i297_not_fu_985_p2 <= (icmp_ln886_5_reg_1643 xor ap_const_lv1_1);
    complementary_topL_jL_V_3_fu_1230_p3 <= 
        complementary_topL_jL_V_1_reg_395 when (shiftOriginal_1_reg_1675(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_V_4_fu_1244_p3 <= 
        complementary_topL_jR_V_reg_375 when (shiftOriginal_1_reg_1675(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_V_3_fu_1223_p3 <= 
        complementary_topR_jL_V_1_reg_385 when (shiftOriginal_1_reg_1675(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_V_4_fu_1237_p3 <= 
        complementary_topR_jR_V_reg_345 when (shiftOriginal_1_reg_1675(0) = '1') else 
        patches_parameters_q0;
    empty_fu_586_p1 <= lastPatchIndex(5 - 1 downto 0);
    grp_delete_patch_fu_533_ap_start <= grp_delete_patch_fu_533_ap_start_reg;

    grp_delete_patch_fu_533_index_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, add_ln1025_reg_1739, and_ln1080_reg_1903, icmp_ln1082_reg_1907, zext_ln1084_reg_1911, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715))))) then 
            grp_delete_patch_fu_533_index <= zext_ln1084_reg_1911;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) then 
            grp_delete_patch_fu_533_index <= add_ln1025_reg_1739;
        else 
            grp_delete_patch_fu_533_index <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_561_p2 <= "1" when (signed(horizontalOverlapTop_V_fu_120) < signed(ap_const_lv32_1)) else "0";
    grp_fu_566_p2 <= "1" when (signed(horizontalOverlapBottom_V_fu_116) < signed(ap_const_lv32_1)) else "0";
    grp_fu_580_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_571));
    grp_getShadows_fu_517_ap_start <= grp_getShadows_fu_517_ap_start_reg;

    grp_getShadows_fu_517_wp_parameters_offset_assign_proc : process(empty_reg_1429, secondLastPatchIndex_1_reg_1437, ap_CS_fsm_state2, ap_CS_fsm_state4, add_ln1031_reg_1749, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_getShadows_fu_517_wp_parameters_offset <= add_ln1031_reg_1749;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_517_wp_parameters_offset <= secondLastPatchIndex_1_reg_1437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_517_wp_parameters_offset <= empty_reg_1429;
        else 
            grp_getShadows_fu_517_wp_parameters_offset <= "XXXXX";
        end if; 
    end process;


    grp_getShadows_fu_517_wp_superpoints_offset_assign_proc : process(empty_reg_1429, secondLastPatchIndex_1_reg_1437, ap_CS_fsm_state2, ap_CS_fsm_state4, add_ln1031_reg_1749, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_getShadows_fu_517_wp_superpoints_offset <= add_ln1031_reg_1749;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_517_wp_superpoints_offset <= secondLastPatchIndex_1_reg_1437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_517_wp_superpoints_offset <= empty_reg_1429;
        else 
            grp_getShadows_fu_517_wp_superpoints_offset <= "XXXXX";
        end if; 
    end process;

    grp_makePatch_alignedToLine_fu_494_ap_start <= grp_makePatch_alignedToLine_fu_494_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_545_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_545_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i_assign_proc : process(complementary_apexZ0, apexZ0, original_topR_jL_V_reg_1470, and_ln935_reg_1498, ap_CS_fsm_state8, original_topL_jL_V_3_reg_1547, complementary_topR_jR_V_3_reg_1569, and_ln945_reg_1578, complementary_topL_jR_V_3_reg_1587, ap_CS_fsm_state45, ap_CS_fsm_state46, shiftOriginal_1_reg_1675, original_topR_jR_V_3_reg_1843, ap_CS_fsm_state65, ap_CS_fsm_state28, phi_ln166_reg_473, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= phi_ln166_reg_473;
        elsif (((shiftOriginal_1_reg_1675 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= original_topR_jR_V_3_reg_1843;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= complementary_apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= complementary_topL_jR_V_3_reg_1587;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = and_ln945_reg_1578))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= complementary_topR_jR_V_3_reg_1569;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= original_topL_jL_V_3_reg_1547;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln935_reg_1498))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= original_topR_jL_V_reg_1470;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j_assign_proc : process(z_top_min, z_top_max, and_ln935_reg_1498, ap_CS_fsm_state8, and_ln945_reg_1578, ap_CS_fsm_state45, ap_CS_fsm_state46, shiftOriginal_1_reg_1675, ap_CS_fsm_state65, ap_CS_fsm_state28, agg_tmp210_0_reg_483, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j <= agg_tmp210_0_reg_483;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or ((shiftOriginal_1_reg_1675 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = and_ln945_reg_1578)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln935_reg_1498)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_545_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    horizontalOverlapBottom_V_1_fu_1359_p3 <= 
        trunc_ln1054_fu_1351_p1 when (icmp_ln878_8_fu_1345_p2(0) = '1') else 
        trunc_ln1054_1_fu_1355_p1;
    horizontalOverlapTop_V_1_fu_1321_p3 <= 
        trunc_ln1053_fu_1313_p1 when (icmp_ln878_7_fu_1307_p2(0) = '1') else 
        trunc_ln1053_1_fu_1317_p1;
    horizontalShiftBottom_1_fu_1281_p2 <= std_logic_vector(signed(original_topL_jL_V_4_reg_1803) - signed(complementary_topL_jR_V_4_reg_1836));
    horizontalShiftBottom_fu_946_p2 <= std_logic_vector(signed(original_topL_jL_V_3_reg_1547) - signed(complementary_topL_jR_V_3_reg_1587));
    horizontalShiftTop_1_fu_1271_p2 <= std_logic_vector(signed(original_topR_jL_V_3_reg_1810) - signed(complementary_topR_jR_V_4_reg_1829));
    horizontalShiftTop_fu_942_p2 <= std_logic_vector(unsigned(original_topR_jL_V_reg_1470) - unsigned(complementary_topR_jR_V_3_reg_1569));
    icmp_ln1005_1_fu_1057_p2 <= "1" when (signed(tmp_20_fu_1047_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1005_fu_1016_p2 <= "1" when (signed(tmp_17_fu_1006_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1070_fu_1375_p2 <= "1" when (signed(loopCounter_reg_461) > signed(ap_const_lv32_19)) else "0";
    icmp_ln1082_fu_1392_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln878_2_fu_792_p2 <= "1" when (signed(ret_fu_786_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_3_fu_838_p1 <= apexZ0;
    icmp_ln878_3_fu_838_p2 <= "1" when (signed(complementary_topR_jR_V_3_reg_1569) < signed(icmp_ln878_3_fu_838_p1)) else "0";
    icmp_ln878_4_fu_886_p2 <= "1" when (signed(ret_8_fu_880_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_5_fu_1086_p2 <= "1" when (signed(empty_75_reg_336) < signed(empty_74_reg_327)) else "0";
    icmp_ln878_6_fu_1285_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln878_7_fu_1307_p2 <= "1" when (signed(ret_9_fu_1294_p2) < signed(ret_10_fu_1302_p2)) else "0";
    icmp_ln878_8_fu_1345_p2 <= "1" when (signed(ret_11_fu_1332_p2) < signed(ret_12_fu_1340_p2)) else "0";
    icmp_ln878_fu_673_p1 <= apexZ0;
    icmp_ln878_fu_673_p2 <= "1" when (signed(original_topR_jL_V_reg_1470) < signed(icmp_ln878_fu_673_p1)) else "0";
    icmp_ln886_2_fu_776_p1 <= complementary_apexZ0;
    icmp_ln886_2_fu_776_p2 <= "1" when (signed(original_topL_jL_V_3_reg_1547) > signed(icmp_ln886_2_fu_776_p1)) else "0";
    icmp_ln886_3_fu_832_p2 <= "1" when (signed(ret_7_fu_826_p2) > signed(ap_const_lv33_32)) else "0";
    icmp_ln886_4_fu_870_p1 <= complementary_apexZ0;
    icmp_ln886_4_fu_870_p2 <= "1" when (signed(complementary_topL_jR_V_3_reg_1587) > signed(icmp_ln886_4_fu_870_p1)) else "0";
    icmp_ln886_5_fu_936_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln886_6_fu_1381_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0) > signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln886_fu_668_p1 <= complementary_apexZ0;
    icmp_ln886_fu_668_p2 <= "1" when (signed(original_topR_jL_V_reg_1470) > signed(icmp_ln886_fu_668_p1)) else "0";
    icmp_ln921_fu_592_p2 <= "1" when (lastPatchIndex = ap_const_lv8_0) else "0";
    lnot_fu_990_p2 <= (tmp_16_fu_950_p3 and cmp_i_i297_not_fu_985_p2);
    loopCounter_2_fu_1027_p2 <= std_logic_vector(unsigned(loopCounter_reg_461) + unsigned(ap_const_lv32_1));

    n_patches_o_assign_proc : process(n_patches_i, makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_n_patches_o, grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld, grp_delete_patch_fu_533_n_patches, grp_delete_patch_fu_533_n_patches_ap_vld, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((grp_delete_patch_fu_533_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((grp_delete_patch_fu_533_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            n_patches_o <= grp_delete_patch_fu_533_n_patches;
        elsif (((grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_494_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld, grp_delete_patch_fu_533_n_patches_ap_vld, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_533_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_494_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_V_1_fu_996_p3 <= 
        z_top_max when (shiftOriginal_1_fu_980_p2(0) = '1') else 
        z_top_min;
    or_ln1005_1_fu_1022_p2 <= (or_ln1005_reg_1623 or icmp_ln1005_fu_1016_p2);
    or_ln1005_2_fu_930_p2 <= (empty_73_reg_303 or empty_71_reg_276);
    or_ln1005_3_fu_1063_p2 <= (or_ln1005_2_reg_1628 or icmp_ln1005_1_fu_1057_p2);
    or_ln1005_fu_914_p2 <= (empty_72_reg_291 or empty_70_reg_264);
    original_topL_jL_V_4_fu_1209_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1675(0) = '1') else 
        original_topL_jL_V_reg_355;
    original_topL_jR_V_3_fu_1258_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1675(0) = '1') else 
        original_topL_jR_V_1_reg_415;
    original_topR_jL_V_3_fu_1216_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1675(0) = '1') else 
        original_topR_jL_V_1_reg_365;
    original_topR_jR_V_3_fu_1251_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1675(0) = '1') else 
        original_topR_jR_V_1_reg_405;

    patches_parameters_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, patches_parameters_addr_13_reg_1507, patches_parameters_addr_14_reg_1512, patches_parameters_addr_16_reg_1522, patches_parameters_addr_12_reg_1527, patches_parameters_addr_17_reg_1532, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state51, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_parameters_address0, grp_getShadows_fu_517_wp_parameters_address0, grp_delete_patch_fu_533_patches_parameters_V_address0, ap_CS_fsm_state56, ap_CS_fsm_state82, zext_ln934_1_fu_664_p1, zext_ln1035_1_fu_1183_p1, zext_ln1037_fu_1201_p1, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            patches_parameters_address0 <= zext_ln1037_fu_1201_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address0 <= zext_ln1035_1_fu_1183_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            patches_parameters_address0 <= patches_parameters_addr_17_reg_1532;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address0 <= patches_parameters_addr_16_reg_1522;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_1512;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            patches_parameters_address0 <= patches_parameters_addr_13_reg_1507;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            patches_parameters_address0 <= patches_parameters_addr_12_reg_1527;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= zext_ln934_1_fu_664_p1(12 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_533_patches_parameters_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_517_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_494_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, patches_parameters_addr_15_reg_1517, patches_parameters_addr_18_reg_1537, ap_CS_fsm_state51, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_getShadows_fu_517_wp_parameters_address1, grp_delete_patch_fu_533_patches_parameters_V_address1, ap_CS_fsm_state56, ap_CS_fsm_state82, zext_ln1036_fu_1187_p1, zext_ln1038_fu_1205_p1, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            patches_parameters_address1 <= zext_ln1038_fu_1205_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address1 <= zext_ln1036_fu_1187_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            patches_parameters_address1 <= patches_parameters_addr_18_reg_1537;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address1 <= patches_parameters_addr_15_reg_1517;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_533_patches_parameters_V_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_517_wp_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state51, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_parameters_ce0, grp_getShadows_fu_517_wp_parameters_ce0, grp_delete_patch_fu_533_patches_parameters_V_ce0, ap_CS_fsm_state56, ap_CS_fsm_state82, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_533_patches_parameters_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_517_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_494_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state51, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_getShadows_fu_517_wp_parameters_ce1, grp_delete_patch_fu_533_patches_parameters_V_ce1, ap_CS_fsm_state56, ap_CS_fsm_state82, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_533_patches_parameters_V_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_517_wp_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_parameters_d0, grp_getShadows_fu_517_wp_parameters_d0, grp_delete_patch_fu_533_patches_parameters_V_d0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_533_patches_parameters_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_517_wp_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_494_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_517_wp_parameters_d1;

    patches_parameters_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_parameters_we0, grp_getShadows_fu_517_wp_parameters_we0, grp_delete_patch_fu_533_patches_parameters_V_we0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_533_patches_parameters_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_517_wp_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_494_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state61, grp_getShadows_fu_517_wp_parameters_we1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_517_wp_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_superpoints_address0, grp_getShadows_fu_517_wp_superpoints_address0, grp_delete_patch_fu_533_patches_superpoints_V_address0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_533_patches_superpoints_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_517_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_494_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    patches_superpoints_address1 <= grp_delete_patch_fu_533_patches_superpoints_V_address1;

    patches_superpoints_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, ap_CS_fsm_state61, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_superpoints_ce0, grp_getShadows_fu_517_wp_superpoints_ce0, grp_delete_patch_fu_533_patches_superpoints_V_ce0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_533_patches_superpoints_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_517_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_494_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_delete_patch_fu_533_patches_superpoints_V_ce1, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_533_patches_superpoints_V_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_superpoints_d0, grp_delete_patch_fu_533_patches_superpoints_V_d0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_533_patches_superpoints_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_494_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_437, or_ln1005_1_reg_1706, and_ln1005_2_reg_1715, and_ln1005_1_reg_1719, ap_CS_fsm_state58, and_ln1080_reg_1903, icmp_ln1082_reg_1907, grp_makePatch_alignedToLine_fu_494_patches_superpoints_we0, grp_delete_patch_fu_533_patches_superpoints_V_we0, ap_CS_fsm_state56, ap_CS_fsm_state82)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state82) and ((((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_1_reg_1719)) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1))) or ((icmp_ln1082_reg_1907 = ap_const_lv1_1) and (or_ln1005_1_reg_1706 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1080_reg_1903) and (ap_const_lv1_1 = and_ln1005_2_reg_1715)))) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (makeHorizontallyShiftedPatch_reg_437 = ap_const_lv1_1)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_533_patches_superpoints_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_494_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phitmp3_fu_864_p2 <= "1" when (unsigned(select_ln180_5_fu_856_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp4_fu_814_p2 <= "1" when (unsigned(select_ln180_4_fu_806_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp5_fu_908_p2 <= "1" when (unsigned(select_ln180_6_fu_900_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp_fu_770_p2 <= "1" when (unsigned(select_ln180_fu_762_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    ret_10_fu_1302_p2 <= std_logic_vector(signed(sext_ln215_17_reg_1861) - signed(sext_ln215_21_fu_1299_p1));
    ret_11_fu_1332_p2 <= std_logic_vector(signed(sext_ln215_22_fu_1329_p1) - signed(sext_ln215_18_reg_1871));
    ret_12_fu_1340_p2 <= std_logic_vector(signed(sext_ln215_19_reg_1876) - signed(sext_ln215_23_fu_1337_p1));
    ret_7_fu_826_p2 <= std_logic_vector(signed(sext_ln215_12_fu_820_p1) - signed(sext_ln215_13_fu_823_p1));
    ret_8_fu_880_p2 <= std_logic_vector(signed(sext_ln215_14_fu_874_p1) - signed(sext_ln215_15_fu_877_p1));
    ret_9_fu_1294_p2 <= std_logic_vector(signed(sext_ln215_20_fu_1291_p1) - signed(sext_ln215_16_reg_1856));
    ret_fu_786_p2 <= std_logic_vector(signed(sext_ln215_fu_780_p1) - signed(sext_ln215_11_fu_783_p1));
    secondLastPatchIndex_1_fu_602_p3 <= 
        ap_const_lv5_0 when (icmp_ln921_fu_592_p2(0) = '1') else 
        secondLastPatchIndex_fu_597_p2;
    secondLastPatchIndex_fu_597_p2 <= std_logic_vector(unsigned(empty_reg_1429) + unsigned(ap_const_lv5_1F));
    select_ln180_4_fu_806_p3 <= 
        grp_fu_580_p2 when (tmp_13_fu_798_p3(0) = '1') else 
        reg_571;
    select_ln180_5_fu_856_p3 <= 
        grp_fu_580_p2 when (tmp_14_fu_848_p3(0) = '1') else 
        reg_571;
    select_ln180_6_fu_900_p3 <= 
        grp_fu_580_p2 when (tmp_15_fu_892_p3(0) = '1') else 
        reg_571;
    select_ln180_fu_762_p3 <= 
        grp_fu_580_p2 when (tmp_fu_754_p3(0) = '1') else 
        reg_571;
    select_ln534_fu_1092_p3 <= 
        empty_74_reg_327 when (icmp_ln878_5_fu_1086_p2(0) = '1') else 
        empty_75_reg_336;
    sext_ln215_11_fu_783_p0 <= apexZ0;
        sext_ln215_11_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_11_fu_783_p0),33));

        sext_ln215_12_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_3_reg_1569),33));

    sext_ln215_13_fu_823_p0 <= complementary_apexZ0;
        sext_ln215_13_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_13_fu_823_p0),33));

        sext_ln215_14_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_3_reg_1587),33));

    sext_ln215_15_fu_877_p0 <= apexZ0;
        sext_ln215_15_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_15_fu_877_p0),33));

        sext_ln215_16_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jL_V_3_reg_1810),33));

        sext_ln215_17_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_4_reg_1829),33));

        sext_ln215_18_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_4_reg_1803),33));

        sext_ln215_19_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_4_reg_1836),33));

        sext_ln215_20_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jL_V_3_reg_1817),33));

        sext_ln215_21_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jR_V_3_reg_1843),33));

        sext_ln215_22_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jL_V_3_reg_1823),33));

        sext_ln215_23_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jR_V_3_reg_1850),33));

        sext_ln215_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_3_reg_1547),33));

        sext_ln534_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln534_reg_1723),64));

        sext_ln985_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shifted_Align_1_fu_970_p3),64));

    shiftOriginal_1_fu_980_p2 <= (shiftOriginal_fu_964_p2 or icmp_ln886_5_reg_1643);
    shiftOriginal_fu_964_p2 <= (tmp_16_fu_950_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_970_p1 <= apexZ0;
    shifted_Align_1_fu_970_p3 <= 
        shifted_Align_1_fu_970_p1 when (icmp_ln886_5_reg_1643(0) = '1') else 
        shifted_Align_fu_958_p3;
    shifted_Align_3_fu_1103_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_451) - unsigned(sext_ln534_fu_1100_p1));
    shifted_Align_4_fu_1109_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_451) + unsigned(sext_ln534_fu_1100_p1));
    shifted_Align_5_fu_1115_p3 <= 
        shifted_Align_3_fu_1103_p2 when (shiftOriginal_1_reg_1675(0) = '1') else 
        shifted_Align_4_fu_1109_p2;
    shifted_Align_fu_958_p1 <= complementary_apexZ0;
    shifted_Align_fu_958_p2 <= apexZ0;
    shifted_Align_fu_958_p3 <= 
        shifted_Align_fu_958_p1 when (tmp_16_fu_950_p3(0) = '1') else 
        shifted_Align_fu_958_p2;
    sub_ln1035_fu_1165_p2 <= std_logic_vector(unsigned(tmp_18_fu_1147_p3) - unsigned(zext_ln1035_fu_1161_p1));
    sub_ln934_fu_652_p2 <= std_logic_vector(unsigned(tmp_11_fu_634_p3) - unsigned(zext_ln934_fu_648_p1));
    sub_ln943_fu_628_p2 <= std_logic_vector(unsigned(tmp_cast_fu_610_p3) - unsigned(zext_ln943_fu_624_p1));
    tmp_11_fu_634_p3 <= (secondLastPatchIndex_1_reg_1437 & ap_const_lv7_0);
    tmp_12_fu_641_p3 <= (secondLastPatchIndex_1_reg_1437 & ap_const_lv3_0);
    tmp_13_fu_798_p3 <= reg_571(31 downto 31);
    tmp_14_fu_848_p3 <= reg_571(31 downto 31);
    tmp_15_fu_892_p3 <= reg_571(31 downto 31);
    tmp_16_fu_950_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1464_p_dout0(31 downto 31);
    tmp_17_fu_1006_p4 <= empty_75_reg_336(31 downto 1);
    tmp_18_fu_1147_p3 <= (add_ln1031_reg_1749 & ap_const_lv7_0);
    tmp_19_fu_1154_p3 <= (add_ln1031_reg_1749 & ap_const_lv3_0);
    tmp_20_fu_1047_p4 <= empty_74_reg_327(31 downto 1);
    tmp_cast_fu_610_p3 <= (empty_reg_1429 & ap_const_lv7_0);
    tmp_fu_754_p3 <= reg_571(31 downto 31);
    tmp_s_fu_617_p3 <= (lastPatchIndex & ap_const_lv3_0);
    trunc_ln1031_fu_1137_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln1053_1_fu_1317_p1 <= ret_9_fu_1294_p2(32 - 1 downto 0);
    trunc_ln1053_fu_1313_p1 <= ret_10_fu_1302_p2(32 - 1 downto 0);
    trunc_ln1054_1_fu_1355_p1 <= ret_11_fu_1332_p2(32 - 1 downto 0);
    trunc_ln1054_fu_1351_p1 <= ret_12_fu_1340_p2(32 - 1 downto 0);
    trunc_ln973_1_fu_1122_p1 <= shifted_Align_5_fu_1115_p3(32 - 1 downto 0);
    trunc_ln973_fu_1002_p1 <= shifted_Align_2_reg_451(32 - 1 downto 0);
    xor_ln1005_fu_1068_p2 <= (or_ln1005_3_fu_1063_p2 xor ap_const_lv1_1);
    zext_ln1025_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_575),9));
    zext_ln1035_1_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1035_reg_1763),64));
    zext_ln1035_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_1154_p3),12));
    zext_ln1036_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1036_reg_1768),64));
    zext_ln1037_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1037_reg_1783),64));
    zext_ln1038_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1038_reg_1788),64));
    zext_ln1084_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1084_fu_1398_p2),9));
    zext_ln934_1_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln934_reg_1460),64));
    zext_ln934_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_641_p3),12));
    zext_ln938_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln938_fu_724_p2),64));
    zext_ln943_1_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln943_fu_684_p2),64));
    zext_ln943_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_617_p3),12));
    zext_ln948_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln948_fu_694_p2),64));
    zext_ln956_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln956_fu_704_p2),64));
    zext_ln957_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln957_fu_714_p2),64));
    zext_ln958_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_fu_734_p2),64));
    zext_ln959_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln959_fu_744_p2),64));
end behav;
