-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_getSolveNextColumnWhileConditional is
port (
    ap_ready : OUT STD_LOGIC;
    c_corner : IN STD_LOGIC_VECTOR (31 downto 0);
    nPatchesInColumn : IN STD_LOGIC_VECTOR (31 downto 0);
    projectionOfCornerToBeam : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of MPSQ_getSolveNextColumnWhileConditional is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FD050F1C : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111100011100";
    constant ap_const_lv32_5F5E100 : STD_LOGIC_VECTOR (31 downto 0) := "00000101111101011110000100000000";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal icmp_ln730_fu_38_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln730_1_fu_44_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln730_fu_50_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_fu_32_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin



    and_ln730_fu_50_p2 <= (icmp_ln730_fu_38_p2 and icmp_ln730_1_fu_44_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= (icmp_ln886_fu_32_p2 and and_ln730_fu_50_p2);
    icmp_ln730_1_fu_44_p2 <= "1" when (signed(projectionOfCornerToBeam) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln730_fu_38_p2 <= "1" when (signed(nPatchesInColumn) < signed(ap_const_lv32_5F5E100)) else "0";
    icmp_ln886_fu_32_p2 <= "1" when (signed(c_corner) > signed(ap_const_lv32_FD050F1C)) else "0";
end behav;
