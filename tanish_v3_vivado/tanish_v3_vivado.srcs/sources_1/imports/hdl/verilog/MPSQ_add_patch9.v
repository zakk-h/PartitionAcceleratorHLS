// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_add_patch9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches,
        n_patches_ap_vld,
        n_patches_read,
        wp_superpoints_address0,
        wp_superpoints_ce0,
        wp_superpoints_q0,
        wp_superpoints_address1,
        wp_superpoints_ce1,
        wp_superpoints_q1,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 20'd2048;
parameter    ap_ST_fsm_state16 = 20'd4096;
parameter    ap_ST_fsm_pp2_stage0 = 20'd8192;
parameter    ap_ST_fsm_state21 = 20'd16384;
parameter    ap_ST_fsm_state22 = 20'd32768;
parameter    ap_ST_fsm_pp3_stage0 = 20'd65536;
parameter    ap_ST_fsm_state27 = 20'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 20'd262144;
parameter    ap_ST_fsm_state32 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] n_patches;
output   n_patches_ap_vld;
input  [7:0] n_patches_read;
output  [7:0] wp_superpoints_address0;
output   wp_superpoints_ce0;
input  [31:0] wp_superpoints_q0;
output  [7:0] wp_superpoints_address1;
output   wp_superpoints_ce1;
input  [31:0] wp_superpoints_q1;
output  [6:0] wp_parameters_address0;
output   wp_parameters_ce0;
input  [31:0] wp_parameters_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches;
reg n_patches_ap_vld;
reg[7:0] wp_superpoints_address0;
reg wp_superpoints_ce0;
reg[7:0] wp_superpoints_address1;
reg wp_superpoints_ce1;
reg[6:0] wp_parameters_address0;
reg wp_parameters_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten29_reg_318;
reg   [2:0] a_4_reg_329;
reg   [4:0] b_6_reg_340;
reg   [6:0] indvar_flatten51_reg_351;
reg   [2:0] a_5_reg_362;
reg   [5:0] indvar_flatten37_reg_373;
reg   [2:0] b_7_reg_384;
reg   [2:0] c_4_reg_395;
reg   [6:0] indvar_flatten_reg_406;
reg   [2:0] a_reg_417;
reg   [4:0] b_reg_428;
reg   [6:0] indvar_flatten21_reg_439;
reg   [2:0] a_3_reg_450;
reg   [5:0] indvar_flatten7_reg_461;
reg   [2:0] b_5_reg_472;
reg   [2:0] c_reg_483;
reg   [31:0] reg_501;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln378_1_reg_1452;
wire    ap_CS_fsm_state9;
reg   [0:0] icmp_ln874_reg_1496;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln394_reg_1523;
reg   [0:0] icmp_ln394_reg_1523_pp1_iter1_reg;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_state23_pp3_stage0_iter0;
wire    ap_block_state24_pp3_stage0_iter1;
wire    ap_block_state25_pp3_stage0_iter2;
wire    ap_block_state26_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln329_reg_1618;
reg   [0:0] icmp_ln329_reg_1618_pp3_iter1_reg;
reg   [31:0] reg_507;
reg   [31:0] reg_513;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state17_pp2_stage0_iter0;
wire    ap_block_state18_pp2_stage0_iter1;
wire    ap_block_state19_pp2_stage0_iter2;
wire    ap_block_state20_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln410_reg_1565;
reg   [0:0] icmp_ln410_reg_1565_pp2_iter1_reg;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state28_pp4_stage0_iter0;
wire    ap_block_state29_pp4_stage0_iter1;
wire    ap_block_state30_pp4_stage0_iter2;
wire    ap_block_state31_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln345_reg_1658;
reg   [0:0] icmp_ln345_reg_1658_pp4_iter1_reg;
wire   [5:0] trunc_ln322_fu_518_p1;
reg   [5:0] trunc_ln322_reg_1407;
wire   [0:0] icmp_ln325_fu_526_p2;
reg   [0:0] icmp_ln325_reg_1412;
wire   [4:0] sub_fu_532_p2;
reg   [4:0] sub_reg_1416;
wire   [11:0] empty_101_fu_564_p2;
reg   [11:0] empty_101_reg_1422;
wire    ap_CS_fsm_state2;
reg   [31:0] patches_parameters_load_reg_1432;
wire    ap_CS_fsm_state3;
wire   [7:0] add_ln380_fu_588_p2;
reg   [7:0] add_ln380_reg_1438;
wire    ap_CS_fsm_state4;
wire   [8:0] add_ln380_cast_fu_594_p1;
reg   [8:0] add_ln380_cast_reg_1443;
wire   [0:0] icmp_ln378_fu_598_p2;
reg   [0:0] icmp_ln378_reg_1448;
wire   [0:0] icmp_ln378_1_fu_607_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] i_13_fu_612_p2;
reg   [7:0] i_13_reg_1456;
reg   [7:0] wp_superpoints_addr_7_reg_1466;
wire   [7:0] add_ln380_2_fu_660_p2;
reg   [7:0] add_ln380_2_reg_1471;
wire   [8:0] add_ln380_1_fu_665_p2;
reg   [8:0] add_ln380_1_reg_1476;
wire   [31:0] trunc_ln69_fu_682_p1;
reg   [31:0] trunc_ln69_reg_1486;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln874_fu_704_p2;
wire   [31:0] trunc_ln69_2_fu_709_p1;
reg   [31:0] trunc_ln69_2_reg_1500;
wire   [0:0] icmp_ln391_fu_727_p2;
reg   [0:0] icmp_ln391_reg_1508;
wire    ap_CS_fsm_state11;
wire   [10:0] add_ln405_fu_747_p2;
reg   [10:0] add_ln405_reg_1512;
wire   [6:0] add_ln394_1_fu_753_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln394_fu_759_p2;
reg   [0:0] icmp_ln394_reg_1523_pp1_iter2_reg;
wire   [4:0] select_ln394_fu_777_p3;
reg   [4:0] select_ln394_reg_1527;
reg   [4:0] select_ln394_reg_1527_pp1_iter1_reg;
wire   [2:0] select_ln394_1_fu_785_p3;
reg   [2:0] select_ln394_1_reg_1533;
reg   [2:0] select_ln394_1_reg_1533_pp1_iter1_reg;
wire   [4:0] add_ln400_fu_793_p2;
wire   [11:0] add_ln405_3_fu_872_p2;
reg   [11:0] add_ln405_3_reg_1555;
wire   [6:0] add_ln410_1_fu_882_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln410_fu_888_p2;
reg   [0:0] icmp_ln410_reg_1565_pp2_iter2_reg;
wire   [2:0] select_ln410_1_fu_914_p3;
reg   [2:0] select_ln410_1_reg_1569;
wire   [10:0] add_ln427_fu_926_p2;
reg   [10:0] add_ln427_reg_1575;
wire   [2:0] select_ln416_fu_961_p3;
reg   [2:0] select_ln416_reg_1580;
wire   [2:0] select_ln416_1_fu_969_p3;
reg   [2:0] select_ln416_1_reg_1586;
wire   [2:0] add_ln422_fu_977_p2;
wire   [5:0] select_ln416_2_fu_989_p3;
wire   [11:0] add_ln427_4_fu_1110_p2;
reg   [11:0] add_ln427_4_reg_1608;
reg   [11:0] add_ln427_4_reg_1608_pp2_iter2_reg;
wire   [6:0] add_ln329_1_fu_1130_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln329_fu_1136_p2;
reg   [0:0] icmp_ln329_reg_1618_pp3_iter2_reg;
wire   [4:0] select_ln329_fu_1154_p3;
reg   [4:0] select_ln329_reg_1622;
wire   [2:0] select_ln329_1_fu_1162_p3;
reg   [2:0] select_ln329_1_reg_1627;
wire   [4:0] add_ln335_fu_1170_p2;
wire   [7:0] add_ln340_fu_1190_p2;
reg   [7:0] add_ln340_reg_1638;
reg   [7:0] add_ln340_reg_1638_pp3_iter2_reg;
wire   [6:0] add_ln345_1_fu_1230_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln345_fu_1236_p2;
reg   [0:0] icmp_ln345_reg_1658_pp4_iter2_reg;
wire   [2:0] select_ln345_1_fu_1262_p3;
reg   [2:0] select_ln345_1_reg_1662;
wire   [2:0] select_ln351_fu_1300_p3;
reg   [2:0] select_ln351_reg_1668;
wire   [2:0] select_ln351_1_fu_1308_p3;
reg   [2:0] select_ln351_1_reg_1673;
wire   [2:0] add_ln357_fu_1316_p2;
wire   [5:0] select_ln351_2_fu_1328_p3;
wire   [63:0] zext_ln362_4_fu_1395_p1;
reg   [63:0] zext_ln362_4_reg_1689;
reg   [63:0] zext_ln362_4_reg_1689_pp4_iter2_reg;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
wire    ap_CS_fsm_state16;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state17;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state23;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
wire    ap_CS_fsm_state27;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state28;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter3;
wire    grp_encodeCoordinates_fu_494_ap_ready;
wire   [63:0] grp_encodeCoordinates_fu_494_ap_return;
reg   [7:0] i_reg_307;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln874_4_fu_713_p2;
reg   [2:0] ap_phi_mux_a_4_phi_fu_333_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_a_5_phi_fu_366_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_b_7_phi_fu_388_p4;
reg   [2:0] ap_phi_mux_a_phi_fu_421_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] ap_phi_mux_a_3_phi_fu_454_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_b_5_phi_fu_476_p4;
wire   [63:0] p_cast_fu_570_p1;
wire   [63:0] tmp_30_fu_636_p3;
wire   [63:0] tmp_31_fu_651_p3;
wire   [63:0] zext_ln380_2_fu_677_p1;
wire   [63:0] zext_ln381_fu_699_p1;
wire   [63:0] zext_ln405_6_fu_827_p1;
wire   [63:0] zext_ln405_7_fu_844_p1;
wire   [63:0] zext_ln405_8_fu_878_p1;
wire   [63:0] zext_ln427_6_fu_1105_p1;
wire   [63:0] zext_ln427_7_fu_1116_p1;
wire   [63:0] zext_ln340_2_fu_1204_p1;
wire   [63:0] zext_ln340_3_fu_1221_p1;
wire   [63:0] zext_ln340_1_fu_1226_p1;
wire   [7:0] zext_ln435_fu_1125_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state32;
wire   [4:0] trunc_ln325_fu_522_p1;
wire   [7:0] tmp_27_fu_546_p3;
wire   [11:0] tmp_s_fu_538_p3;
wire   [11:0] tmp_88_cast_fu_554_p1;
wire   [11:0] empty_100_fu_558_p2;
wire   [6:0] tmp_fu_577_p3;
wire   [7:0] zext_ln380_1_fu_584_p1;
wire   [7:0] zext_ln380_fu_574_p1;
wire   [31:0] zext_ln378_fu_603_p1;
wire   [12:0] tmp_29_fu_622_p3;
wire   [12:0] or_ln874_fu_630_p2;
wire   [12:0] or_ln874_1_fu_645_p2;
wire   [8:0] zext_ln874_fu_618_p1;
wire   [12:0] tmp_35_fu_670_p3;
wire   [11:0] tmp_96_cast_fu_686_p3;
wire   [11:0] or_ln381_fu_693_p2;
wire   [2:0] tmp_38_fu_718_p4;
wire   [9:0] tmp_33_fu_736_p3;
wire   [10:0] zext_ln405_1_fu_743_p1;
wire   [10:0] zext_ln405_fu_733_p1;
wire   [0:0] icmp_ln400_fu_771_p2;
wire   [2:0] add_ln394_fu_765_p2;
wire   [6:0] tmp_39_fu_799_p3;
wire   [7:0] zext_ln405_2_fu_806_p1;
wire   [7:0] zext_ln405_5_fu_810_p1;
wire   [7:0] add_ln405_2_fu_813_p2;
wire   [8:0] tmp_40_fu_819_p3;
wire   [7:0] shl_ln405_fu_832_p2;
wire   [7:0] or_ln405_fu_838_p2;
wire   [7:0] trunc_ln405_fu_849_p1;
wire   [7:0] zext_ln405_3_fu_852_p1;
wire   [7:0] add_ln405_1_fu_855_p2;
wire   [11:0] tmp_103_cast_fu_861_p3;
wire   [11:0] zext_ln405_4_fu_869_p1;
wire   [0:0] icmp_ln416_fu_900_p2;
wire   [2:0] add_ln410_fu_894_p2;
wire   [10:0] zext_ln427_fu_922_p1;
wire   [0:0] icmp_ln422_fu_937_p2;
wire   [0:0] xor_ln410_fu_931_p2;
wire   [2:0] select_ln410_fu_906_p3;
wire   [0:0] and_ln410_fu_943_p2;
wire   [0:0] or_ln416_fu_955_p2;
wire   [2:0] add_ln416_fu_949_p2;
wire   [5:0] add_ln416_1_fu_983_p2;
wire   [4:0] tmp_41_fu_997_p3;
wire   [12:0] tmp_42_fu_1008_p3;
wire   [5:0] zext_ln427_1_fu_1004_p1;
wire   [5:0] zext_ln427_3_fu_1022_p1;
wire   [5:0] add_ln427_1_fu_1025_p2;
wire   [3:0] trunc_ln427_fu_1031_p1;
wire   [6:0] p_shl8_cast_fu_1035_p3;
wire   [6:0] p_shl9_cast_fu_1043_p3;
wire   [62:0] zext_ln416_fu_1015_p1;
wire   [62:0] zext_ln427_2_fu_1019_p1;
wire   [62:0] add_ln427_2_fu_1057_p2;
wire   [8:0] trunc_ln427_1_fu_1063_p1;
wire   [10:0] trunc_ln427_2_fu_1075_p1;
wire   [11:0] p_shl6_cast_fu_1067_p3;
wire   [11:0] p_shl7_cast_fu_1079_p3;
wire   [6:0] sub_ln427_fu_1051_p2;
wire   [6:0] zext_ln427_5_fu_1096_p1;
wire   [6:0] add_ln427_3_fu_1099_p2;
wire   [11:0] sub_ln427_1_fu_1087_p2;
wire   [11:0] zext_ln427_4_fu_1093_p1;
wire   [5:0] add_ln435_fu_1120_p2;
wire   [0:0] icmp_ln335_fu_1148_p2;
wire   [2:0] add_ln329_fu_1142_p2;
wire   [6:0] tmp_28_fu_1176_p3;
wire   [7:0] tmp_89_cast_fu_1183_p1;
wire   [7:0] zext_ln340_fu_1187_p1;
wire   [8:0] tmp_34_fu_1196_p3;
wire   [7:0] shl_ln340_fu_1209_p2;
wire   [7:0] or_ln340_fu_1215_p2;
wire   [0:0] icmp_ln351_fu_1248_p2;
wire   [2:0] add_ln345_fu_1242_p2;
wire   [0:0] icmp_ln357_fu_1276_p2;
wire   [0:0] xor_ln345_fu_1270_p2;
wire   [2:0] select_ln345_fu_1254_p3;
wire   [0:0] and_ln345_fu_1282_p2;
wire   [0:0] or_ln351_fu_1294_p2;
wire   [2:0] add_ln351_fu_1288_p2;
wire   [5:0] add_ln351_1_fu_1322_p2;
wire   [4:0] tmp_32_fu_1336_p3;
wire   [5:0] zext_ln351_fu_1343_p1;
wire   [5:0] zext_ln362_fu_1347_p1;
wire   [5:0] add_ln362_fu_1350_p2;
wire   [8:0] tmp_36_fu_1356_p3;
wire   [6:0] tmp_37_fu_1368_p3;
wire   [11:0] zext_ln362_1_fu_1364_p1;
wire   [11:0] zext_ln362_2_fu_1376_p1;
wire   [11:0] sub_ln362_fu_1380_p2;
wire   [11:0] zext_ln362_3_fu_1386_p1;
wire   [11:0] add_ln362_1_fu_1389_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
end

MPSQ_encodeCoordinates grp_encodeCoordinates_fu_494(
    .ap_ready(grp_encodeCoordinates_fu_494_ap_ready),
    .phi(reg_501),
    .z(reg_507),
    .ap_return(grp_encodeCoordinates_fu_494_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state17)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state23)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state28)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        a_3_reg_450 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln345_reg_1658 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        a_3_reg_450 <= select_ln345_1_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_reg_1523 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        a_4_reg_329 <= select_ln394_1_reg_1533;
    end else if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        a_4_reg_329 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        a_5_reg_362 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln410_reg_1565 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        a_5_reg_362 <= select_ln410_1_reg_1569;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
        a_reg_417 <= 3'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln329_reg_1618 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        a_reg_417 <= select_ln329_1_reg_1627;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        b_5_reg_472 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln345_reg_1658 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        b_5_reg_472 <= select_ln351_1_reg_1673;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_fu_759_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        b_6_reg_340 <= add_ln400_fu_793_p2;
    end else if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        b_6_reg_340 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b_7_reg_384 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln410_reg_1565 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        b_7_reg_384 <= select_ln416_1_reg_1586;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
        b_reg_428 <= 5'd0;
    end else if (((icmp_ln329_fu_1136_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        b_reg_428 <= add_ln335_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c_4_reg_395 <= 3'd0;
    end else if (((icmp_ln410_fu_888_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        c_4_reg_395 <= add_ln422_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        c_reg_483 <= 3'd0;
    end else if (((icmp_ln345_fu_1236_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        c_reg_483 <= add_ln357_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln378_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_307 <= 8'd0;
    end else if (((icmp_ln874_4_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln874_reg_1496 == 1'd1) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
        i_reg_307 <= i_13_reg_1456;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten21_reg_439 <= 7'd0;
    end else if (((icmp_ln345_fu_1236_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten21_reg_439 <= add_ln345_1_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_fu_759_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten29_reg_318 <= add_ln394_1_fu_753_p2;
    end else if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        indvar_flatten29_reg_318 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten37_reg_373 <= 6'd0;
    end else if (((icmp_ln410_fu_888_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten37_reg_373 <= select_ln416_2_fu_989_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten51_reg_351 <= 7'd0;
    end else if (((icmp_ln410_fu_888_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten51_reg_351 <= add_ln410_1_fu_882_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten7_reg_461 <= 6'd0;
    end else if (((icmp_ln345_fu_1236_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten7_reg_461 <= select_ln351_2_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
        indvar_flatten_reg_406 <= 7'd0;
    end else if (((icmp_ln329_fu_1136_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_406 <= add_ln329_1_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_reg_1523_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        reg_501 <= wp_superpoints_q1;
    end else if ((((icmp_ln329_reg_1618_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln874_reg_1496 == 1'd1) & (icmp_ln378_1_reg_1452 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln378_1_reg_1452 == 1'd1)))) begin
        reg_501 <= wp_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_reg_1618_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        reg_507 <= wp_superpoints_q1;
    end else if (((icmp_ln394_reg_1523_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        reg_507 <= wp_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln329_reg_1618 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln340_reg_1638 <= add_ln340_fu_1190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        add_ln340_reg_1638_pp3_iter2_reg <= add_ln340_reg_1638;
        icmp_ln329_reg_1618_pp3_iter2_reg <= icmp_ln329_reg_1618_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln378_1_fu_607_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln380_1_reg_1476 <= add_ln380_1_fu_665_p2;
        add_ln380_2_reg_1471 <= add_ln380_2_fu_660_p2;
        wp_superpoints_addr_7_reg_1466[7 : 5] <= tmp_31_fu_651_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln380_cast_reg_1443[7 : 0] <= add_ln380_cast_fu_594_p1[7 : 0];
        add_ln380_reg_1438 <= add_ln380_fu_588_p2;
        icmp_ln378_reg_1448 <= icmp_ln378_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_reg_1523_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln405_3_reg_1555 <= add_ln405_3_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln405_reg_1512 <= add_ln405_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln410_reg_1565 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln427_4_reg_1608 <= add_ln427_4_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        add_ln427_4_reg_1608_pp2_iter2_reg <= add_ln427_4_reg_1608;
        icmp_ln410_reg_1565_pp2_iter2_reg <= icmp_ln410_reg_1565_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln410_fu_888_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln427_reg_1575 <= add_ln427_fu_926_p2;
        select_ln416_reg_1580 <= select_ln416_fu_961_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd0))) begin
        empty_101_reg_1422[11 : 3] <= empty_101_fu_564_p2[11 : 3];
        sub_reg_1416 <= sub_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_13_reg_1456 <= i_13_fu_612_p2;
        icmp_ln378_1_reg_1452 <= icmp_ln378_1_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln325_reg_1412 <= icmp_ln325_fu_526_p2;
        trunc_ln322_reg_1407 <= trunc_ln322_fu_518_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln329_reg_1618 <= icmp_ln329_fu_1136_p2;
        icmp_ln329_reg_1618_pp3_iter1_reg <= icmp_ln329_reg_1618;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln345_reg_1658 <= icmp_ln345_fu_1236_p2;
        icmp_ln345_reg_1658_pp4_iter1_reg <= icmp_ln345_reg_1658;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        icmp_ln345_reg_1658_pp4_iter2_reg <= icmp_ln345_reg_1658_pp4_iter1_reg;
        zext_ln362_4_reg_1689_pp4_iter2_reg[11 : 0] <= zext_ln362_4_reg_1689[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln391_reg_1508 <= icmp_ln391_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln394_reg_1523 <= icmp_ln394_fu_759_p2;
        icmp_ln394_reg_1523_pp1_iter1_reg <= icmp_ln394_reg_1523;
        select_ln394_1_reg_1533_pp1_iter1_reg <= select_ln394_1_reg_1533;
        select_ln394_reg_1527_pp1_iter1_reg <= select_ln394_reg_1527;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln394_reg_1523_pp1_iter2_reg <= icmp_ln394_reg_1523_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln410_reg_1565 <= icmp_ln410_fu_888_p2;
        icmp_ln410_reg_1565_pp2_iter1_reg <= icmp_ln410_reg_1565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
        icmp_ln874_reg_1496 <= icmp_ln874_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_parameters_load_reg_1432 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln345_reg_1658_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln410_reg_1565_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        reg_513 <= wp_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_1136_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln329_1_reg_1627 <= select_ln329_1_fu_1162_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_1136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln329_reg_1622 <= select_ln329_fu_1154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln345_fu_1236_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        select_ln345_1_reg_1662 <= select_ln345_1_fu_1262_p3;
        select_ln351_1_reg_1673 <= select_ln351_1_fu_1308_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln345_fu_1236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        select_ln351_reg_1668 <= select_ln351_fu_1300_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_fu_759_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln394_1_reg_1533 <= select_ln394_1_fu_785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln394_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln394_reg_1527 <= select_ln394_fu_777_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln410_fu_888_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln410_1_reg_1569 <= select_ln410_1_fu_914_p3;
        select_ln416_1_reg_1586 <= select_ln416_1_fu_969_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln874_reg_1496 == 1'd1) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
        trunc_ln69_2_reg_1500 <= trunc_ln69_2_fu_709_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
        trunc_ln69_reg_1486 <= trunc_ln69_fu_682_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln345_reg_1658 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        zext_ln362_4_reg_1689[11 : 0] <= zext_ln362_4_fu_1395_p1[11 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln394_fu_759_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln410_fu_888_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln329_fu_1136_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln345_fu_1236_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln345_reg_1658 == 1'd0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_a_3_phi_fu_454_p4 = select_ln345_1_reg_1662;
    end else begin
        ap_phi_mux_a_3_phi_fu_454_p4 = a_3_reg_450;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_reg_1523 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_a_4_phi_fu_333_p4 = select_ln394_1_reg_1533;
    end else begin
        ap_phi_mux_a_4_phi_fu_333_p4 = a_4_reg_329;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln410_reg_1565 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_a_5_phi_fu_366_p4 = select_ln410_1_reg_1569;
    end else begin
        ap_phi_mux_a_5_phi_fu_366_p4 = a_5_reg_362;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln329_reg_1618 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_a_phi_fu_421_p4 = select_ln329_1_reg_1627;
    end else begin
        ap_phi_mux_a_phi_fu_421_p4 = a_reg_417;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln345_reg_1658 == 1'd0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_b_5_phi_fu_476_p4 = select_ln351_1_reg_1673;
    end else begin
        ap_phi_mux_b_5_phi_fu_476_p4 = b_5_reg_472;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln410_reg_1565 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_b_7_phi_fu_388_p4 = select_ln416_1_reg_1586;
    end else begin
        ap_phi_mux_b_7_phi_fu_388_p4 = b_7_reg_384;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        n_patches = 8'd1;
    end else if (((icmp_ln391_reg_1508 == 1'd1) & (icmp_ln378_reg_1448 == 1'd1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln325_reg_1412 == 1'd0) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
        n_patches = zext_ln435_fu_1125_p1;
    end else begin
        n_patches = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((icmp_ln391_reg_1508 == 1'd1) & (icmp_ln378_reg_1448 == 1'd1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln325_reg_1412 == 1'd0) & (icmp_ln378_1_reg_1452 == 1'd1)))) begin
        n_patches_ap_vld = 1'b1;
    end else begin
        n_patches_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        patches_parameters_address0 = zext_ln362_4_reg_1689_pp4_iter2_reg;
    end else if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        patches_parameters_address0 = zext_ln427_7_fu_1116_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patches_parameters_address0 = p_cast_fu_570_p1;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        patches_parameters_ce0 = 1'b1;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln345_reg_1658_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln410_reg_1565_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        patches_parameters_we0 = 1'b1;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        patches_superpoints_address0 = zext_ln340_1_fu_1226_p1;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        patches_superpoints_address0 = zext_ln405_8_fu_878_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        patches_superpoints_address0 = zext_ln381_fu_699_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        patches_superpoints_address0 = zext_ln380_2_fu_677_p1;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_ce0 = 1'b1;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln329_reg_1618_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln394_reg_1523_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_we0 = 1'b1;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        wp_parameters_address0 = zext_ln362_4_fu_1395_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        wp_parameters_address0 = zext_ln427_6_fu_1105_p1;
    end else begin
        wp_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        wp_parameters_ce0 = 1'b1;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        wp_superpoints_address0 = zext_ln340_2_fu_1204_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        wp_superpoints_address0 = zext_ln405_7_fu_844_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        wp_superpoints_address0 = wp_superpoints_addr_7_reg_1466;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        wp_superpoints_address0 = tmp_30_fu_636_p3;
    end else begin
        wp_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        wp_superpoints_address1 = zext_ln340_3_fu_1221_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        wp_superpoints_address1 = zext_ln405_6_fu_827_p1;
    end else begin
        wp_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        wp_superpoints_ce0 = 1'b1;
    end else begin
        wp_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        wp_superpoints_ce1 = 1'b1;
    end else begin
        wp_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_526_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln378_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln874_4_fu_713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln874_reg_1496 == 1'd1) & (icmp_ln378_1_reg_1452 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln378_1_reg_1452 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln391_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln394_fu_759_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln394_fu_759_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln410_fu_888_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln410_fu_888_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln329_fu_1136_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln329_fu_1136_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln345_fu_1236_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln345_fu_1236_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln329_1_fu_1130_p2 = (indvar_flatten_reg_406 + 7'd1);

assign add_ln329_fu_1142_p2 = (ap_phi_mux_a_phi_fu_421_p4 + 3'd1);

assign add_ln335_fu_1170_p2 = (select_ln329_fu_1154_p3 + 5'd1);

assign add_ln340_fu_1190_p2 = (tmp_89_cast_fu_1183_p1 + zext_ln340_fu_1187_p1);

assign add_ln345_1_fu_1230_p2 = (indvar_flatten21_reg_439 + 7'd1);

assign add_ln345_fu_1242_p2 = (ap_phi_mux_a_3_phi_fu_454_p4 + 3'd1);

assign add_ln351_1_fu_1322_p2 = (indvar_flatten7_reg_461 + 6'd1);

assign add_ln351_fu_1288_p2 = (select_ln345_fu_1254_p3 + 3'd1);

assign add_ln357_fu_1316_p2 = (select_ln351_fu_1300_p3 + 3'd1);

assign add_ln362_1_fu_1389_p2 = (sub_ln362_fu_1380_p2 + zext_ln362_3_fu_1386_p1);

assign add_ln362_fu_1350_p2 = (zext_ln351_fu_1343_p1 + zext_ln362_fu_1347_p1);

assign add_ln380_1_fu_665_p2 = (add_ln380_cast_reg_1443 + zext_ln874_fu_618_p1);

assign add_ln380_2_fu_660_p2 = (add_ln380_reg_1438 + i_reg_307);

assign add_ln380_cast_fu_594_p1 = add_ln380_fu_588_p2;

assign add_ln380_fu_588_p2 = (zext_ln380_1_fu_584_p1 + zext_ln380_fu_574_p1);

assign add_ln394_1_fu_753_p2 = (indvar_flatten29_reg_318 + 7'd1);

assign add_ln394_fu_765_p2 = (ap_phi_mux_a_4_phi_fu_333_p4 + 3'd1);

assign add_ln400_fu_793_p2 = (select_ln394_fu_777_p3 + 5'd1);

assign add_ln405_1_fu_855_p2 = (trunc_ln405_fu_849_p1 + zext_ln405_3_fu_852_p1);

assign add_ln405_2_fu_813_p2 = (zext_ln405_2_fu_806_p1 + zext_ln405_5_fu_810_p1);

assign add_ln405_3_fu_872_p2 = (tmp_103_cast_fu_861_p3 + zext_ln405_4_fu_869_p1);

assign add_ln405_fu_747_p2 = (zext_ln405_1_fu_743_p1 + zext_ln405_fu_733_p1);

assign add_ln410_1_fu_882_p2 = (indvar_flatten51_reg_351 + 7'd1);

assign add_ln410_fu_894_p2 = (ap_phi_mux_a_5_phi_fu_366_p4 + 3'd1);

assign add_ln416_1_fu_983_p2 = (indvar_flatten37_reg_373 + 6'd1);

assign add_ln416_fu_949_p2 = (select_ln410_fu_906_p3 + 3'd1);

assign add_ln422_fu_977_p2 = (select_ln416_fu_961_p3 + 3'd1);

assign add_ln427_1_fu_1025_p2 = (zext_ln427_1_fu_1004_p1 + zext_ln427_3_fu_1022_p1);

assign add_ln427_2_fu_1057_p2 = (zext_ln416_fu_1015_p1 + zext_ln427_2_fu_1019_p1);

assign add_ln427_3_fu_1099_p2 = (sub_ln427_fu_1051_p2 + zext_ln427_5_fu_1096_p1);

assign add_ln427_4_fu_1110_p2 = (sub_ln427_1_fu_1087_p2 + zext_ln427_4_fu_1093_p1);

assign add_ln427_fu_926_p2 = (add_ln405_reg_1512 + zext_ln427_fu_922_p1);

assign add_ln435_fu_1120_p2 = (trunc_ln322_reg_1407 + 6'd1);

assign and_ln345_fu_1282_p2 = (xor_ln345_fu_1270_p2 & icmp_ln357_fu_1276_p2);

assign and_ln410_fu_943_p2 = (xor_ln410_fu_931_p2 & icmp_ln422_fu_937_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign empty_100_fu_558_p2 = (tmp_s_fu_538_p3 - tmp_88_cast_fu_554_p1);

assign empty_101_fu_564_p2 = (empty_100_fu_558_p2 + 12'd102);

assign i_13_fu_612_p2 = (i_reg_307 + 8'd1);

assign icmp_ln325_fu_526_p2 = ((n_patches_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1136_p2 = ((indvar_flatten_reg_406 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln335_fu_1148_p2 = ((b_reg_428 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln345_fu_1236_p2 = ((indvar_flatten21_reg_439 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln351_fu_1248_p2 = ((indvar_flatten7_reg_461 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln357_fu_1276_p2 = ((c_reg_483 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln378_1_fu_607_p2 = (($signed(zext_ln378_fu_603_p1) < $signed(patches_parameters_load_reg_1432)) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_598_p2 = (($signed(patches_parameters_load_reg_1432) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_727_p2 = ((tmp_38_fu_718_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln394_fu_759_p2 = ((indvar_flatten29_reg_318 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_771_p2 = ((b_6_reg_340 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln410_fu_888_p2 = ((indvar_flatten51_reg_351 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_900_p2 = ((indvar_flatten37_reg_373 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_937_p2 = ((c_4_reg_395 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_713_p2 = ((trunc_ln69_2_reg_1500 == reg_501) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_704_p2 = ((trunc_ln69_reg_1486 == reg_501) ? 1'b1 : 1'b0);

assign or_ln340_fu_1215_p2 = (shl_ln340_fu_1209_p2 | 8'd1);

assign or_ln351_fu_1294_p2 = (icmp_ln351_fu_1248_p2 | and_ln345_fu_1282_p2);

assign or_ln381_fu_693_p2 = (tmp_96_cast_fu_686_p3 | 12'd15);

assign or_ln405_fu_838_p2 = (shl_ln405_fu_832_p2 | 8'd1);

assign or_ln416_fu_955_p2 = (icmp_ln416_fu_900_p2 | and_ln410_fu_943_p2);

assign or_ln874_1_fu_645_p2 = (tmp_29_fu_622_p3 | 13'd31);

assign or_ln874_fu_630_p2 = (tmp_29_fu_622_p3 | 13'd1);

assign p_cast_fu_570_p1 = empty_101_reg_1422;

assign p_shl6_cast_fu_1067_p3 = {{trunc_ln427_1_fu_1063_p1}, {3'd0}};

assign p_shl7_cast_fu_1079_p3 = {{trunc_ln427_2_fu_1075_p1}, {1'd0}};

assign p_shl8_cast_fu_1035_p3 = {{trunc_ln427_fu_1031_p1}, {3'd0}};

assign p_shl9_cast_fu_1043_p3 = {{add_ln427_1_fu_1025_p2}, {1'd0}};

assign patches_parameters_d0 = reg_513;

assign patches_superpoints_d0 = grp_encodeCoordinates_fu_494_ap_return;

assign select_ln329_1_fu_1162_p3 = ((icmp_ln335_fu_1148_p2[0:0] == 1'b1) ? add_ln329_fu_1142_p2 : ap_phi_mux_a_phi_fu_421_p4);

assign select_ln329_fu_1154_p3 = ((icmp_ln335_fu_1148_p2[0:0] == 1'b1) ? 5'd0 : b_reg_428);

assign select_ln345_1_fu_1262_p3 = ((icmp_ln351_fu_1248_p2[0:0] == 1'b1) ? add_ln345_fu_1242_p2 : ap_phi_mux_a_3_phi_fu_454_p4);

assign select_ln345_fu_1254_p3 = ((icmp_ln351_fu_1248_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_5_phi_fu_476_p4);

assign select_ln351_1_fu_1308_p3 = ((and_ln345_fu_1282_p2[0:0] == 1'b1) ? add_ln351_fu_1288_p2 : select_ln345_fu_1254_p3);

assign select_ln351_2_fu_1328_p3 = ((icmp_ln351_fu_1248_p2[0:0] == 1'b1) ? 6'd1 : add_ln351_1_fu_1322_p2);

assign select_ln351_fu_1300_p3 = ((or_ln351_fu_1294_p2[0:0] == 1'b1) ? 3'd0 : c_reg_483);

assign select_ln394_1_fu_785_p3 = ((icmp_ln400_fu_771_p2[0:0] == 1'b1) ? add_ln394_fu_765_p2 : ap_phi_mux_a_4_phi_fu_333_p4);

assign select_ln394_fu_777_p3 = ((icmp_ln400_fu_771_p2[0:0] == 1'b1) ? 5'd0 : b_6_reg_340);

assign select_ln410_1_fu_914_p3 = ((icmp_ln416_fu_900_p2[0:0] == 1'b1) ? add_ln410_fu_894_p2 : ap_phi_mux_a_5_phi_fu_366_p4);

assign select_ln410_fu_906_p3 = ((icmp_ln416_fu_900_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_7_phi_fu_388_p4);

assign select_ln416_1_fu_969_p3 = ((and_ln410_fu_943_p2[0:0] == 1'b1) ? add_ln416_fu_949_p2 : select_ln410_fu_906_p3);

assign select_ln416_2_fu_989_p3 = ((icmp_ln416_fu_900_p2[0:0] == 1'b1) ? 6'd1 : add_ln416_1_fu_983_p2);

assign select_ln416_fu_961_p3 = ((or_ln416_fu_955_p2[0:0] == 1'b1) ? 3'd0 : c_4_reg_395);

assign shl_ln340_fu_1209_p2 = add_ln340_fu_1190_p2 << 8'd1;

assign shl_ln405_fu_832_p2 = add_ln405_2_fu_813_p2 << 8'd1;

assign sub_fu_532_p2 = ($signed(trunc_ln325_fu_522_p1) + $signed(5'd31));

assign sub_ln362_fu_1380_p2 = (zext_ln362_1_fu_1364_p1 - zext_ln362_2_fu_1376_p1);

assign sub_ln427_1_fu_1087_p2 = (p_shl6_cast_fu_1067_p3 - p_shl7_cast_fu_1079_p3);

assign sub_ln427_fu_1051_p2 = (p_shl8_cast_fu_1035_p3 - p_shl9_cast_fu_1043_p3);

assign tmp_103_cast_fu_861_p3 = {{add_ln405_1_fu_855_p2}, {4'd0}};

assign tmp_27_fu_546_p3 = {{sub_fu_532_p2}, {3'd0}};

assign tmp_28_fu_1176_p3 = {{select_ln329_1_reg_1627}, {4'd0}};

assign tmp_29_fu_622_p3 = {{i_reg_307}, {5'd0}};

assign tmp_30_fu_636_p3 = {{51'd0}, {or_ln874_fu_630_p2}};

assign tmp_31_fu_651_p3 = {{51'd0}, {or_ln874_1_fu_645_p2}};

assign tmp_32_fu_1336_p3 = {{select_ln345_1_reg_1662}, {2'd0}};

assign tmp_33_fu_736_p3 = {{n_patches_read}, {2'd0}};

assign tmp_34_fu_1196_p3 = {{add_ln340_fu_1190_p2}, {1'd0}};

assign tmp_35_fu_670_p3 = {{add_ln380_1_reg_1476}, {4'd0}};

assign tmp_36_fu_1356_p3 = {{add_ln362_fu_1350_p2}, {3'd0}};

assign tmp_37_fu_1368_p3 = {{add_ln362_fu_1350_p2}, {1'd0}};

assign tmp_38_fu_718_p4 = {{n_patches_read[7:5]}};

assign tmp_39_fu_799_p3 = {{select_ln394_1_reg_1533}, {4'd0}};

assign tmp_40_fu_819_p3 = {{add_ln405_2_fu_813_p2}, {1'd0}};

assign tmp_41_fu_997_p3 = {{select_ln410_1_reg_1569}, {2'd0}};

assign tmp_42_fu_1008_p3 = {{add_ln427_reg_1575}, {2'd0}};

assign tmp_88_cast_fu_554_p1 = tmp_27_fu_546_p3;

assign tmp_89_cast_fu_1183_p1 = tmp_28_fu_1176_p3;

assign tmp_96_cast_fu_686_p3 = {{add_ln380_2_reg_1471}, {4'd0}};

assign tmp_fu_577_p3 = {{sub_reg_1416}, {2'd0}};

assign tmp_s_fu_538_p3 = {{sub_fu_532_p2}, {7'd0}};

assign trunc_ln322_fu_518_p1 = n_patches_read[5:0];

assign trunc_ln325_fu_522_p1 = n_patches_read[4:0];

assign trunc_ln405_fu_849_p1 = add_ln405_reg_1512[7:0];

assign trunc_ln427_1_fu_1063_p1 = add_ln427_2_fu_1057_p2[8:0];

assign trunc_ln427_2_fu_1075_p1 = add_ln427_2_fu_1057_p2[10:0];

assign trunc_ln427_fu_1031_p1 = add_ln427_1_fu_1025_p2[3:0];

assign trunc_ln69_2_fu_709_p1 = patches_superpoints_q0[31:0];

assign trunc_ln69_fu_682_p1 = patches_superpoints_q0[31:0];

assign xor_ln345_fu_1270_p2 = (icmp_ln351_fu_1248_p2 ^ 1'd1);

assign xor_ln410_fu_931_p2 = (icmp_ln416_fu_900_p2 ^ 1'd1);

assign zext_ln340_1_fu_1226_p1 = add_ln340_reg_1638_pp3_iter2_reg;

assign zext_ln340_2_fu_1204_p1 = tmp_34_fu_1196_p3;

assign zext_ln340_3_fu_1221_p1 = or_ln340_fu_1215_p2;

assign zext_ln340_fu_1187_p1 = select_ln329_reg_1622;

assign zext_ln351_fu_1343_p1 = tmp_32_fu_1336_p3;

assign zext_ln362_1_fu_1364_p1 = tmp_36_fu_1356_p3;

assign zext_ln362_2_fu_1376_p1 = tmp_37_fu_1368_p3;

assign zext_ln362_3_fu_1386_p1 = select_ln351_reg_1668;

assign zext_ln362_4_fu_1395_p1 = add_ln362_1_fu_1389_p2;

assign zext_ln362_fu_1347_p1 = select_ln351_1_reg_1673;

assign zext_ln378_fu_603_p1 = i_reg_307;

assign zext_ln380_1_fu_584_p1 = tmp_fu_577_p3;

assign zext_ln380_2_fu_677_p1 = tmp_35_fu_670_p3;

assign zext_ln380_fu_574_p1 = sub_reg_1416;

assign zext_ln381_fu_699_p1 = or_ln381_fu_693_p2;

assign zext_ln405_1_fu_743_p1 = tmp_33_fu_736_p3;

assign zext_ln405_2_fu_806_p1 = tmp_39_fu_799_p3;

assign zext_ln405_3_fu_852_p1 = select_ln394_1_reg_1533_pp1_iter1_reg;

assign zext_ln405_4_fu_869_p1 = select_ln394_reg_1527_pp1_iter1_reg;

assign zext_ln405_5_fu_810_p1 = select_ln394_reg_1527;

assign zext_ln405_6_fu_827_p1 = tmp_40_fu_819_p3;

assign zext_ln405_7_fu_844_p1 = or_ln405_fu_838_p2;

assign zext_ln405_8_fu_878_p1 = add_ln405_3_reg_1555;

assign zext_ln405_fu_733_p1 = n_patches_read;

assign zext_ln416_fu_1015_p1 = tmp_42_fu_1008_p3;

assign zext_ln427_1_fu_1004_p1 = tmp_41_fu_997_p3;

assign zext_ln427_2_fu_1019_p1 = select_ln416_1_reg_1586;

assign zext_ln427_3_fu_1022_p1 = select_ln416_1_reg_1586;

assign zext_ln427_4_fu_1093_p1 = select_ln416_reg_1580;

assign zext_ln427_5_fu_1096_p1 = select_ln416_reg_1580;

assign zext_ln427_6_fu_1105_p1 = add_ln427_3_fu_1099_p2;

assign zext_ln427_7_fu_1116_p1 = add_ln427_4_reg_1608_pp2_iter2_reg;

assign zext_ln427_fu_922_p1 = select_ln410_1_fu_914_p3;

assign zext_ln435_fu_1125_p1 = add_ln435_fu_1120_p2;

assign zext_ln874_fu_618_p1 = i_reg_307;

always @ (posedge ap_clk) begin
    empty_101_reg_1422[2:0] <= 3'b110;
    add_ln380_cast_reg_1443[8] <= 1'b0;
    wp_superpoints_addr_7_reg_1466[4:0] <= 5'b11111;
    zext_ln362_4_reg_1689[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln362_4_reg_1689_pp4_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //MPSQ_add_patch9
