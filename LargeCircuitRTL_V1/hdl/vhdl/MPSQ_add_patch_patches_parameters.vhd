-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_add_patch_patches_parameters is
port (
    ap_ready : OUT STD_LOGIC;
    wp_parameters_1_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_1_3_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_2_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_2_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_2_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_2_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_0_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_0_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_0_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_0_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_1_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_1_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_1_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_1_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_2_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_2_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_2_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_2_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_3_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_3_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_3_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_0_3_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_0_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_0_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_0_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_0_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_1_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_1_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_1_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_1_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_2_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_2_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_2_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_2_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_3_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_3_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_3_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_1_3_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_0_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_0_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_0_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_0_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_1_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_1_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_1_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_1_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_2_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_2_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_2_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_2_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_3_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_3_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_3_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_2_3_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_40 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_41 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_42 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_43 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_44 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_45 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_46 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_47 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_48 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_49 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_50 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_51 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_52 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_53 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_54 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_55 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_56 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_57 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_58 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_59 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_add_patch_patches_parameters is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= patches_parameters_0_0_0_1_read;
    ap_return_1 <= patches_parameters_0_0_1_1_read;
    ap_return_10 <= patches_parameters_1_1_0_1_read;
    ap_return_11 <= patches_parameters_1_1_1_1_read;
    ap_return_12 <= patches_parameters_1_2_0_1_read;
    ap_return_13 <= patches_parameters_1_2_1_1_read;
    ap_return_14 <= patches_parameters_1_3_0_1_read;
    ap_return_15 <= patches_parameters_1_3_1_1_read;
    ap_return_16 <= patches_parameters_2_0_0_1_read;
    ap_return_17 <= patches_parameters_2_0_1_1_read;
    ap_return_18 <= patches_parameters_2_1_0_1_read;
    ap_return_19 <= patches_parameters_2_1_1_1_read;
    ap_return_2 <= patches_parameters_0_1_0_1_read;
    ap_return_20 <= patches_parameters_2_2_0_1_read;
    ap_return_21 <= patches_parameters_2_2_1_1_read;
    ap_return_22 <= patches_parameters_2_3_0_1_read;
    ap_return_23 <= patches_parameters_2_3_1_1_read;
    ap_return_24 <= patches_parameters_0_0_0_0_read;
    ap_return_25 <= patches_parameters_0_0_1_0_read;
    ap_return_26 <= patches_parameters_0_1_0_0_read;
    ap_return_27 <= patches_parameters_0_1_1_0_read;
    ap_return_28 <= patches_parameters_0_2_0_0_read;
    ap_return_29 <= patches_parameters_0_2_1_0_read;
    ap_return_3 <= patches_parameters_0_1_1_1_read;
    ap_return_30 <= patches_parameters_0_3_0_0_read;
    ap_return_31 <= patches_parameters_0_3_1_0_read;
    ap_return_32 <= wp_parameters_1_0_0_read;
    ap_return_33 <= patches_parameters_1_0_0_0_read;
    ap_return_34 <= wp_parameters_1_0_1_read;
    ap_return_35 <= patches_parameters_1_0_1_0_read;
    ap_return_36 <= wp_parameters_1_1_0_read;
    ap_return_37 <= patches_parameters_1_1_0_0_read;
    ap_return_38 <= wp_parameters_1_1_1_read;
    ap_return_39 <= patches_parameters_1_1_1_0_read;
    ap_return_4 <= patches_parameters_0_2_0_1_read;
    ap_return_40 <= wp_parameters_1_2_0_read;
    ap_return_41 <= patches_parameters_1_2_0_0_read;
    ap_return_42 <= wp_parameters_1_2_1_read;
    ap_return_43 <= patches_parameters_1_2_1_0_read;
    ap_return_44 <= wp_parameters_1_3_0_read;
    ap_return_45 <= patches_parameters_1_3_0_0_read;
    ap_return_46 <= wp_parameters_1_3_1_read;
    ap_return_47 <= patches_parameters_1_3_1_0_read;
    ap_return_48 <= wp_parameters_2_0_0_read;
    ap_return_49 <= patches_parameters_2_0_0_0_read;
    ap_return_5 <= patches_parameters_0_2_1_1_read;
    ap_return_50 <= patches_parameters_2_0_1_0_read;
    ap_return_51 <= wp_parameters_2_1_0_read;
    ap_return_52 <= patches_parameters_2_1_0_0_read;
    ap_return_53 <= patches_parameters_2_1_1_0_read;
    ap_return_54 <= wp_parameters_2_2_0_read;
    ap_return_55 <= patches_parameters_2_2_0_0_read;
    ap_return_56 <= patches_parameters_2_2_1_0_read;
    ap_return_57 <= wp_parameters_2_3_0_read;
    ap_return_58 <= patches_parameters_2_3_0_0_read;
    ap_return_59 <= patches_parameters_2_3_1_0_read;
    ap_return_6 <= patches_parameters_0_3_0_1_read;
    ap_return_7 <= patches_parameters_0_3_1_1_read;
    ap_return_8 <= patches_parameters_1_0_0_1_read;
    ap_return_9 <= patches_parameters_1_0_1_1_read;
end behav;
