// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_getParallelograms (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        superpoints_address0,
        superpoints_ce0,
        superpoints_q0,
        superpoints_address1,
        superpoints_ce1,
        superpoints_q1,
        superpoints_offset,
        pSlope_address0,
        pSlope_ce0,
        pSlope_we0,
        pSlope_d0,
        shadow_bottomL_jR_address0,
        shadow_bottomL_jR_ce0,
        shadow_bottomL_jR_we0,
        shadow_bottomL_jR_d0,
        shadow_bottomR_jR_address0,
        shadow_bottomR_jR_ce0,
        shadow_bottomR_jR_we0,
        shadow_bottomR_jR_d0,
        shadow_bottomL_jL_address0,
        shadow_bottomL_jL_ce0,
        shadow_bottomL_jL_we0,
        shadow_bottomL_jL_d0,
        shadow_bottomR_jL_address0,
        shadow_bottomR_jL_ce0,
        shadow_bottomR_jL_we0,
        shadow_bottomR_jL_d0,
        z1_min_address0,
        z1_min_ce0,
        z1_min_we0,
        z1_min_d0,
        z1_max_address0,
        z1_max_ce0,
        z1_max_we0,
        z1_max_d0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state4 = 14'd4;
parameter    ap_ST_fsm_pp1_stage0 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_pp2_stage0 = 14'd32;
parameter    ap_ST_fsm_pp2_stage1 = 14'd64;
parameter    ap_ST_fsm_pp2_stage2 = 14'd128;
parameter    ap_ST_fsm_pp2_stage3 = 14'd256;
parameter    ap_ST_fsm_pp2_stage4 = 14'd512;
parameter    ap_ST_fsm_pp2_stage5 = 14'd1024;
parameter    ap_ST_fsm_pp2_stage6 = 14'd2048;
parameter    ap_ST_fsm_pp2_stage7 = 14'd4096;
parameter    ap_ST_fsm_state62 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] superpoints_address0;
output   superpoints_ce0;
input  [31:0] superpoints_q0;
output  [7:0] superpoints_address1;
output   superpoints_ce1;
input  [31:0] superpoints_q1;
input  [1:0] superpoints_offset;
output  [3:0] pSlope_address0;
output   pSlope_ce0;
output   pSlope_we0;
output  [31:0] pSlope_d0;
output  [3:0] shadow_bottomL_jR_address0;
output   shadow_bottomL_jR_ce0;
output   shadow_bottomL_jR_we0;
output  [31:0] shadow_bottomL_jR_d0;
output  [3:0] shadow_bottomR_jR_address0;
output   shadow_bottomR_jR_ce0;
output   shadow_bottomR_jR_we0;
output  [31:0] shadow_bottomR_jR_d0;
output  [3:0] shadow_bottomL_jL_address0;
output   shadow_bottomL_jL_ce0;
output   shadow_bottomL_jL_we0;
output  [31:0] shadow_bottomL_jL_d0;
output  [3:0] shadow_bottomR_jL_address0;
output   shadow_bottomR_jL_ce0;
output   shadow_bottomR_jL_we0;
output  [31:0] shadow_bottomR_jL_d0;
output  [3:0] z1_min_address0;
output   z1_min_ce0;
output   z1_min_we0;
output  [25:0] z1_min_d0;
output  [3:0] z1_max_address0;
output   z1_max_ce0;
output   z1_max_we0;
output  [25:0] z1_max_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] superpoints_address0;
reg superpoints_ce0;
reg[7:0] superpoints_address1;
reg superpoints_ce1;
reg pSlope_ce0;
reg pSlope_we0;
reg shadow_bottomL_jR_ce0;
reg shadow_bottomL_jR_we0;
reg shadow_bottomR_jR_ce0;
reg shadow_bottomR_jR_we0;
reg shadow_bottomL_jL_ce0;
reg shadow_bottomL_jL_we0;
reg shadow_bottomR_jL_ce0;
reg shadow_bottomR_jL_we0;
reg z1_min_ce0;
reg z1_min_we0;
reg z1_max_ce0;
reg z1_max_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] get_radiiradii_address0;
reg    get_radiiradii_ce0;
wire   [31:0] get_radiiradii_q0;
wire   [1:0] get_parallelogram_slopesparallelogram_slopes_address0;
reg    get_parallelogram_slopesparallelogram_slopes_ce0;
wire   [31:0] get_parallelogram_slopesparallelogram_slopes_q0;
reg   [4:0] i_reg_458;
reg   [31:0] p_012_i_reg_469;
reg   [4:0] i_1_reg_481;
reg   [31:0] p_012_i15_reg_492;
reg   [2:0] i_2_reg_504;
reg   [2:0] i_2_reg_504_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
wire    ap_block_state32_pp2_stage0_iter3;
wire    ap_block_state40_pp2_stage0_iter4;
wire    ap_block_state48_pp2_stage0_iter5;
wire    ap_block_state56_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
reg   [2:0] i_2_reg_504_pp2_iter2_reg;
reg   [2:0] i_2_reg_504_pp2_iter3_reg;
reg   [2:0] i_2_reg_504_pp2_iter4_reg;
wire   [4:0] add_ln49_fu_535_p2;
reg   [4:0] add_ln49_reg_1891;
wire   [3:0] trunc_ln49_fu_541_p1;
reg   [3:0] trunc_ln49_reg_1896;
wire   [7:0] add_ln49_1_fu_565_p2;
reg   [7:0] add_ln49_1_reg_1901;
wire   [4:0] add_ln48_fu_571_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln48_fu_577_p2;
reg   [0:0] icmp_ln48_reg_1912;
wire   [31:0] superpoint_0_min_z_fu_603_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] add_ln62_fu_611_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln62_fu_617_p2;
reg   [0:0] icmp_ln62_reg_1931;
wire   [31:0] superpoint_0_max_z_fu_643_p3;
reg    ap_enable_reg_pp1_iter1;
wire  signed [25:0] z1_max_tmp_V_2_fu_693_p3;
reg  signed [25:0] z1_max_tmp_V_2_reg_1945;
wire    ap_CS_fsm_state7;
wire  signed [25:0] z1_min_tmp_V_2_fu_701_p3;
reg  signed [25:0] z1_min_tmp_V_2_reg_1950;
wire  signed [32:0] sext_ln703_1_fu_709_p1;
reg  signed [32:0] sext_ln703_1_reg_1955;
wire  signed [51:0] sext_ln1192_fu_721_p1;
reg  signed [51:0] sext_ln1192_reg_1961;
wire  signed [32:0] sext_ln703_2_fu_725_p1;
reg  signed [32:0] sext_ln703_2_reg_1967;
wire  signed [51:0] sext_ln1192_1_fu_737_p1;
reg  signed [51:0] sext_ln1192_1_reg_1973;
wire   [0:0] icmp_ln119_fu_741_p2;
reg   [0:0] icmp_ln119_reg_1979;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter1_reg;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter2_reg;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter3_reg;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter4_reg;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter5_reg;
reg   [0:0] icmp_ln119_reg_1979_pp2_iter6_reg;
wire   [63:0] zext_ln129_1_fu_772_p1;
reg   [63:0] zext_ln129_1_reg_1993;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter1_reg;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter2_reg;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter3_reg;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter4_reg;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter5_reg;
reg   [63:0] zext_ln129_1_reg_1993_pp2_iter6_reg;
wire   [2:0] j_fu_778_p2;
reg   [2:0] j_reg_2002;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state9_pp2_stage1_iter0;
wire    ap_block_state17_pp2_stage1_iter1;
wire    ap_block_state25_pp2_stage1_iter2;
wire    ap_block_state33_pp2_stage1_iter3;
wire    ap_block_state41_pp2_stage1_iter4;
wire    ap_block_state49_pp2_stage1_iter5;
wire    ap_block_state57_pp2_stage1_iter6;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] get_parallelogram_slopesparallelogram_slopes_load_reg_2013;
wire   [62:0] trunc_ln555_fu_834_p1;
reg   [62:0] trunc_ln555_reg_2019;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state10_pp2_stage2_iter0;
wire    ap_block_state18_pp2_stage2_iter1;
wire    ap_block_state26_pp2_stage2_iter2;
wire    ap_block_state34_pp2_stage2_iter3;
wire    ap_block_state42_pp2_stage2_iter4;
wire    ap_block_state50_pp2_stage2_iter5;
wire    ap_block_state58_pp2_stage2_iter6;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] p_Result_s_reg_2024;
reg   [10:0] exp_tmp_reg_2029;
wire   [51:0] trunc_ln565_fu_856_p1;
reg   [51:0] trunc_ln565_reg_2034;
wire   [0:0] icmp_ln119_1_fu_860_p2;
reg   [0:0] icmp_ln119_1_reg_2039;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state11_pp2_stage3_iter0;
wire    ap_block_state19_pp2_stage3_iter1;
wire    ap_block_state27_pp2_stage3_iter2;
wire    ap_block_state35_pp2_stage3_iter3;
wire    ap_block_state43_pp2_stage3_iter4;
wire    ap_block_state51_pp2_stage3_iter5;
wire    ap_block_state59_pp2_stage3_iter6;
wire    ap_block_pp2_stage3_11001;
wire  signed [11:0] sh_amt_fu_921_p3;
reg  signed [11:0] sh_amt_reg_2044;
wire   [31:0] trunc_ln583_fu_935_p1;
reg   [31:0] trunc_ln583_reg_2049;
wire   [0:0] and_ln582_fu_1004_p2;
reg   [0:0] and_ln582_reg_2055;
wire   [0:0] and_ln581_fu_1022_p2;
reg   [0:0] and_ln581_reg_2061;
wire   [0:0] and_ln571_fu_1064_p2;
reg   [0:0] and_ln571_reg_2066;
wire   [0:0] or_ln571_1_fu_1070_p2;
reg   [0:0] or_ln571_1_reg_2071;
wire   [31:0] select_ln571_1_fu_1076_p3;
reg   [31:0] select_ln571_1_reg_2077;
wire   [7:0] tmp_7_cast_fu_1162_p3;
reg   [7:0] tmp_7_cast_reg_2082;
wire   [31:0] select_ln50_1_fu_1235_p3;
reg   [31:0] select_ln50_1_reg_2120;
wire   [31:0] select_ln64_2_fu_1267_p3;
reg   [31:0] select_ln64_2_reg_2126;
wire   [31:0] select_ln50_3_fu_1313_p3;
reg   [31:0] select_ln50_3_reg_2142;
wire   [31:0] select_ln64_4_fu_1339_p3;
reg   [31:0] select_ln64_4_reg_2148;
wire   [31:0] select_ln50_5_fu_1385_p3;
reg   [31:0] select_ln50_5_reg_2164;
wire   [31:0] select_ln64_6_fu_1411_p3;
reg   [31:0] select_ln64_6_reg_2170;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state12_pp2_stage4_iter0;
wire    ap_block_state20_pp2_stage4_iter1;
wire    ap_block_state28_pp2_stage4_iter2;
wire    ap_block_state36_pp2_stage4_iter3;
wire    ap_block_state44_pp2_stage4_iter4;
wire    ap_block_state52_pp2_stage4_iter5;
wire    ap_block_state60_pp2_stage4_iter6;
wire    ap_block_pp2_stage4_11001;
wire   [31:0] select_ln50_7_fu_1457_p3;
reg   [31:0] select_ln50_7_reg_2186;
wire   [31:0] select_ln64_8_fu_1483_p3;
reg   [31:0] select_ln64_8_reg_2192;
wire    ap_CS_fsm_pp2_stage5;
wire    ap_block_state13_pp2_stage5_iter0;
wire    ap_block_state21_pp2_stage5_iter1;
wire    ap_block_state29_pp2_stage5_iter2;
wire    ap_block_state37_pp2_stage5_iter3;
wire    ap_block_state45_pp2_stage5_iter4;
wire    ap_block_state53_pp2_stage5_iter5;
wire    ap_block_state61_pp2_stage5_iter6;
wire    ap_block_pp2_stage5_11001;
wire   [31:0] select_ln50_9_fu_1529_p3;
reg   [31:0] select_ln50_9_reg_2208;
wire   [31:0] select_ln64_10_fu_1555_p3;
reg   [31:0] select_ln64_10_reg_2214;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_state14_pp2_stage6_iter0;
wire    ap_block_state22_pp2_stage6_iter1;
wire    ap_block_state30_pp2_stage6_iter2;
wire    ap_block_state38_pp2_stage6_iter3;
wire    ap_block_state46_pp2_stage6_iter4;
wire    ap_block_state54_pp2_stage6_iter5;
wire    ap_block_pp2_stage6_11001;
wire   [31:0] select_ln50_11_fu_1601_p3;
reg   [31:0] select_ln50_11_reg_2230;
wire   [31:0] select_ln64_12_fu_1627_p3;
reg   [31:0] select_ln64_12_reg_2236;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state15_pp2_stage7_iter0;
wire    ap_block_state23_pp2_stage7_iter1;
wire    ap_block_state31_pp2_stage7_iter2;
wire    ap_block_state39_pp2_stage7_iter3;
wire    ap_block_state47_pp2_stage7_iter4;
wire    ap_block_state55_pp2_stage7_iter5;
wire    ap_block_pp2_stage7_11001;
wire   [31:0] select_ln50_13_fu_1673_p3;
reg   [31:0] select_ln50_13_reg_2252;
wire   [31:0] select_ln64_14_fu_1699_p3;
reg   [31:0] select_ln64_14_reg_2258;
wire   [31:0] lhs_5_fu_1725_p3;
reg   [31:0] lhs_5_reg_2264;
wire   [31:0] lhs_1_fu_1751_p3;
reg   [31:0] lhs_1_reg_2269;
wire  signed [32:0] sext_ln703_fu_1763_p1;
reg  signed [32:0] sext_ln703_reg_2274;
wire  signed [51:0] sext_ln1118_fu_1775_p1;
reg  signed [51:0] sext_ln1118_reg_2279;
reg   [31:0] a_V_reg_2286;
wire   [32:0] ret_V_12_fu_1862_p2;
reg  signed [32:0] ret_V_12_reg_2291;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage7_subdone;
wire    ap_block_pp2_stage5_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_i_2_phi_fu_508_p4;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln49_4_fu_592_p1;
wire   [63:0] zext_ln63_1_fu_632_p1;
wire   [63:0] trunc_ln99_cast_fu_747_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln49_6_fu_1157_p1;
wire   [63:0] zext_ln49_7_fu_1176_p1;
wire   [63:0] zext_ln49_8_fu_1186_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln49_9_fu_1196_p1;
wire   [63:0] zext_ln49_10_fu_1280_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] zext_ln49_11_fu_1290_p1;
wire   [63:0] zext_ln49_12_fu_1352_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln49_13_fu_1362_p1;
wire   [63:0] zext_ln49_14_fu_1424_p1;
wire   [63:0] zext_ln49_15_fu_1434_p1;
wire   [63:0] zext_ln49_16_fu_1496_p1;
wire    ap_block_pp2_stage5;
wire   [63:0] zext_ln49_17_fu_1506_p1;
wire   [63:0] zext_ln49_18_fu_1568_p1;
wire    ap_block_pp2_stage6;
wire   [63:0] zext_ln49_19_fu_1578_p1;
wire   [63:0] zext_ln49_20_fu_1640_p1;
wire    ap_block_pp2_stage7;
wire   [63:0] zext_ln49_21_fu_1650_p1;
wire   [3:0] tmp_fu_523_p3;
wire   [4:0] zext_ln49_1_fu_531_p1;
wire   [4:0] zext_ln49_fu_519_p1;
wire   [5:0] tmp_3_fu_553_p3;
wire   [7:0] tmp_2_fu_545_p3;
wire   [7:0] zext_ln49_2_fu_561_p1;
wire   [7:0] zext_ln49_3_fu_583_p1;
wire   [7:0] add_ln49_2_fu_587_p2;
wire   [0:0] icmp_ln1495_fu_597_p2;
wire   [7:0] zext_ln63_fu_623_p1;
wire   [7:0] add_ln63_fu_627_p2;
wire   [0:0] icmp_ln1494_2_fu_637_p2;
wire   [0:0] icmp_ln1495_2_fu_651_p2;
wire   [31:0] z1_min_tmp_V_fu_657_p3;
wire   [0:0] icmp_ln1495_3_fu_669_p2;
wire   [31:0] z1_max_tmp_V_fu_675_p3;
wire   [0:0] icmp_ln1494_fu_687_p2;
wire   [25:0] trunc_ln90_fu_683_p1;
wire   [25:0] trunc_ln89_fu_665_p1;
wire   [45:0] lhs_3_fu_713_p3;
wire   [45:0] lhs_4_fu_729_p3;
wire   [1:0] trunc_ln128_fu_753_p1;
wire   [1:0] parallelogram_index_fu_757_p2;
wire   [3:0] zext_ln129_fu_763_p1;
wire   [3:0] add_ln129_fu_767_p2;
wire   [4:0] trunc_ln731_fu_790_p1;
wire   [0:0] icmp_ln870_fu_784_p2;
wire   [24:0] radius_j_V_fu_794_p3;
wire   [24:0] radius_j_V_2_fu_802_p3;
wire   [25:0] zext_ln1193_fu_810_p1;
wire  signed [25:0] ret_V_fu_814_p2;
wire   [63:0] d_fu_516_p1;
wire   [63:0] ireg_fu_830_p1;
wire   [52:0] p_Result_1_fu_868_p3;
wire   [53:0] zext_ln569_fu_875_p1;
wire   [53:0] man_V_1_fu_879_p2;
wire   [11:0] zext_ln455_fu_865_p1;
wire   [11:0] F2_fu_897_p2;
wire   [0:0] icmp_ln581_fu_903_p2;
wire   [11:0] add_ln581_fu_909_p2;
wire   [11:0] sub_ln581_fu_915_p2;
wire   [53:0] man_V_2_fu_885_p3;
wire   [6:0] tmp_9_fu_939_p4;
wire   [5:0] trunc_ln586_fu_955_p1;
wire   [53:0] zext_ln586_fu_959_p1;
wire   [53:0] ashr_ln586_fu_963_p2;
wire   [31:0] bitcast_ln702_fu_973_p1;
wire   [0:0] tmp_10_fu_976_p3;
wire   [0:0] icmp_ln571_fu_892_p2;
wire   [0:0] or_ln571_fu_992_p2;
wire   [0:0] icmp_ln582_fu_929_p2;
wire   [0:0] xor_ln571_fu_998_p2;
wire   [0:0] or_ln582_fu_1010_p2;
wire   [0:0] xor_ln582_fu_1016_p2;
wire   [0:0] icmp_ln585_fu_1028_p2;
wire   [0:0] or_ln581_fu_1040_p2;
wire   [0:0] icmp_ln603_fu_949_p2;
wire   [0:0] xor_ln581_fu_1046_p2;
wire   [0:0] xor_ln119_fu_1058_p2;
wire   [0:0] and_ln603_fu_1052_p2;
wire   [0:0] and_ln585_fu_1034_p2;
wire   [31:0] select_ln588_fu_984_p3;
wire   [31:0] trunc_ln586_1_fu_969_p1;
wire  signed [31:0] sext_ln581_fu_1084_p1;
wire   [31:0] shl_ln604_fu_1087_p2;
wire   [31:0] select_ln571_fu_1092_p3;
wire   [0:0] or_ln571_2_fu_1105_p2;
wire   [31:0] select_ln571_2_fu_1099_p3;
wire   [0:0] or_ln571_3_fu_1115_p2;
wire   [31:0] select_ln571_3_fu_1109_p3;
wire   [31:0] select_ln571_4_fu_1119_p3;
wire   [4:0] zext_ln49_5_fu_1136_p1;
wire   [4:0] add_ln49_3_fu_1140_p2;
wire   [8:0] tmp_5_fu_1149_p3;
wire   [3:0] trunc_ln49_1_fu_1145_p1;
wire   [7:0] or_ln49_fu_1170_p2;
wire   [7:0] or_ln49_1_fu_1181_p2;
wire   [7:0] or_ln49_2_fu_1191_p2;
wire   [1:0] tmp_6_fu_1205_p4;
wire   [0:0] icmp_ln1495_4_fu_1215_p2;
wire   [31:0] select_ln50_fu_1221_p3;
wire   [0:0] icmp_ln1495_5_fu_1229_p2;
wire   [0:0] icmp_ln1494_3_fu_1243_p2;
wire   [30:0] trunc_ln1495_fu_1201_p1;
wire   [30:0] select_ln64_1_fu_1249_p3;
wire   [31:0] select_ln64_1_cast_fu_1257_p1;
wire   [0:0] icmp_ln1494_4_fu_1261_p2;
wire   [7:0] or_ln49_3_fu_1275_p2;
wire   [7:0] or_ln49_4_fu_1285_p2;
wire   [0:0] icmp_ln1495_6_fu_1295_p2;
wire   [31:0] select_ln50_2_fu_1300_p3;
wire   [0:0] icmp_ln1495_7_fu_1307_p2;
wire   [0:0] icmp_ln1494_5_fu_1321_p2;
wire   [31:0] select_ln64_3_fu_1326_p3;
wire   [0:0] icmp_ln1494_6_fu_1333_p2;
wire   [7:0] or_ln49_5_fu_1347_p2;
wire   [7:0] or_ln49_6_fu_1357_p2;
wire   [0:0] icmp_ln1495_8_fu_1367_p2;
wire   [31:0] select_ln50_4_fu_1372_p3;
wire   [0:0] icmp_ln1495_9_fu_1379_p2;
wire   [0:0] icmp_ln1494_7_fu_1393_p2;
wire   [31:0] select_ln64_5_fu_1398_p3;
wire   [0:0] icmp_ln1494_8_fu_1405_p2;
wire   [7:0] or_ln49_7_fu_1419_p2;
wire   [7:0] or_ln49_8_fu_1429_p2;
wire   [0:0] icmp_ln1495_10_fu_1439_p2;
wire   [31:0] select_ln50_6_fu_1444_p3;
wire   [0:0] icmp_ln1495_11_fu_1451_p2;
wire   [0:0] icmp_ln1494_9_fu_1465_p2;
wire   [31:0] select_ln64_7_fu_1470_p3;
wire   [0:0] icmp_ln1494_10_fu_1477_p2;
wire   [7:0] or_ln49_9_fu_1491_p2;
wire   [7:0] or_ln49_10_fu_1501_p2;
wire   [0:0] icmp_ln1495_12_fu_1511_p2;
wire   [31:0] select_ln50_8_fu_1516_p3;
wire   [0:0] icmp_ln1495_13_fu_1523_p2;
wire   [0:0] icmp_ln1494_11_fu_1537_p2;
wire   [31:0] select_ln64_9_fu_1542_p3;
wire   [0:0] icmp_ln1494_12_fu_1549_p2;
wire   [7:0] or_ln49_11_fu_1563_p2;
wire   [7:0] or_ln49_12_fu_1573_p2;
wire   [0:0] icmp_ln1495_14_fu_1583_p2;
wire   [31:0] select_ln50_10_fu_1588_p3;
wire   [0:0] icmp_ln1495_15_fu_1595_p2;
wire   [0:0] icmp_ln1494_13_fu_1609_p2;
wire   [31:0] select_ln64_11_fu_1614_p3;
wire   [0:0] icmp_ln1494_14_fu_1621_p2;
wire   [7:0] or_ln49_13_fu_1635_p2;
wire   [7:0] or_ln49_14_fu_1645_p2;
wire   [0:0] icmp_ln1495_16_fu_1655_p2;
wire   [31:0] select_ln50_12_fu_1660_p3;
wire   [0:0] icmp_ln1495_17_fu_1667_p2;
wire   [0:0] icmp_ln1494_15_fu_1681_p2;
wire   [31:0] select_ln64_13_fu_1686_p3;
wire   [0:0] icmp_ln1494_16_fu_1693_p2;
wire   [0:0] icmp_ln1495_18_fu_1707_p2;
wire   [31:0] select_ln50_14_fu_1712_p3;
wire   [0:0] icmp_ln1495_19_fu_1719_p2;
wire   [0:0] icmp_ln1494_17_fu_1733_p2;
wire   [31:0] select_ln64_15_fu_1738_p3;
wire   [0:0] icmp_ln1494_18_fu_1745_p2;
wire   [31:0] grp_fu_824_p2;
wire  signed [32:0] ret_V_9_fu_1766_p2;
wire  signed [31:0] radii_leverArm_fu_1759_p1;
wire   [51:0] r_V_1_fu_1779_p2;
wire   [51:0] ret_V_2_fu_1785_p2;
wire  signed [32:0] ret_V_10_fu_1800_p2;
wire  signed [31:0] r_V_3_fu_1808_p1;
wire   [51:0] r_V_3_fu_1808_p2;
wire   [51:0] ret_V_4_fu_1813_p2;
wire  signed [32:0] sext_ln703_3_fu_1829_p1;
wire  signed [32:0] ret_V_11_fu_1832_p2;
wire  signed [31:0] r_V_5_fu_1841_p1;
wire   [51:0] r_V_5_fu_1841_p2;
wire   [51:0] ret_V_6_fu_1846_p2;
wire  signed [31:0] r_V_7_fu_1870_p1;
wire   [51:0] r_V_7_fu_1870_p2;
wire   [51:0] ret_V_8_fu_1875_p2;
wire    ap_CS_fsm_state62;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_pp2_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
end

system_top_alignedtoline_per_layer_loop3_get_radiiradii #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
get_radiiradii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_radiiradii_address0),
    .ce0(get_radiiradii_ce0),
    .q0(get_radiiradii_q0)
);

system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
get_parallelogram_slopesparallelogram_slopes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_parallelogram_slopesparallelogram_slopes_address0),
    .ce0(get_parallelogram_slopesparallelogram_slopes_ce0),
    .q0(get_parallelogram_slopesparallelogram_slopes_q0)
);

system_top_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U55(
    .din0(get_parallelogram_slopesparallelogram_slopes_load_reg_2013),
    .dout(d_fu_516_p1)
);

system_top_sdiv_46ns_26s_32_50_1 #(
    .ID( 1 ),
    .NUM_STAGE( 50 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 32 ))
sdiv_46ns_26s_32_50_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(46'd21990232555520),
    .din1(ret_V_fu_814_p2),
    .ce(1'b1),
    .dout(grp_fu_824_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U57(
    .din0(ret_V_9_fu_1766_p2),
    .din1(radii_leverArm_fu_1759_p1),
    .dout(r_V_1_fu_1779_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U58(
    .din0(ret_V_10_fu_1800_p2),
    .din1(r_V_3_fu_1808_p1),
    .dout(r_V_3_fu_1808_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U59(
    .din0(ret_V_11_fu_1832_p2),
    .din1(r_V_5_fu_1841_p1),
    .dout(r_V_5_fu_1841_p2)
);

system_top_mul_33s_32s_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_33s_32s_52_1_1_U60(
    .din0(ret_V_12_reg_2291),
    .din1(r_V_7_fu_1870_p1),
    .dout(r_V_7_fu_1870_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_subdone)))) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_481 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_fu_617_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_481 <= add_ln62_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_2_reg_504 <= j_reg_2002;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_504 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_458 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_fu_577_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_458 <= add_ln48_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_012_i15_reg_492 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln62_reg_1931 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_012_i15_reg_492 <= superpoint_0_max_z_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_012_i_reg_469 <= 32'd1073741824;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln48_reg_1912 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_012_i_reg_469 <= superpoint_0_min_z_fu_603_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        a_V_reg_2286 <= {{ret_V_2_fu_1785_p2[51:20]}};
        sext_ln1118_reg_2279 <= sext_ln1118_fu_1775_p1;
        sext_ln703_reg_2274 <= sext_ln703_fu_1763_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln49_1_reg_1901[7 : 4] <= add_ln49_1_fu_565_p2[7 : 4];
        add_ln49_reg_1891 <= add_ln49_fu_535_p2;
        trunc_ln49_reg_1896 <= trunc_ln49_fu_541_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        and_ln571_reg_2066 <= and_ln571_fu_1064_p2;
        and_ln581_reg_2061 <= and_ln581_fu_1022_p2;
        and_ln582_reg_2055 <= and_ln582_fu_1004_p2;
        icmp_ln119_1_reg_2039 <= icmp_ln119_1_fu_860_p2;
        or_ln571_1_reg_2071 <= or_ln571_1_fu_1070_p2;
        select_ln571_1_reg_2077 <= select_ln571_1_fu_1076_p3;
        sh_amt_reg_2044 <= sh_amt_fu_921_p3;
        trunc_ln583_reg_2049 <= trunc_ln583_fu_935_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        exp_tmp_reg_2029 <= {{ireg_fu_830_p1[62:52]}};
        p_Result_s_reg_2024 <= ireg_fu_830_p1[32'd63];
        trunc_ln555_reg_2019 <= trunc_ln555_fu_834_p1;
        trunc_ln565_reg_2034 <= trunc_ln565_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        get_parallelogram_slopesparallelogram_slopes_load_reg_2013 <= get_parallelogram_slopesparallelogram_slopes_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_2_reg_504_pp2_iter1_reg <= i_2_reg_504;
        i_2_reg_504_pp2_iter2_reg <= i_2_reg_504_pp2_iter1_reg;
        i_2_reg_504_pp2_iter3_reg <= i_2_reg_504_pp2_iter2_reg;
        i_2_reg_504_pp2_iter4_reg <= i_2_reg_504_pp2_iter3_reg;
        icmp_ln119_reg_1979 <= icmp_ln119_fu_741_p2;
        icmp_ln119_reg_1979_pp2_iter1_reg <= icmp_ln119_reg_1979;
        icmp_ln119_reg_1979_pp2_iter2_reg <= icmp_ln119_reg_1979_pp2_iter1_reg;
        icmp_ln119_reg_1979_pp2_iter3_reg <= icmp_ln119_reg_1979_pp2_iter2_reg;
        icmp_ln119_reg_1979_pp2_iter4_reg <= icmp_ln119_reg_1979_pp2_iter3_reg;
        icmp_ln119_reg_1979_pp2_iter5_reg <= icmp_ln119_reg_1979_pp2_iter4_reg;
        icmp_ln119_reg_1979_pp2_iter6_reg <= icmp_ln119_reg_1979_pp2_iter5_reg;
        zext_ln129_1_reg_1993_pp2_iter1_reg[3 : 0] <= zext_ln129_1_reg_1993[3 : 0];
        zext_ln129_1_reg_1993_pp2_iter2_reg[3 : 0] <= zext_ln129_1_reg_1993_pp2_iter1_reg[3 : 0];
        zext_ln129_1_reg_1993_pp2_iter3_reg[3 : 0] <= zext_ln129_1_reg_1993_pp2_iter2_reg[3 : 0];
        zext_ln129_1_reg_1993_pp2_iter4_reg[3 : 0] <= zext_ln129_1_reg_1993_pp2_iter3_reg[3 : 0];
        zext_ln129_1_reg_1993_pp2_iter5_reg[3 : 0] <= zext_ln129_1_reg_1993_pp2_iter4_reg[3 : 0];
        zext_ln129_1_reg_1993_pp2_iter6_reg[3 : 0] <= zext_ln129_1_reg_1993_pp2_iter5_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln48_reg_1912 <= icmp_ln48_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln62_reg_1931 <= icmp_ln62_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        j_reg_2002 <= j_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lhs_1_reg_2269 <= lhs_1_fu_1751_p3;
        lhs_5_reg_2264 <= lhs_5_fu_1725_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        ret_V_12_reg_2291 <= ret_V_12_fu_1862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001))) begin
        select_ln50_11_reg_2230 <= select_ln50_11_fu_1601_p3;
        select_ln64_12_reg_2236 <= select_ln64_12_fu_1627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_11001))) begin
        select_ln50_13_reg_2252 <= select_ln50_13_fu_1673_p3;
        select_ln64_14_reg_2258 <= select_ln64_14_fu_1699_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln50_1_reg_2120 <= select_ln50_1_fu_1235_p3;
        select_ln64_2_reg_2126 <= select_ln64_2_fu_1267_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        select_ln50_3_reg_2142 <= select_ln50_3_fu_1313_p3;
        select_ln64_4_reg_2148 <= select_ln64_4_fu_1339_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        select_ln50_5_reg_2164 <= select_ln50_5_fu_1385_p3;
        select_ln64_6_reg_2170 <= select_ln64_6_fu_1411_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        select_ln50_7_reg_2186 <= select_ln50_7_fu_1457_p3;
        select_ln64_8_reg_2192 <= select_ln64_8_fu_1483_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        select_ln50_9_reg_2208 <= select_ln50_9_fu_1529_p3;
        select_ln64_10_reg_2214 <= select_ln64_10_fu_1555_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sext_ln1192_1_reg_1973[51 : 20] <= sext_ln1192_1_fu_737_p1[51 : 20];
        sext_ln1192_reg_1961[51 : 20] <= sext_ln1192_fu_721_p1[51 : 20];
        sext_ln703_1_reg_1955 <= sext_ln703_1_fu_709_p1;
        sext_ln703_2_reg_1967 <= sext_ln703_2_fu_725_p1;
        z1_max_tmp_V_2_reg_1945 <= z1_max_tmp_V_2_fu_693_p3;
        z1_min_tmp_V_2_reg_1950 <= z1_min_tmp_V_2_fu_701_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_1979_pp2_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_7_cast_reg_2082[7 : 4] <= tmp_7_cast_fu_1162_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        zext_ln129_1_reg_1993[3 : 0] <= zext_ln129_1_fu_772_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_577_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln62_fu_617_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_fu_741_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_2_phi_fu_508_p4 = j_reg_2002;
    end else begin
        ap_phi_mux_i_2_phi_fu_508_p4 = i_2_reg_504;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b1;
    end else begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        get_radiiradii_ce0 = 1'b1;
    end else begin
        get_radiiradii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        pSlope_ce0 = 1'b1;
    end else begin
        pSlope_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_reg_1979 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        pSlope_we0 = 1'b1;
    end else begin
        pSlope_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        shadow_bottomL_jL_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001))) begin
        shadow_bottomL_jL_we0 = 1'b1;
    end else begin
        shadow_bottomL_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        shadow_bottomL_jR_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        shadow_bottomL_jR_we0 = 1'b1;
    end else begin
        shadow_bottomL_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        shadow_bottomR_jL_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        shadow_bottomR_jL_we0 = 1'b1;
    end else begin
        shadow_bottomR_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        shadow_bottomR_jR_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln119_reg_1979_pp2_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001))) begin
        shadow_bottomR_jR_we0 = 1'b1;
    end else begin
        shadow_bottomR_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
        superpoints_address0 = zext_ln49_20_fu_1640_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
        superpoints_address0 = zext_ln49_18_fu_1568_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
        superpoints_address0 = zext_ln49_16_fu_1496_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        superpoints_address0 = zext_ln49_14_fu_1424_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        superpoints_address0 = zext_ln49_12_fu_1352_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        superpoints_address0 = zext_ln49_10_fu_1280_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        superpoints_address0 = zext_ln49_8_fu_1186_p1;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        superpoints_address0 = zext_ln49_7_fu_1176_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        superpoints_address0 = zext_ln63_1_fu_632_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        superpoints_address0 = zext_ln49_4_fu_592_p1;
    end else begin
        superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
            superpoints_address1 = zext_ln49_21_fu_1650_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
            superpoints_address1 = zext_ln49_19_fu_1578_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
            superpoints_address1 = zext_ln49_17_fu_1506_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
            superpoints_address1 = zext_ln49_15_fu_1434_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
            superpoints_address1 = zext_ln49_13_fu_1362_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
            superpoints_address1 = zext_ln49_11_fu_1290_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
            superpoints_address1 = zext_ln49_9_fu_1196_p1;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
            superpoints_address1 = zext_ln49_6_fu_1157_p1;
        end else begin
            superpoints_address1 = 'bx;
        end
    end else begin
        superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        superpoints_ce0 = 1'b1;
    end else begin
        superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        superpoints_ce1 = 1'b1;
    end else begin
        superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_max_ce0 = 1'b1;
    end else begin
        z1_max_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_max_we0 = 1'b1;
    end else begin
        z1_max_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_min_ce0 = 1'b1;
    end else begin
        z1_min_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        z1_min_we0 = 1'b1;
    end else begin
        z1_min_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln48_fu_577_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln48_fu_577_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln62_fu_617_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln62_fu_617_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_fu_741_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln119_fu_741_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((~((ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_subdone)) & (1'b0 == ap_block_pp2_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((1'b0 == ap_block_pp2_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_897_p2 = (12'd1075 - zext_ln455_fu_865_p1);

assign add_ln129_fu_767_p2 = (trunc_ln49_reg_1896 + zext_ln129_fu_763_p1);

assign add_ln48_fu_571_p2 = (i_reg_458 + 5'd1);

assign add_ln49_1_fu_565_p2 = (tmp_2_fu_545_p3 + zext_ln49_2_fu_561_p1);

assign add_ln49_2_fu_587_p2 = (add_ln49_1_reg_1901 + zext_ln49_3_fu_583_p1);

assign add_ln49_3_fu_1140_p2 = (add_ln49_reg_1891 + zext_ln49_5_fu_1136_p1);

assign add_ln49_fu_535_p2 = (zext_ln49_1_fu_531_p1 + zext_ln49_fu_519_p1);

assign add_ln581_fu_909_p2 = ($signed(F2_fu_897_p2) + $signed(12'd4076));

assign add_ln62_fu_611_p2 = (i_1_reg_481 + 5'd1);

assign add_ln63_fu_627_p2 = (add_ln49_1_reg_1901 + zext_ln63_fu_623_p1);

assign and_ln571_fu_1064_p2 = (xor_ln119_fu_1058_p2 & icmp_ln571_fu_892_p2);

assign and_ln581_fu_1022_p2 = (xor_ln582_fu_1016_p2 & icmp_ln581_fu_903_p2);

assign and_ln582_fu_1004_p2 = (xor_ln571_fu_998_p2 & icmp_ln582_fu_929_p2);

assign and_ln585_fu_1034_p2 = (icmp_ln585_fu_1028_p2 & and_ln581_fu_1022_p2);

assign and_ln603_fu_1052_p2 = (xor_ln581_fu_1046_p2 & icmp_ln603_fu_949_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp2_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp2_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp2_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp2_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp2_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ashr_ln586_fu_963_p2 = $signed(man_V_2_fu_885_p3) >>> zext_ln586_fu_959_p1;

assign bitcast_ln702_fu_973_p1 = get_parallelogram_slopesparallelogram_slopes_load_reg_2013;

assign get_parallelogram_slopesparallelogram_slopes_address0 = trunc_ln99_cast_fu_747_p1;

assign get_radiiradii_address0 = trunc_ln99_cast_fu_747_p1;

assign icmp_ln119_1_fu_860_p2 = ((j_reg_2002 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_741_p2 = ((ap_phi_mux_i_2_phi_fu_508_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1494_10_fu_1477_p2 = (($signed(superpoints_q1) > $signed(select_ln64_7_fu_1470_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_1537_p2 = (($signed(superpoints_q0) > $signed(select_ln64_8_reg_2192)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_1549_p2 = (($signed(superpoints_q1) > $signed(select_ln64_9_fu_1542_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1609_p2 = (($signed(superpoints_q0) > $signed(select_ln64_10_reg_2214)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_1621_p2 = (($signed(superpoints_q1) > $signed(select_ln64_11_fu_1614_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_1681_p2 = (($signed(superpoints_q0) > $signed(select_ln64_12_reg_2236)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_1693_p2 = (($signed(superpoints_q1) > $signed(select_ln64_13_fu_1686_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_1733_p2 = (($signed(superpoints_q0) > $signed(select_ln64_14_reg_2258)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_1745_p2 = (($signed(superpoints_q1) > $signed(select_ln64_15_fu_1738_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_637_p2 = (($signed(superpoints_q0) > $signed(p_012_i15_reg_492)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_1243_p2 = (($signed(superpoints_q1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_1261_p2 = (($signed(superpoints_q0) > $signed(select_ln64_1_cast_fu_1257_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_1321_p2 = (($signed(superpoints_q0) > $signed(select_ln64_2_reg_2126)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_1333_p2 = (($signed(superpoints_q1) > $signed(select_ln64_3_fu_1326_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_1393_p2 = (($signed(superpoints_q0) > $signed(select_ln64_4_reg_2148)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_1405_p2 = (($signed(superpoints_q1) > $signed(select_ln64_5_fu_1398_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_1465_p2 = (($signed(superpoints_q0) > $signed(select_ln64_6_reg_2170)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_687_p2 = (($signed(z1_min_tmp_V_fu_657_p3) > $signed(z1_max_tmp_V_fu_675_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_10_fu_1439_p2 = (($signed(superpoints_q0) < $signed(select_ln50_5_reg_2164)) ? 1'b1 : 1'b0);

assign icmp_ln1495_11_fu_1451_p2 = (($signed(superpoints_q1) < $signed(select_ln50_6_fu_1444_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_12_fu_1511_p2 = (($signed(superpoints_q0) < $signed(select_ln50_7_reg_2186)) ? 1'b1 : 1'b0);

assign icmp_ln1495_13_fu_1523_p2 = (($signed(superpoints_q1) < $signed(select_ln50_8_fu_1516_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_14_fu_1583_p2 = (($signed(superpoints_q0) < $signed(select_ln50_9_reg_2208)) ? 1'b1 : 1'b0);

assign icmp_ln1495_15_fu_1595_p2 = (($signed(superpoints_q1) < $signed(select_ln50_10_fu_1588_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_16_fu_1655_p2 = (($signed(superpoints_q0) < $signed(select_ln50_11_reg_2230)) ? 1'b1 : 1'b0);

assign icmp_ln1495_17_fu_1667_p2 = (($signed(superpoints_q1) < $signed(select_ln50_12_fu_1660_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_18_fu_1707_p2 = (($signed(superpoints_q0) < $signed(select_ln50_13_reg_2252)) ? 1'b1 : 1'b0);

assign icmp_ln1495_19_fu_1719_p2 = (($signed(superpoints_q1) < $signed(select_ln50_14_fu_1712_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_651_p2 = (($signed(p_012_i_reg_469) < $signed(32'd4271898520)) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_669_p2 = (($signed(p_012_i15_reg_492) > $signed(32'd23068776)) ? 1'b1 : 1'b0);

assign icmp_ln1495_4_fu_1215_p2 = ((tmp_6_fu_1205_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_5_fu_1229_p2 = (($signed(superpoints_q0) < $signed(select_ln50_fu_1221_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_1295_p2 = (($signed(superpoints_q0) < $signed(select_ln50_1_reg_2120)) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_1307_p2 = (($signed(superpoints_q1) < $signed(select_ln50_2_fu_1300_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_8_fu_1367_p2 = (($signed(superpoints_q0) < $signed(select_ln50_3_reg_2142)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_1379_p2 = (($signed(superpoints_q1) < $signed(select_ln50_4_fu_1372_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_597_p2 = (($signed(superpoints_q0) < $signed(p_012_i_reg_469)) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_577_p2 = ((i_reg_458 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_892_p2 = ((trunc_ln555_reg_2019 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_903_p2 = (($signed(F2_fu_897_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_929_p2 = ((F2_fu_897_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1028_p2 = ((sh_amt_fu_921_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_949_p2 = ((tmp_9_fu_939_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_617_p2 = ((i_1_reg_481 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_784_p2 = ((j_fu_778_p2 == 3'd0) ? 1'b1 : 1'b0);

assign ireg_fu_830_p1 = d_fu_516_p1;

assign j_fu_778_p2 = (i_2_reg_504 + 3'd1);

assign lhs_1_fu_1751_p3 = ((icmp_ln1494_18_fu_1745_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_15_fu_1738_p3);

assign lhs_3_fu_713_p3 = {{z1_min_tmp_V_2_fu_701_p3}, {20'd0}};

assign lhs_4_fu_729_p3 = {{z1_max_tmp_V_2_fu_693_p3}, {20'd0}};

assign lhs_5_fu_1725_p3 = ((icmp_ln1495_19_fu_1719_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_14_fu_1712_p3);

assign man_V_1_fu_879_p2 = (54'd0 - zext_ln569_fu_875_p1);

assign man_V_2_fu_885_p3 = ((p_Result_s_reg_2024[0:0] == 1'b1) ? man_V_1_fu_879_p2 : zext_ln569_fu_875_p1);

assign or_ln49_10_fu_1501_p2 = (tmp_7_cast_reg_2082 | 8'd11);

assign or_ln49_11_fu_1563_p2 = (tmp_7_cast_reg_2082 | 8'd12);

assign or_ln49_12_fu_1573_p2 = (tmp_7_cast_reg_2082 | 8'd13);

assign or_ln49_13_fu_1635_p2 = (tmp_7_cast_reg_2082 | 8'd14);

assign or_ln49_14_fu_1645_p2 = (tmp_7_cast_reg_2082 | 8'd15);

assign or_ln49_1_fu_1181_p2 = (tmp_7_cast_reg_2082 | 8'd2);

assign or_ln49_2_fu_1191_p2 = (tmp_7_cast_reg_2082 | 8'd3);

assign or_ln49_3_fu_1275_p2 = (tmp_7_cast_reg_2082 | 8'd4);

assign or_ln49_4_fu_1285_p2 = (tmp_7_cast_reg_2082 | 8'd5);

assign or_ln49_5_fu_1347_p2 = (tmp_7_cast_reg_2082 | 8'd6);

assign or_ln49_6_fu_1357_p2 = (tmp_7_cast_reg_2082 | 8'd7);

assign or_ln49_7_fu_1419_p2 = (tmp_7_cast_reg_2082 | 8'd8);

assign or_ln49_8_fu_1429_p2 = (tmp_7_cast_reg_2082 | 8'd9);

assign or_ln49_9_fu_1491_p2 = (tmp_7_cast_reg_2082 | 8'd10);

assign or_ln49_fu_1170_p2 = (tmp_7_cast_fu_1162_p3 | 8'd1);

assign or_ln571_1_fu_1070_p2 = (and_ln603_fu_1052_p2 | and_ln571_fu_1064_p2);

assign or_ln571_2_fu_1105_p2 = (icmp_ln119_1_reg_2039 | and_ln582_reg_2055);

assign or_ln571_3_fu_1115_p2 = (or_ln571_1_reg_2071 | and_ln581_reg_2061);

assign or_ln571_fu_992_p2 = (icmp_ln571_fu_892_p2 | icmp_ln119_1_fu_860_p2);

assign or_ln581_fu_1040_p2 = (or_ln582_fu_1010_p2 | icmp_ln581_fu_903_p2);

assign or_ln582_fu_1010_p2 = (or_ln571_fu_992_p2 | icmp_ln582_fu_929_p2);

assign pSlope_address0 = zext_ln129_1_reg_1993;

assign pSlope_d0 = ((or_ln571_3_fu_1115_p2[0:0] == 1'b1) ? select_ln571_3_fu_1109_p3 : select_ln571_4_fu_1119_p3);

assign p_Result_1_fu_868_p3 = {{1'd1}, {trunc_ln565_reg_2034}};

assign parallelogram_index_fu_757_p2 = ($signed(trunc_ln128_fu_753_p1) + $signed(2'd3));

assign r_V_3_fu_1808_p1 = sext_ln1118_reg_2279;

assign r_V_5_fu_1841_p1 = sext_ln1118_reg_2279;

assign r_V_7_fu_1870_p1 = sext_ln1118_reg_2279;

assign radii_leverArm_fu_1759_p1 = grp_fu_824_p2[31:0];

assign radius_j_V_2_fu_802_p3 = ((icmp_ln870_fu_784_p2[0:0] == 1'b1) ? 25'd0 : radius_j_V_fu_794_p3);

assign radius_j_V_fu_794_p3 = {{trunc_ln731_fu_790_p1}, {20'd0}};

assign ret_V_10_fu_1800_p2 = ($signed(sext_ln703_reg_2274) - $signed(sext_ln703_2_reg_1967));

assign ret_V_11_fu_1832_p2 = ($signed(sext_ln703_3_fu_1829_p1) - $signed(sext_ln703_1_reg_1955));

assign ret_V_12_fu_1862_p2 = ($signed(sext_ln703_3_fu_1829_p1) - $signed(sext_ln703_2_reg_1967));

assign ret_V_2_fu_1785_p2 = ($signed(r_V_1_fu_1779_p2) + $signed(sext_ln1192_reg_1961));

assign ret_V_4_fu_1813_p2 = ($signed(r_V_3_fu_1808_p2) + $signed(sext_ln1192_1_reg_1973));

assign ret_V_6_fu_1846_p2 = ($signed(r_V_5_fu_1841_p2) + $signed(sext_ln1192_reg_1961));

assign ret_V_8_fu_1875_p2 = ($signed(r_V_7_fu_1870_p2) + $signed(sext_ln1192_1_reg_1973));

assign ret_V_9_fu_1766_p2 = ($signed(sext_ln703_fu_1763_p1) - $signed(sext_ln703_1_reg_1955));

assign ret_V_fu_814_p2 = ($signed(zext_ln1193_fu_810_p1) + $signed(26'd61865984));

assign select_ln50_10_fu_1588_p3 = ((icmp_ln1495_14_fu_1583_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_9_reg_2208);

assign select_ln50_11_fu_1601_p3 = ((icmp_ln1495_15_fu_1595_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_10_fu_1588_p3);

assign select_ln50_12_fu_1660_p3 = ((icmp_ln1495_16_fu_1655_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_11_reg_2230);

assign select_ln50_13_fu_1673_p3 = ((icmp_ln1495_17_fu_1667_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_12_fu_1660_p3);

assign select_ln50_14_fu_1712_p3 = ((icmp_ln1495_18_fu_1707_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_13_reg_2252);

assign select_ln50_1_fu_1235_p3 = ((icmp_ln1495_5_fu_1229_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_fu_1221_p3);

assign select_ln50_2_fu_1300_p3 = ((icmp_ln1495_6_fu_1295_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_1_reg_2120);

assign select_ln50_3_fu_1313_p3 = ((icmp_ln1495_7_fu_1307_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_2_fu_1300_p3);

assign select_ln50_4_fu_1372_p3 = ((icmp_ln1495_8_fu_1367_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_3_reg_2142);

assign select_ln50_5_fu_1385_p3 = ((icmp_ln1495_9_fu_1379_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_4_fu_1372_p3);

assign select_ln50_6_fu_1444_p3 = ((icmp_ln1495_10_fu_1439_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_5_reg_2164);

assign select_ln50_7_fu_1457_p3 = ((icmp_ln1495_11_fu_1451_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_6_fu_1444_p3);

assign select_ln50_8_fu_1516_p3 = ((icmp_ln1495_12_fu_1511_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln50_7_reg_2186);

assign select_ln50_9_fu_1529_p3 = ((icmp_ln1495_13_fu_1523_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln50_8_fu_1516_p3);

assign select_ln50_fu_1221_p3 = ((icmp_ln1495_4_fu_1215_p2[0:0] == 1'b1) ? superpoints_q1 : 32'd1073741824);

assign select_ln571_1_fu_1076_p3 = ((and_ln585_fu_1034_p2[0:0] == 1'b1) ? select_ln588_fu_984_p3 : trunc_ln586_1_fu_969_p1);

assign select_ln571_2_fu_1099_p3 = ((and_ln582_reg_2055[0:0] == 1'b1) ? trunc_ln583_reg_2049 : 32'd1073741824);

assign select_ln571_3_fu_1109_p3 = ((or_ln571_1_reg_2071[0:0] == 1'b1) ? select_ln571_fu_1092_p3 : select_ln571_1_reg_2077);

assign select_ln571_4_fu_1119_p3 = ((or_ln571_2_fu_1105_p2[0:0] == 1'b1) ? select_ln571_2_fu_1099_p3 : 32'd0);

assign select_ln571_fu_1092_p3 = ((and_ln571_reg_2066[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_1087_p2);

assign select_ln588_fu_984_p3 = ((tmp_10_fu_976_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln64_10_fu_1555_p3 = ((icmp_ln1494_12_fu_1549_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_9_fu_1542_p3);

assign select_ln64_11_fu_1614_p3 = ((icmp_ln1494_13_fu_1609_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_10_reg_2214);

assign select_ln64_12_fu_1627_p3 = ((icmp_ln1494_14_fu_1621_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_11_fu_1614_p3);

assign select_ln64_13_fu_1686_p3 = ((icmp_ln1494_15_fu_1681_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_12_reg_2236);

assign select_ln64_14_fu_1699_p3 = ((icmp_ln1494_16_fu_1693_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_13_fu_1686_p3);

assign select_ln64_15_fu_1738_p3 = ((icmp_ln1494_17_fu_1733_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_14_reg_2258);

assign select_ln64_1_cast_fu_1257_p1 = select_ln64_1_fu_1249_p3;

assign select_ln64_1_fu_1249_p3 = ((icmp_ln1494_3_fu_1243_p2[0:0] == 1'b1) ? trunc_ln1495_fu_1201_p1 : 31'd0);

assign select_ln64_2_fu_1267_p3 = ((icmp_ln1494_4_fu_1261_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_1_cast_fu_1257_p1);

assign select_ln64_3_fu_1326_p3 = ((icmp_ln1494_5_fu_1321_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_2_reg_2126);

assign select_ln64_4_fu_1339_p3 = ((icmp_ln1494_6_fu_1333_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_3_fu_1326_p3);

assign select_ln64_5_fu_1398_p3 = ((icmp_ln1494_7_fu_1393_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_4_reg_2148);

assign select_ln64_6_fu_1411_p3 = ((icmp_ln1494_8_fu_1405_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_5_fu_1398_p3);

assign select_ln64_7_fu_1470_p3 = ((icmp_ln1494_9_fu_1465_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_6_reg_2170);

assign select_ln64_8_fu_1483_p3 = ((icmp_ln1494_10_fu_1477_p2[0:0] == 1'b1) ? superpoints_q1 : select_ln64_7_fu_1470_p3);

assign select_ln64_9_fu_1542_p3 = ((icmp_ln1494_11_fu_1537_p2[0:0] == 1'b1) ? superpoints_q0 : select_ln64_8_reg_2192);

assign sext_ln1118_fu_1775_p1 = radii_leverArm_fu_1759_p1;

assign sext_ln1192_1_fu_737_p1 = $signed(lhs_4_fu_729_p3);

assign sext_ln1192_fu_721_p1 = $signed(lhs_3_fu_713_p3);

assign sext_ln581_fu_1084_p1 = sh_amt_reg_2044;

assign sext_ln703_1_fu_709_p1 = z1_min_tmp_V_2_fu_701_p3;

assign sext_ln703_2_fu_725_p1 = z1_max_tmp_V_2_fu_693_p3;

assign sext_ln703_3_fu_1829_p1 = $signed(lhs_5_reg_2264);

assign sext_ln703_fu_1763_p1 = $signed(lhs_1_reg_2269);

assign sh_amt_fu_921_p3 = ((icmp_ln581_fu_903_p2[0:0] == 1'b1) ? add_ln581_fu_909_p2 : sub_ln581_fu_915_p2);

assign shadow_bottomL_jL_address0 = zext_ln129_1_reg_1993_pp2_iter6_reg;

assign shadow_bottomL_jL_d0 = {{ret_V_6_fu_1846_p2[51:20]}};

assign shadow_bottomL_jR_address0 = zext_ln129_1_reg_1993_pp2_iter6_reg;

assign shadow_bottomL_jR_d0 = a_V_reg_2286;

assign shadow_bottomR_jL_address0 = zext_ln129_1_reg_1993_pp2_iter6_reg;

assign shadow_bottomR_jL_d0 = {{ret_V_8_fu_1875_p2[51:20]}};

assign shadow_bottomR_jR_address0 = zext_ln129_1_reg_1993_pp2_iter6_reg;

assign shadow_bottomR_jR_d0 = {{ret_V_4_fu_1813_p2[51:20]}};

assign shl_ln604_fu_1087_p2 = trunc_ln583_reg_2049 << sext_ln581_fu_1084_p1;

assign sub_ln581_fu_915_p2 = (12'd20 - F2_fu_897_p2);

assign superpoint_0_max_z_fu_643_p3 = ((icmp_ln1494_2_fu_637_p2[0:0] == 1'b1) ? superpoints_q0 : p_012_i15_reg_492);

assign superpoint_0_min_z_fu_603_p3 = ((icmp_ln1495_fu_597_p2[0:0] == 1'b1) ? superpoints_q0 : p_012_i_reg_469);

assign tmp_10_fu_976_p3 = bitcast_ln702_fu_973_p1[32'd31];

assign tmp_2_fu_545_p3 = {{superpoints_offset}, {6'd0}};

assign tmp_3_fu_553_p3 = {{superpoints_offset}, {4'd0}};

assign tmp_5_fu_1149_p3 = {{add_ln49_3_fu_1140_p2}, {4'd0}};

assign tmp_6_fu_1205_p4 = {{superpoints_q1[31:30]}};

assign tmp_7_cast_fu_1162_p3 = {{trunc_ln49_1_fu_1145_p1}, {4'd0}};

assign tmp_9_fu_939_p4 = {{sh_amt_fu_921_p3[11:5]}};

assign tmp_fu_523_p3 = {{superpoints_offset}, {2'd0}};

assign trunc_ln128_fu_753_p1 = ap_phi_mux_i_2_phi_fu_508_p4[1:0];

assign trunc_ln1495_fu_1201_p1 = superpoints_q1[30:0];

assign trunc_ln49_1_fu_1145_p1 = add_ln49_3_fu_1140_p2[3:0];

assign trunc_ln49_fu_541_p1 = add_ln49_fu_535_p2[3:0];

assign trunc_ln555_fu_834_p1 = ireg_fu_830_p1[62:0];

assign trunc_ln565_fu_856_p1 = ireg_fu_830_p1[51:0];

assign trunc_ln583_fu_935_p1 = man_V_2_fu_885_p3[31:0];

assign trunc_ln586_1_fu_969_p1 = ashr_ln586_fu_963_p2[31:0];

assign trunc_ln586_fu_955_p1 = sh_amt_fu_921_p3[5:0];

assign trunc_ln731_fu_790_p1 = get_radiiradii_q0[4:0];

assign trunc_ln89_fu_665_p1 = z1_min_tmp_V_fu_657_p3[25:0];

assign trunc_ln90_fu_683_p1 = z1_max_tmp_V_fu_675_p3[25:0];

assign trunc_ln99_cast_fu_747_p1 = ap_phi_mux_i_2_phi_fu_508_p4;

assign xor_ln119_fu_1058_p2 = (icmp_ln119_1_fu_860_p2 ^ 1'd1);

assign xor_ln571_fu_998_p2 = (or_ln571_fu_992_p2 ^ 1'd1);

assign xor_ln581_fu_1046_p2 = (or_ln581_fu_1040_p2 ^ 1'd1);

assign xor_ln582_fu_1016_p2 = (or_ln582_fu_1010_p2 ^ 1'd1);

assign z1_max_address0 = zext_ln129_1_fu_772_p1;

assign z1_max_d0 = z1_max_tmp_V_2_reg_1945;

assign z1_max_tmp_V_2_fu_693_p3 = ((icmp_ln1494_fu_687_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln90_fu_683_p1);

assign z1_max_tmp_V_fu_675_p3 = ((icmp_ln1495_3_fu_669_p2[0:0] == 1'b1) ? 32'd23068776 : p_012_i15_reg_492);

assign z1_min_address0 = zext_ln129_1_fu_772_p1;

assign z1_min_d0 = z1_min_tmp_V_2_reg_1950;

assign z1_min_tmp_V_2_fu_701_p3 = ((icmp_ln1494_fu_687_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln89_fu_665_p1);

assign z1_min_tmp_V_fu_657_p3 = ((icmp_ln1495_2_fu_651_p2[0:0] == 1'b1) ? 32'd4271898520 : p_012_i_reg_469);

assign zext_ln1193_fu_810_p1 = radius_j_V_2_fu_802_p3;

assign zext_ln129_1_fu_772_p1 = add_ln129_fu_767_p2;

assign zext_ln129_fu_763_p1 = parallelogram_index_fu_757_p2;

assign zext_ln455_fu_865_p1 = exp_tmp_reg_2029;

assign zext_ln49_10_fu_1280_p1 = or_ln49_3_fu_1275_p2;

assign zext_ln49_11_fu_1290_p1 = or_ln49_4_fu_1285_p2;

assign zext_ln49_12_fu_1352_p1 = or_ln49_5_fu_1347_p2;

assign zext_ln49_13_fu_1362_p1 = or_ln49_6_fu_1357_p2;

assign zext_ln49_14_fu_1424_p1 = or_ln49_7_fu_1419_p2;

assign zext_ln49_15_fu_1434_p1 = or_ln49_8_fu_1429_p2;

assign zext_ln49_16_fu_1496_p1 = or_ln49_9_fu_1491_p2;

assign zext_ln49_17_fu_1506_p1 = or_ln49_10_fu_1501_p2;

assign zext_ln49_18_fu_1568_p1 = or_ln49_11_fu_1563_p2;

assign zext_ln49_19_fu_1578_p1 = or_ln49_12_fu_1573_p2;

assign zext_ln49_1_fu_531_p1 = tmp_fu_523_p3;

assign zext_ln49_20_fu_1640_p1 = or_ln49_13_fu_1635_p2;

assign zext_ln49_21_fu_1650_p1 = or_ln49_14_fu_1645_p2;

assign zext_ln49_2_fu_561_p1 = tmp_3_fu_553_p3;

assign zext_ln49_3_fu_583_p1 = i_reg_458;

assign zext_ln49_4_fu_592_p1 = add_ln49_2_fu_587_p2;

assign zext_ln49_5_fu_1136_p1 = i_2_reg_504_pp2_iter4_reg;

assign zext_ln49_6_fu_1157_p1 = tmp_5_fu_1149_p3;

assign zext_ln49_7_fu_1176_p1 = or_ln49_fu_1170_p2;

assign zext_ln49_8_fu_1186_p1 = or_ln49_1_fu_1181_p2;

assign zext_ln49_9_fu_1196_p1 = or_ln49_2_fu_1191_p2;

assign zext_ln49_fu_519_p1 = superpoints_offset;

assign zext_ln569_fu_875_p1 = p_Result_1_fu_868_p3;

assign zext_ln586_fu_959_p1 = trunc_ln586_fu_955_p1;

assign zext_ln63_1_fu_632_p1 = add_ln63_fu_627_p2;

assign zext_ln63_fu_623_p1 = i_1_reg_481;

always @ (posedge ap_clk) begin
    add_ln49_1_reg_1901[3:0] <= 4'b0000;
    sext_ln1192_reg_1961[19:0] <= 20'b00000000000000000000;
    sext_ln1192_1_reg_1973[19:0] <= 20'b00000000000000000000;
    zext_ln129_1_reg_1993[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln129_1_reg_1993_pp2_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_7_cast_reg_2082[3:0] <= 4'b0000;
end

endmodule //system_top_getParallelograms
