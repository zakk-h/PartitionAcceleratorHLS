// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_makePatches_ShadowQuilt_fromEdges (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        points_address0,
        points_ce0,
        points_q0,
        points_address1,
        points_ce1,
        points_q1,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        patch_stream_V_din,
        patch_stream_V_full_n,
        patch_stream_V_write,
        patch_buffer_address0,
        patch_buffer_ce0,
        patch_buffer_we0,
        patch_buffer_d0,
        patch_buffer_q0,
        patch_buffer_address1,
        patch_buffer_ce1,
        patch_buffer_we1,
        patch_buffer_d1,
        patch_buffer_q1,
        pSlope_address0,
        pSlope_ce0,
        pSlope_we0,
        pSlope_d0,
        shadow_bottomL_jR_address0,
        shadow_bottomL_jR_ce0,
        shadow_bottomL_jR_we0,
        shadow_bottomL_jR_d0,
        shadow_bottomL_jR_q0,
        shadow_bottomL_jR_address1,
        shadow_bottomL_jR_ce1,
        shadow_bottomL_jR_q1,
        shadow_bottomR_jR_address0,
        shadow_bottomR_jR_ce0,
        shadow_bottomR_jR_we0,
        shadow_bottomR_jR_d0,
        shadow_bottomR_jR_q0,
        shadow_bottomR_jR_address1,
        shadow_bottomR_jR_ce1,
        shadow_bottomR_jR_q1,
        shadow_bottomL_jL_address0,
        shadow_bottomL_jL_ce0,
        shadow_bottomL_jL_we0,
        shadow_bottomL_jL_d0,
        shadow_bottomL_jL_q0,
        shadow_bottomL_jL_address1,
        shadow_bottomL_jL_ce1,
        shadow_bottomL_jL_q1,
        shadow_bottomR_jL_address0,
        shadow_bottomR_jL_ce0,
        shadow_bottomR_jL_we0,
        shadow_bottomR_jL_d0,
        shadow_bottomR_jL_q0,
        shadow_bottomR_jL_address1,
        shadow_bottomR_jL_ce1,
        shadow_bottomR_jL_q1,
        z1_min_address0,
        z1_min_ce0,
        z1_min_we0,
        z1_min_d0,
        z1_min_q0,
        z1_max_address0,
        z1_max_ce0,
        z1_max_we0,
        z1_max_d0,
        z1_max_q0,
        a_corner_0_address0,
        a_corner_0_ce0,
        a_corner_0_we0,
        a_corner_0_d0,
        a_corner_1_address0,
        a_corner_1_ce0,
        a_corner_1_we0,
        a_corner_1_d0,
        b_corner_0_address0,
        b_corner_0_ce0,
        b_corner_0_we0,
        b_corner_0_d0,
        b_corner_1_address0,
        b_corner_1_ce0,
        b_corner_1_we0,
        b_corner_1_d0,
        c_corner_0_address0,
        c_corner_0_ce0,
        c_corner_0_we0,
        c_corner_0_d0,
        c_corner_1_address0,
        c_corner_1_ce0,
        c_corner_1_we0,
        c_corner_1_d0,
        d_corner_0_address0,
        d_corner_0_ce0,
        d_corner_0_we0,
        d_corner_0_d0,
        d_corner_1_address0,
        d_corner_1_ce0,
        d_corner_1_we0,
        d_corner_1_d0,
        latest_patch_index_constprop_i,
        latest_patch_index_constprop_o,
        latest_patch_index_constprop_o_ap_vld,
        num_patches_constprop_i,
        num_patches_constprop_o,
        num_patches_constprop_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 17'd4096;
parameter    ap_ST_fsm_state15 = 17'd8192;
parameter    ap_ST_fsm_state16 = 17'd16384;
parameter    ap_ST_fsm_state17 = 17'd32768;
parameter    ap_ST_fsm_state18 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [95:0] patch_stream_V_din;
input   patch_stream_V_full_n;
output   patch_stream_V_write;
output  [7:0] patch_buffer_address0;
output   patch_buffer_ce0;
output   patch_buffer_we0;
output  [31:0] patch_buffer_d0;
input  [31:0] patch_buffer_q0;
output  [7:0] patch_buffer_address1;
output   patch_buffer_ce1;
output   patch_buffer_we1;
output  [31:0] patch_buffer_d1;
input  [31:0] patch_buffer_q1;
output  [3:0] pSlope_address0;
output   pSlope_ce0;
output   pSlope_we0;
output  [31:0] pSlope_d0;
output  [3:0] shadow_bottomL_jR_address0;
output   shadow_bottomL_jR_ce0;
output   shadow_bottomL_jR_we0;
output  [31:0] shadow_bottomL_jR_d0;
input  [31:0] shadow_bottomL_jR_q0;
output  [3:0] shadow_bottomL_jR_address1;
output   shadow_bottomL_jR_ce1;
input  [31:0] shadow_bottomL_jR_q1;
output  [3:0] shadow_bottomR_jR_address0;
output   shadow_bottomR_jR_ce0;
output   shadow_bottomR_jR_we0;
output  [31:0] shadow_bottomR_jR_d0;
input  [31:0] shadow_bottomR_jR_q0;
output  [3:0] shadow_bottomR_jR_address1;
output   shadow_bottomR_jR_ce1;
input  [31:0] shadow_bottomR_jR_q1;
output  [3:0] shadow_bottomL_jL_address0;
output   shadow_bottomL_jL_ce0;
output   shadow_bottomL_jL_we0;
output  [31:0] shadow_bottomL_jL_d0;
input  [31:0] shadow_bottomL_jL_q0;
output  [3:0] shadow_bottomL_jL_address1;
output   shadow_bottomL_jL_ce1;
input  [31:0] shadow_bottomL_jL_q1;
output  [3:0] shadow_bottomR_jL_address0;
output   shadow_bottomR_jL_ce0;
output   shadow_bottomR_jL_we0;
output  [31:0] shadow_bottomR_jL_d0;
input  [31:0] shadow_bottomR_jL_q0;
output  [3:0] shadow_bottomR_jL_address1;
output   shadow_bottomR_jL_ce1;
input  [31:0] shadow_bottomR_jL_q1;
output  [3:0] z1_min_address0;
output   z1_min_ce0;
output   z1_min_we0;
output  [25:0] z1_min_d0;
input  [25:0] z1_min_q0;
output  [3:0] z1_max_address0;
output   z1_max_ce0;
output   z1_max_we0;
output  [25:0] z1_max_d0;
input  [25:0] z1_max_q0;
output  [1:0] a_corner_0_address0;
output   a_corner_0_ce0;
output   a_corner_0_we0;
output  [25:0] a_corner_0_d0;
output  [1:0] a_corner_1_address0;
output   a_corner_1_ce0;
output   a_corner_1_we0;
output  [31:0] a_corner_1_d0;
output  [1:0] b_corner_0_address0;
output   b_corner_0_ce0;
output   b_corner_0_we0;
output  [25:0] b_corner_0_d0;
output  [1:0] b_corner_1_address0;
output   b_corner_1_ce0;
output   b_corner_1_we0;
output  [31:0] b_corner_1_d0;
output  [1:0] c_corner_0_address0;
output   c_corner_0_ce0;
output   c_corner_0_we0;
output  [25:0] c_corner_0_d0;
output  [1:0] c_corner_1_address0;
output   c_corner_1_ce0;
output   c_corner_1_we0;
output  [31:0] c_corner_1_d0;
output  [1:0] d_corner_0_address0;
output   d_corner_0_ce0;
output   d_corner_0_we0;
output  [25:0] d_corner_0_d0;
output  [1:0] d_corner_1_address0;
output   d_corner_1_ce0;
output   d_corner_1_we0;
output  [31:0] d_corner_1_d0;
input  [1:0] latest_patch_index_constprop_i;
output  [1:0] latest_patch_index_constprop_o;
output   latest_patch_index_constprop_o_ap_vld;
input  [31:0] num_patches_constprop_i;
output  [31:0] num_patches_constprop_o;
output   num_patches_constprop_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg points_ce0;
reg points_ce1;
reg num_points_ce0;
reg num_points_ce1;
reg patch_stream_V_write;
reg[7:0] patch_buffer_address0;
reg patch_buffer_ce0;
reg patch_buffer_we0;
reg[7:0] patch_buffer_address1;
reg patch_buffer_ce1;
reg patch_buffer_we1;
reg[3:0] shadow_bottomL_jR_address0;
reg shadow_bottomL_jR_ce0;
reg shadow_bottomL_jR_we0;
reg shadow_bottomL_jR_ce1;
reg[3:0] shadow_bottomR_jR_address0;
reg shadow_bottomR_jR_ce0;
reg shadow_bottomR_jR_we0;
reg shadow_bottomR_jR_ce1;
reg[3:0] shadow_bottomL_jL_address0;
reg shadow_bottomL_jL_ce0;
reg shadow_bottomL_jL_we0;
reg shadow_bottomL_jL_ce1;
reg[3:0] shadow_bottomR_jL_address0;
reg shadow_bottomR_jL_ce0;
reg shadow_bottomR_jL_we0;
reg shadow_bottomR_jL_ce1;
reg[3:0] z1_min_address0;
reg z1_min_ce0;
reg z1_min_we0;
reg[3:0] z1_max_address0;
reg z1_max_ce0;
reg z1_max_we0;
reg[1:0] latest_patch_index_constprop_o;
reg latest_patch_index_constprop_o_ap_vld;
reg[31:0] num_patches_constprop_o;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    patch_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln37_reg_350;
reg   [6:0] indvar_flatten_reg_144;
reg   [2:0] layer_reg_155;
reg   [4:0] point_reg_166;
wire   [6:0] add_ln37_1_fu_271_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state13_pp0_stage0_iter0;
reg    ap_block_state14_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln37_fu_277_p2;
wire   [2:0] select_ln37_1_fu_303_p3;
reg   [2:0] select_ln37_1_reg_354;
wire   [4:0] add_ln39_fu_334_p2;
wire    ap_CS_fsm_state12;
wire    grp_patch_buffer_add_patch2_fu_226_ap_ready;
wire    grp_patch_buffer_add_patch2_fu_226_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
reg   [6:0] init_patch_V_address0;
reg    init_patch_V_ce0;
reg    init_patch_V_we0;
wire   [95:0] init_patch_V_q0;
reg   [6:0] init_patch_V_address1;
reg    init_patch_V_ce1;
reg    init_patch_V_we1;
wire   [95:0] init_patch_V_q1;
wire    grp_alignedtoline_per_layer_loop3_fu_177_ap_start;
wire    grp_alignedtoline_per_layer_loop3_fu_177_ap_done;
wire    grp_alignedtoline_per_layer_loop3_fu_177_ap_idle;
wire    grp_alignedtoline_per_layer_loop3_fu_177_ap_ready;
wire   [11:0] grp_alignedtoline_per_layer_loop3_fu_177_points_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_177_points_ce0;
wire   [11:0] grp_alignedtoline_per_layer_loop3_fu_177_points_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_177_points_ce1;
wire   [2:0] grp_alignedtoline_per_layer_loop3_fu_177_num_points_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce0;
wire   [2:0] grp_alignedtoline_per_layer_loop3_fu_177_num_points_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce1;
wire   [6:0] grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address0;
wire    grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce0;
wire    grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we0;
wire   [95:0] grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d0;
wire   [6:0] grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address1;
wire    grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce1;
wire    grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we1;
wire   [95:0] grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d1;
reg   [2:0] grp_alignedtoline_per_layer_loop3_fu_177_i_offset;
wire    grp_getParallelograms_fu_201_ap_start;
wire    grp_getParallelograms_fu_201_ap_done;
wire    grp_getParallelograms_fu_201_ap_idle;
wire    grp_getParallelograms_fu_201_ap_ready;
wire   [7:0] grp_getParallelograms_fu_201_superpoints_address0;
wire    grp_getParallelograms_fu_201_superpoints_ce0;
wire   [7:0] grp_getParallelograms_fu_201_superpoints_address1;
wire    grp_getParallelograms_fu_201_superpoints_ce1;
wire   [3:0] grp_getParallelograms_fu_201_pSlope_address0;
wire    grp_getParallelograms_fu_201_pSlope_ce0;
wire    grp_getParallelograms_fu_201_pSlope_we0;
wire   [31:0] grp_getParallelograms_fu_201_pSlope_d0;
wire   [3:0] grp_getParallelograms_fu_201_shadow_bottomL_jR_address0;
wire    grp_getParallelograms_fu_201_shadow_bottomL_jR_ce0;
wire    grp_getParallelograms_fu_201_shadow_bottomL_jR_we0;
wire   [31:0] grp_getParallelograms_fu_201_shadow_bottomL_jR_d0;
wire   [3:0] grp_getParallelograms_fu_201_shadow_bottomR_jR_address0;
wire    grp_getParallelograms_fu_201_shadow_bottomR_jR_ce0;
wire    grp_getParallelograms_fu_201_shadow_bottomR_jR_we0;
wire   [31:0] grp_getParallelograms_fu_201_shadow_bottomR_jR_d0;
wire   [3:0] grp_getParallelograms_fu_201_shadow_bottomL_jL_address0;
wire    grp_getParallelograms_fu_201_shadow_bottomL_jL_ce0;
wire    grp_getParallelograms_fu_201_shadow_bottomL_jL_we0;
wire   [31:0] grp_getParallelograms_fu_201_shadow_bottomL_jL_d0;
wire   [3:0] grp_getParallelograms_fu_201_shadow_bottomR_jL_address0;
wire    grp_getParallelograms_fu_201_shadow_bottomR_jL_ce0;
wire    grp_getParallelograms_fu_201_shadow_bottomR_jL_we0;
wire   [31:0] grp_getParallelograms_fu_201_shadow_bottomR_jL_d0;
wire   [3:0] grp_getParallelograms_fu_201_z1_min_address0;
wire    grp_getParallelograms_fu_201_z1_min_ce0;
wire    grp_getParallelograms_fu_201_z1_min_we0;
wire   [25:0] grp_getParallelograms_fu_201_z1_min_d0;
wire   [3:0] grp_getParallelograms_fu_201_z1_max_address0;
wire    grp_getParallelograms_fu_201_z1_max_ce0;
wire    grp_getParallelograms_fu_201_z1_max_we0;
wire   [25:0] grp_getParallelograms_fu_201_z1_max_d0;
wire    grp_patch_buffer_add_patch2_fu_226_ap_start;
wire    grp_patch_buffer_add_patch2_fu_226_ap_idle;
wire   [6:0] grp_patch_buffer_add_patch2_fu_226_new_patch_address0;
wire    grp_patch_buffer_add_patch2_fu_226_new_patch_ce0;
wire   [6:0] grp_patch_buffer_add_patch2_fu_226_new_patch_address1;
wire    grp_patch_buffer_add_patch2_fu_226_new_patch_ce1;
wire   [7:0] grp_patch_buffer_add_patch2_fu_226_patch_buffer_address0;
wire    grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce0;
wire    grp_patch_buffer_add_patch2_fu_226_patch_buffer_we0;
wire   [31:0] grp_patch_buffer_add_patch2_fu_226_patch_buffer_d0;
wire   [7:0] grp_patch_buffer_add_patch2_fu_226_patch_buffer_address1;
wire    grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce1;
wire    grp_patch_buffer_add_patch2_fu_226_patch_buffer_we1;
wire   [31:0] grp_patch_buffer_add_patch2_fu_226_patch_buffer_d1;
wire   [1:0] grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o;
wire    grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o_ap_vld;
wire   [31:0] grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o;
wire    grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o_ap_vld;
wire    grp_get_acceptanceCorners_fu_237_ap_start;
wire    grp_get_acceptanceCorners_fu_237_ap_done;
wire    grp_get_acceptanceCorners_fu_237_ap_idle;
wire    grp_get_acceptanceCorners_fu_237_ap_ready;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address0;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address1;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address0;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address1;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address0;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address1;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address0;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address1;
wire    grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce1;
wire   [3:0] grp_get_acceptanceCorners_fu_237_z1_min_address0;
wire    grp_get_acceptanceCorners_fu_237_z1_min_ce0;
wire   [3:0] grp_get_acceptanceCorners_fu_237_z1_max_address0;
wire    grp_get_acceptanceCorners_fu_237_z1_max_ce0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_a_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_237_a_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_237_a_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_237_a_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_a_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_237_a_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_237_a_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_237_a_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_b_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_237_b_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_237_b_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_237_b_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_b_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_237_b_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_237_b_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_237_b_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_c_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_237_c_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_237_c_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_237_c_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_c_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_237_c_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_237_c_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_237_c_corner_1_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_d_corner_0_address0;
wire    grp_get_acceptanceCorners_fu_237_d_corner_0_ce0;
wire    grp_get_acceptanceCorners_fu_237_d_corner_0_we0;
wire   [25:0] grp_get_acceptanceCorners_fu_237_d_corner_0_d0;
wire   [1:0] grp_get_acceptanceCorners_fu_237_d_corner_1_address0;
wire    grp_get_acceptanceCorners_fu_237_d_corner_1_ce0;
wire    grp_get_acceptanceCorners_fu_237_d_corner_1_we0;
wire   [31:0] grp_get_acceptanceCorners_fu_237_d_corner_1_d0;
reg   [2:0] ap_phi_mux_layer_phi_fu_159_p4;
reg    grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg    grp_getParallelograms_fu_201_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_patch_buffer_add_patch2_fu_226_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_get_acceptanceCorners_fu_237_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln40_1_fu_329_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln39_fu_289_p2;
wire   [2:0] add_ln37_fu_283_p2;
wire   [4:0] select_ln37_fu_295_p3;
wire   [6:0] tmp_fu_311_p3;
wire   [6:0] zext_ln40_fu_319_p1;
wire   [6:0] add_ln40_fu_323_p2;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg = 1'b0;
#0 grp_getParallelograms_fu_201_ap_start_reg = 1'b0;
#0 grp_patch_buffer_add_patch2_fu_226_ap_start_reg = 1'b0;
#0 grp_get_acceptanceCorners_fu_237_ap_start_reg = 1'b0;
end

system_top_makePatches_ShadowQuilt_fromEdges_init_patch_V #(
    .DataWidth( 96 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
init_patch_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_address0),
    .ce0(init_patch_V_ce0),
    .we0(init_patch_V_we0),
    .d0(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d0),
    .q0(init_patch_V_q0),
    .address1(init_patch_V_address1),
    .ce1(init_patch_V_ce1),
    .we1(init_patch_V_we1),
    .d1(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d1),
    .q1(init_patch_V_q1)
);

system_top_alignedtoline_per_layer_loop3 grp_alignedtoline_per_layer_loop3_fu_177(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_alignedtoline_per_layer_loop3_fu_177_ap_start),
    .ap_done(grp_alignedtoline_per_layer_loop3_fu_177_ap_done),
    .ap_idle(grp_alignedtoline_per_layer_loop3_fu_177_ap_idle),
    .ap_ready(grp_alignedtoline_per_layer_loop3_fu_177_ap_ready),
    .points_address0(grp_alignedtoline_per_layer_loop3_fu_177_points_address0),
    .points_ce0(grp_alignedtoline_per_layer_loop3_fu_177_points_ce0),
    .points_q0(points_q0),
    .points_address1(grp_alignedtoline_per_layer_loop3_fu_177_points_address1),
    .points_ce1(grp_alignedtoline_per_layer_loop3_fu_177_points_ce1),
    .points_q1(points_q1),
    .num_points_address0(grp_alignedtoline_per_layer_loop3_fu_177_num_points_address0),
    .num_points_ce0(grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce0),
    .num_points_q0(num_points_q0),
    .num_points_address1(grp_alignedtoline_per_layer_loop3_fu_177_num_points_address1),
    .num_points_ce1(grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce1),
    .num_points_q1(num_points_q1),
    .init_patch_address0(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address0),
    .init_patch_ce0(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce0),
    .init_patch_we0(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we0),
    .init_patch_d0(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d0),
    .init_patch_address1(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address1),
    .init_patch_ce1(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce1),
    .init_patch_we1(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we1),
    .init_patch_d1(grp_alignedtoline_per_layer_loop3_fu_177_init_patch_d1),
    .i_offset(grp_alignedtoline_per_layer_loop3_fu_177_i_offset)
);

system_top_getParallelograms grp_getParallelograms_fu_201(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getParallelograms_fu_201_ap_start),
    .ap_done(grp_getParallelograms_fu_201_ap_done),
    .ap_idle(grp_getParallelograms_fu_201_ap_idle),
    .ap_ready(grp_getParallelograms_fu_201_ap_ready),
    .superpoints_address0(grp_getParallelograms_fu_201_superpoints_address0),
    .superpoints_ce0(grp_getParallelograms_fu_201_superpoints_ce0),
    .superpoints_q0(patch_buffer_q0),
    .superpoints_address1(grp_getParallelograms_fu_201_superpoints_address1),
    .superpoints_ce1(grp_getParallelograms_fu_201_superpoints_ce1),
    .superpoints_q1(patch_buffer_q1),
    .superpoints_offset(latest_patch_index_constprop_i),
    .pSlope_address0(grp_getParallelograms_fu_201_pSlope_address0),
    .pSlope_ce0(grp_getParallelograms_fu_201_pSlope_ce0),
    .pSlope_we0(grp_getParallelograms_fu_201_pSlope_we0),
    .pSlope_d0(grp_getParallelograms_fu_201_pSlope_d0),
    .shadow_bottomL_jR_address0(grp_getParallelograms_fu_201_shadow_bottomL_jR_address0),
    .shadow_bottomL_jR_ce0(grp_getParallelograms_fu_201_shadow_bottomL_jR_ce0),
    .shadow_bottomL_jR_we0(grp_getParallelograms_fu_201_shadow_bottomL_jR_we0),
    .shadow_bottomL_jR_d0(grp_getParallelograms_fu_201_shadow_bottomL_jR_d0),
    .shadow_bottomR_jR_address0(grp_getParallelograms_fu_201_shadow_bottomR_jR_address0),
    .shadow_bottomR_jR_ce0(grp_getParallelograms_fu_201_shadow_bottomR_jR_ce0),
    .shadow_bottomR_jR_we0(grp_getParallelograms_fu_201_shadow_bottomR_jR_we0),
    .shadow_bottomR_jR_d0(grp_getParallelograms_fu_201_shadow_bottomR_jR_d0),
    .shadow_bottomL_jL_address0(grp_getParallelograms_fu_201_shadow_bottomL_jL_address0),
    .shadow_bottomL_jL_ce0(grp_getParallelograms_fu_201_shadow_bottomL_jL_ce0),
    .shadow_bottomL_jL_we0(grp_getParallelograms_fu_201_shadow_bottomL_jL_we0),
    .shadow_bottomL_jL_d0(grp_getParallelograms_fu_201_shadow_bottomL_jL_d0),
    .shadow_bottomR_jL_address0(grp_getParallelograms_fu_201_shadow_bottomR_jL_address0),
    .shadow_bottomR_jL_ce0(grp_getParallelograms_fu_201_shadow_bottomR_jL_ce0),
    .shadow_bottomR_jL_we0(grp_getParallelograms_fu_201_shadow_bottomR_jL_we0),
    .shadow_bottomR_jL_d0(grp_getParallelograms_fu_201_shadow_bottomR_jL_d0),
    .z1_min_address0(grp_getParallelograms_fu_201_z1_min_address0),
    .z1_min_ce0(grp_getParallelograms_fu_201_z1_min_ce0),
    .z1_min_we0(grp_getParallelograms_fu_201_z1_min_we0),
    .z1_min_d0(grp_getParallelograms_fu_201_z1_min_d0),
    .z1_max_address0(grp_getParallelograms_fu_201_z1_max_address0),
    .z1_max_ce0(grp_getParallelograms_fu_201_z1_max_ce0),
    .z1_max_we0(grp_getParallelograms_fu_201_z1_max_we0),
    .z1_max_d0(grp_getParallelograms_fu_201_z1_max_d0)
);

system_top_patch_buffer_add_patch2 grp_patch_buffer_add_patch2_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_patch_buffer_add_patch2_fu_226_ap_start),
    .ap_done(grp_patch_buffer_add_patch2_fu_226_ap_done),
    .ap_idle(grp_patch_buffer_add_patch2_fu_226_ap_idle),
    .ap_ready(grp_patch_buffer_add_patch2_fu_226_ap_ready),
    .new_patch_address0(grp_patch_buffer_add_patch2_fu_226_new_patch_address0),
    .new_patch_ce0(grp_patch_buffer_add_patch2_fu_226_new_patch_ce0),
    .new_patch_q0(init_patch_V_q0),
    .new_patch_address1(grp_patch_buffer_add_patch2_fu_226_new_patch_address1),
    .new_patch_ce1(grp_patch_buffer_add_patch2_fu_226_new_patch_ce1),
    .new_patch_q1(init_patch_V_q1),
    .patch_buffer_address0(grp_patch_buffer_add_patch2_fu_226_patch_buffer_address0),
    .patch_buffer_ce0(grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce0),
    .patch_buffer_we0(grp_patch_buffer_add_patch2_fu_226_patch_buffer_we0),
    .patch_buffer_d0(grp_patch_buffer_add_patch2_fu_226_patch_buffer_d0),
    .patch_buffer_address1(grp_patch_buffer_add_patch2_fu_226_patch_buffer_address1),
    .patch_buffer_ce1(grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce1),
    .patch_buffer_we1(grp_patch_buffer_add_patch2_fu_226_patch_buffer_we1),
    .patch_buffer_d1(grp_patch_buffer_add_patch2_fu_226_patch_buffer_d1),
    .latest_patch_index_constprop_i(latest_patch_index_constprop_i),
    .latest_patch_index_constprop_o(grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o),
    .latest_patch_index_constprop_o_ap_vld(grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o_ap_vld),
    .num_patches_constprop_i(num_patches_constprop_i),
    .num_patches_constprop_o(grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o),
    .num_patches_constprop_o_ap_vld(grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o_ap_vld)
);

system_top_get_acceptanceCorners grp_get_acceptanceCorners_fu_237(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_acceptanceCorners_fu_237_ap_start),
    .ap_done(grp_get_acceptanceCorners_fu_237_ap_done),
    .ap_idle(grp_get_acceptanceCorners_fu_237_ap_idle),
    .ap_ready(grp_get_acceptanceCorners_fu_237_ap_ready),
    .shadow_bottomL_jR_address0(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address0),
    .shadow_bottomL_jR_ce0(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce0),
    .shadow_bottomL_jR_q0(shadow_bottomL_jR_q0),
    .shadow_bottomL_jR_address1(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address1),
    .shadow_bottomL_jR_ce1(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce1),
    .shadow_bottomL_jR_q1(shadow_bottomL_jR_q1),
    .shadow_bottomR_jR_address0(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address0),
    .shadow_bottomR_jR_ce0(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce0),
    .shadow_bottomR_jR_q0(shadow_bottomR_jR_q0),
    .shadow_bottomR_jR_address1(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address1),
    .shadow_bottomR_jR_ce1(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce1),
    .shadow_bottomR_jR_q1(shadow_bottomR_jR_q1),
    .shadow_bottomL_jL_address0(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address0),
    .shadow_bottomL_jL_ce0(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce0),
    .shadow_bottomL_jL_q0(shadow_bottomL_jL_q0),
    .shadow_bottomL_jL_address1(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address1),
    .shadow_bottomL_jL_ce1(grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce1),
    .shadow_bottomL_jL_q1(shadow_bottomL_jL_q1),
    .shadow_bottomR_jL_address0(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address0),
    .shadow_bottomR_jL_ce0(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce0),
    .shadow_bottomR_jL_q0(shadow_bottomR_jL_q0),
    .shadow_bottomR_jL_address1(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address1),
    .shadow_bottomR_jL_ce1(grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce1),
    .shadow_bottomR_jL_q1(shadow_bottomR_jL_q1),
    .z1_min_address0(grp_get_acceptanceCorners_fu_237_z1_min_address0),
    .z1_min_ce0(grp_get_acceptanceCorners_fu_237_z1_min_ce0),
    .z1_min_q0(z1_min_q0),
    .z1_max_address0(grp_get_acceptanceCorners_fu_237_z1_max_address0),
    .z1_max_ce0(grp_get_acceptanceCorners_fu_237_z1_max_ce0),
    .z1_max_q0(z1_max_q0),
    .a_corner_0_address0(grp_get_acceptanceCorners_fu_237_a_corner_0_address0),
    .a_corner_0_ce0(grp_get_acceptanceCorners_fu_237_a_corner_0_ce0),
    .a_corner_0_we0(grp_get_acceptanceCorners_fu_237_a_corner_0_we0),
    .a_corner_0_d0(grp_get_acceptanceCorners_fu_237_a_corner_0_d0),
    .a_corner_1_address0(grp_get_acceptanceCorners_fu_237_a_corner_1_address0),
    .a_corner_1_ce0(grp_get_acceptanceCorners_fu_237_a_corner_1_ce0),
    .a_corner_1_we0(grp_get_acceptanceCorners_fu_237_a_corner_1_we0),
    .a_corner_1_d0(grp_get_acceptanceCorners_fu_237_a_corner_1_d0),
    .b_corner_0_address0(grp_get_acceptanceCorners_fu_237_b_corner_0_address0),
    .b_corner_0_ce0(grp_get_acceptanceCorners_fu_237_b_corner_0_ce0),
    .b_corner_0_we0(grp_get_acceptanceCorners_fu_237_b_corner_0_we0),
    .b_corner_0_d0(grp_get_acceptanceCorners_fu_237_b_corner_0_d0),
    .b_corner_1_address0(grp_get_acceptanceCorners_fu_237_b_corner_1_address0),
    .b_corner_1_ce0(grp_get_acceptanceCorners_fu_237_b_corner_1_ce0),
    .b_corner_1_we0(grp_get_acceptanceCorners_fu_237_b_corner_1_we0),
    .b_corner_1_d0(grp_get_acceptanceCorners_fu_237_b_corner_1_d0),
    .c_corner_0_address0(grp_get_acceptanceCorners_fu_237_c_corner_0_address0),
    .c_corner_0_ce0(grp_get_acceptanceCorners_fu_237_c_corner_0_ce0),
    .c_corner_0_we0(grp_get_acceptanceCorners_fu_237_c_corner_0_we0),
    .c_corner_0_d0(grp_get_acceptanceCorners_fu_237_c_corner_0_d0),
    .c_corner_1_address0(grp_get_acceptanceCorners_fu_237_c_corner_1_address0),
    .c_corner_1_ce0(grp_get_acceptanceCorners_fu_237_c_corner_1_ce0),
    .c_corner_1_we0(grp_get_acceptanceCorners_fu_237_c_corner_1_we0),
    .c_corner_1_d0(grp_get_acceptanceCorners_fu_237_c_corner_1_d0),
    .d_corner_0_address0(grp_get_acceptanceCorners_fu_237_d_corner_0_address0),
    .d_corner_0_ce0(grp_get_acceptanceCorners_fu_237_d_corner_0_ce0),
    .d_corner_0_we0(grp_get_acceptanceCorners_fu_237_d_corner_0_we0),
    .d_corner_0_d0(grp_get_acceptanceCorners_fu_237_d_corner_0_d0),
    .d_corner_1_address0(grp_get_acceptanceCorners_fu_237_d_corner_1_address0),
    .d_corner_1_ce0(grp_get_acceptanceCorners_fu_237_d_corner_1_ce0),
    .d_corner_1_we0(grp_get_acceptanceCorners_fu_237_d_corner_1_we0),
    .d_corner_1_d0(grp_get_acceptanceCorners_fu_237_d_corner_1_d0),
    .latest_patch_index_constprop(latest_patch_index_constprop_i)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg <= 1'b1;
        end else if ((grp_alignedtoline_per_layer_loop3_fu_177_ap_ready == 1'b1)) begin
            grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getParallelograms_fu_201_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_getParallelograms_fu_201_ap_start_reg <= 1'b1;
        end else if ((grp_getParallelograms_fu_201_ap_ready == 1'b1)) begin
            grp_getParallelograms_fu_201_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_acceptanceCorners_fu_237_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_get_acceptanceCorners_fu_237_ap_start_reg <= 1'b1;
        end else if ((grp_get_acceptanceCorners_fu_237_ap_ready == 1'b1)) begin
            grp_get_acceptanceCorners_fu_237_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_patch_buffer_add_patch2_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_patch_buffer_add_patch2_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_patch_buffer_add_patch2_fu_226_ap_ready == 1'b1)) begin
            grp_patch_buffer_add_patch2_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_277_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_144 <= add_ln37_1_fu_271_p2;
    end else if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten_reg_144 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_350 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_reg_155 <= select_ln37_1_reg_354;
    end else if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        layer_reg_155 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_277_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        point_reg_166 <= add_ln39_fu_334_p2;
    end else if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        point_reg_166 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln37_reg_350 <= icmp_ln37_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_277_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln37_1_reg_354 <= select_ln37_1_fu_303_p3;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_277_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_get_acceptanceCorners_fu_237_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_350 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_layer_phi_fu_159_p4 = select_ln37_1_reg_354;
    end else begin
        ap_phi_mux_layer_phi_fu_159_p4 = layer_reg_155;
    end
end

always @ (*) begin
    if (((grp_get_acceptanceCorners_fu_237_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 3'd0;
    end else begin
        grp_alignedtoline_per_layer_loop3_fu_177_i_offset = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        init_patch_V_address0 = zext_ln40_1_fu_329_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_address0 = grp_patch_buffer_add_patch2_fu_226_new_patch_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_address0 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address0;
    end else begin
        init_patch_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_address1 = grp_patch_buffer_add_patch2_fu_226_new_patch_address1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_address1 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_address1;
    end else begin
        init_patch_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        init_patch_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_ce0 = grp_patch_buffer_add_patch2_fu_226_new_patch_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_ce0 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce0;
    end else begin
        init_patch_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_ce1 = grp_patch_buffer_add_patch2_fu_226_new_patch_ce1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_ce1 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_ce1;
    end else begin
        init_patch_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_we0 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we0;
    end else begin
        init_patch_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_we1 = grp_alignedtoline_per_layer_loop3_fu_177_init_patch_we1;
    end else begin
        init_patch_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        latest_patch_index_constprop_o = grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o;
    end else begin
        latest_patch_index_constprop_o = latest_patch_index_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        latest_patch_index_constprop_o_ap_vld = grp_patch_buffer_add_patch2_fu_226_latest_patch_index_constprop_o_ap_vld;
    end else begin
        latest_patch_index_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        num_patches_constprop_o = grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o;
    end else begin
        num_patches_constprop_o = num_patches_constprop_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce0 = grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce0;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce1 = grp_alignedtoline_per_layer_loop3_fu_177_num_points_ce1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_address0 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_address0 = grp_getParallelograms_fu_201_superpoints_address0;
    end else begin
        patch_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_address1 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_address1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_address1 = grp_getParallelograms_fu_201_superpoints_address1;
    end else begin
        patch_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_ce0 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_ce0 = grp_getParallelograms_fu_201_superpoints_ce0;
    end else begin
        patch_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_ce1 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_ce1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        patch_buffer_ce1 = grp_getParallelograms_fu_201_superpoints_ce1;
    end else begin
        patch_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_we0 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_we0;
    end else begin
        patch_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patch_buffer_we1 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_we1;
    end else begin
        patch_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_350 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        patch_stream_V_blk_n = patch_stream_V_full_n;
    end else begin
        patch_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_350 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        patch_stream_V_write = 1'b1;
    end else begin
        patch_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce0 = grp_alignedtoline_per_layer_loop3_fu_177_points_ce0;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce1 = grp_alignedtoline_per_layer_loop3_fu_177_points_ce1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jL_address0 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jL_address0 = grp_getParallelograms_fu_201_shadow_bottomL_jL_address0;
    end else begin
        shadow_bottomL_jL_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jL_ce0 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jL_ce0 = grp_getParallelograms_fu_201_shadow_bottomL_jL_ce0;
    end else begin
        shadow_bottomL_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jL_ce1 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_ce1;
    end else begin
        shadow_bottomL_jL_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jL_we0 = grp_getParallelograms_fu_201_shadow_bottomL_jL_we0;
    end else begin
        shadow_bottomL_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jR_address0 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jR_address0 = grp_getParallelograms_fu_201_shadow_bottomL_jR_address0;
    end else begin
        shadow_bottomL_jR_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jR_ce0 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jR_ce0 = grp_getParallelograms_fu_201_shadow_bottomL_jR_ce0;
    end else begin
        shadow_bottomL_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomL_jR_ce1 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_ce1;
    end else begin
        shadow_bottomL_jR_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomL_jR_we0 = grp_getParallelograms_fu_201_shadow_bottomL_jR_we0;
    end else begin
        shadow_bottomL_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jL_address0 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jL_address0 = grp_getParallelograms_fu_201_shadow_bottomR_jL_address0;
    end else begin
        shadow_bottomR_jL_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jL_ce0 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jL_ce0 = grp_getParallelograms_fu_201_shadow_bottomR_jL_ce0;
    end else begin
        shadow_bottomR_jL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jL_ce1 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_ce1;
    end else begin
        shadow_bottomR_jL_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jL_we0 = grp_getParallelograms_fu_201_shadow_bottomR_jL_we0;
    end else begin
        shadow_bottomR_jL_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jR_address0 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jR_address0 = grp_getParallelograms_fu_201_shadow_bottomR_jR_address0;
    end else begin
        shadow_bottomR_jR_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jR_ce0 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jR_ce0 = grp_getParallelograms_fu_201_shadow_bottomR_jR_ce0;
    end else begin
        shadow_bottomR_jR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        shadow_bottomR_jR_ce1 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_ce1;
    end else begin
        shadow_bottomR_jR_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        shadow_bottomR_jR_we0 = grp_getParallelograms_fu_201_shadow_bottomR_jR_we0;
    end else begin
        shadow_bottomR_jR_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z1_max_address0 = grp_get_acceptanceCorners_fu_237_z1_max_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_max_address0 = grp_getParallelograms_fu_201_z1_max_address0;
    end else begin
        z1_max_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z1_max_ce0 = grp_get_acceptanceCorners_fu_237_z1_max_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_max_ce0 = grp_getParallelograms_fu_201_z1_max_ce0;
    end else begin
        z1_max_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_max_we0 = grp_getParallelograms_fu_201_z1_max_we0;
    end else begin
        z1_max_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z1_min_address0 = grp_get_acceptanceCorners_fu_237_z1_min_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_min_address0 = grp_getParallelograms_fu_201_z1_min_address0;
    end else begin
        z1_min_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z1_min_ce0 = grp_get_acceptanceCorners_fu_237_z1_min_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_min_ce0 = grp_getParallelograms_fu_201_z1_min_ce0;
    end else begin
        z1_min_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_min_we0 = grp_getParallelograms_fu_201_z1_min_we0;
    end else begin
        z1_min_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_177_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_177_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_177_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_177_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_alignedtoline_per_layer_loop3_fu_177_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_patch_buffer_add_patch2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln37_fu_277_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln37_fu_277_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_getParallelograms_fu_201_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_get_acceptanceCorners_fu_237_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_corner_0_address0 = grp_get_acceptanceCorners_fu_237_a_corner_0_address0;

assign a_corner_0_ce0 = grp_get_acceptanceCorners_fu_237_a_corner_0_ce0;

assign a_corner_0_d0 = grp_get_acceptanceCorners_fu_237_a_corner_0_d0;

assign a_corner_0_we0 = grp_get_acceptanceCorners_fu_237_a_corner_0_we0;

assign a_corner_1_address0 = grp_get_acceptanceCorners_fu_237_a_corner_1_address0;

assign a_corner_1_ce0 = grp_get_acceptanceCorners_fu_237_a_corner_1_ce0;

assign a_corner_1_d0 = grp_get_acceptanceCorners_fu_237_a_corner_1_d0;

assign a_corner_1_we0 = grp_get_acceptanceCorners_fu_237_a_corner_1_we0;

assign add_ln37_1_fu_271_p2 = (indvar_flatten_reg_144 + 7'd1);

assign add_ln37_fu_283_p2 = (ap_phi_mux_layer_phi_fu_159_p4 + 3'd1);

assign add_ln39_fu_334_p2 = (select_ln37_fu_295_p3 + 5'd1);

assign add_ln40_fu_323_p2 = (tmp_fu_311_p3 + zext_ln40_fu_319_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((patch_stream_V_full_n == 1'b0) & (icmp_ln37_reg_350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((patch_stream_V_full_n == 1'b0) & (icmp_ln37_reg_350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((patch_stream_V_full_n == 1'b0) & (icmp_ln37_reg_350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter1 = ((patch_stream_V_full_n == 1'b0) & (icmp_ln37_reg_350 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_corner_0_address0 = grp_get_acceptanceCorners_fu_237_b_corner_0_address0;

assign b_corner_0_ce0 = grp_get_acceptanceCorners_fu_237_b_corner_0_ce0;

assign b_corner_0_d0 = grp_get_acceptanceCorners_fu_237_b_corner_0_d0;

assign b_corner_0_we0 = grp_get_acceptanceCorners_fu_237_b_corner_0_we0;

assign b_corner_1_address0 = grp_get_acceptanceCorners_fu_237_b_corner_1_address0;

assign b_corner_1_ce0 = grp_get_acceptanceCorners_fu_237_b_corner_1_ce0;

assign b_corner_1_d0 = grp_get_acceptanceCorners_fu_237_b_corner_1_d0;

assign b_corner_1_we0 = grp_get_acceptanceCorners_fu_237_b_corner_1_we0;

assign c_corner_0_address0 = grp_get_acceptanceCorners_fu_237_c_corner_0_address0;

assign c_corner_0_ce0 = grp_get_acceptanceCorners_fu_237_c_corner_0_ce0;

assign c_corner_0_d0 = grp_get_acceptanceCorners_fu_237_c_corner_0_d0;

assign c_corner_0_we0 = grp_get_acceptanceCorners_fu_237_c_corner_0_we0;

assign c_corner_1_address0 = grp_get_acceptanceCorners_fu_237_c_corner_1_address0;

assign c_corner_1_ce0 = grp_get_acceptanceCorners_fu_237_c_corner_1_ce0;

assign c_corner_1_d0 = grp_get_acceptanceCorners_fu_237_c_corner_1_d0;

assign c_corner_1_we0 = grp_get_acceptanceCorners_fu_237_c_corner_1_we0;

assign d_corner_0_address0 = grp_get_acceptanceCorners_fu_237_d_corner_0_address0;

assign d_corner_0_ce0 = grp_get_acceptanceCorners_fu_237_d_corner_0_ce0;

assign d_corner_0_d0 = grp_get_acceptanceCorners_fu_237_d_corner_0_d0;

assign d_corner_0_we0 = grp_get_acceptanceCorners_fu_237_d_corner_0_we0;

assign d_corner_1_address0 = grp_get_acceptanceCorners_fu_237_d_corner_1_address0;

assign d_corner_1_ce0 = grp_get_acceptanceCorners_fu_237_d_corner_1_ce0;

assign d_corner_1_d0 = grp_get_acceptanceCorners_fu_237_d_corner_1_d0;

assign d_corner_1_we0 = grp_get_acceptanceCorners_fu_237_d_corner_1_we0;

assign grp_alignedtoline_per_layer_loop3_fu_177_ap_start = grp_alignedtoline_per_layer_loop3_fu_177_ap_start_reg;

assign grp_getParallelograms_fu_201_ap_start = grp_getParallelograms_fu_201_ap_start_reg;

assign grp_get_acceptanceCorners_fu_237_ap_start = grp_get_acceptanceCorners_fu_237_ap_start_reg;

assign grp_patch_buffer_add_patch2_fu_226_ap_start = grp_patch_buffer_add_patch2_fu_226_ap_start_reg;

assign icmp_ln37_fu_277_p2 = ((indvar_flatten_reg_144 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_289_p2 = ((point_reg_166 == 5'd16) ? 1'b1 : 1'b0);

assign num_patches_constprop_o_ap_vld = grp_patch_buffer_add_patch2_fu_226_num_patches_constprop_o_ap_vld;

assign num_points_address0 = grp_alignedtoline_per_layer_loop3_fu_177_num_points_address0;

assign num_points_address1 = grp_alignedtoline_per_layer_loop3_fu_177_num_points_address1;

assign pSlope_address0 = grp_getParallelograms_fu_201_pSlope_address0;

assign pSlope_ce0 = grp_getParallelograms_fu_201_pSlope_ce0;

assign pSlope_d0 = grp_getParallelograms_fu_201_pSlope_d0;

assign pSlope_we0 = grp_getParallelograms_fu_201_pSlope_we0;

assign patch_buffer_d0 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_d0;

assign patch_buffer_d1 = grp_patch_buffer_add_patch2_fu_226_patch_buffer_d1;

assign patch_stream_V_din = init_patch_V_q0;

assign points_address0 = grp_alignedtoline_per_layer_loop3_fu_177_points_address0;

assign points_address1 = grp_alignedtoline_per_layer_loop3_fu_177_points_address1;

assign select_ln37_1_fu_303_p3 = ((icmp_ln39_fu_289_p2[0:0] == 1'b1) ? add_ln37_fu_283_p2 : ap_phi_mux_layer_phi_fu_159_p4);

assign select_ln37_fu_295_p3 = ((icmp_ln39_fu_289_p2[0:0] == 1'b1) ? 5'd0 : point_reg_166);

assign shadow_bottomL_jL_address1 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jL_address1;

assign shadow_bottomL_jL_d0 = grp_getParallelograms_fu_201_shadow_bottomL_jL_d0;

assign shadow_bottomL_jR_address1 = grp_get_acceptanceCorners_fu_237_shadow_bottomL_jR_address1;

assign shadow_bottomL_jR_d0 = grp_getParallelograms_fu_201_shadow_bottomL_jR_d0;

assign shadow_bottomR_jL_address1 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jL_address1;

assign shadow_bottomR_jL_d0 = grp_getParallelograms_fu_201_shadow_bottomR_jL_d0;

assign shadow_bottomR_jR_address1 = grp_get_acceptanceCorners_fu_237_shadow_bottomR_jR_address1;

assign shadow_bottomR_jR_d0 = grp_getParallelograms_fu_201_shadow_bottomR_jR_d0;

assign tmp_fu_311_p3 = {{select_ln37_1_fu_303_p3}, {4'd0}};

assign z1_max_d0 = grp_getParallelograms_fu_201_z1_max_d0;

assign z1_min_d0 = grp_getParallelograms_fu_201_z1_min_d0;

assign zext_ln40_1_fu_329_p1 = add_ln40_fu_323_p2;

assign zext_ln40_fu_319_p1 = select_ln37_fu_295_p3;

endmodule //system_top_makePatches_ShadowQuilt_fromEdges
