// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_left_and_right_boundaries8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        points_address0,
        points_ce0,
        points_q0,
        left_bound,
        left_bound_ap_vld,
        i_dout,
        i_empty_n,
        i_read,
        lbVal_constprop_i,
        lbVal_constprop_o,
        lbVal_constprop_o_ap_vld,
        rbVal_constprop_i,
        rbVal_constprop_o,
        rbVal_constprop_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_pp0_stage0 = 11'd4;
parameter    ap_ST_fsm_pp0_stage1 = 11'd8;
parameter    ap_ST_fsm_pp0_stage2 = 11'd16;
parameter    ap_ST_fsm_pp0_stage3 = 11'd32;
parameter    ap_ST_fsm_pp0_stage4 = 11'd64;
parameter    ap_ST_fsm_pp0_stage5 = 11'd128;
parameter    ap_ST_fsm_pp0_stage6 = 11'd256;
parameter    ap_ST_fsm_pp0_stage7 = 11'd512;
parameter    ap_ST_fsm_state19 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [31:0] left_bound;
output   left_bound_ap_vld;
input  [2:0] i_dout;
input   i_empty_n;
output   i_read;
input  [31:0] lbVal_constprop_i;
output  [31:0] lbVal_constprop_o;
output   lbVal_constprop_o_ap_vld;
input  [31:0] rbVal_constprop_i;
output  [31:0] rbVal_constprop_o;
output   rbVal_constprop_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg num_points_ce0;
reg points_ce0;
reg[31:0] left_bound;
reg left_bound_ap_vld;
reg i_read;
reg[31:0] lbVal_constprop_o;
reg lbVal_constprop_o_ap_vld;
reg[31:0] rbVal_constprop_o;
reg rbVal_constprop_o_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] get_trapezoid_edgestrapezoid_edges_address0;
reg    get_trapezoid_edgestrapezoid_edges_ce0;
wire   [31:0] get_trapezoid_edgestrapezoid_edges_q0;
reg    i_blk_n;
reg   [31:0] j_reg_198;
reg   [31:0] j_reg_198_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] reg_222;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_state16_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln270_reg_2431;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [2:0] i_5_reg_2401;
reg   [31:0] num_points_load_reg_2416;
wire    ap_CS_fsm_state2;
reg   [31:0] get_trapezoid_edgestrapezoid_edges_load_reg_2421;
wire   [15:0] shl_ln_fu_234_p3;
reg   [15:0] shl_ln_reg_2426;
wire   [0:0] icmp_ln270_fu_241_p2;
wire   [0:0] icmp_ln935_fu_294_p2;
reg   [0:0] icmp_ln935_reg_2440;
wire   [0:0] p_Result_66_fu_300_p3;
reg   [0:0] p_Result_66_reg_2445;
wire   [31:0] m_42_fu_314_p3;
reg   [31:0] m_42_reg_2450;
wire   [31:0] sub_ln944_fu_340_p2;
reg   [31:0] sub_ln944_reg_2455;
wire   [0:0] icmp_ln958_fu_434_p2;
reg   [0:0] icmp_ln958_reg_2461;
wire   [0:0] select_ln958_fu_454_p3;
reg   [0:0] select_ln958_reg_2466;
wire   [7:0] trunc_ln943_fu_462_p1;
reg   [7:0] trunc_ln943_reg_2471;
wire   [31:0] select_ln935_fu_583_p3;
reg   [31:0] select_ln935_reg_2476;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state13_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] icmp_ln935_3_fu_594_p2;
reg   [0:0] icmp_ln935_3_reg_2481;
wire   [0:0] p_Result_78_fu_600_p3;
reg   [0:0] p_Result_78_reg_2486;
reg   [62:0] m_47_reg_2491;
reg   [0:0] p_Result_48_reg_2496;
wire   [7:0] trunc_ln943_4_fu_834_p1;
reg   [7:0] trunc_ln943_4_reg_2501;
wire   [30:0] p_Result_77_fu_842_p1;
reg   [30:0] p_Result_77_reg_2506;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_state17_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] select_ln935_3_fu_894_p3;
reg   [31:0] select_ln935_3_reg_2511;
wire   [31:0] add_ln270_fu_901_p2;
reg   [31:0] add_ln270_reg_2516;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_state18_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] icmp_ln935_2_fu_911_p2;
reg   [0:0] icmp_ln935_2_reg_2521;
wire   [0:0] p_Result_71_fu_917_p3;
reg   [0:0] p_Result_71_reg_2526;
reg   [62:0] m_45_reg_2531;
reg   [0:0] p_Result_40_reg_2536;
wire   [7:0] trunc_ln943_3_fu_1151_p1;
reg   [7:0] trunc_ln943_3_reg_2541;
wire   [31:0] bitcast_ln351_2_fu_1158_p1;
reg   [31:0] bitcast_ln351_2_reg_2546;
wire   [30:0] p_Result_70_fu_1167_p1;
reg   [30:0] p_Result_70_reg_2552;
wire   [31:0] select_ln935_2_fu_1219_p3;
reg   [31:0] select_ln935_2_reg_2557;
wire   [31:0] bitcast_ln351_fu_1229_p1;
reg   [31:0] bitcast_ln351_reg_2562;
reg   [31:0] v_assign_reg_2568;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state14_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire  signed [11:0] sh_amt_1_fu_1324_p3;
reg  signed [11:0] sh_amt_1_reg_2574;
wire   [31:0] trunc_ln583_1_fu_1338_p1;
reg   [31:0] trunc_ln583_1_reg_2579;
wire   [0:0] xor_ln571_1_fu_1382_p2;
reg   [0:0] xor_ln571_1_reg_2584;
wire   [0:0] and_ln603_1_fu_1442_p2;
reg   [0:0] and_ln603_1_reg_2589;
wire   [0:0] or_ln603_3_fu_1448_p2;
reg   [0:0] or_ln603_3_reg_2594;
wire   [31:0] select_ln603_1_fu_1454_p3;
reg   [31:0] select_ln603_1_reg_2599;
wire   [0:0] or_ln603_5_fu_1468_p2;
reg   [0:0] or_ln603_5_reg_2604;
wire   [0:0] and_ln1495_3_fu_1528_p2;
reg   [0:0] and_ln1495_3_reg_2609;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state15_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [53:0] man_V_4_fu_1585_p3;
reg   [53:0] man_V_4_reg_2613;
wire   [0:0] icmp_ln571_fu_1593_p2;
reg   [0:0] icmp_ln571_reg_2618;
wire  signed [11:0] sh_amt_fu_1623_p3;
reg  signed [11:0] sh_amt_reg_2623;
wire   [0:0] icmp_ln582_fu_1631_p2;
reg   [0:0] icmp_ln582_reg_2628;
wire   [0:0] and_ln585_fu_1691_p2;
reg   [0:0] and_ln585_reg_2633;
wire   [0:0] and_ln603_fu_1721_p2;
reg   [0:0] and_ln603_reg_2638;
wire   [0:0] or_ln603_fu_1727_p2;
reg   [0:0] or_ln603_reg_2643;
wire   [0:0] select_ln603_4_fu_1749_p3;
reg   [0:0] select_ln603_4_reg_2649;
wire   [0:0] and_ln1495_1_fu_2115_p2;
reg   [0:0] and_ln1495_1_reg_2654;
wire    ap_block_pp0_stage7_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg   [31:0] ap_phi_mux_j_phi_fu_203_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] idxprom_i_fu_228_p1;
wire   [63:0] zext_ln271_fu_285_p1;
wire   [31:0] select_ln585_3_fu_2387_p3;
wire    ap_block_pp0_stage7;
reg   [31:0] ap_sig_allocacmp_p_Val2_s;
wire   [31:0] select_ln585_7_fu_2023_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] ap_sig_allocacmp_p_Val2_35;
reg    ap_block_state1;
reg   [31:0] left_bound_preg;
wire    ap_block_pp0_stage6_01001;
reg   [31:0] grp_fu_211_p0;
reg   [31:0] grp_fu_211_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_216_p0;
wire    ap_block_pp0_stage2;
wire   [11:0] trunc_ln271_fu_246_p1;
wire   [15:0] shl_ln271_1_fu_250_p3;
wire   [15:0] add_ln271_fu_258_p2;
wire   [2:0] lshr_ln_fu_263_p4;
wire   [8:0] trunc_ln271_1_fu_273_p1;
wire   [11:0] tmp_s_fu_277_p3;
wire   [31:0] z_bits_fu_290_p1;
wire   [31:0] tmp_V_fu_308_p2;
reg   [31:0] p_Result_67_fu_322_p4;
reg   [31:0] l_fu_332_p3;
wire   [31:0] lsb_index_fu_346_p2;
wire   [30:0] tmp_fu_352_p4;
wire   [5:0] trunc_ln947_fu_368_p1;
wire   [5:0] sub_ln947_fu_372_p2;
wire   [31:0] zext_ln947_fu_378_p1;
wire   [31:0] lshr_ln947_fu_382_p2;
wire   [31:0] shl_ln949_fu_388_p2;
wire   [31:0] or_ln949_5_fu_394_p2;
wire   [31:0] and_ln949_fu_400_p2;
wire   [0:0] tmp_35_fu_412_p3;
wire   [0:0] p_Result_68_fu_426_p3;
wire   [0:0] xor_ln949_fu_420_p2;
wire   [0:0] icmp_ln946_fu_362_p2;
wire   [0:0] icmp_ln949_fu_406_p2;
wire   [0:0] select_ln946_fu_446_p3;
wire   [0:0] and_ln949_6_fu_440_p2;
wire   [31:0] sub_ln959_fu_469_p2;
wire   [63:0] zext_ln959_fu_466_p1;
wire   [63:0] zext_ln959_5_fu_474_p1;
wire   [31:0] add_ln958_fu_484_p2;
wire   [63:0] zext_ln958_fu_489_p1;
wire   [63:0] lshr_ln958_fu_493_p2;
wire   [63:0] shl_ln959_fu_478_p2;
wire   [63:0] m_fu_499_p3;
wire   [63:0] zext_ln961_fu_506_p1;
wire   [63:0] m_25_fu_509_p2;
wire   [62:0] m_43_fu_515_p4;
wire   [0:0] p_Result_s_fu_529_p3;
wire   [7:0] sub_ln964_fu_545_p2;
wire   [7:0] select_ln943_fu_537_p3;
wire   [7:0] add_ln964_fu_550_p2;
wire   [63:0] zext_ln962_fu_525_p1;
wire   [8:0] tmp_8_i_fu_556_p3;
wire   [63:0] p_Result_69_fu_563_p5;
wire   [31:0] LD_fu_575_p1;
wire   [31:0] bitcast_ln744_fu_579_p1;
wire   [31:0] tmp_V_11_fu_608_p2;
wire   [31:0] m_46_fu_614_p3;
reg   [31:0] p_Result_79_fu_622_p4;
reg   [31:0] l_4_fu_632_p3;
wire   [31:0] sub_ln944_4_fu_640_p2;
wire   [31:0] lsb_index_4_fu_646_p2;
wire   [30:0] tmp_45_fu_652_p4;
wire   [5:0] trunc_ln947_4_fu_668_p1;
wire   [5:0] sub_ln947_4_fu_672_p2;
wire   [31:0] zext_ln947_4_fu_678_p1;
wire   [31:0] lshr_ln947_4_fu_682_p2;
wire   [31:0] shl_ln949_4_fu_688_p2;
wire   [31:0] or_ln949_6_fu_694_p2;
wire   [31:0] and_ln949_10_fu_700_p2;
wire   [0:0] tmp_46_fu_712_p3;
wire   [0:0] p_Result_80_fu_726_p3;
wire   [0:0] xor_ln949_4_fu_720_p2;
wire   [31:0] sub_ln959_4_fu_750_p2;
wire   [63:0] zext_ln959_8_fu_746_p1;
wire   [63:0] zext_ln959_9_fu_756_p1;
wire   [0:0] icmp_ln946_4_fu_662_p2;
wire   [0:0] icmp_ln949_4_fu_706_p2;
wire   [31:0] add_ln958_4_fu_774_p2;
wire   [63:0] zext_ln958_4_fu_780_p1;
wire   [0:0] icmp_ln958_4_fu_734_p2;
wire   [0:0] select_ln946_4_fu_766_p3;
wire   [0:0] and_ln949_8_fu_740_p2;
wire   [63:0] lshr_ln958_4_fu_784_p2;
wire   [63:0] shl_ln959_4_fu_760_p2;
wire   [0:0] select_ln958_9_fu_790_p3;
wire   [63:0] m_33_fu_798_p3;
wire   [63:0] zext_ln961_4_fu_806_p1;
wire   [63:0] m_34_fu_810_p2;
wire   [31:0] data_V_2_fu_838_p1;
wire   [7:0] sub_ln964_4_fu_856_p2;
wire   [7:0] select_ln943_4_fu_849_p3;
wire   [7:0] add_ln964_4_fu_861_p2;
wire   [63:0] zext_ln962_4_fu_846_p1;
wire   [8:0] tmp_12_i_fu_867_p3;
wire   [63:0] p_Result_81_fu_874_p5;
wire   [31:0] LD_5_fu_886_p1;
wire   [31:0] bitcast_ln744_3_fu_890_p1;
wire   [31:0] tmp_V_8_fu_925_p2;
wire   [31:0] m_44_fu_931_p3;
reg   [31:0] p_Result_72_fu_939_p4;
reg   [31:0] l_3_fu_949_p3;
wire   [31:0] sub_ln944_3_fu_957_p2;
wire   [31:0] lsb_index_3_fu_963_p2;
wire   [30:0] tmp_38_fu_969_p4;
wire   [5:0] trunc_ln947_3_fu_985_p1;
wire   [5:0] sub_ln947_3_fu_989_p2;
wire   [31:0] zext_ln947_3_fu_995_p1;
wire   [31:0] lshr_ln947_3_fu_999_p2;
wire   [31:0] shl_ln949_3_fu_1005_p2;
wire   [31:0] or_ln949_fu_1011_p2;
wire   [31:0] and_ln949_9_fu_1017_p2;
wire   [0:0] tmp_39_fu_1029_p3;
wire   [0:0] p_Result_73_fu_1043_p3;
wire   [0:0] xor_ln949_3_fu_1037_p2;
wire   [31:0] sub_ln959_3_fu_1067_p2;
wire   [63:0] zext_ln959_6_fu_1063_p1;
wire   [63:0] zext_ln959_7_fu_1073_p1;
wire   [0:0] icmp_ln946_3_fu_979_p2;
wire   [0:0] icmp_ln949_3_fu_1023_p2;
wire   [31:0] add_ln958_3_fu_1091_p2;
wire   [63:0] zext_ln958_3_fu_1097_p1;
wire   [0:0] icmp_ln958_3_fu_1051_p2;
wire   [0:0] select_ln946_3_fu_1083_p3;
wire   [0:0] and_ln949_7_fu_1057_p2;
wire   [63:0] lshr_ln958_3_fu_1101_p2;
wire   [63:0] shl_ln959_3_fu_1077_p2;
wire   [0:0] select_ln958_7_fu_1107_p3;
wire   [63:0] m_29_fu_1115_p3;
wire   [63:0] zext_ln961_3_fu_1123_p1;
wire   [63:0] m_30_fu_1127_p2;
wire   [31:0] zext_ln368_1_fu_1155_p1;
wire   [31:0] data_V_fu_1163_p1;
wire   [7:0] sub_ln964_3_fu_1181_p2;
wire   [7:0] select_ln943_3_fu_1174_p3;
wire   [7:0] add_ln964_3_fu_1186_p2;
wire   [63:0] zext_ln962_3_fu_1171_p1;
wire   [8:0] tmp_9_i_fu_1192_p3;
wire   [63:0] p_Result_74_fu_1199_p5;
wire   [31:0] LD_3_fu_1211_p1;
wire   [31:0] bitcast_ln744_2_fu_1215_p1;
wire   [31:0] zext_ln368_fu_1226_p1;
wire   [63:0] grp_fu_216_p1;
wire   [63:0] ireg_1_fu_1234_p1;
wire   [10:0] exp_tmp_1_fu_1250_p4;
wire   [51:0] trunc_ln565_1_fu_1264_p1;
wire   [52:0] p_Result_83_fu_1268_p3;
wire   [53:0] zext_ln569_1_fu_1276_p1;
wire   [0:0] p_Result_82_fu_1242_p3;
wire   [53:0] man_V_6_fu_1280_p2;
wire   [62:0] trunc_ln555_1_fu_1238_p1;
wire   [11:0] zext_ln455_1_fu_1260_p1;
wire   [11:0] F2_1_fu_1300_p2;
wire   [0:0] icmp_ln581_1_fu_1306_p2;
wire   [11:0] add_ln581_1_fu_1312_p2;
wire   [11:0] sub_ln581_1_fu_1318_p2;
wire   [53:0] man_V_7_fu_1286_p3;
wire   [6:0] tmp_49_fu_1348_p4;
wire   [5:0] trunc_ln586_2_fu_1364_p1;
wire   [53:0] zext_ln586_1_fu_1368_p1;
wire   [53:0] ashr_ln586_1_fu_1372_p2;
wire   [0:0] icmp_ln571_1_fu_1294_p2;
wire   [0:0] icmp_ln582_1_fu_1332_p2;
wire   [0:0] or_ln582_1_fu_1394_p2;
wire   [0:0] xor_ln582_1_fu_1400_p2;
wire   [0:0] and_ln581_1_fu_1406_p2;
wire   [0:0] icmp_ln585_1_fu_1342_p2;
wire   [0:0] xor_ln585_1_fu_1418_p2;
wire   [0:0] or_ln581_1_fu_1430_p2;
wire   [0:0] icmp_ln603_1_fu_1358_p2;
wire   [0:0] xor_ln581_1_fu_1436_p2;
wire   [0:0] and_ln585_3_fu_1424_p2;
wire   [0:0] and_ln585_2_fu_1412_p2;
wire   [31:0] trunc_ln586_3_fu_1378_p1;
wire   [0:0] and_ln582_1_fu_1388_p2;
wire   [0:0] or_ln603_4_fu_1462_p2;
wire   [31:0] bitcast_ln702_3_fu_1477_p1;
wire   [0:0] tmp_50_fu_1481_p3;
wire  signed [31:0] sext_ln581_1_fu_1474_p1;
wire   [31:0] shl_ln604_1_fu_1497_p2;
wire   [31:0] select_ln588_fu_1489_p3;
wire   [31:0] select_ln603_fu_1502_p3;
wire   [31:0] select_ln603_2_fu_1509_p3;
wire   [0:0] tmp_56_fu_1515_p3;
wire   [0:0] and_ln1495_2_fu_1523_p2;
wire   [63:0] ireg_fu_1533_p1;
wire   [10:0] exp_tmp_fu_1549_p4;
wire   [51:0] trunc_ln565_fu_1563_p1;
wire   [52:0] p_Result_76_fu_1567_p3;
wire   [53:0] zext_ln569_fu_1575_p1;
wire   [0:0] p_Result_75_fu_1541_p3;
wire   [53:0] man_V_3_fu_1579_p2;
wire   [62:0] trunc_ln555_fu_1537_p1;
wire   [11:0] zext_ln455_fu_1559_p1;
wire   [11:0] F2_fu_1599_p2;
wire   [0:0] icmp_ln581_fu_1605_p2;
wire   [11:0] add_ln581_fu_1611_p2;
wire   [11:0] sub_ln581_fu_1617_p2;
wire   [6:0] tmp_42_fu_1643_p4;
wire   [5:0] trunc_ln586_fu_1659_p1;
wire   [53:0] zext_ln586_fu_1663_p1;
wire   [0:0] or_ln582_fu_1673_p2;
wire   [0:0] xor_ln582_fu_1679_p2;
wire   [0:0] and_ln581_fu_1685_p2;
wire   [0:0] icmp_ln585_fu_1637_p2;
wire   [0:0] xor_ln585_fu_1697_p2;
wire   [0:0] or_ln581_fu_1709_p2;
wire   [0:0] icmp_ln603_fu_1653_p2;
wire   [0:0] xor_ln581_fu_1715_p2;
wire   [0:0] and_ln585_1_fu_1703_p2;
wire   [53:0] ashr_ln586_fu_1667_p2;
wire   [0:0] tmp_52_fu_1733_p3;
wire   [0:0] tmp_53_fu_1741_p3;
wire   [63:0] grp_fu_219_p1;
wire   [63:0] ireg_3_fu_1757_p1;
wire   [10:0] exp_tmp_3_fu_1773_p4;
wire   [51:0] trunc_ln565_3_fu_1787_p1;
wire   [52:0] p_Result_87_fu_1791_p3;
wire   [53:0] zext_ln569_3_fu_1799_p1;
wire   [0:0] p_Result_86_fu_1765_p3;
wire   [53:0] man_V_12_fu_1803_p2;
wire   [62:0] trunc_ln555_3_fu_1761_p1;
wire   [11:0] zext_ln455_3_fu_1783_p1;
wire   [11:0] F2_3_fu_1823_p2;
wire   [0:0] icmp_ln581_3_fu_1829_p2;
wire   [11:0] add_ln581_3_fu_1835_p2;
wire   [11:0] sub_ln581_3_fu_1841_p2;
wire  signed [11:0] sh_amt_3_fu_1847_p3;
wire   [53:0] man_V_13_fu_1809_p3;
wire   [6:0] tmp_58_fu_1875_p4;
wire   [5:0] trunc_ln586_6_fu_1891_p1;
wire   [53:0] zext_ln586_3_fu_1895_p1;
wire   [53:0] ashr_ln586_3_fu_1899_p2;
wire   [31:0] trunc_ln583_3_fu_1865_p1;
wire  signed [31:0] sext_ln581_3_fu_1855_p1;
wire   [0:0] icmp_ln571_3_fu_1817_p2;
wire   [0:0] icmp_ln582_3_fu_1859_p2;
wire   [0:0] xor_ln571_3_fu_1915_p2;
wire   [0:0] or_ln582_3_fu_1927_p2;
wire   [0:0] xor_ln582_3_fu_1933_p2;
wire   [0:0] and_ln581_3_fu_1939_p2;
wire   [0:0] icmp_ln585_3_fu_1869_p2;
wire   [0:0] or_ln581_3_fu_1951_p2;
wire   [0:0] icmp_ln603_3_fu_1885_p2;
wire   [0:0] xor_ln581_3_fu_1957_p2;
wire   [0:0] xor_ln585_3_fu_1969_p2;
wire   [0:0] and_ln585_7_fu_1975_p2;
wire   [0:0] and_ln603_3_fu_1963_p2;
wire   [31:0] shl_ln604_3_fu_1909_p2;
wire   [31:0] trunc_ln586_7_fu_1905_p1;
wire   [0:0] and_ln585_6_fu_1945_p2;
wire   [0:0] and_ln582_3_fu_1921_p2;
wire   [0:0] or_ln585_3_fu_1981_p2;
wire   [31:0] select_ln585_4_fu_1987_p3;
wire   [0:0] or_ln585_4_fu_1995_p2;
wire   [0:0] or_ln585_5_fu_2017_p2;
wire   [31:0] select_ln585_6_fu_2009_p3;
wire   [31:0] select_ln585_5_fu_2001_p3;
wire   [31:0] bitcast_ln702_fu_2043_p1;
wire   [31:0] trunc_ln583_fu_2040_p1;
wire  signed [31:0] sext_ln581_fu_2037_p1;
wire   [0:0] xor_ln571_fu_2060_p2;
wire   [0:0] and_ln582_fu_2065_p2;
wire   [0:0] or_ln603_1_fu_2070_p2;
wire   [31:0] shl_ln604_fu_2054_p2;
wire   [0:0] tmp_43_fu_2046_p3;
wire   [0:0] tmp_51_fu_2080_p3;
wire   [0:0] select_ln588_1_fu_2088_p3;
wire   [0:0] select_ln603_3_fu_2096_p3;
wire   [0:0] or_ln603_2_fu_2075_p2;
wire   [0:0] select_ln603_5_fu_2103_p3;
wire   [0:0] and_ln1495_fu_2109_p2;
wire   [63:0] ireg_2_fu_2121_p1;
wire   [10:0] exp_tmp_2_fu_2137_p4;
wire   [51:0] trunc_ln565_2_fu_2151_p1;
wire   [52:0] p_Result_85_fu_2155_p3;
wire   [53:0] zext_ln569_2_fu_2163_p1;
wire   [0:0] p_Result_84_fu_2129_p3;
wire   [53:0] man_V_9_fu_2167_p2;
wire   [62:0] trunc_ln555_2_fu_2125_p1;
wire   [11:0] zext_ln455_2_fu_2147_p1;
wire   [11:0] F2_2_fu_2187_p2;
wire   [0:0] icmp_ln581_2_fu_2193_p2;
wire   [11:0] add_ln581_2_fu_2199_p2;
wire   [11:0] sub_ln581_2_fu_2205_p2;
wire  signed [11:0] sh_amt_2_fu_2211_p3;
wire   [53:0] man_V_10_fu_2173_p3;
wire   [6:0] tmp_55_fu_2239_p4;
wire   [5:0] trunc_ln586_4_fu_2255_p1;
wire   [53:0] zext_ln586_2_fu_2259_p1;
wire   [53:0] ashr_ln586_2_fu_2263_p2;
wire   [31:0] trunc_ln583_2_fu_2229_p1;
wire  signed [31:0] sext_ln581_2_fu_2219_p1;
wire   [0:0] icmp_ln571_2_fu_2181_p2;
wire   [0:0] icmp_ln582_2_fu_2223_p2;
wire   [0:0] xor_ln571_2_fu_2279_p2;
wire   [0:0] or_ln582_2_fu_2291_p2;
wire   [0:0] xor_ln582_2_fu_2297_p2;
wire   [0:0] and_ln581_2_fu_2303_p2;
wire   [0:0] icmp_ln585_2_fu_2233_p2;
wire   [0:0] or_ln581_2_fu_2315_p2;
wire   [0:0] icmp_ln603_2_fu_2249_p2;
wire   [0:0] xor_ln581_2_fu_2321_p2;
wire   [0:0] xor_ln585_2_fu_2333_p2;
wire   [0:0] and_ln585_5_fu_2339_p2;
wire   [0:0] and_ln603_2_fu_2327_p2;
wire   [31:0] shl_ln604_2_fu_2273_p2;
wire   [31:0] trunc_ln586_5_fu_2269_p1;
wire   [0:0] and_ln585_4_fu_2309_p2;
wire   [0:0] and_ln582_2_fu_2285_p2;
wire   [0:0] or_ln585_fu_2345_p2;
wire   [31:0] select_ln585_fu_2351_p3;
wire   [0:0] or_ln585_1_fu_2359_p2;
wire   [0:0] or_ln585_2_fu_2381_p2;
wire   [31:0] select_ln585_2_fu_2373_p3;
wire   [31:0] select_ln585_1_fu_2365_p3;
reg   [1:0] grp_fu_211_opcode;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state19;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 left_bound_preg = 32'd0;
end

system_top_p_find_left_and_right_boundaries8_get_trapezoid_edgestrapezoid_edges #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
get_trapezoid_edgestrapezoid_edges_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_trapezoid_edgestrapezoid_edges_address0),
    .ce0(get_trapezoid_edgestrapezoid_edges_ce0),
    .q0(get_trapezoid_edgestrapezoid_edges_q0)
);

system_top_faddfsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_3_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(grp_fu_211_p1),
    .opcode(grp_fu_211_opcode),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_216_p0),
    .ce(1'b1),
    .dout(grp_fu_216_p1)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln351_2_reg_2546),
    .ce(1'b1),
    .dout(grp_fu_219_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_bound_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_01001) & (1'd1 == and_ln1495_1_fu_2115_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            left_bound_preg <= j_reg_198_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln270_reg_2431 == 1'd0))) begin
        j_reg_198 <= add_ln270_reg_2516;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_198 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln270_reg_2516 <= add_ln270_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln1495_1_reg_2654 <= and_ln1495_1_fu_2115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln1495_3_reg_2609 <= and_ln1495_3_fu_1528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln585_reg_2633 <= and_ln585_fu_1691_p2;
        and_ln603_reg_2638 <= and_ln603_fu_1721_p2;
        icmp_ln571_reg_2618 <= icmp_ln571_fu_1593_p2;
        icmp_ln582_reg_2628 <= icmp_ln582_fu_1631_p2;
        man_V_4_reg_2613 <= man_V_4_fu_1585_p3;
        or_ln603_reg_2643 <= or_ln603_fu_1727_p2;
        select_ln603_4_reg_2649 <= select_ln603_4_fu_1749_p3;
        sh_amt_reg_2623 <= sh_amt_fu_1623_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        and_ln603_1_reg_2589 <= and_ln603_1_fu_1442_p2;
        or_ln603_3_reg_2594 <= or_ln603_3_fu_1448_p2;
        or_ln603_5_reg_2604 <= or_ln603_5_fu_1468_p2;
        select_ln603_1_reg_2599 <= select_ln603_1_fu_1454_p3;
        sh_amt_1_reg_2574 <= sh_amt_1_fu_1324_p3;
        trunc_ln583_1_reg_2579 <= trunc_ln583_1_fu_1338_p1;
        xor_ln571_1_reg_2584 <= xor_ln571_1_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln270_reg_2431 == 1'd0))) begin
        bitcast_ln351_2_reg_2546[30 : 0] <= bitcast_ln351_2_fu_1158_p1[30 : 0];
        icmp_ln935_2_reg_2521 <= icmp_ln935_2_fu_911_p2;
        m_45_reg_2531 <= {{m_30_fu_1127_p2[63:1]}};
        p_Result_40_reg_2536 <= m_30_fu_1127_p2[32'd25];
        p_Result_71_reg_2526 <= ap_sig_allocacmp_p_Val2_s[32'd31];
        trunc_ln943_3_reg_2541 <= trunc_ln943_3_fu_1151_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bitcast_ln351_reg_2562[30 : 0] <= bitcast_ln351_fu_1229_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        get_trapezoid_edgestrapezoid_edges_load_reg_2421 <= get_trapezoid_edgestrapezoid_edges_q0;
        num_points_load_reg_2416 <= num_points_q0;
        shl_ln_reg_2426[15 : 13] <= shl_ln_fu_234_p3[15 : 13];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_5_reg_2401 <= i_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln270_reg_2431 <= icmp_ln270_fu_241_p2;
        j_reg_198_pp0_iter1_reg <= j_reg_198;
        p_Result_70_reg_2552 <= p_Result_70_fu_1167_p1;
        select_ln935_2_reg_2557 <= select_ln935_2_fu_1219_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln270_reg_2431 == 1'd0))) begin
        icmp_ln935_3_reg_2481 <= icmp_ln935_3_fu_594_p2;
        m_47_reg_2491 <= {{m_34_fu_810_p2[63:1]}};
        p_Result_48_reg_2496 <= m_34_fu_810_p2[32'd25];
        p_Result_78_reg_2486 <= ap_sig_allocacmp_p_Val2_35[32'd31];
        trunc_ln943_4_reg_2501 <= trunc_ln943_4_fu_834_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln270_reg_2431 == 1'd0))) begin
        icmp_ln935_reg_2440 <= icmp_ln935_fu_294_p2;
        icmp_ln958_reg_2461 <= icmp_ln958_fu_434_p2;
        m_42_reg_2450 <= m_42_fu_314_p3;
        p_Result_66_reg_2445 <= points_q0[32'd31];
        select_ln958_reg_2466 <= select_ln958_fu_454_p3;
        sub_ln944_reg_2455 <= sub_ln944_fu_340_p2;
        trunc_ln943_reg_2471 <= trunc_ln943_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln270_reg_2431 == 1'd0))) begin
        p_Result_77_reg_2506 <= p_Result_77_fu_842_p1;
        select_ln935_3_reg_2511 <= select_ln935_3_fu_894_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln270_reg_2431 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_222 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln270_reg_2431 == 1'd0))) begin
        select_ln935_reg_2476 <= select_ln935_fu_583_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v_assign_reg_2568 <= grp_fu_211_p2;
    end
end

always @ (*) begin
    if ((icmp_ln270_reg_2431 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln270_reg_2431 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_203_p4 = add_ln270_reg_2516;
    end else begin
        ap_phi_mux_j_phi_fu_203_p4 = j_reg_198;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln1495_3_reg_2609) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_p_Val2_35 = select_ln585_7_fu_2023_p3;
    end else begin
        ap_sig_allocacmp_p_Val2_35 = rbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln1495_1_reg_2654) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_p_Val2_s = select_ln585_3_fu_2387_p3;
    end else begin
        ap_sig_allocacmp_p_Val2_s = lbVal_constprop_i;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        get_trapezoid_edgestrapezoid_edges_ce0 = 1'b1;
    end else begin
        get_trapezoid_edgestrapezoid_edges_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_00001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln270_reg_2431 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln270_reg_2431 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_00001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_211_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln270_reg_2431 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_00001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln270_reg_2431 == 1'd0)))) begin
        grp_fu_211_opcode = 2'd0;
    end else begin
        grp_fu_211_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_211_p0 = bitcast_ln351_fu_1229_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_211_p0 = bitcast_ln351_2_fu_1158_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_211_p0 = reg_222;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_211_p0 = select_ln935_reg_2476;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_211_p1 = select_ln935_2_reg_2557;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_211_p1 = select_ln935_3_reg_2511;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_211_p1 = 32'd0;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_211_p1 = get_trapezoid_edgestrapezoid_edges_load_reg_2421;
    end else begin
        grp_fu_211_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_216_p0 = bitcast_ln351_reg_2562;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_216_p0 = v_assign_reg_2568;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_216_p0 = reg_222;
        end else begin
            grp_fu_216_p0 = 'bx;
        end
    end else begin
        grp_fu_216_p0 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln1495_1_reg_2654) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        lbVal_constprop_o = select_ln585_3_fu_2387_p3;
    end else begin
        lbVal_constprop_o = lbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd1 == and_ln1495_1_reg_2654) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        lbVal_constprop_o_ap_vld = 1'b1;
    end else begin
        lbVal_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_01001) & (1'd1 == and_ln1495_1_fu_2115_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        left_bound = j_reg_198_pp0_iter1_reg;
    end else begin
        left_bound = left_bound_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln1495_1_fu_2115_p2) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        left_bound_ap_vld = 1'b1;
    end else begin
        left_bound_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_points_ce0 = 1'b1;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        points_ce0 = 1'b1;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (1'd1 == and_ln1495_3_reg_2609) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        rbVal_constprop_o = select_ln585_7_fu_2023_p3;
    end else begin
        rbVal_constprop_o = rbVal_constprop_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln1495_3_reg_2609) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        rbVal_constprop_o_ap_vld = 1'b1;
    end else begin
        rbVal_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln270_reg_2431 == 1'd1)) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln270_reg_2431 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1300_p2 = (12'd1075 - zext_ln455_1_fu_1260_p1);

assign F2_2_fu_2187_p2 = (12'd1075 - zext_ln455_2_fu_2147_p1);

assign F2_3_fu_1823_p2 = (12'd1075 - zext_ln455_3_fu_1783_p1);

assign F2_fu_1599_p2 = (12'd1075 - zext_ln455_fu_1559_p1);

assign LD_3_fu_1211_p1 = p_Result_74_fu_1199_p5[31:0];

assign LD_5_fu_886_p1 = p_Result_81_fu_874_p5[31:0];

assign LD_fu_575_p1 = p_Result_69_fu_563_p5[31:0];

assign add_ln270_fu_901_p2 = (j_reg_198 + 32'd1);

assign add_ln271_fu_258_p2 = (shl_ln271_1_fu_250_p3 + shl_ln_reg_2426);

assign add_ln581_1_fu_1312_p2 = ($signed(F2_1_fu_1300_p2) + $signed(12'd4076));

assign add_ln581_2_fu_2199_p2 = ($signed(F2_2_fu_2187_p2) + $signed(12'd4076));

assign add_ln581_3_fu_1835_p2 = ($signed(F2_3_fu_1823_p2) + $signed(12'd4076));

assign add_ln581_fu_1611_p2 = ($signed(F2_fu_1599_p2) + $signed(12'd4076));

assign add_ln958_3_fu_1091_p2 = ($signed(sub_ln944_3_fu_957_p2) + $signed(32'd4294967271));

assign add_ln958_4_fu_774_p2 = ($signed(sub_ln944_4_fu_640_p2) + $signed(32'd4294967271));

assign add_ln958_fu_484_p2 = ($signed(sub_ln944_reg_2455) + $signed(32'd4294967271));

assign add_ln964_3_fu_1186_p2 = (sub_ln964_3_fu_1181_p2 + select_ln943_3_fu_1174_p3);

assign add_ln964_4_fu_861_p2 = (sub_ln964_4_fu_856_p2 + select_ln943_4_fu_849_p3);

assign add_ln964_fu_550_p2 = (sub_ln964_fu_545_p2 + select_ln943_fu_537_p3);

assign and_ln1495_1_fu_2115_p2 = (xor_ln571_fu_2060_p2 & and_ln1495_fu_2109_p2);

assign and_ln1495_2_fu_1523_p2 = (tmp_56_fu_1515_p3 & or_ln603_5_reg_2604);

assign and_ln1495_3_fu_1528_p2 = (xor_ln571_1_reg_2584 & and_ln1495_2_fu_1523_p2);

assign and_ln1495_fu_2109_p2 = (select_ln603_5_fu_2103_p3 & or_ln603_2_fu_2075_p2);

assign and_ln581_1_fu_1406_p2 = (xor_ln582_1_fu_1400_p2 & icmp_ln581_1_fu_1306_p2);

assign and_ln581_2_fu_2303_p2 = (xor_ln582_2_fu_2297_p2 & icmp_ln581_2_fu_2193_p2);

assign and_ln581_3_fu_1939_p2 = (xor_ln582_3_fu_1933_p2 & icmp_ln581_3_fu_1829_p2);

assign and_ln581_fu_1685_p2 = (xor_ln582_fu_1679_p2 & icmp_ln581_fu_1605_p2);

assign and_ln582_1_fu_1388_p2 = (xor_ln571_1_fu_1382_p2 & icmp_ln582_1_fu_1332_p2);

assign and_ln582_2_fu_2285_p2 = (xor_ln571_2_fu_2279_p2 & icmp_ln582_2_fu_2223_p2);

assign and_ln582_3_fu_1921_p2 = (xor_ln571_3_fu_1915_p2 & icmp_ln582_3_fu_1859_p2);

assign and_ln582_fu_2065_p2 = (xor_ln571_fu_2060_p2 & icmp_ln582_reg_2628);

assign and_ln585_1_fu_1703_p2 = (xor_ln585_fu_1697_p2 & and_ln581_fu_1685_p2);

assign and_ln585_2_fu_1412_p2 = (icmp_ln585_1_fu_1342_p2 & and_ln581_1_fu_1406_p2);

assign and_ln585_3_fu_1424_p2 = (xor_ln585_1_fu_1418_p2 & and_ln581_1_fu_1406_p2);

assign and_ln585_4_fu_2309_p2 = (icmp_ln585_2_fu_2233_p2 & and_ln581_2_fu_2303_p2);

assign and_ln585_5_fu_2339_p2 = (xor_ln585_2_fu_2333_p2 & and_ln581_2_fu_2303_p2);

assign and_ln585_6_fu_1945_p2 = (icmp_ln585_3_fu_1869_p2 & and_ln581_3_fu_1939_p2);

assign and_ln585_7_fu_1975_p2 = (xor_ln585_3_fu_1969_p2 & and_ln581_3_fu_1939_p2);

assign and_ln585_fu_1691_p2 = (icmp_ln585_fu_1637_p2 & and_ln581_fu_1685_p2);

assign and_ln603_1_fu_1442_p2 = (xor_ln581_1_fu_1436_p2 & icmp_ln603_1_fu_1358_p2);

assign and_ln603_2_fu_2327_p2 = (xor_ln581_2_fu_2321_p2 & icmp_ln603_2_fu_2249_p2);

assign and_ln603_3_fu_1963_p2 = (xor_ln581_3_fu_1957_p2 & icmp_ln603_3_fu_1885_p2);

assign and_ln603_fu_1721_p2 = (xor_ln581_fu_1715_p2 & icmp_ln603_fu_1653_p2);

assign and_ln949_10_fu_700_p2 = (or_ln949_6_fu_694_p2 & m_46_fu_614_p3);

assign and_ln949_6_fu_440_p2 = (xor_ln949_fu_420_p2 & p_Result_68_fu_426_p3);

assign and_ln949_7_fu_1057_p2 = (xor_ln949_3_fu_1037_p2 & p_Result_73_fu_1043_p3);

assign and_ln949_8_fu_740_p2 = (xor_ln949_4_fu_720_p2 & p_Result_80_fu_726_p3);

assign and_ln949_9_fu_1017_p2 = (or_ln949_fu_1011_p2 & m_44_fu_931_p3);

assign and_ln949_fu_400_p2 = (or_ln949_5_fu_394_p2 & m_42_fu_314_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln586_1_fu_1372_p2 = $signed(man_V_7_fu_1286_p3) >>> zext_ln586_1_fu_1368_p1;

assign ashr_ln586_2_fu_2263_p2 = $signed(man_V_10_fu_2173_p3) >>> zext_ln586_2_fu_2259_p1;

assign ashr_ln586_3_fu_1899_p2 = $signed(man_V_13_fu_1809_p3) >>> zext_ln586_3_fu_1895_p1;

assign ashr_ln586_fu_1667_p2 = $signed(man_V_4_fu_1585_p3) >>> zext_ln586_fu_1663_p1;

assign bitcast_ln351_2_fu_1158_p1 = zext_ln368_1_fu_1155_p1;

assign bitcast_ln351_fu_1229_p1 = zext_ln368_fu_1226_p1;

assign bitcast_ln702_3_fu_1477_p1 = reg_222;

assign bitcast_ln702_fu_2043_p1 = v_assign_reg_2568;

assign bitcast_ln744_2_fu_1215_p1 = LD_3_fu_1211_p1;

assign bitcast_ln744_3_fu_890_p1 = LD_5_fu_886_p1;

assign bitcast_ln744_fu_579_p1 = LD_fu_575_p1;

assign data_V_2_fu_838_p1 = grp_fu_211_p2;

assign data_V_fu_1163_p1 = grp_fu_211_p2;

assign exp_tmp_1_fu_1250_p4 = {{ireg_1_fu_1234_p1[62:52]}};

assign exp_tmp_2_fu_2137_p4 = {{ireg_2_fu_2121_p1[62:52]}};

assign exp_tmp_3_fu_1773_p4 = {{ireg_3_fu_1757_p1[62:52]}};

assign exp_tmp_fu_1549_p4 = {{ireg_fu_1533_p1[62:52]}};

assign get_trapezoid_edgestrapezoid_edges_address0 = idxprom_i_fu_228_p1;

assign icmp_ln270_fu_241_p2 = ((ap_phi_mux_j_phi_fu_203_p4 == num_points_load_reg_2416) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1294_p2 = ((trunc_ln555_1_fu_1238_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_2181_p2 = ((trunc_ln555_2_fu_2125_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_1817_p2 = ((trunc_ln555_3_fu_1761_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1593_p2 = ((trunc_ln555_fu_1537_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1306_p2 = (($signed(F2_1_fu_1300_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_2193_p2 = (($signed(F2_2_fu_2187_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_3_fu_1829_p2 = (($signed(F2_3_fu_1823_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1605_p2 = (($signed(F2_fu_1599_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1332_p2 = ((F2_1_fu_1300_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_2223_p2 = ((F2_2_fu_2187_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_3_fu_1859_p2 = ((F2_3_fu_1823_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1631_p2 = ((F2_fu_1599_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1342_p2 = ((sh_amt_1_fu_1324_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_2233_p2 = ((sh_amt_2_fu_2211_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_3_fu_1869_p2 = ((sh_amt_3_fu_1847_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1637_p2 = ((sh_amt_fu_1623_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1358_p2 = ((tmp_49_fu_1348_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_2249_p2 = ((tmp_55_fu_2239_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_3_fu_1885_p2 = ((tmp_58_fu_1875_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1653_p2 = ((tmp_42_fu_1643_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_2_fu_911_p2 = ((ap_sig_allocacmp_p_Val2_s == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_3_fu_594_p2 = ((ap_sig_allocacmp_p_Val2_35 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_294_p2 = ((z_bits_fu_290_p1 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_3_fu_979_p2 = (($signed(tmp_38_fu_969_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_4_fu_662_p2 = (($signed(tmp_45_fu_652_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_362_p2 = (($signed(tmp_fu_352_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_3_fu_1023_p2 = ((and_ln949_9_fu_1017_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_4_fu_706_p2 = ((and_ln949_10_fu_700_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_406_p2 = ((and_ln949_fu_400_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_3_fu_1051_p2 = (($signed(lsb_index_3_fu_963_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_4_fu_734_p2 = (($signed(lsb_index_4_fu_646_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_434_p2 = (($signed(lsb_index_fu_346_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_fu_228_p1 = i_dout;

assign ireg_1_fu_1234_p1 = grp_fu_216_p1;

assign ireg_2_fu_2121_p1 = grp_fu_216_p1;

assign ireg_3_fu_1757_p1 = grp_fu_219_p1;

assign ireg_fu_1533_p1 = grp_fu_216_p1;


always @ (p_Result_72_fu_939_p4) begin
    if (p_Result_72_fu_939_p4[0] == 1'b1) begin
        l_3_fu_949_p3 = 32'd0;
    end else if (p_Result_72_fu_939_p4[1] == 1'b1) begin
        l_3_fu_949_p3 = 32'd1;
    end else if (p_Result_72_fu_939_p4[2] == 1'b1) begin
        l_3_fu_949_p3 = 32'd2;
    end else if (p_Result_72_fu_939_p4[3] == 1'b1) begin
        l_3_fu_949_p3 = 32'd3;
    end else if (p_Result_72_fu_939_p4[4] == 1'b1) begin
        l_3_fu_949_p3 = 32'd4;
    end else if (p_Result_72_fu_939_p4[5] == 1'b1) begin
        l_3_fu_949_p3 = 32'd5;
    end else if (p_Result_72_fu_939_p4[6] == 1'b1) begin
        l_3_fu_949_p3 = 32'd6;
    end else if (p_Result_72_fu_939_p4[7] == 1'b1) begin
        l_3_fu_949_p3 = 32'd7;
    end else if (p_Result_72_fu_939_p4[8] == 1'b1) begin
        l_3_fu_949_p3 = 32'd8;
    end else if (p_Result_72_fu_939_p4[9] == 1'b1) begin
        l_3_fu_949_p3 = 32'd9;
    end else if (p_Result_72_fu_939_p4[10] == 1'b1) begin
        l_3_fu_949_p3 = 32'd10;
    end else if (p_Result_72_fu_939_p4[11] == 1'b1) begin
        l_3_fu_949_p3 = 32'd11;
    end else if (p_Result_72_fu_939_p4[12] == 1'b1) begin
        l_3_fu_949_p3 = 32'd12;
    end else if (p_Result_72_fu_939_p4[13] == 1'b1) begin
        l_3_fu_949_p3 = 32'd13;
    end else if (p_Result_72_fu_939_p4[14] == 1'b1) begin
        l_3_fu_949_p3 = 32'd14;
    end else if (p_Result_72_fu_939_p4[15] == 1'b1) begin
        l_3_fu_949_p3 = 32'd15;
    end else if (p_Result_72_fu_939_p4[16] == 1'b1) begin
        l_3_fu_949_p3 = 32'd16;
    end else if (p_Result_72_fu_939_p4[17] == 1'b1) begin
        l_3_fu_949_p3 = 32'd17;
    end else if (p_Result_72_fu_939_p4[18] == 1'b1) begin
        l_3_fu_949_p3 = 32'd18;
    end else if (p_Result_72_fu_939_p4[19] == 1'b1) begin
        l_3_fu_949_p3 = 32'd19;
    end else if (p_Result_72_fu_939_p4[20] == 1'b1) begin
        l_3_fu_949_p3 = 32'd20;
    end else if (p_Result_72_fu_939_p4[21] == 1'b1) begin
        l_3_fu_949_p3 = 32'd21;
    end else if (p_Result_72_fu_939_p4[22] == 1'b1) begin
        l_3_fu_949_p3 = 32'd22;
    end else if (p_Result_72_fu_939_p4[23] == 1'b1) begin
        l_3_fu_949_p3 = 32'd23;
    end else if (p_Result_72_fu_939_p4[24] == 1'b1) begin
        l_3_fu_949_p3 = 32'd24;
    end else if (p_Result_72_fu_939_p4[25] == 1'b1) begin
        l_3_fu_949_p3 = 32'd25;
    end else if (p_Result_72_fu_939_p4[26] == 1'b1) begin
        l_3_fu_949_p3 = 32'd26;
    end else if (p_Result_72_fu_939_p4[27] == 1'b1) begin
        l_3_fu_949_p3 = 32'd27;
    end else if (p_Result_72_fu_939_p4[28] == 1'b1) begin
        l_3_fu_949_p3 = 32'd28;
    end else if (p_Result_72_fu_939_p4[29] == 1'b1) begin
        l_3_fu_949_p3 = 32'd29;
    end else if (p_Result_72_fu_939_p4[30] == 1'b1) begin
        l_3_fu_949_p3 = 32'd30;
    end else if (p_Result_72_fu_939_p4[31] == 1'b1) begin
        l_3_fu_949_p3 = 32'd31;
    end else begin
        l_3_fu_949_p3 = 32'd32;
    end
end


always @ (p_Result_79_fu_622_p4) begin
    if (p_Result_79_fu_622_p4[0] == 1'b1) begin
        l_4_fu_632_p3 = 32'd0;
    end else if (p_Result_79_fu_622_p4[1] == 1'b1) begin
        l_4_fu_632_p3 = 32'd1;
    end else if (p_Result_79_fu_622_p4[2] == 1'b1) begin
        l_4_fu_632_p3 = 32'd2;
    end else if (p_Result_79_fu_622_p4[3] == 1'b1) begin
        l_4_fu_632_p3 = 32'd3;
    end else if (p_Result_79_fu_622_p4[4] == 1'b1) begin
        l_4_fu_632_p3 = 32'd4;
    end else if (p_Result_79_fu_622_p4[5] == 1'b1) begin
        l_4_fu_632_p3 = 32'd5;
    end else if (p_Result_79_fu_622_p4[6] == 1'b1) begin
        l_4_fu_632_p3 = 32'd6;
    end else if (p_Result_79_fu_622_p4[7] == 1'b1) begin
        l_4_fu_632_p3 = 32'd7;
    end else if (p_Result_79_fu_622_p4[8] == 1'b1) begin
        l_4_fu_632_p3 = 32'd8;
    end else if (p_Result_79_fu_622_p4[9] == 1'b1) begin
        l_4_fu_632_p3 = 32'd9;
    end else if (p_Result_79_fu_622_p4[10] == 1'b1) begin
        l_4_fu_632_p3 = 32'd10;
    end else if (p_Result_79_fu_622_p4[11] == 1'b1) begin
        l_4_fu_632_p3 = 32'd11;
    end else if (p_Result_79_fu_622_p4[12] == 1'b1) begin
        l_4_fu_632_p3 = 32'd12;
    end else if (p_Result_79_fu_622_p4[13] == 1'b1) begin
        l_4_fu_632_p3 = 32'd13;
    end else if (p_Result_79_fu_622_p4[14] == 1'b1) begin
        l_4_fu_632_p3 = 32'd14;
    end else if (p_Result_79_fu_622_p4[15] == 1'b1) begin
        l_4_fu_632_p3 = 32'd15;
    end else if (p_Result_79_fu_622_p4[16] == 1'b1) begin
        l_4_fu_632_p3 = 32'd16;
    end else if (p_Result_79_fu_622_p4[17] == 1'b1) begin
        l_4_fu_632_p3 = 32'd17;
    end else if (p_Result_79_fu_622_p4[18] == 1'b1) begin
        l_4_fu_632_p3 = 32'd18;
    end else if (p_Result_79_fu_622_p4[19] == 1'b1) begin
        l_4_fu_632_p3 = 32'd19;
    end else if (p_Result_79_fu_622_p4[20] == 1'b1) begin
        l_4_fu_632_p3 = 32'd20;
    end else if (p_Result_79_fu_622_p4[21] == 1'b1) begin
        l_4_fu_632_p3 = 32'd21;
    end else if (p_Result_79_fu_622_p4[22] == 1'b1) begin
        l_4_fu_632_p3 = 32'd22;
    end else if (p_Result_79_fu_622_p4[23] == 1'b1) begin
        l_4_fu_632_p3 = 32'd23;
    end else if (p_Result_79_fu_622_p4[24] == 1'b1) begin
        l_4_fu_632_p3 = 32'd24;
    end else if (p_Result_79_fu_622_p4[25] == 1'b1) begin
        l_4_fu_632_p3 = 32'd25;
    end else if (p_Result_79_fu_622_p4[26] == 1'b1) begin
        l_4_fu_632_p3 = 32'd26;
    end else if (p_Result_79_fu_622_p4[27] == 1'b1) begin
        l_4_fu_632_p3 = 32'd27;
    end else if (p_Result_79_fu_622_p4[28] == 1'b1) begin
        l_4_fu_632_p3 = 32'd28;
    end else if (p_Result_79_fu_622_p4[29] == 1'b1) begin
        l_4_fu_632_p3 = 32'd29;
    end else if (p_Result_79_fu_622_p4[30] == 1'b1) begin
        l_4_fu_632_p3 = 32'd30;
    end else if (p_Result_79_fu_622_p4[31] == 1'b1) begin
        l_4_fu_632_p3 = 32'd31;
    end else begin
        l_4_fu_632_p3 = 32'd32;
    end
end


always @ (p_Result_67_fu_322_p4) begin
    if (p_Result_67_fu_322_p4[0] == 1'b1) begin
        l_fu_332_p3 = 32'd0;
    end else if (p_Result_67_fu_322_p4[1] == 1'b1) begin
        l_fu_332_p3 = 32'd1;
    end else if (p_Result_67_fu_322_p4[2] == 1'b1) begin
        l_fu_332_p3 = 32'd2;
    end else if (p_Result_67_fu_322_p4[3] == 1'b1) begin
        l_fu_332_p3 = 32'd3;
    end else if (p_Result_67_fu_322_p4[4] == 1'b1) begin
        l_fu_332_p3 = 32'd4;
    end else if (p_Result_67_fu_322_p4[5] == 1'b1) begin
        l_fu_332_p3 = 32'd5;
    end else if (p_Result_67_fu_322_p4[6] == 1'b1) begin
        l_fu_332_p3 = 32'd6;
    end else if (p_Result_67_fu_322_p4[7] == 1'b1) begin
        l_fu_332_p3 = 32'd7;
    end else if (p_Result_67_fu_322_p4[8] == 1'b1) begin
        l_fu_332_p3 = 32'd8;
    end else if (p_Result_67_fu_322_p4[9] == 1'b1) begin
        l_fu_332_p3 = 32'd9;
    end else if (p_Result_67_fu_322_p4[10] == 1'b1) begin
        l_fu_332_p3 = 32'd10;
    end else if (p_Result_67_fu_322_p4[11] == 1'b1) begin
        l_fu_332_p3 = 32'd11;
    end else if (p_Result_67_fu_322_p4[12] == 1'b1) begin
        l_fu_332_p3 = 32'd12;
    end else if (p_Result_67_fu_322_p4[13] == 1'b1) begin
        l_fu_332_p3 = 32'd13;
    end else if (p_Result_67_fu_322_p4[14] == 1'b1) begin
        l_fu_332_p3 = 32'd14;
    end else if (p_Result_67_fu_322_p4[15] == 1'b1) begin
        l_fu_332_p3 = 32'd15;
    end else if (p_Result_67_fu_322_p4[16] == 1'b1) begin
        l_fu_332_p3 = 32'd16;
    end else if (p_Result_67_fu_322_p4[17] == 1'b1) begin
        l_fu_332_p3 = 32'd17;
    end else if (p_Result_67_fu_322_p4[18] == 1'b1) begin
        l_fu_332_p3 = 32'd18;
    end else if (p_Result_67_fu_322_p4[19] == 1'b1) begin
        l_fu_332_p3 = 32'd19;
    end else if (p_Result_67_fu_322_p4[20] == 1'b1) begin
        l_fu_332_p3 = 32'd20;
    end else if (p_Result_67_fu_322_p4[21] == 1'b1) begin
        l_fu_332_p3 = 32'd21;
    end else if (p_Result_67_fu_322_p4[22] == 1'b1) begin
        l_fu_332_p3 = 32'd22;
    end else if (p_Result_67_fu_322_p4[23] == 1'b1) begin
        l_fu_332_p3 = 32'd23;
    end else if (p_Result_67_fu_322_p4[24] == 1'b1) begin
        l_fu_332_p3 = 32'd24;
    end else if (p_Result_67_fu_322_p4[25] == 1'b1) begin
        l_fu_332_p3 = 32'd25;
    end else if (p_Result_67_fu_322_p4[26] == 1'b1) begin
        l_fu_332_p3 = 32'd26;
    end else if (p_Result_67_fu_322_p4[27] == 1'b1) begin
        l_fu_332_p3 = 32'd27;
    end else if (p_Result_67_fu_322_p4[28] == 1'b1) begin
        l_fu_332_p3 = 32'd28;
    end else if (p_Result_67_fu_322_p4[29] == 1'b1) begin
        l_fu_332_p3 = 32'd29;
    end else if (p_Result_67_fu_322_p4[30] == 1'b1) begin
        l_fu_332_p3 = 32'd30;
    end else if (p_Result_67_fu_322_p4[31] == 1'b1) begin
        l_fu_332_p3 = 32'd31;
    end else begin
        l_fu_332_p3 = 32'd32;
    end
end

assign lsb_index_3_fu_963_p2 = ($signed(sub_ln944_3_fu_957_p2) + $signed(32'd4294967272));

assign lsb_index_4_fu_646_p2 = ($signed(sub_ln944_4_fu_640_p2) + $signed(32'd4294967272));

assign lsb_index_fu_346_p2 = ($signed(sub_ln944_fu_340_p2) + $signed(32'd4294967272));

assign lshr_ln947_3_fu_999_p2 = 32'd4294967295 >> zext_ln947_3_fu_995_p1;

assign lshr_ln947_4_fu_682_p2 = 32'd4294967295 >> zext_ln947_4_fu_678_p1;

assign lshr_ln947_fu_382_p2 = 32'd4294967295 >> zext_ln947_fu_378_p1;

assign lshr_ln958_3_fu_1101_p2 = zext_ln959_6_fu_1063_p1 >> zext_ln958_3_fu_1097_p1;

assign lshr_ln958_4_fu_784_p2 = zext_ln959_8_fu_746_p1 >> zext_ln958_4_fu_780_p1;

assign lshr_ln958_fu_493_p2 = zext_ln959_fu_466_p1 >> zext_ln958_fu_489_p1;

assign lshr_ln_fu_263_p4 = {{add_ln271_fu_258_p2[15:13]}};

assign m_25_fu_509_p2 = (m_fu_499_p3 + zext_ln961_fu_506_p1);

assign m_29_fu_1115_p3 = ((icmp_ln958_3_fu_1051_p2[0:0] == 1'b1) ? lshr_ln958_3_fu_1101_p2 : shl_ln959_3_fu_1077_p2);

assign m_30_fu_1127_p2 = (m_29_fu_1115_p3 + zext_ln961_3_fu_1123_p1);

assign m_33_fu_798_p3 = ((icmp_ln958_4_fu_734_p2[0:0] == 1'b1) ? lshr_ln958_4_fu_784_p2 : shl_ln959_4_fu_760_p2);

assign m_34_fu_810_p2 = (m_33_fu_798_p3 + zext_ln961_4_fu_806_p1);

assign m_42_fu_314_p3 = ((p_Result_66_fu_300_p3[0:0] == 1'b1) ? tmp_V_fu_308_p2 : z_bits_fu_290_p1);

assign m_43_fu_515_p4 = {{m_25_fu_509_p2[63:1]}};

assign m_44_fu_931_p3 = ((p_Result_71_fu_917_p3[0:0] == 1'b1) ? tmp_V_8_fu_925_p2 : ap_sig_allocacmp_p_Val2_s);

assign m_46_fu_614_p3 = ((p_Result_78_fu_600_p3[0:0] == 1'b1) ? tmp_V_11_fu_608_p2 : ap_sig_allocacmp_p_Val2_35);

assign m_fu_499_p3 = ((icmp_ln958_reg_2461[0:0] == 1'b1) ? lshr_ln958_fu_493_p2 : shl_ln959_fu_478_p2);

assign man_V_10_fu_2173_p3 = ((p_Result_84_fu_2129_p3[0:0] == 1'b1) ? man_V_9_fu_2167_p2 : zext_ln569_2_fu_2163_p1);

assign man_V_12_fu_1803_p2 = (54'd0 - zext_ln569_3_fu_1799_p1);

assign man_V_13_fu_1809_p3 = ((p_Result_86_fu_1765_p3[0:0] == 1'b1) ? man_V_12_fu_1803_p2 : zext_ln569_3_fu_1799_p1);

assign man_V_3_fu_1579_p2 = (54'd0 - zext_ln569_fu_1575_p1);

assign man_V_4_fu_1585_p3 = ((p_Result_75_fu_1541_p3[0:0] == 1'b1) ? man_V_3_fu_1579_p2 : zext_ln569_fu_1575_p1);

assign man_V_6_fu_1280_p2 = (54'd0 - zext_ln569_1_fu_1276_p1);

assign man_V_7_fu_1286_p3 = ((p_Result_82_fu_1242_p3[0:0] == 1'b1) ? man_V_6_fu_1280_p2 : zext_ln569_1_fu_1276_p1);

assign man_V_9_fu_2167_p2 = (54'd0 - zext_ln569_2_fu_2163_p1);

assign num_points_address0 = idxprom_i_fu_228_p1;

assign or_ln581_1_fu_1430_p2 = (or_ln582_1_fu_1394_p2 | icmp_ln581_1_fu_1306_p2);

assign or_ln581_2_fu_2315_p2 = (or_ln582_2_fu_2291_p2 | icmp_ln581_2_fu_2193_p2);

assign or_ln581_3_fu_1951_p2 = (or_ln582_3_fu_1927_p2 | icmp_ln581_3_fu_1829_p2);

assign or_ln581_fu_1709_p2 = (or_ln582_fu_1673_p2 | icmp_ln581_fu_1605_p2);

assign or_ln582_1_fu_1394_p2 = (icmp_ln582_1_fu_1332_p2 | icmp_ln571_1_fu_1294_p2);

assign or_ln582_2_fu_2291_p2 = (icmp_ln582_2_fu_2223_p2 | icmp_ln571_2_fu_2181_p2);

assign or_ln582_3_fu_1927_p2 = (icmp_ln582_3_fu_1859_p2 | icmp_ln571_3_fu_1817_p2);

assign or_ln582_fu_1673_p2 = (icmp_ln582_fu_1631_p2 | icmp_ln571_fu_1593_p2);

assign or_ln585_1_fu_2359_p2 = (and_ln603_2_fu_2327_p2 | and_ln585_4_fu_2309_p2);

assign or_ln585_2_fu_2381_p2 = (or_ln585_fu_2345_p2 | or_ln585_1_fu_2359_p2);

assign or_ln585_3_fu_1981_p2 = (icmp_ln571_3_fu_1817_p2 | and_ln585_7_fu_1975_p2);

assign or_ln585_4_fu_1995_p2 = (and_ln603_3_fu_1963_p2 | and_ln585_6_fu_1945_p2);

assign or_ln585_5_fu_2017_p2 = (or_ln585_4_fu_1995_p2 | or_ln585_3_fu_1981_p2);

assign or_ln585_fu_2345_p2 = (icmp_ln571_2_fu_2181_p2 | and_ln585_5_fu_2339_p2);

assign or_ln603_1_fu_2070_p2 = (and_ln585_reg_2633 | and_ln582_fu_2065_p2);

assign or_ln603_2_fu_2075_p2 = (or_ln603_reg_2643 | or_ln603_1_fu_2070_p2);

assign or_ln603_3_fu_1448_p2 = (and_ln603_1_fu_1442_p2 | and_ln585_3_fu_1424_p2);

assign or_ln603_4_fu_1462_p2 = (and_ln585_2_fu_1412_p2 | and_ln582_1_fu_1388_p2);

assign or_ln603_5_fu_1468_p2 = (or_ln603_4_fu_1462_p2 | or_ln603_3_fu_1448_p2);

assign or_ln603_fu_1727_p2 = (and_ln603_fu_1721_p2 | and_ln585_1_fu_1703_p2);

assign or_ln949_5_fu_394_p2 = (shl_ln949_fu_388_p2 | lshr_ln947_fu_382_p2);

assign or_ln949_6_fu_694_p2 = (shl_ln949_4_fu_688_p2 | lshr_ln947_4_fu_682_p2);

assign or_ln949_fu_1011_p2 = (shl_ln949_3_fu_1005_p2 | lshr_ln947_3_fu_999_p2);

assign p_Result_66_fu_300_p3 = points_q0[32'd31];

integer ap_tvar_int_0;

always @ (m_42_fu_314_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_67_fu_322_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_67_fu_322_p4[ap_tvar_int_0] = m_42_fu_314_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_68_fu_426_p3 = m_42_fu_314_p3[lsb_index_fu_346_p2];

assign p_Result_69_fu_563_p5 = {{zext_ln962_fu_525_p1[63:32]}, {tmp_8_i_fu_556_p3}, {zext_ln962_fu_525_p1[22:0]}};

assign p_Result_70_fu_1167_p1 = data_V_fu_1163_p1[30:0];

assign p_Result_71_fu_917_p3 = ap_sig_allocacmp_p_Val2_s[32'd31];

integer ap_tvar_int_1;

always @ (m_44_fu_931_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_72_fu_939_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_72_fu_939_p4[ap_tvar_int_1] = m_44_fu_931_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_73_fu_1043_p3 = m_44_fu_931_p3[lsb_index_3_fu_963_p2];

assign p_Result_74_fu_1199_p5 = {{zext_ln962_3_fu_1171_p1[63:32]}, {tmp_9_i_fu_1192_p3}, {zext_ln962_3_fu_1171_p1[22:0]}};

assign p_Result_75_fu_1541_p3 = ireg_fu_1533_p1[32'd63];

assign p_Result_76_fu_1567_p3 = {{1'd1}, {trunc_ln565_fu_1563_p1}};

assign p_Result_77_fu_842_p1 = data_V_2_fu_838_p1[30:0];

assign p_Result_78_fu_600_p3 = ap_sig_allocacmp_p_Val2_35[32'd31];

integer ap_tvar_int_2;

always @ (m_46_fu_614_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_79_fu_622_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_79_fu_622_p4[ap_tvar_int_2] = m_46_fu_614_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_80_fu_726_p3 = m_46_fu_614_p3[lsb_index_4_fu_646_p2];

assign p_Result_81_fu_874_p5 = {{zext_ln962_4_fu_846_p1[63:32]}, {tmp_12_i_fu_867_p3}, {zext_ln962_4_fu_846_p1[22:0]}};

assign p_Result_82_fu_1242_p3 = ireg_1_fu_1234_p1[32'd63];

assign p_Result_83_fu_1268_p3 = {{1'd1}, {trunc_ln565_1_fu_1264_p1}};

assign p_Result_84_fu_2129_p3 = ireg_2_fu_2121_p1[32'd63];

assign p_Result_85_fu_2155_p3 = {{1'd1}, {trunc_ln565_2_fu_2151_p1}};

assign p_Result_86_fu_1765_p3 = ireg_3_fu_1757_p1[32'd63];

assign p_Result_87_fu_1791_p3 = {{1'd1}, {trunc_ln565_3_fu_1787_p1}};

assign p_Result_s_fu_529_p3 = m_25_fu_509_p2[32'd25];

assign points_address0 = zext_ln271_fu_285_p1;

assign select_ln585_1_fu_2365_p3 = ((and_ln582_2_fu_2285_p2[0:0] == 1'b1) ? trunc_ln583_2_fu_2229_p1 : 32'd0);

assign select_ln585_2_fu_2373_p3 = ((or_ln585_fu_2345_p2[0:0] == 1'b1) ? 32'd0 : select_ln585_fu_2351_p3);

assign select_ln585_3_fu_2387_p3 = ((or_ln585_2_fu_2381_p2[0:0] == 1'b1) ? select_ln585_2_fu_2373_p3 : select_ln585_1_fu_2365_p3);

assign select_ln585_4_fu_1987_p3 = ((and_ln603_3_fu_1963_p2[0:0] == 1'b1) ? shl_ln604_3_fu_1909_p2 : trunc_ln586_7_fu_1905_p1);

assign select_ln585_5_fu_2001_p3 = ((and_ln582_3_fu_1921_p2[0:0] == 1'b1) ? trunc_ln583_3_fu_1865_p1 : 32'd0);

assign select_ln585_6_fu_2009_p3 = ((or_ln585_3_fu_1981_p2[0:0] == 1'b1) ? 32'd0 : select_ln585_4_fu_1987_p3);

assign select_ln585_7_fu_2023_p3 = ((or_ln585_5_fu_2017_p2[0:0] == 1'b1) ? select_ln585_6_fu_2009_p3 : select_ln585_5_fu_2001_p3);

assign select_ln585_fu_2351_p3 = ((and_ln603_2_fu_2327_p2[0:0] == 1'b1) ? shl_ln604_2_fu_2273_p2 : trunc_ln586_5_fu_2269_p1);

assign select_ln588_1_fu_2088_p3 = ((tmp_43_fu_2046_p3[0:0] == 1'b1) ? 1'd1 : 1'd0);

assign select_ln588_fu_1489_p3 = ((tmp_50_fu_1481_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_1_fu_1454_p3 = ((and_ln585_2_fu_1412_p2[0:0] == 1'b1) ? trunc_ln586_3_fu_1378_p1 : trunc_ln583_1_fu_1338_p1);

assign select_ln603_2_fu_1509_p3 = ((or_ln603_3_reg_2594[0:0] == 1'b1) ? select_ln603_fu_1502_p3 : select_ln603_1_reg_2599);

assign select_ln603_3_fu_2096_p3 = ((and_ln603_reg_2638[0:0] == 1'b1) ? tmp_51_fu_2080_p3 : select_ln588_1_fu_2088_p3);

assign select_ln603_4_fu_1749_p3 = ((and_ln585_fu_1691_p2[0:0] == 1'b1) ? tmp_52_fu_1733_p3 : tmp_53_fu_1741_p3);

assign select_ln603_5_fu_2103_p3 = ((or_ln603_reg_2643[0:0] == 1'b1) ? select_ln603_3_fu_2096_p3 : select_ln603_4_reg_2649);

assign select_ln603_fu_1502_p3 = ((and_ln603_1_reg_2589[0:0] == 1'b1) ? shl_ln604_1_fu_1497_p2 : select_ln588_fu_1489_p3);

assign select_ln935_2_fu_1219_p3 = ((icmp_ln935_2_reg_2521[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_2_fu_1215_p1);

assign select_ln935_3_fu_894_p3 = ((icmp_ln935_3_reg_2481[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_3_fu_890_p1);

assign select_ln935_fu_583_p3 = ((icmp_ln935_reg_2440[0:0] == 1'b1) ? bitcast_ln744_fu_579_p1 : 32'd0);

assign select_ln943_3_fu_1174_p3 = ((p_Result_40_reg_2536[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_4_fu_849_p3 = ((p_Result_48_reg_2496[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_537_p3 = ((p_Result_s_fu_529_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_3_fu_1083_p3 = ((icmp_ln946_3_fu_979_p2[0:0] == 1'b1) ? icmp_ln949_3_fu_1023_p2 : p_Result_73_fu_1043_p3);

assign select_ln946_4_fu_766_p3 = ((icmp_ln946_4_fu_662_p2[0:0] == 1'b1) ? icmp_ln949_4_fu_706_p2 : p_Result_80_fu_726_p3);

assign select_ln946_fu_446_p3 = ((icmp_ln946_fu_362_p2[0:0] == 1'b1) ? icmp_ln949_fu_406_p2 : p_Result_68_fu_426_p3);

assign select_ln958_7_fu_1107_p3 = ((icmp_ln958_3_fu_1051_p2[0:0] == 1'b1) ? select_ln946_3_fu_1083_p3 : and_ln949_7_fu_1057_p2);

assign select_ln958_9_fu_790_p3 = ((icmp_ln958_4_fu_734_p2[0:0] == 1'b1) ? select_ln946_4_fu_766_p3 : and_ln949_8_fu_740_p2);

assign select_ln958_fu_454_p3 = ((icmp_ln958_fu_434_p2[0:0] == 1'b1) ? select_ln946_fu_446_p3 : and_ln949_6_fu_440_p2);

assign sext_ln581_1_fu_1474_p1 = sh_amt_1_reg_2574;

assign sext_ln581_2_fu_2219_p1 = sh_amt_2_fu_2211_p3;

assign sext_ln581_3_fu_1855_p1 = sh_amt_3_fu_1847_p3;

assign sext_ln581_fu_2037_p1 = sh_amt_reg_2623;

assign sh_amt_1_fu_1324_p3 = ((icmp_ln581_1_fu_1306_p2[0:0] == 1'b1) ? add_ln581_1_fu_1312_p2 : sub_ln581_1_fu_1318_p2);

assign sh_amt_2_fu_2211_p3 = ((icmp_ln581_2_fu_2193_p2[0:0] == 1'b1) ? add_ln581_2_fu_2199_p2 : sub_ln581_2_fu_2205_p2);

assign sh_amt_3_fu_1847_p3 = ((icmp_ln581_3_fu_1829_p2[0:0] == 1'b1) ? add_ln581_3_fu_1835_p2 : sub_ln581_3_fu_1841_p2);

assign sh_amt_fu_1623_p3 = ((icmp_ln581_fu_1605_p2[0:0] == 1'b1) ? add_ln581_fu_1611_p2 : sub_ln581_fu_1617_p2);

assign shl_ln271_1_fu_250_p3 = {{trunc_ln271_fu_246_p1}, {4'd0}};

assign shl_ln604_1_fu_1497_p2 = trunc_ln583_1_reg_2579 << sext_ln581_1_fu_1474_p1;

assign shl_ln604_2_fu_2273_p2 = trunc_ln583_2_fu_2229_p1 << sext_ln581_2_fu_2219_p1;

assign shl_ln604_3_fu_1909_p2 = trunc_ln583_3_fu_1865_p1 << sext_ln581_3_fu_1855_p1;

assign shl_ln604_fu_2054_p2 = trunc_ln583_fu_2040_p1 << sext_ln581_fu_2037_p1;

assign shl_ln949_3_fu_1005_p2 = 32'd1 << lsb_index_3_fu_963_p2;

assign shl_ln949_4_fu_688_p2 = 32'd1 << lsb_index_4_fu_646_p2;

assign shl_ln949_fu_388_p2 = 32'd1 << lsb_index_fu_346_p2;

assign shl_ln959_3_fu_1077_p2 = zext_ln959_6_fu_1063_p1 << zext_ln959_7_fu_1073_p1;

assign shl_ln959_4_fu_760_p2 = zext_ln959_8_fu_746_p1 << zext_ln959_9_fu_756_p1;

assign shl_ln959_fu_478_p2 = zext_ln959_fu_466_p1 << zext_ln959_5_fu_474_p1;

assign shl_ln_fu_234_p3 = {{i_5_reg_2401}, {13'd0}};

assign sub_ln581_1_fu_1318_p2 = (12'd20 - F2_1_fu_1300_p2);

assign sub_ln581_2_fu_2205_p2 = (12'd20 - F2_2_fu_2187_p2);

assign sub_ln581_3_fu_1841_p2 = (12'd20 - F2_3_fu_1823_p2);

assign sub_ln581_fu_1617_p2 = (12'd20 - F2_fu_1599_p2);

assign sub_ln944_3_fu_957_p2 = (32'd32 - l_3_fu_949_p3);

assign sub_ln944_4_fu_640_p2 = (32'd32 - l_4_fu_632_p3);

assign sub_ln944_fu_340_p2 = (32'd32 - l_fu_332_p3);

assign sub_ln947_3_fu_989_p2 = ($signed(6'd57) - $signed(trunc_ln947_3_fu_985_p1));

assign sub_ln947_4_fu_672_p2 = ($signed(6'd57) - $signed(trunc_ln947_4_fu_668_p1));

assign sub_ln947_fu_372_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_368_p1));

assign sub_ln959_3_fu_1067_p2 = (32'd25 - sub_ln944_3_fu_957_p2);

assign sub_ln959_4_fu_750_p2 = (32'd25 - sub_ln944_4_fu_640_p2);

assign sub_ln959_fu_469_p2 = (32'd25 - sub_ln944_reg_2455);

assign sub_ln964_3_fu_1181_p2 = (8'd12 - trunc_ln943_3_reg_2541);

assign sub_ln964_4_fu_856_p2 = (8'd12 - trunc_ln943_4_reg_2501);

assign sub_ln964_fu_545_p2 = (8'd12 - trunc_ln943_reg_2471);

assign tmp_12_i_fu_867_p3 = {{p_Result_78_reg_2486}, {add_ln964_4_fu_861_p2}};

assign tmp_35_fu_412_p3 = lsb_index_fu_346_p2[32'd31];

assign tmp_38_fu_969_p4 = {{lsb_index_3_fu_963_p2[31:1]}};

assign tmp_39_fu_1029_p3 = lsb_index_3_fu_963_p2[32'd31];

assign tmp_42_fu_1643_p4 = {{sh_amt_fu_1623_p3[11:5]}};

assign tmp_43_fu_2046_p3 = bitcast_ln702_fu_2043_p1[32'd31];

assign tmp_45_fu_652_p4 = {{lsb_index_4_fu_646_p2[31:1]}};

assign tmp_46_fu_712_p3 = lsb_index_4_fu_646_p2[32'd31];

assign tmp_49_fu_1348_p4 = {{sh_amt_1_fu_1324_p3[11:5]}};

assign tmp_50_fu_1481_p3 = bitcast_ln702_3_fu_1477_p1[32'd31];

assign tmp_51_fu_2080_p3 = shl_ln604_fu_2054_p2[32'd31];

assign tmp_52_fu_1733_p3 = ashr_ln586_fu_1667_p2[32'd31];

assign tmp_53_fu_1741_p3 = man_V_4_fu_1585_p3[32'd31];

assign tmp_55_fu_2239_p4 = {{sh_amt_2_fu_2211_p3[11:5]}};

assign tmp_56_fu_1515_p3 = select_ln603_2_fu_1509_p3[32'd31];

assign tmp_58_fu_1875_p4 = {{sh_amt_3_fu_1847_p3[11:5]}};

assign tmp_8_i_fu_556_p3 = {{p_Result_66_reg_2445}, {add_ln964_fu_550_p2}};

assign tmp_9_i_fu_1192_p3 = {{p_Result_71_reg_2526}, {add_ln964_3_fu_1186_p2}};

assign tmp_V_11_fu_608_p2 = (32'd0 - ap_sig_allocacmp_p_Val2_35);

assign tmp_V_8_fu_925_p2 = (32'd0 - ap_sig_allocacmp_p_Val2_s);

assign tmp_V_fu_308_p2 = (32'd0 - z_bits_fu_290_p1);

assign tmp_fu_352_p4 = {{lsb_index_fu_346_p2[31:1]}};

assign tmp_s_fu_277_p3 = {{lshr_ln_fu_263_p4}, {trunc_ln271_1_fu_273_p1}};

assign trunc_ln271_1_fu_273_p1 = ap_phi_mux_j_phi_fu_203_p4[8:0];

assign trunc_ln271_fu_246_p1 = ap_phi_mux_j_phi_fu_203_p4[11:0];

assign trunc_ln555_1_fu_1238_p1 = ireg_1_fu_1234_p1[62:0];

assign trunc_ln555_2_fu_2125_p1 = ireg_2_fu_2121_p1[62:0];

assign trunc_ln555_3_fu_1761_p1 = ireg_3_fu_1757_p1[62:0];

assign trunc_ln555_fu_1537_p1 = ireg_fu_1533_p1[62:0];

assign trunc_ln565_1_fu_1264_p1 = ireg_1_fu_1234_p1[51:0];

assign trunc_ln565_2_fu_2151_p1 = ireg_2_fu_2121_p1[51:0];

assign trunc_ln565_3_fu_1787_p1 = ireg_3_fu_1757_p1[51:0];

assign trunc_ln565_fu_1563_p1 = ireg_fu_1533_p1[51:0];

assign trunc_ln583_1_fu_1338_p1 = man_V_7_fu_1286_p3[31:0];

assign trunc_ln583_2_fu_2229_p1 = man_V_10_fu_2173_p3[31:0];

assign trunc_ln583_3_fu_1865_p1 = man_V_13_fu_1809_p3[31:0];

assign trunc_ln583_fu_2040_p1 = man_V_4_reg_2613[31:0];

assign trunc_ln586_2_fu_1364_p1 = sh_amt_1_fu_1324_p3[5:0];

assign trunc_ln586_3_fu_1378_p1 = ashr_ln586_1_fu_1372_p2[31:0];

assign trunc_ln586_4_fu_2255_p1 = sh_amt_2_fu_2211_p3[5:0];

assign trunc_ln586_5_fu_2269_p1 = ashr_ln586_2_fu_2263_p2[31:0];

assign trunc_ln586_6_fu_1891_p1 = sh_amt_3_fu_1847_p3[5:0];

assign trunc_ln586_7_fu_1905_p1 = ashr_ln586_3_fu_1899_p2[31:0];

assign trunc_ln586_fu_1659_p1 = sh_amt_fu_1623_p3[5:0];

assign trunc_ln943_3_fu_1151_p1 = l_3_fu_949_p3[7:0];

assign trunc_ln943_4_fu_834_p1 = l_4_fu_632_p3[7:0];

assign trunc_ln943_fu_462_p1 = l_fu_332_p3[7:0];

assign trunc_ln947_3_fu_985_p1 = sub_ln944_3_fu_957_p2[5:0];

assign trunc_ln947_4_fu_668_p1 = sub_ln944_4_fu_640_p2[5:0];

assign trunc_ln947_fu_368_p1 = sub_ln944_fu_340_p2[5:0];

assign xor_ln571_1_fu_1382_p2 = (icmp_ln571_1_fu_1294_p2 ^ 1'd1);

assign xor_ln571_2_fu_2279_p2 = (icmp_ln571_2_fu_2181_p2 ^ 1'd1);

assign xor_ln571_3_fu_1915_p2 = (icmp_ln571_3_fu_1817_p2 ^ 1'd1);

assign xor_ln571_fu_2060_p2 = (icmp_ln571_reg_2618 ^ 1'd1);

assign xor_ln581_1_fu_1436_p2 = (or_ln581_1_fu_1430_p2 ^ 1'd1);

assign xor_ln581_2_fu_2321_p2 = (or_ln581_2_fu_2315_p2 ^ 1'd1);

assign xor_ln581_3_fu_1957_p2 = (or_ln581_3_fu_1951_p2 ^ 1'd1);

assign xor_ln581_fu_1715_p2 = (or_ln581_fu_1709_p2 ^ 1'd1);

assign xor_ln582_1_fu_1400_p2 = (or_ln582_1_fu_1394_p2 ^ 1'd1);

assign xor_ln582_2_fu_2297_p2 = (or_ln582_2_fu_2291_p2 ^ 1'd1);

assign xor_ln582_3_fu_1933_p2 = (or_ln582_3_fu_1927_p2 ^ 1'd1);

assign xor_ln582_fu_1679_p2 = (or_ln582_fu_1673_p2 ^ 1'd1);

assign xor_ln585_1_fu_1418_p2 = (icmp_ln585_1_fu_1342_p2 ^ 1'd1);

assign xor_ln585_2_fu_2333_p2 = (icmp_ln585_2_fu_2233_p2 ^ 1'd1);

assign xor_ln585_3_fu_1969_p2 = (icmp_ln585_3_fu_1869_p2 ^ 1'd1);

assign xor_ln585_fu_1697_p2 = (icmp_ln585_fu_1637_p2 ^ 1'd1);

assign xor_ln949_3_fu_1037_p2 = (tmp_39_fu_1029_p3 ^ 1'd1);

assign xor_ln949_4_fu_720_p2 = (tmp_46_fu_712_p3 ^ 1'd1);

assign xor_ln949_fu_420_p2 = (tmp_35_fu_412_p3 ^ 1'd1);

assign z_bits_fu_290_p1 = points_q0[31:0];

assign zext_ln271_fu_285_p1 = tmp_s_fu_277_p3;

assign zext_ln368_1_fu_1155_p1 = p_Result_77_reg_2506;

assign zext_ln368_fu_1226_p1 = p_Result_70_reg_2552;

assign zext_ln455_1_fu_1260_p1 = exp_tmp_1_fu_1250_p4;

assign zext_ln455_2_fu_2147_p1 = exp_tmp_2_fu_2137_p4;

assign zext_ln455_3_fu_1783_p1 = exp_tmp_3_fu_1773_p4;

assign zext_ln455_fu_1559_p1 = exp_tmp_fu_1549_p4;

assign zext_ln569_1_fu_1276_p1 = p_Result_83_fu_1268_p3;

assign zext_ln569_2_fu_2163_p1 = p_Result_85_fu_2155_p3;

assign zext_ln569_3_fu_1799_p1 = p_Result_87_fu_1791_p3;

assign zext_ln569_fu_1575_p1 = p_Result_76_fu_1567_p3;

assign zext_ln586_1_fu_1368_p1 = trunc_ln586_2_fu_1364_p1;

assign zext_ln586_2_fu_2259_p1 = trunc_ln586_4_fu_2255_p1;

assign zext_ln586_3_fu_1895_p1 = trunc_ln586_6_fu_1891_p1;

assign zext_ln586_fu_1663_p1 = trunc_ln586_fu_1659_p1;

assign zext_ln947_3_fu_995_p1 = sub_ln947_3_fu_989_p2;

assign zext_ln947_4_fu_678_p1 = sub_ln947_4_fu_672_p2;

assign zext_ln947_fu_378_p1 = sub_ln947_fu_372_p2;

assign zext_ln958_3_fu_1097_p1 = add_ln958_3_fu_1091_p2;

assign zext_ln958_4_fu_780_p1 = add_ln958_4_fu_774_p2;

assign zext_ln958_fu_489_p1 = add_ln958_fu_484_p2;

assign zext_ln959_5_fu_474_p1 = sub_ln959_fu_469_p2;

assign zext_ln959_6_fu_1063_p1 = m_44_fu_931_p3;

assign zext_ln959_7_fu_1073_p1 = sub_ln959_3_fu_1067_p2;

assign zext_ln959_8_fu_746_p1 = m_46_fu_614_p3;

assign zext_ln959_9_fu_756_p1 = sub_ln959_4_fu_750_p2;

assign zext_ln959_fu_466_p1 = m_42_reg_2450;

assign zext_ln961_3_fu_1123_p1 = select_ln958_7_fu_1107_p3;

assign zext_ln961_4_fu_806_p1 = select_ln958_9_fu_790_p3;

assign zext_ln961_fu_506_p1 = select_ln958_reg_2466;

assign zext_ln962_3_fu_1171_p1 = m_45_reg_2531;

assign zext_ln962_4_fu_846_p1 = m_47_reg_2491;

assign zext_ln962_fu_525_p1 = m_43_fu_515_p4;

always @ (posedge ap_clk) begin
    shl_ln_reg_2426[12:0] <= 13'b0000000000000;
    bitcast_ln351_2_reg_2546[31] <= 1'b0;
    bitcast_ln351_reg_2562[31] <= 1'b0;
end

endmodule //system_top_p_find_left_and_right_boundaries8
