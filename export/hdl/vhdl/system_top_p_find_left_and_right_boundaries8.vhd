-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_p_find_left_and_right_boundaries8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    left_bound_ap_vld : OUT STD_LOGIC;
    i_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    i_empty_n : IN STD_LOGIC;
    i_read : OUT STD_LOGIC;
    lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
    rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_top_p_find_left_and_right_boundaries8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_trapezoid_edgestrapezoid_edges_ce0 : STD_LOGIC;
    signal get_trapezoid_edgestrapezoid_edges_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_blk_n : STD_LOGIC;
    signal j_reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_198_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_222 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln270_reg_2431 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal i_5_reg_2401 : STD_LOGIC_VECTOR (2 downto 0);
    signal num_points_load_reg_2416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_load_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_234_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_2426 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln270_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_2440 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_66_fu_300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_66_reg_2445 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_42_fu_314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_42_reg_2450 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_2455 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_2461 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_fu_454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_2466 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_462_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_2471 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_583_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_2476 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln935_3_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_3_reg_2481 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_78_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_78_reg_2486 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_47_reg_2491 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_48_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_4_fu_834_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_4_reg_2501 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_77_fu_842_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_77_reg_2506 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal select_ln935_3_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_3_reg_2511 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln270_fu_901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln270_reg_2516 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln935_2_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_2_reg_2521 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_71_fu_917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_71_reg_2526 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_45_reg_2531 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_40_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_3_fu_1151_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_3_reg_2541 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln351_2_fu_1158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_2_reg_2546 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_70_fu_1167_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_70_reg_2552 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln935_2_fu_1219_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_2_reg_2557 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_reg_2562 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_2568 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sh_amt_1_fu_1324_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_2574 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_1_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_1_reg_2579 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_1_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_reg_2584 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_reg_2589 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_reg_2594 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_1454_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_1_reg_2599 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_5_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_reg_2604 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_reg_2609 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal man_V_4_fu_1585_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_reg_2613 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_2618 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1623_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2623 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_2633 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_2638 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_2643 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_fu_1749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_reg_2649 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_fu_2115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_reg_2654 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state10 : STD_LOGIC;
    signal ap_phi_mux_j_phi_fu_203_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal idxprom_i_fu_228_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln271_fu_285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln585_3_fu_2387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_s : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_7_fu_2023_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_35 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal left_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_216_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal trunc_ln271_fu_246_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln271_1_fu_250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln271_fu_258_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_263_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln271_1_fu_273_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_277_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_67_fu_322_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_332_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_352_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_368_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_372_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_5_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_68_fu_426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_6_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_5_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln958_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_478_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_25_fu_509_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_43_fu_515_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_545_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_537_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_550_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_i_fu_556_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_69_fu_563_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_fu_579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_11_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_46_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_79_fu_622_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_4_fu_632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_4_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_fu_646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_652_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_4_fu_668_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_4_fu_672_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_4_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_4_fu_682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_4_fu_688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_6_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_10_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_712_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_80_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_4_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_4_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_8_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_9_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_4_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_4_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_4_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_4_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_4_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_4_fu_766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_8_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_4_fu_784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_4_fu_760_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_9_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_33_fu_798_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_4_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_34_fu_810_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_2_fu_838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_4_fu_856_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_4_fu_849_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_4_fu_861_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_4_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_fu_867_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_81_fu_874_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_5_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_3_fu_890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_8_fu_925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_44_fu_931_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_72_fu_939_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_3_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_3_fu_957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_3_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_969_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_3_fu_985_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_3_fu_989_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_3_fu_995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_3_fu_999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_3_fu_1005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_1011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_9_fu_1017_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_73_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_3_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_3_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_6_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_7_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_3_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_3_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_3_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_3_fu_1097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_3_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_3_fu_1083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_7_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_3_fu_1101_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_3_fu_1077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_7_fu_1107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_29_fu_1115_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_3_fu_1123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_30_fu_1127_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln368_1_fu_1155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_1163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_3_fu_1181_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_3_fu_1174_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_3_fu_1186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_3_fu_1171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_i_fu_1192_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_74_fu_1199_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_3_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_2_fu_1215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln368_fu_1226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_1_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_1_fu_1250_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_1_fu_1264_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_83_fu_1268_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_1_fu_1276_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_82_fu_1242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_6_fu_1280_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_1_fu_1238_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_1_fu_1260_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_1_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_1_fu_1312_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1318_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_7_fu_1286_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_49_fu_1348_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_2_fu_1364_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_1_fu_1368_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1372_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_1_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_1_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_3_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_3_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_1_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_4_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln702_3_fu_1477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1_fu_1474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_1_fu_1497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln588_fu_1489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_fu_1502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_2_fu_1509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1515_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_2_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_fu_1533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1549_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1563_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_76_fu_1567_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1575_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_75_fu_1541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_3_fu_1579_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_fu_1537_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_1559_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1611_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1617_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_42_fu_1643_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_1659_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_1663_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln586_fu_1667_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_52_fu_1733_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1741_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_3_fu_1757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_3_fu_1773_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_3_fu_1787_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_87_fu_1791_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_3_fu_1799_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_86_fu_1765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_12_fu_1803_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_3_fu_1761_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_3_fu_1783_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_1823_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_3_fu_1829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_3_fu_1835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_3_fu_1841_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_fu_1847_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_13_fu_1809_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_58_fu_1875_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_6_fu_1891_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_3_fu_1895_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_3_fu_1899_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_3_fu_1865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_3_fu_1855_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln571_3_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_3_fu_1859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_1915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_3_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_3_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_1957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_1969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_7_fu_1975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_1963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_3_fu_1909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_7_fu_1905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_6_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_3_fu_1921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_3_fu_1981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_4_fu_1987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_4_fu_1995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_5_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_6_fu_2009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_5_fu_2001_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln702_fu_2043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_fu_2040_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_fu_2037_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_fu_2060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_2065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_2070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_2054_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_2046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_2080_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_1_fu_2088_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_3_fu_2096_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_5_fu_2103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_fu_2109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_2_fu_2121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_2_fu_2137_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_2_fu_2151_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_85_fu_2155_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_2_fu_2163_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_84_fu_2129_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_9_fu_2167_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_2_fu_2125_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_2_fu_2147_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_2187_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_2_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_2_fu_2199_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_fu_2205_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_fu_2211_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_10_fu_2173_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_55_fu_2239_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_4_fu_2255_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_2_fu_2259_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_2_fu_2263_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_2_fu_2229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_2_fu_2219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln571_2_fu_2181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_2_fu_2223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_2_fu_2279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_2_fu_2291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_2_fu_2297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_2_fu_2303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_2_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_2_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_2_fu_2249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_2_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_2_fu_2333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_5_fu_2339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_2_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_2_fu_2273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_5_fu_2269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_4_fu_2309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_2_fu_2285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_fu_2345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_fu_2351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_1_fu_2359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_2_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_2_fu_2373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_2365_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_faddfsub_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_p_find_left_and_right_boundaries8_get_trapezoid_edgestrapezoid_edges IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_trapezoid_edgestrapezoid_edges_U : component system_top_p_find_left_and_right_boundaries8_get_trapezoid_edgestrapezoid_edges
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_trapezoid_edgestrapezoid_edges_address0,
        ce0 => get_trapezoid_edgestrapezoid_edges_ce0,
        q0 => get_trapezoid_edgestrapezoid_edges_q0);

    faddfsub_32ns_32ns_32_3_full_dsp_1_U6 : component system_top_faddfsub_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        din1 => grp_fu_211_p1,
        opcode => grp_fu_211_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_211_p2);

    fpext_32ns_64_2_no_dsp_1_U7 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_216_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_216_p1);

    fpext_32ns_64_2_no_dsp_1_U8 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln351_2_reg_2546,
        ce => ap_const_logic_1,
        dout => grp_fu_219_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state10);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    left_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                left_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_lv1_1 = and_ln1495_1_fu_2115_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    left_bound_preg <= j_reg_198_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    j_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then 
                j_reg_198 <= add_ln270_reg_2516;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_198 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln270_reg_2516 <= add_ln270_fu_901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln1495_1_reg_2654 <= and_ln1495_1_fu_2115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln1495_3_reg_2609 <= and_ln1495_3_fu_1528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln585_reg_2633 <= and_ln585_fu_1691_p2;
                and_ln603_reg_2638 <= and_ln603_fu_1721_p2;
                icmp_ln571_reg_2618 <= icmp_ln571_fu_1593_p2;
                icmp_ln582_reg_2628 <= icmp_ln582_fu_1631_p2;
                man_V_4_reg_2613 <= man_V_4_fu_1585_p3;
                or_ln603_reg_2643 <= or_ln603_fu_1727_p2;
                select_ln603_4_reg_2649 <= select_ln603_4_fu_1749_p3;
                sh_amt_reg_2623 <= sh_amt_fu_1623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                and_ln603_1_reg_2589 <= and_ln603_1_fu_1442_p2;
                or_ln603_3_reg_2594 <= or_ln603_3_fu_1448_p2;
                or_ln603_5_reg_2604 <= or_ln603_5_fu_1468_p2;
                select_ln603_1_reg_2599 <= select_ln603_1_fu_1454_p3;
                sh_amt_1_reg_2574 <= sh_amt_1_fu_1324_p3;
                trunc_ln583_1_reg_2579 <= trunc_ln583_1_fu_1338_p1;
                xor_ln571_1_reg_2584 <= xor_ln571_1_fu_1382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then
                    bitcast_ln351_2_reg_2546(30 downto 0) <= bitcast_ln351_2_fu_1158_p1(30 downto 0);
                icmp_ln935_2_reg_2521 <= icmp_ln935_2_fu_911_p2;
                m_45_reg_2531 <= m_30_fu_1127_p2(63 downto 1);
                p_Result_40_reg_2536 <= m_30_fu_1127_p2(25 downto 25);
                p_Result_71_reg_2526 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
                trunc_ln943_3_reg_2541 <= trunc_ln943_3_fu_1151_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    bitcast_ln351_reg_2562(30 downto 0) <= bitcast_ln351_fu_1229_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                get_trapezoid_edgestrapezoid_edges_load_reg_2421 <= get_trapezoid_edgestrapezoid_edges_q0;
                num_points_load_reg_2416 <= num_points_q0;
                    shl_ln_reg_2426(15 downto 13) <= shl_ln_fu_234_p3(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                i_5_reg_2401 <= i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln270_reg_2431 <= icmp_ln270_fu_241_p2;
                j_reg_198_pp0_iter1_reg <= j_reg_198;
                p_Result_70_reg_2552 <= p_Result_70_fu_1167_p1;
                select_ln935_2_reg_2557 <= select_ln935_2_fu_1219_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then
                icmp_ln935_3_reg_2481 <= icmp_ln935_3_fu_594_p2;
                m_47_reg_2491 <= m_34_fu_810_p2(63 downto 1);
                p_Result_48_reg_2496 <= m_34_fu_810_p2(25 downto 25);
                p_Result_78_reg_2486 <= ap_sig_allocacmp_p_Val2_35(31 downto 31);
                trunc_ln943_4_reg_2501 <= trunc_ln943_4_fu_834_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then
                icmp_ln935_reg_2440 <= icmp_ln935_fu_294_p2;
                icmp_ln958_reg_2461 <= icmp_ln958_fu_434_p2;
                m_42_reg_2450 <= m_42_fu_314_p3;
                p_Result_66_reg_2445 <= points_q0(31 downto 31);
                select_ln958_reg_2466 <= select_ln958_fu_454_p3;
                sub_ln944_reg_2455 <= sub_ln944_fu_340_p2;
                trunc_ln943_reg_2471 <= trunc_ln943_fu_462_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then
                p_Result_77_reg_2506 <= p_Result_77_fu_842_p1;
                select_ln935_3_reg_2511 <= select_ln935_3_fu_894_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln270_reg_2431 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_222 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then
                select_ln935_reg_2476 <= select_ln935_fu_583_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                v_assign_reg_2568 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    shl_ln_reg_2426(12 downto 0) <= "0000000000000";
    bitcast_ln351_2_reg_2546(31) <= '0';
    bitcast_ln351_reg_2562(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, i_empty_n, ap_enable_reg_pp0_iter0, icmp_ln270_reg_2431, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (icmp_ln270_reg_2431 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (icmp_ln270_reg_2431 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1300_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_1_fu_1260_p1));
    F2_2_fu_2187_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_2_fu_2147_p1));
    F2_3_fu_1823_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_3_fu_1783_p1));
    F2_fu_1599_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1559_p1));
    LD_3_fu_1211_p1 <= p_Result_74_fu_1199_p5(32 - 1 downto 0);
    LD_5_fu_886_p1 <= p_Result_81_fu_874_p5(32 - 1 downto 0);
    LD_fu_575_p1 <= p_Result_69_fu_563_p5(32 - 1 downto 0);
    add_ln270_fu_901_p2 <= std_logic_vector(unsigned(j_reg_198) + unsigned(ap_const_lv32_1));
    add_ln271_fu_258_p2 <= std_logic_vector(unsigned(shl_ln271_1_fu_250_p3) + unsigned(shl_ln_reg_2426));
    add_ln581_1_fu_1312_p2 <= std_logic_vector(unsigned(F2_1_fu_1300_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_2_fu_2199_p2 <= std_logic_vector(unsigned(F2_2_fu_2187_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_3_fu_1835_p2 <= std_logic_vector(unsigned(F2_3_fu_1823_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_fu_1611_p2 <= std_logic_vector(unsigned(F2_fu_1599_p2) + unsigned(ap_const_lv12_FEC));
    add_ln958_3_fu_1091_p2 <= std_logic_vector(unsigned(sub_ln944_3_fu_957_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_4_fu_774_p2 <= std_logic_vector(unsigned(sub_ln944_4_fu_640_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_fu_484_p2 <= std_logic_vector(unsigned(sub_ln944_reg_2455) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_3_fu_1186_p2 <= std_logic_vector(unsigned(sub_ln964_3_fu_1181_p2) + unsigned(select_ln943_3_fu_1174_p3));
    add_ln964_4_fu_861_p2 <= std_logic_vector(unsigned(sub_ln964_4_fu_856_p2) + unsigned(select_ln943_4_fu_849_p3));
    add_ln964_fu_550_p2 <= std_logic_vector(unsigned(sub_ln964_fu_545_p2) + unsigned(select_ln943_fu_537_p3));
    and_ln1495_1_fu_2115_p2 <= (xor_ln571_fu_2060_p2 and and_ln1495_fu_2109_p2);
    and_ln1495_2_fu_1523_p2 <= (tmp_56_fu_1515_p3 and or_ln603_5_reg_2604);
    and_ln1495_3_fu_1528_p2 <= (xor_ln571_1_reg_2584 and and_ln1495_2_fu_1523_p2);
    and_ln1495_fu_2109_p2 <= (select_ln603_5_fu_2103_p3 and or_ln603_2_fu_2075_p2);
    and_ln581_1_fu_1406_p2 <= (xor_ln582_1_fu_1400_p2 and icmp_ln581_1_fu_1306_p2);
    and_ln581_2_fu_2303_p2 <= (xor_ln582_2_fu_2297_p2 and icmp_ln581_2_fu_2193_p2);
    and_ln581_3_fu_1939_p2 <= (xor_ln582_3_fu_1933_p2 and icmp_ln581_3_fu_1829_p2);
    and_ln581_fu_1685_p2 <= (xor_ln582_fu_1679_p2 and icmp_ln581_fu_1605_p2);
    and_ln582_1_fu_1388_p2 <= (xor_ln571_1_fu_1382_p2 and icmp_ln582_1_fu_1332_p2);
    and_ln582_2_fu_2285_p2 <= (xor_ln571_2_fu_2279_p2 and icmp_ln582_2_fu_2223_p2);
    and_ln582_3_fu_1921_p2 <= (xor_ln571_3_fu_1915_p2 and icmp_ln582_3_fu_1859_p2);
    and_ln582_fu_2065_p2 <= (xor_ln571_fu_2060_p2 and icmp_ln582_reg_2628);
    and_ln585_1_fu_1703_p2 <= (xor_ln585_fu_1697_p2 and and_ln581_fu_1685_p2);
    and_ln585_2_fu_1412_p2 <= (icmp_ln585_1_fu_1342_p2 and and_ln581_1_fu_1406_p2);
    and_ln585_3_fu_1424_p2 <= (xor_ln585_1_fu_1418_p2 and and_ln581_1_fu_1406_p2);
    and_ln585_4_fu_2309_p2 <= (icmp_ln585_2_fu_2233_p2 and and_ln581_2_fu_2303_p2);
    and_ln585_5_fu_2339_p2 <= (xor_ln585_2_fu_2333_p2 and and_ln581_2_fu_2303_p2);
    and_ln585_6_fu_1945_p2 <= (icmp_ln585_3_fu_1869_p2 and and_ln581_3_fu_1939_p2);
    and_ln585_7_fu_1975_p2 <= (xor_ln585_3_fu_1969_p2 and and_ln581_3_fu_1939_p2);
    and_ln585_fu_1691_p2 <= (icmp_ln585_fu_1637_p2 and and_ln581_fu_1685_p2);
    and_ln603_1_fu_1442_p2 <= (xor_ln581_1_fu_1436_p2 and icmp_ln603_1_fu_1358_p2);
    and_ln603_2_fu_2327_p2 <= (xor_ln581_2_fu_2321_p2 and icmp_ln603_2_fu_2249_p2);
    and_ln603_3_fu_1963_p2 <= (xor_ln581_3_fu_1957_p2 and icmp_ln603_3_fu_1885_p2);
    and_ln603_fu_1721_p2 <= (xor_ln581_fu_1715_p2 and icmp_ln603_fu_1653_p2);
    and_ln949_10_fu_700_p2 <= (or_ln949_6_fu_694_p2 and m_46_fu_614_p3);
    and_ln949_6_fu_440_p2 <= (xor_ln949_fu_420_p2 and p_Result_68_fu_426_p3);
    and_ln949_7_fu_1057_p2 <= (xor_ln949_3_fu_1037_p2 and p_Result_73_fu_1043_p3);
    and_ln949_8_fu_740_p2 <= (xor_ln949_4_fu_720_p2 and p_Result_80_fu_726_p3);
    and_ln949_9_fu_1017_p2 <= (or_ln949_fu_1011_p2 and m_44_fu_931_p3);
    and_ln949_fu_400_p2 <= (or_ln949_5_fu_394_p2 and m_42_fu_314_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, i_empty_n)
    begin
                ap_block_state1 <= ((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state10_assign_proc : process(icmp_ln270_reg_2431)
    begin
        if ((icmp_ln270_reg_2431 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_203_p4_assign_proc : process(j_reg_198, ap_CS_fsm_pp0_stage0, icmp_ln270_reg_2431, ap_enable_reg_pp0_iter1, add_ln270_reg_2516, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln270_reg_2431 = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_203_p4 <= add_ln270_reg_2516;
        else 
            ap_phi_mux_j_phi_fu_203_p4 <= j_reg_198;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_35_assign_proc : process(rbVal_constprop_i, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2609, select_ln585_7_fu_2023_p3, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_lv1_1 = and_ln1495_3_reg_2609) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_35 <= select_ln585_7_fu_2023_p3;
        else 
            ap_sig_allocacmp_p_Val2_35 <= rbVal_constprop_i;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_s_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, and_ln1495_1_reg_2654, select_ln585_3_fu_2387_p3, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_reg_2654) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_s <= select_ln585_3_fu_2387_p3;
        else 
            ap_sig_allocacmp_p_Val2_s <= lbVal_constprop_i;
        end if; 
    end process;

    ashr_ln586_1_fu_1372_p2 <= std_logic_vector(shift_right(signed(man_V_7_fu_1286_p3),to_integer(unsigned('0' & zext_ln586_1_fu_1368_p1(31-1 downto 0)))));
    ashr_ln586_2_fu_2263_p2 <= std_logic_vector(shift_right(signed(man_V_10_fu_2173_p3),to_integer(unsigned('0' & zext_ln586_2_fu_2259_p1(31-1 downto 0)))));
    ashr_ln586_3_fu_1899_p2 <= std_logic_vector(shift_right(signed(man_V_13_fu_1809_p3),to_integer(unsigned('0' & zext_ln586_3_fu_1895_p1(31-1 downto 0)))));
    ashr_ln586_fu_1667_p2 <= std_logic_vector(shift_right(signed(man_V_4_fu_1585_p3),to_integer(unsigned('0' & zext_ln586_fu_1663_p1(31-1 downto 0)))));
    bitcast_ln351_2_fu_1158_p1 <= zext_ln368_1_fu_1155_p1;
    bitcast_ln351_fu_1229_p1 <= zext_ln368_fu_1226_p1;
    bitcast_ln702_3_fu_1477_p1 <= reg_222;
    bitcast_ln702_fu_2043_p1 <= v_assign_reg_2568;
    bitcast_ln744_2_fu_1215_p1 <= LD_3_fu_1211_p1;
    bitcast_ln744_3_fu_890_p1 <= LD_5_fu_886_p1;
    bitcast_ln744_fu_579_p1 <= LD_fu_575_p1;
    data_V_2_fu_838_p1 <= grp_fu_211_p2;
    data_V_fu_1163_p1 <= grp_fu_211_p2;
    exp_tmp_1_fu_1250_p4 <= ireg_1_fu_1234_p1(62 downto 52);
    exp_tmp_2_fu_2137_p4 <= ireg_2_fu_2121_p1(62 downto 52);
    exp_tmp_3_fu_1773_p4 <= ireg_3_fu_1757_p1(62 downto 52);
    exp_tmp_fu_1549_p4 <= ireg_fu_1533_p1(62 downto 52);
    get_trapezoid_edgestrapezoid_edges_address0 <= idxprom_i_fu_228_p1(3 - 1 downto 0);

    get_trapezoid_edgestrapezoid_edges_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_1;
        else 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_211_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln270_reg_2431, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage3_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln270_reg_2431 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln270_reg_2431 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            grp_fu_211_opcode <= ap_const_lv2_1;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln270_reg_2431 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln270_reg_2431 = ap_const_lv1_0)))) then 
            grp_fu_211_opcode <= ap_const_lv2_0;
        else 
            grp_fu_211_opcode <= "XX";
        end if; 
    end process;


    grp_fu_211_p0_assign_proc : process(reg_222, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, select_ln935_reg_2476, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, bitcast_ln351_2_fu_1158_p1, bitcast_ln351_fu_1229_p1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage7, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_211_p0 <= bitcast_ln351_fu_1229_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_211_p0 <= bitcast_ln351_2_fu_1158_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_211_p0 <= reg_222;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_211_p0 <= select_ln935_reg_2476;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, get_trapezoid_edgestrapezoid_edges_load_reg_2421, ap_CS_fsm_pp0_stage6, select_ln935_3_reg_2511, ap_CS_fsm_pp0_stage7, select_ln935_2_reg_2557, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage7, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_211_p1 <= select_ln935_2_reg_2557;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_211_p1 <= select_ln935_3_reg_2511;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_211_p1 <= ap_const_lv32_0;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_211_p1 <= get_trapezoid_edgestrapezoid_edges_load_reg_2421;
        else 
            grp_fu_211_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_216_p0_assign_proc : process(reg_222, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, bitcast_ln351_reg_2562, v_assign_reg_2568, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_216_p0 <= bitcast_ln351_reg_2562;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_216_p0 <= v_assign_reg_2568;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_216_p0 <= reg_222;
            else 
                grp_fu_216_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_216_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_blk_n <= i_empty_n;
        else 
            i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_read <= ap_const_logic_1;
        else 
            i_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln270_fu_241_p2 <= "1" when (ap_phi_mux_j_phi_fu_203_p4 = num_points_load_reg_2416) else "0";
    icmp_ln571_1_fu_1294_p2 <= "1" when (trunc_ln555_1_fu_1238_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_2_fu_2181_p2 <= "1" when (trunc_ln555_2_fu_2125_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_3_fu_1817_p2 <= "1" when (trunc_ln555_3_fu_1761_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1593_p2 <= "1" when (trunc_ln555_fu_1537_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1306_p2 <= "1" when (signed(F2_1_fu_1300_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_2_fu_2193_p2 <= "1" when (signed(F2_2_fu_2187_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_3_fu_1829_p2 <= "1" when (signed(F2_3_fu_1823_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_1605_p2 <= "1" when (signed(F2_fu_1599_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_1_fu_1332_p2 <= "1" when (F2_1_fu_1300_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_2_fu_2223_p2 <= "1" when (F2_2_fu_2187_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_3_fu_1859_p2 <= "1" when (F2_3_fu_1823_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_fu_1631_p2 <= "1" when (F2_fu_1599_p2 = ap_const_lv12_14) else "0";
    icmp_ln585_1_fu_1342_p2 <= "1" when (unsigned(sh_amt_1_fu_1324_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_2_fu_2233_p2 <= "1" when (unsigned(sh_amt_2_fu_2211_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_3_fu_1869_p2 <= "1" when (unsigned(sh_amt_3_fu_1847_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1637_p2 <= "1" when (unsigned(sh_amt_fu_1623_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_1358_p2 <= "1" when (tmp_49_fu_1348_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_2_fu_2249_p2 <= "1" when (tmp_55_fu_2239_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_3_fu_1885_p2 <= "1" when (tmp_58_fu_1875_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_1653_p2 <= "1" when (tmp_42_fu_1643_p4 = ap_const_lv7_0) else "0";
    icmp_ln935_2_fu_911_p2 <= "1" when (ap_sig_allocacmp_p_Val2_s = ap_const_lv32_0) else "0";
    icmp_ln935_3_fu_594_p2 <= "1" when (ap_sig_allocacmp_p_Val2_35 = ap_const_lv32_0) else "0";
    icmp_ln935_fu_294_p2 <= "0" when (z_bits_fu_290_p1 = ap_const_lv32_0) else "1";
    icmp_ln946_3_fu_979_p2 <= "1" when (signed(tmp_38_fu_969_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_4_fu_662_p2 <= "1" when (signed(tmp_45_fu_652_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_362_p2 <= "1" when (signed(tmp_fu_352_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_3_fu_1023_p2 <= "0" when (and_ln949_9_fu_1017_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_4_fu_706_p2 <= "0" when (and_ln949_10_fu_700_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_406_p2 <= "0" when (and_ln949_fu_400_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_3_fu_1051_p2 <= "1" when (signed(lsb_index_3_fu_963_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_4_fu_734_p2 <= "1" when (signed(lsb_index_4_fu_646_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_fu_434_p2 <= "1" when (signed(lsb_index_fu_346_p2) > signed(ap_const_lv32_0)) else "0";
    idxprom_i_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_dout),64));
    ireg_1_fu_1234_p1 <= grp_fu_216_p1;
    ireg_2_fu_2121_p1 <= grp_fu_216_p1;
    ireg_3_fu_1757_p1 <= grp_fu_219_p1;
    ireg_fu_1533_p1 <= grp_fu_216_p1;
    
    l_3_fu_949_p3_proc : process(p_Result_72_fu_939_p4)
    begin
        l_3_fu_949_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_72_fu_939_p4(i) = '1' then
                l_3_fu_949_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_4_fu_632_p3_proc : process(p_Result_79_fu_622_p4)
    begin
        l_4_fu_632_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_79_fu_622_p4(i) = '1' then
                l_4_fu_632_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_332_p3_proc : process(p_Result_67_fu_322_p4)
    begin
        l_fu_332_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_67_fu_322_p4(i) = '1' then
                l_fu_332_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;


    lbVal_constprop_o_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, and_ln1495_1_reg_2654, select_ln585_3_fu_2387_p3, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_reg_2654) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o <= select_ln585_3_fu_2387_p3;
        else 
            lbVal_constprop_o <= lbVal_constprop_i;
        end if; 
    end process;


    lbVal_constprop_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, and_ln1495_1_reg_2654)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_lv1_1 = and_ln1495_1_reg_2654) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            lbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    left_bound_assign_proc : process(j_reg_198_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, and_ln1495_1_fu_2115_p2, left_bound_preg, ap_block_pp0_stage6_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_lv1_1 = and_ln1495_1_fu_2115_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound <= j_reg_198_pp0_iter1_reg;
        else 
            left_bound <= left_bound_preg;
        end if; 
    end process;


    left_bound_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, and_ln1495_1_fu_2115_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_lv1_1 = and_ln1495_1_fu_2115_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound_ap_vld <= ap_const_logic_1;
        else 
            left_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lsb_index_3_fu_963_p2 <= std_logic_vector(unsigned(sub_ln944_3_fu_957_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_4_fu_646_p2 <= std_logic_vector(unsigned(sub_ln944_4_fu_640_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_346_p2 <= std_logic_vector(unsigned(sub_ln944_fu_340_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_3_fu_999_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_3_fu_995_p1(31-1 downto 0)))));
    lshr_ln947_4_fu_682_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_4_fu_678_p1(31-1 downto 0)))));
    lshr_ln947_fu_382_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_378_p1(31-1 downto 0)))));
    lshr_ln958_3_fu_1101_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_6_fu_1063_p1),to_integer(unsigned('0' & zext_ln958_3_fu_1097_p1(31-1 downto 0)))));
    lshr_ln958_4_fu_784_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_8_fu_746_p1),to_integer(unsigned('0' & zext_ln958_4_fu_780_p1(31-1 downto 0)))));
    lshr_ln958_fu_493_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_fu_466_p1),to_integer(unsigned('0' & zext_ln958_fu_489_p1(31-1 downto 0)))));
    lshr_ln_fu_263_p4 <= add_ln271_fu_258_p2(15 downto 13);
    m_25_fu_509_p2 <= std_logic_vector(unsigned(m_fu_499_p3) + unsigned(zext_ln961_fu_506_p1));
    m_29_fu_1115_p3 <= 
        lshr_ln958_3_fu_1101_p2 when (icmp_ln958_3_fu_1051_p2(0) = '1') else 
        shl_ln959_3_fu_1077_p2;
    m_30_fu_1127_p2 <= std_logic_vector(unsigned(m_29_fu_1115_p3) + unsigned(zext_ln961_3_fu_1123_p1));
    m_33_fu_798_p3 <= 
        lshr_ln958_4_fu_784_p2 when (icmp_ln958_4_fu_734_p2(0) = '1') else 
        shl_ln959_4_fu_760_p2;
    m_34_fu_810_p2 <= std_logic_vector(unsigned(m_33_fu_798_p3) + unsigned(zext_ln961_4_fu_806_p1));
    m_42_fu_314_p3 <= 
        tmp_V_fu_308_p2 when (p_Result_66_fu_300_p3(0) = '1') else 
        z_bits_fu_290_p1;
    m_43_fu_515_p4 <= m_25_fu_509_p2(63 downto 1);
    m_44_fu_931_p3 <= 
        tmp_V_8_fu_925_p2 when (p_Result_71_fu_917_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_s;
    m_46_fu_614_p3 <= 
        tmp_V_11_fu_608_p2 when (p_Result_78_fu_600_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_35;
    m_fu_499_p3 <= 
        lshr_ln958_fu_493_p2 when (icmp_ln958_reg_2461(0) = '1') else 
        shl_ln959_fu_478_p2;
    man_V_10_fu_2173_p3 <= 
        man_V_9_fu_2167_p2 when (p_Result_84_fu_2129_p3(0) = '1') else 
        zext_ln569_2_fu_2163_p1;
    man_V_12_fu_1803_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_3_fu_1799_p1));
    man_V_13_fu_1809_p3 <= 
        man_V_12_fu_1803_p2 when (p_Result_86_fu_1765_p3(0) = '1') else 
        zext_ln569_3_fu_1799_p1;
    man_V_3_fu_1579_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1575_p1));
    man_V_4_fu_1585_p3 <= 
        man_V_3_fu_1579_p2 when (p_Result_75_fu_1541_p3(0) = '1') else 
        zext_ln569_fu_1575_p1;
    man_V_6_fu_1280_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_1_fu_1276_p1));
    man_V_7_fu_1286_p3 <= 
        man_V_6_fu_1280_p2 when (p_Result_82_fu_1242_p3(0) = '1') else 
        zext_ln569_1_fu_1276_p1;
    man_V_9_fu_2167_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_2_fu_2163_p1));
    num_points_address0 <= idxprom_i_fu_228_p1(3 - 1 downto 0);

    num_points_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_points_ce0 <= ap_const_logic_1;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_1_fu_1430_p2 <= (or_ln582_1_fu_1394_p2 or icmp_ln581_1_fu_1306_p2);
    or_ln581_2_fu_2315_p2 <= (or_ln582_2_fu_2291_p2 or icmp_ln581_2_fu_2193_p2);
    or_ln581_3_fu_1951_p2 <= (or_ln582_3_fu_1927_p2 or icmp_ln581_3_fu_1829_p2);
    or_ln581_fu_1709_p2 <= (or_ln582_fu_1673_p2 or icmp_ln581_fu_1605_p2);
    or_ln582_1_fu_1394_p2 <= (icmp_ln582_1_fu_1332_p2 or icmp_ln571_1_fu_1294_p2);
    or_ln582_2_fu_2291_p2 <= (icmp_ln582_2_fu_2223_p2 or icmp_ln571_2_fu_2181_p2);
    or_ln582_3_fu_1927_p2 <= (icmp_ln582_3_fu_1859_p2 or icmp_ln571_3_fu_1817_p2);
    or_ln582_fu_1673_p2 <= (icmp_ln582_fu_1631_p2 or icmp_ln571_fu_1593_p2);
    or_ln585_1_fu_2359_p2 <= (and_ln603_2_fu_2327_p2 or and_ln585_4_fu_2309_p2);
    or_ln585_2_fu_2381_p2 <= (or_ln585_fu_2345_p2 or or_ln585_1_fu_2359_p2);
    or_ln585_3_fu_1981_p2 <= (icmp_ln571_3_fu_1817_p2 or and_ln585_7_fu_1975_p2);
    or_ln585_4_fu_1995_p2 <= (and_ln603_3_fu_1963_p2 or and_ln585_6_fu_1945_p2);
    or_ln585_5_fu_2017_p2 <= (or_ln585_4_fu_1995_p2 or or_ln585_3_fu_1981_p2);
    or_ln585_fu_2345_p2 <= (icmp_ln571_2_fu_2181_p2 or and_ln585_5_fu_2339_p2);
    or_ln603_1_fu_2070_p2 <= (and_ln585_reg_2633 or and_ln582_fu_2065_p2);
    or_ln603_2_fu_2075_p2 <= (or_ln603_reg_2643 or or_ln603_1_fu_2070_p2);
    or_ln603_3_fu_1448_p2 <= (and_ln603_1_fu_1442_p2 or and_ln585_3_fu_1424_p2);
    or_ln603_4_fu_1462_p2 <= (and_ln585_2_fu_1412_p2 or and_ln582_1_fu_1388_p2);
    or_ln603_5_fu_1468_p2 <= (or_ln603_4_fu_1462_p2 or or_ln603_3_fu_1448_p2);
    or_ln603_fu_1727_p2 <= (and_ln603_fu_1721_p2 or and_ln585_1_fu_1703_p2);
    or_ln949_5_fu_394_p2 <= (shl_ln949_fu_388_p2 or lshr_ln947_fu_382_p2);
    or_ln949_6_fu_694_p2 <= (shl_ln949_4_fu_688_p2 or lshr_ln947_4_fu_682_p2);
    or_ln949_fu_1011_p2 <= (shl_ln949_3_fu_1005_p2 or lshr_ln947_3_fu_999_p2);
    p_Result_66_fu_300_p3 <= points_q0(31 downto 31);
    
    p_Result_67_fu_322_p4_proc : process(m_42_fu_314_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_67_fu_322_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_42_fu_314_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_67_fu_322_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_67_fu_322_p4_i) := m_42_fu_314_p3(32-1-p_Result_67_fu_322_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_67_fu_322_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_68_fu_426_p3 <= m_42_fu_314_p3(to_integer(unsigned(lsb_index_fu_346_p2)) downto to_integer(unsigned(lsb_index_fu_346_p2))) when (to_integer(unsigned(lsb_index_fu_346_p2))>= 0 and to_integer(unsigned(lsb_index_fu_346_p2))<=31) else "-";
    p_Result_69_fu_563_p5 <= (zext_ln962_fu_525_p1(63 downto 32) & tmp_8_i_fu_556_p3 & zext_ln962_fu_525_p1(22 downto 0));
    p_Result_70_fu_1167_p1 <= data_V_fu_1163_p1(31 - 1 downto 0);
    p_Result_71_fu_917_p3 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
    
    p_Result_72_fu_939_p4_proc : process(m_44_fu_931_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_72_fu_939_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_44_fu_931_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_72_fu_939_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_72_fu_939_p4_i) := m_44_fu_931_p3(32-1-p_Result_72_fu_939_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_72_fu_939_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_73_fu_1043_p3 <= m_44_fu_931_p3(to_integer(unsigned(lsb_index_3_fu_963_p2)) downto to_integer(unsigned(lsb_index_3_fu_963_p2))) when (to_integer(unsigned(lsb_index_3_fu_963_p2))>= 0 and to_integer(unsigned(lsb_index_3_fu_963_p2))<=31) else "-";
    p_Result_74_fu_1199_p5 <= (zext_ln962_3_fu_1171_p1(63 downto 32) & tmp_9_i_fu_1192_p3 & zext_ln962_3_fu_1171_p1(22 downto 0));
    p_Result_75_fu_1541_p3 <= ireg_fu_1533_p1(63 downto 63);
    p_Result_76_fu_1567_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_1563_p1);
    p_Result_77_fu_842_p1 <= data_V_2_fu_838_p1(31 - 1 downto 0);
    p_Result_78_fu_600_p3 <= ap_sig_allocacmp_p_Val2_35(31 downto 31);
    
    p_Result_79_fu_622_p4_proc : process(m_46_fu_614_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_79_fu_622_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_46_fu_614_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_79_fu_622_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_79_fu_622_p4_i) := m_46_fu_614_p3(32-1-p_Result_79_fu_622_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_79_fu_622_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_80_fu_726_p3 <= m_46_fu_614_p3(to_integer(unsigned(lsb_index_4_fu_646_p2)) downto to_integer(unsigned(lsb_index_4_fu_646_p2))) when (to_integer(unsigned(lsb_index_4_fu_646_p2))>= 0 and to_integer(unsigned(lsb_index_4_fu_646_p2))<=31) else "-";
    p_Result_81_fu_874_p5 <= (zext_ln962_4_fu_846_p1(63 downto 32) & tmp_12_i_fu_867_p3 & zext_ln962_4_fu_846_p1(22 downto 0));
    p_Result_82_fu_1242_p3 <= ireg_1_fu_1234_p1(63 downto 63);
    p_Result_83_fu_1268_p3 <= (ap_const_lv1_1 & trunc_ln565_1_fu_1264_p1);
    p_Result_84_fu_2129_p3 <= ireg_2_fu_2121_p1(63 downto 63);
    p_Result_85_fu_2155_p3 <= (ap_const_lv1_1 & trunc_ln565_2_fu_2151_p1);
    p_Result_86_fu_1765_p3 <= ireg_3_fu_1757_p1(63 downto 63);
    p_Result_87_fu_1791_p3 <= (ap_const_lv1_1 & trunc_ln565_3_fu_1787_p1);
    p_Result_s_fu_529_p3 <= m_25_fu_509_p2(25 downto 25);
    points_address0 <= zext_ln271_fu_285_p1(12 - 1 downto 0);

    points_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            points_ce0 <= ap_const_logic_1;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rbVal_constprop_o_assign_proc : process(rbVal_constprop_i, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2609, select_ln585_7_fu_2023_p3, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_lv1_1 = and_ln1495_3_reg_2609) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o <= select_ln585_7_fu_2023_p3;
        else 
            rbVal_constprop_o <= rbVal_constprop_i;
        end if; 
    end process;


    rbVal_constprop_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, and_ln1495_3_reg_2609)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_lv1_1 = and_ln1495_3_reg_2609) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            rbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln585_1_fu_2365_p3 <= 
        trunc_ln583_2_fu_2229_p1 when (and_ln582_2_fu_2285_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_2_fu_2373_p3 <= 
        ap_const_lv32_0 when (or_ln585_fu_2345_p2(0) = '1') else 
        select_ln585_fu_2351_p3;
    select_ln585_3_fu_2387_p3 <= 
        select_ln585_2_fu_2373_p3 when (or_ln585_2_fu_2381_p2(0) = '1') else 
        select_ln585_1_fu_2365_p3;
    select_ln585_4_fu_1987_p3 <= 
        shl_ln604_3_fu_1909_p2 when (and_ln603_3_fu_1963_p2(0) = '1') else 
        trunc_ln586_7_fu_1905_p1;
    select_ln585_5_fu_2001_p3 <= 
        trunc_ln583_3_fu_1865_p1 when (and_ln582_3_fu_1921_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_6_fu_2009_p3 <= 
        ap_const_lv32_0 when (or_ln585_3_fu_1981_p2(0) = '1') else 
        select_ln585_4_fu_1987_p3;
    select_ln585_7_fu_2023_p3 <= 
        select_ln585_6_fu_2009_p3 when (or_ln585_5_fu_2017_p2(0) = '1') else 
        select_ln585_5_fu_2001_p3;
    select_ln585_fu_2351_p3 <= 
        shl_ln604_2_fu_2273_p2 when (and_ln603_2_fu_2327_p2(0) = '1') else 
        trunc_ln586_5_fu_2269_p1;
    select_ln588_1_fu_2088_p3 <= 
        ap_const_lv1_1 when (tmp_43_fu_2046_p3(0) = '1') else 
        ap_const_lv1_0;
    select_ln588_fu_1489_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_50_fu_1481_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_1_fu_1454_p3 <= 
        trunc_ln586_3_fu_1378_p1 when (and_ln585_2_fu_1412_p2(0) = '1') else 
        trunc_ln583_1_fu_1338_p1;
    select_ln603_2_fu_1509_p3 <= 
        select_ln603_fu_1502_p3 when (or_ln603_3_reg_2594(0) = '1') else 
        select_ln603_1_reg_2599;
    select_ln603_3_fu_2096_p3 <= 
        tmp_51_fu_2080_p3 when (and_ln603_reg_2638(0) = '1') else 
        select_ln588_1_fu_2088_p3;
    select_ln603_4_fu_1749_p3 <= 
        tmp_52_fu_1733_p3 when (and_ln585_fu_1691_p2(0) = '1') else 
        tmp_53_fu_1741_p3;
    select_ln603_5_fu_2103_p3 <= 
        select_ln603_3_fu_2096_p3 when (or_ln603_reg_2643(0) = '1') else 
        select_ln603_4_reg_2649;
    select_ln603_fu_1502_p3 <= 
        shl_ln604_1_fu_1497_p2 when (and_ln603_1_reg_2589(0) = '1') else 
        select_ln588_fu_1489_p3;
    select_ln935_2_fu_1219_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_2_reg_2521(0) = '1') else 
        bitcast_ln744_2_fu_1215_p1;
    select_ln935_3_fu_894_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_3_reg_2481(0) = '1') else 
        bitcast_ln744_3_fu_890_p1;
    select_ln935_fu_583_p3 <= 
        bitcast_ln744_fu_579_p1 when (icmp_ln935_reg_2440(0) = '1') else 
        ap_const_lv32_0;
    select_ln943_3_fu_1174_p3 <= 
        ap_const_lv8_7F when (p_Result_40_reg_2536(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_4_fu_849_p3 <= 
        ap_const_lv8_7F when (p_Result_48_reg_2496(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_537_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_529_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_3_fu_1083_p3 <= 
        icmp_ln949_3_fu_1023_p2 when (icmp_ln946_3_fu_979_p2(0) = '1') else 
        p_Result_73_fu_1043_p3;
    select_ln946_4_fu_766_p3 <= 
        icmp_ln949_4_fu_706_p2 when (icmp_ln946_4_fu_662_p2(0) = '1') else 
        p_Result_80_fu_726_p3;
    select_ln946_fu_446_p3 <= 
        icmp_ln949_fu_406_p2 when (icmp_ln946_fu_362_p2(0) = '1') else 
        p_Result_68_fu_426_p3;
    select_ln958_7_fu_1107_p3 <= 
        select_ln946_3_fu_1083_p3 when (icmp_ln958_3_fu_1051_p2(0) = '1') else 
        and_ln949_7_fu_1057_p2;
    select_ln958_9_fu_790_p3 <= 
        select_ln946_4_fu_766_p3 when (icmp_ln958_4_fu_734_p2(0) = '1') else 
        and_ln949_8_fu_740_p2;
    select_ln958_fu_454_p3 <= 
        select_ln946_fu_446_p3 when (icmp_ln958_fu_434_p2(0) = '1') else 
        and_ln949_6_fu_440_p2;
        sext_ln581_1_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_2574),32));

        sext_ln581_2_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_fu_2211_p3),32));

        sext_ln581_3_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_fu_1847_p3),32));

        sext_ln581_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2623),32));

    sh_amt_1_fu_1324_p3 <= 
        add_ln581_1_fu_1312_p2 when (icmp_ln581_1_fu_1306_p2(0) = '1') else 
        sub_ln581_1_fu_1318_p2;
    sh_amt_2_fu_2211_p3 <= 
        add_ln581_2_fu_2199_p2 when (icmp_ln581_2_fu_2193_p2(0) = '1') else 
        sub_ln581_2_fu_2205_p2;
    sh_amt_3_fu_1847_p3 <= 
        add_ln581_3_fu_1835_p2 when (icmp_ln581_3_fu_1829_p2(0) = '1') else 
        sub_ln581_3_fu_1841_p2;
    sh_amt_fu_1623_p3 <= 
        add_ln581_fu_1611_p2 when (icmp_ln581_fu_1605_p2(0) = '1') else 
        sub_ln581_fu_1617_p2;
    shl_ln271_1_fu_250_p3 <= (trunc_ln271_fu_246_p1 & ap_const_lv4_0);
    shl_ln604_1_fu_1497_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_2579),to_integer(unsigned('0' & sext_ln581_1_fu_1474_p1(31-1 downto 0)))));
    shl_ln604_2_fu_2273_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_2_fu_2229_p1),to_integer(unsigned('0' & sext_ln581_2_fu_2219_p1(31-1 downto 0)))));
    shl_ln604_3_fu_1909_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_3_fu_1865_p1),to_integer(unsigned('0' & sext_ln581_3_fu_1855_p1(31-1 downto 0)))));
    shl_ln604_fu_2054_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_2040_p1),to_integer(unsigned('0' & sext_ln581_fu_2037_p1(31-1 downto 0)))));
    shl_ln949_3_fu_1005_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_3_fu_963_p2(31-1 downto 0)))));
    shl_ln949_4_fu_688_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_4_fu_646_p2(31-1 downto 0)))));
    shl_ln949_fu_388_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_346_p2(31-1 downto 0)))));
    shl_ln959_3_fu_1077_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_6_fu_1063_p1),to_integer(unsigned('0' & zext_ln959_7_fu_1073_p1(31-1 downto 0)))));
    shl_ln959_4_fu_760_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_8_fu_746_p1),to_integer(unsigned('0' & zext_ln959_9_fu_756_p1(31-1 downto 0)))));
    shl_ln959_fu_478_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_fu_466_p1),to_integer(unsigned('0' & zext_ln959_5_fu_474_p1(31-1 downto 0)))));
    shl_ln_fu_234_p3 <= (i_5_reg_2401 & ap_const_lv13_0);
    sub_ln581_1_fu_1318_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_1_fu_1300_p2));
    sub_ln581_2_fu_2205_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_2_fu_2187_p2));
    sub_ln581_3_fu_1841_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_3_fu_1823_p2));
    sub_ln581_fu_1617_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1599_p2));
    sub_ln944_3_fu_957_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_3_fu_949_p3));
    sub_ln944_4_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_4_fu_632_p3));
    sub_ln944_fu_340_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_332_p3));
    sub_ln947_3_fu_989_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_3_fu_985_p1));
    sub_ln947_4_fu_672_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_4_fu_668_p1));
    sub_ln947_fu_372_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_368_p1));
    sub_ln959_3_fu_1067_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_3_fu_957_p2));
    sub_ln959_4_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_4_fu_640_p2));
    sub_ln959_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_2455));
    sub_ln964_3_fu_1181_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_3_reg_2541));
    sub_ln964_4_fu_856_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_4_reg_2501));
    sub_ln964_fu_545_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_reg_2471));
    tmp_12_i_fu_867_p3 <= (p_Result_78_reg_2486 & add_ln964_4_fu_861_p2);
    tmp_35_fu_412_p3 <= lsb_index_fu_346_p2(31 downto 31);
    tmp_38_fu_969_p4 <= lsb_index_3_fu_963_p2(31 downto 1);
    tmp_39_fu_1029_p3 <= lsb_index_3_fu_963_p2(31 downto 31);
    tmp_42_fu_1643_p4 <= sh_amt_fu_1623_p3(11 downto 5);
    tmp_43_fu_2046_p3 <= bitcast_ln702_fu_2043_p1(31 downto 31);
    tmp_45_fu_652_p4 <= lsb_index_4_fu_646_p2(31 downto 1);
    tmp_46_fu_712_p3 <= lsb_index_4_fu_646_p2(31 downto 31);
    tmp_49_fu_1348_p4 <= sh_amt_1_fu_1324_p3(11 downto 5);
    tmp_50_fu_1481_p3 <= bitcast_ln702_3_fu_1477_p1(31 downto 31);
    tmp_51_fu_2080_p3 <= shl_ln604_fu_2054_p2(31 downto 31);
    tmp_52_fu_1733_p3 <= ashr_ln586_fu_1667_p2(31 downto 31);
    tmp_53_fu_1741_p3 <= man_V_4_fu_1585_p3(31 downto 31);
    tmp_55_fu_2239_p4 <= sh_amt_2_fu_2211_p3(11 downto 5);
    tmp_56_fu_1515_p3 <= select_ln603_2_fu_1509_p3(31 downto 31);
    tmp_58_fu_1875_p4 <= sh_amt_3_fu_1847_p3(11 downto 5);
    tmp_8_i_fu_556_p3 <= (p_Result_66_reg_2445 & add_ln964_fu_550_p2);
    tmp_9_i_fu_1192_p3 <= (p_Result_71_reg_2526 & add_ln964_3_fu_1186_p2);
    tmp_V_11_fu_608_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_35));
    tmp_V_8_fu_925_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_s));
    tmp_V_fu_308_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(z_bits_fu_290_p1));
    tmp_fu_352_p4 <= lsb_index_fu_346_p2(31 downto 1);
    tmp_s_fu_277_p3 <= (lshr_ln_fu_263_p4 & trunc_ln271_1_fu_273_p1);
    trunc_ln271_1_fu_273_p1 <= ap_phi_mux_j_phi_fu_203_p4(9 - 1 downto 0);
    trunc_ln271_fu_246_p1 <= ap_phi_mux_j_phi_fu_203_p4(12 - 1 downto 0);
    trunc_ln555_1_fu_1238_p1 <= ireg_1_fu_1234_p1(63 - 1 downto 0);
    trunc_ln555_2_fu_2125_p1 <= ireg_2_fu_2121_p1(63 - 1 downto 0);
    trunc_ln555_3_fu_1761_p1 <= ireg_3_fu_1757_p1(63 - 1 downto 0);
    trunc_ln555_fu_1537_p1 <= ireg_fu_1533_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_1264_p1 <= ireg_1_fu_1234_p1(52 - 1 downto 0);
    trunc_ln565_2_fu_2151_p1 <= ireg_2_fu_2121_p1(52 - 1 downto 0);
    trunc_ln565_3_fu_1787_p1 <= ireg_3_fu_1757_p1(52 - 1 downto 0);
    trunc_ln565_fu_1563_p1 <= ireg_fu_1533_p1(52 - 1 downto 0);
    trunc_ln583_1_fu_1338_p1 <= man_V_7_fu_1286_p3(32 - 1 downto 0);
    trunc_ln583_2_fu_2229_p1 <= man_V_10_fu_2173_p3(32 - 1 downto 0);
    trunc_ln583_3_fu_1865_p1 <= man_V_13_fu_1809_p3(32 - 1 downto 0);
    trunc_ln583_fu_2040_p1 <= man_V_4_reg_2613(32 - 1 downto 0);
    trunc_ln586_2_fu_1364_p1 <= sh_amt_1_fu_1324_p3(6 - 1 downto 0);
    trunc_ln586_3_fu_1378_p1 <= ashr_ln586_1_fu_1372_p2(32 - 1 downto 0);
    trunc_ln586_4_fu_2255_p1 <= sh_amt_2_fu_2211_p3(6 - 1 downto 0);
    trunc_ln586_5_fu_2269_p1 <= ashr_ln586_2_fu_2263_p2(32 - 1 downto 0);
    trunc_ln586_6_fu_1891_p1 <= sh_amt_3_fu_1847_p3(6 - 1 downto 0);
    trunc_ln586_7_fu_1905_p1 <= ashr_ln586_3_fu_1899_p2(32 - 1 downto 0);
    trunc_ln586_fu_1659_p1 <= sh_amt_fu_1623_p3(6 - 1 downto 0);
    trunc_ln943_3_fu_1151_p1 <= l_3_fu_949_p3(8 - 1 downto 0);
    trunc_ln943_4_fu_834_p1 <= l_4_fu_632_p3(8 - 1 downto 0);
    trunc_ln943_fu_462_p1 <= l_fu_332_p3(8 - 1 downto 0);
    trunc_ln947_3_fu_985_p1 <= sub_ln944_3_fu_957_p2(6 - 1 downto 0);
    trunc_ln947_4_fu_668_p1 <= sub_ln944_4_fu_640_p2(6 - 1 downto 0);
    trunc_ln947_fu_368_p1 <= sub_ln944_fu_340_p2(6 - 1 downto 0);
    xor_ln571_1_fu_1382_p2 <= (icmp_ln571_1_fu_1294_p2 xor ap_const_lv1_1);
    xor_ln571_2_fu_2279_p2 <= (icmp_ln571_2_fu_2181_p2 xor ap_const_lv1_1);
    xor_ln571_3_fu_1915_p2 <= (icmp_ln571_3_fu_1817_p2 xor ap_const_lv1_1);
    xor_ln571_fu_2060_p2 <= (icmp_ln571_reg_2618 xor ap_const_lv1_1);
    xor_ln581_1_fu_1436_p2 <= (or_ln581_1_fu_1430_p2 xor ap_const_lv1_1);
    xor_ln581_2_fu_2321_p2 <= (or_ln581_2_fu_2315_p2 xor ap_const_lv1_1);
    xor_ln581_3_fu_1957_p2 <= (or_ln581_3_fu_1951_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1715_p2 <= (or_ln581_fu_1709_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1400_p2 <= (or_ln582_1_fu_1394_p2 xor ap_const_lv1_1);
    xor_ln582_2_fu_2297_p2 <= (or_ln582_2_fu_2291_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_1933_p2 <= (or_ln582_3_fu_1927_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1679_p2 <= (or_ln582_fu_1673_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1418_p2 <= (icmp_ln585_1_fu_1342_p2 xor ap_const_lv1_1);
    xor_ln585_2_fu_2333_p2 <= (icmp_ln585_2_fu_2233_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_1969_p2 <= (icmp_ln585_3_fu_1869_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1697_p2 <= (icmp_ln585_fu_1637_p2 xor ap_const_lv1_1);
    xor_ln949_3_fu_1037_p2 <= (tmp_39_fu_1029_p3 xor ap_const_lv1_1);
    xor_ln949_4_fu_720_p2 <= (tmp_46_fu_712_p3 xor ap_const_lv1_1);
    xor_ln949_fu_420_p2 <= (tmp_35_fu_412_p3 xor ap_const_lv1_1);
    z_bits_fu_290_p1 <= points_q0(32 - 1 downto 0);
    zext_ln271_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_277_p3),64));
    zext_ln368_1_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_77_reg_2506),32));
    zext_ln368_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_70_reg_2552),32));
    zext_ln455_1_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_1250_p4),12));
    zext_ln455_2_fu_2147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_2_fu_2137_p4),12));
    zext_ln455_3_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_3_fu_1773_p4),12));
    zext_ln455_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1549_p4),12));
    zext_ln569_1_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_83_fu_1268_p3),54));
    zext_ln569_2_fu_2163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_85_fu_2155_p3),54));
    zext_ln569_3_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_87_fu_1791_p3),54));
    zext_ln569_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_76_fu_1567_p3),54));
    zext_ln586_1_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_2_fu_1364_p1),54));
    zext_ln586_2_fu_2259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_4_fu_2255_p1),54));
    zext_ln586_3_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_6_fu_1891_p1),54));
    zext_ln586_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_1659_p1),54));
    zext_ln947_3_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_3_fu_989_p2),32));
    zext_ln947_4_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_4_fu_672_p2),32));
    zext_ln947_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_372_p2),32));
    zext_ln958_3_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_3_fu_1091_p2),64));
    zext_ln958_4_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_4_fu_774_p2),64));
    zext_ln958_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_fu_484_p2),64));
    zext_ln959_5_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_fu_469_p2),64));
    zext_ln959_6_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_44_fu_931_p3),64));
    zext_ln959_7_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_3_fu_1067_p2),64));
    zext_ln959_8_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_46_fu_614_p3),64));
    zext_ln959_9_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_4_fu_750_p2),64));
    zext_ln959_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_42_reg_2450),64));
    zext_ln961_3_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_7_fu_1107_p3),64));
    zext_ln961_4_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_9_fu_790_p3),64));
    zext_ln961_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_2466),64));
    zext_ln962_3_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_45_reg_2531),64));
    zext_ln962_4_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_47_reg_2491),64));
    zext_ln962_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_43_fu_515_p4),64));
end behav;
