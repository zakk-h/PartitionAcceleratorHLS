

================================================================
== Vivado HLS Report for 'simple_algo_hw'
================================================================
* Date:           Tue Nov 10 23:56:07 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        proj0
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690t-ffg1927-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     1.514|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.51>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %inA_V), !map !32"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %inB_V), !map !38"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %outA_V), !map !42"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @simple_algo_hw_str) nounwind"   --->   Operation 5 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%inB_V_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %inB_V)" [src/simple_algo.cpp:8]   --->   Operation 6 'read' 'inB_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%inA_V_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %inA_V)" [src/simple_algo.cpp:8]   --->   Operation 7 'read' 'inA_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.51ns)   --->   "%add_ln68 = add i32 %inB_V_read, %inA_V_read" [src/simple_algo.cpp:10]   --->   Operation 8 'add' 'add_ln68' <Predicate = true> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %outA_V, i32 %add_ln68)" [src/simple_algo.cpp:10]   --->   Operation 9 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "ret void" [src/simple_algo.cpp:12]   --->   Operation 10 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.51ns
The critical path consists of the following:
	wire read on port 'inB_V' (src/simple_algo.cpp:8) [8]  (0 ns)
	'add' operation ('add_ln68', src/simple_algo.cpp:10) [10]  (1.51 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
