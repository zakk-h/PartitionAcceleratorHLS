// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_getShadows (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zTopMin,
        patch_address0,
        patch_ce0,
        patch_q0,
        patch_address1,
        patch_ce1,
        patch_q1,
        patch_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state68 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] zTopMin;
output  [7:0] patch_address0;
output   patch_ce0;
input  [31:0] patch_q0;
output  [7:0] patch_address1;
output   patch_ce1;
input  [31:0] patch_q1;
input  [1:0] patch_offset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] patch_address0;
reg patch_ce0;
reg[7:0] patch_address1;
reg patch_ce1;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_reg_253;
reg   [31:0] topL_jL_max_V_reg_265;
reg   [31:0] topR_jL_max_V_reg_277;
reg   [31:0] topL_jR_min_V_reg_289;
reg   [31:0] topR_jR_min_V_reg_301;
reg   [31:0] reg_327;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state19_pp0_stage1_iter2;
wire    ap_block_state27_pp0_stage1_iter3;
wire    ap_block_state35_pp0_stage1_iter4;
wire    ap_block_state43_pp0_stage1_iter5;
wire    ap_block_state51_pp0_stage1_iter6;
wire    ap_block_state59_pp0_stage1_iter7;
wire    ap_block_state67_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln622_reg_1098;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state20_pp0_stage2_iter2;
wire    ap_block_state28_pp0_stage2_iter3;
wire    ap_block_state36_pp0_stage2_iter4;
wire    ap_block_state44_pp0_stage2_iter5;
wire    ap_block_state52_pp0_stage2_iter6;
wire    ap_block_state60_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state21_pp0_stage3_iter2;
wire    ap_block_state29_pp0_stage3_iter3;
wire    ap_block_state37_pp0_stage3_iter4;
wire    ap_block_state45_pp0_stage3_iter5;
wire    ap_block_state53_pp0_stage3_iter6;
wire    ap_block_state61_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state22_pp0_stage4_iter2;
wire    ap_block_state30_pp0_stage4_iter3;
wire    ap_block_state38_pp0_stage4_iter4;
wire    ap_block_state46_pp0_stage4_iter5;
wire    ap_block_state54_pp0_stage4_iter6;
wire    ap_block_state62_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state23_pp0_stage5_iter2;
wire    ap_block_state31_pp0_stage5_iter3;
wire    ap_block_state39_pp0_stage5_iter4;
wire    ap_block_state47_pp0_stage5_iter5;
wire    ap_block_state55_pp0_stage5_iter6;
wire    ap_block_state63_pp0_stage5_iter7;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state24_pp0_stage6_iter2;
wire    ap_block_state32_pp0_stage6_iter3;
wire    ap_block_state40_pp0_stage6_iter4;
wire    ap_block_state48_pp0_stage6_iter5;
wire    ap_block_state56_pp0_stage6_iter6;
wire    ap_block_state64_pp0_stage6_iter7;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state25_pp0_stage7_iter2;
wire    ap_block_state33_pp0_stage7_iter3;
wire    ap_block_state41_pp0_stage7_iter4;
wire    ap_block_state49_pp0_stage7_iter5;
wire    ap_block_state57_pp0_stage7_iter6;
wire    ap_block_state65_pp0_stage7_iter7;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_state26_pp0_stage0_iter3;
wire    ap_block_state34_pp0_stage0_iter4;
wire    ap_block_state42_pp0_stage0_iter5;
wire    ap_block_state50_pp0_stage0_iter6;
wire    ap_block_state58_pp0_stage0_iter7;
wire    ap_block_state66_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] add_ln52_fu_347_p2;
reg   [4:0] add_ln52_reg_1088;
wire   [31:0] zTop_min_V_fu_359_p3;
reg   [31:0] zTop_min_V_reg_1093;
wire   [0:0] icmp_ln622_fu_367_p2;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter1_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter2_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter3_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter4_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter5_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter6_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter7_reg;
reg   [0:0] icmp_ln622_reg_1098_pp0_iter8_reg;
wire   [7:0] tmp_11_cast_fu_399_p3;
reg   [7:0] tmp_11_cast_reg_1102;
wire   [1:0] trunc_ln623_fu_418_p1;
reg   [1:0] trunc_ln623_reg_1130;
reg   [1:0] trunc_ln623_reg_1130_pp0_iter1_reg;
wire   [31:0] select_ln53_fu_462_p3;
reg   [31:0] select_ln53_reg_1145;
wire   [30:0] select_ln67_fu_476_p3;
reg   [30:0] select_ln67_reg_1151;
wire   [31:0] select_ln53_2_fu_522_p3;
reg   [31:0] select_ln53_2_reg_1166;
wire   [31:0] select_ln67_2_fu_553_p3;
reg   [31:0] select_ln67_2_reg_1172;
wire   [31:0] select_ln53_4_fu_599_p3;
reg   [31:0] select_ln53_4_reg_1188;
wire   [31:0] select_ln67_4_fu_625_p3;
reg   [31:0] select_ln67_4_reg_1194;
wire   [31:0] select_ln53_6_fu_671_p3;
reg   [31:0] select_ln53_6_reg_1210;
wire   [31:0] select_ln67_6_fu_697_p3;
reg   [31:0] select_ln67_6_reg_1216;
wire   [31:0] select_ln53_8_fu_743_p3;
reg   [31:0] select_ln53_8_reg_1232;
wire   [31:0] select_ln67_8_fu_769_p3;
reg   [31:0] select_ln67_8_reg_1238;
wire   [31:0] select_ln53_10_fu_815_p3;
reg   [31:0] select_ln53_10_reg_1254;
wire   [31:0] select_ln67_10_fu_841_p3;
reg   [31:0] select_ln67_10_reg_1260;
wire   [2:0] add_ln623_fu_849_p2;
reg   [2:0] add_ln623_reg_1266;
wire   [31:0] select_ln53_12_fu_893_p3;
reg   [31:0] select_ln53_12_reg_1281;
wire   [31:0] select_ln67_12_fu_919_p3;
reg   [31:0] select_ln67_12_reg_1287;
wire   [31:0] select_ln53_14_fu_945_p3;
reg   [31:0] select_ln53_14_reg_1293;
wire   [31:0] select_ln67_14_fu_971_p3;
reg   [31:0] select_ln67_14_reg_1299;
wire   [31:0] select_ln53_15_fu_984_p3;
reg   [31:0] select_ln53_15_reg_1305;
wire   [31:0] select_ln67_15_fu_997_p3;
reg   [31:0] select_ln67_15_reg_1310;
wire   [2:0] add_ln162_fu_1007_p2;
reg   [2:0] add_ln162_reg_1315;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
reg   [31:0] topL_jL_reg_1320;
reg    ap_enable_reg_pp0_iter7;
wire   [0:0] icmp_ln1494_3_fu_1014_p2;
reg   [0:0] icmp_ln1494_3_reg_1325;
reg   [31:0] topR_jL_reg_1330;
wire   [0:0] icmp_ln1494_4_fu_1020_p2;
reg   [0:0] icmp_ln1494_4_reg_1335;
reg   [31:0] topL_jR_reg_1340;
reg    ap_enable_reg_pp0_iter8;
wire   [0:0] icmp_ln1495_7_fu_1026_p2;
reg   [0:0] icmp_ln1495_7_reg_1345;
wire   [31:0] topL_jL_max_V_1_fu_1032_p3;
wire   [31:0] topL_jR_min_V_2_fu_1038_p3;
wire   [31:0] topR_jL_max_V_1_fu_1044_p3;
wire   [31:0] topR_jR_min_V_2_fu_1056_p3;
wire    ap_block_pp0_stage7_subdone;
reg    ap_condition_pp0_flush_enable;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_313_j;
reg   [2:0] ap_phi_mux_i_phi_fu_257_p4;
wire    ap_block_pp0_stage0;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln52_3_fu_394_p1;
wire   [63:0] zext_ln52_4_fu_413_p1;
wire   [63:0] zext_ln52_5_fu_427_p1;
wire   [63:0] zext_ln52_6_fu_437_p1;
wire   [63:0] zext_ln52_7_fu_489_p1;
wire   [63:0] zext_ln52_8_fu_499_p1;
wire   [63:0] zext_ln52_9_fu_566_p1;
wire   [63:0] zext_ln52_10_fu_576_p1;
wire   [63:0] zext_ln52_11_fu_638_p1;
wire   [63:0] zext_ln52_12_fu_648_p1;
wire   [63:0] zext_ln52_13_fu_710_p1;
wire   [63:0] zext_ln52_14_fu_720_p1;
wire   [63:0] zext_ln52_15_fu_782_p1;
wire   [63:0] zext_ln52_16_fu_792_p1;
wire   [63:0] zext_ln52_17_fu_860_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln52_18_fu_870_p1;
wire   [3:0] tmp_fu_335_p3;
wire   [4:0] zext_ln52_1_fu_343_p1;
wire   [4:0] zext_ln52_fu_331_p1;
wire   [0:0] icmp_ln1494_fu_353_p2;
wire   [4:0] zext_ln52_2_fu_373_p1;
wire   [4:0] add_ln52_1_fu_377_p2;
wire   [8:0] tmp_4_fu_386_p3;
wire   [3:0] trunc_ln52_fu_382_p1;
wire   [7:0] or_ln52_fu_407_p2;
wire   [7:0] or_ln52_1_fu_422_p2;
wire   [7:0] or_ln52_2_fu_432_p2;
wire   [1:0] tmp_5_fu_446_p4;
wire   [0:0] icmp_ln1495_fu_456_p2;
wire   [0:0] icmp_ln1494_5_fu_470_p2;
wire   [30:0] trunc_ln1495_fu_442_p1;
wire   [7:0] or_ln52_3_fu_484_p2;
wire   [7:0] or_ln52_4_fu_494_p2;
wire   [0:0] icmp_ln1495_3_fu_504_p2;
wire   [31:0] select_ln53_1_fu_509_p3;
wire   [0:0] icmp_ln1495_4_fu_516_p2;
wire   [31:0] select_ln67_cast_fu_530_p1;
wire   [0:0] icmp_ln1494_6_fu_533_p2;
wire   [31:0] select_ln67_1_fu_539_p3;
wire   [0:0] icmp_ln1494_7_fu_547_p2;
wire   [7:0] or_ln52_5_fu_561_p2;
wire   [7:0] or_ln52_6_fu_571_p2;
wire   [0:0] icmp_ln1495_5_fu_581_p2;
wire   [31:0] select_ln53_3_fu_586_p3;
wire   [0:0] icmp_ln1495_6_fu_593_p2;
wire   [0:0] icmp_ln1494_8_fu_607_p2;
wire   [31:0] select_ln67_3_fu_612_p3;
wire   [0:0] icmp_ln1494_9_fu_619_p2;
wire   [7:0] or_ln52_7_fu_633_p2;
wire   [7:0] or_ln52_8_fu_643_p2;
wire   [0:0] icmp_ln1495_9_fu_653_p2;
wire   [31:0] select_ln53_5_fu_658_p3;
wire   [0:0] icmp_ln1495_10_fu_665_p2;
wire   [0:0] icmp_ln1494_10_fu_679_p2;
wire   [31:0] select_ln67_5_fu_684_p3;
wire   [0:0] icmp_ln1494_11_fu_691_p2;
wire   [7:0] or_ln52_9_fu_705_p2;
wire   [7:0] or_ln52_10_fu_715_p2;
wire   [0:0] icmp_ln1495_11_fu_725_p2;
wire   [31:0] select_ln53_7_fu_730_p3;
wire   [0:0] icmp_ln1495_12_fu_737_p2;
wire   [0:0] icmp_ln1494_12_fu_751_p2;
wire   [31:0] select_ln67_7_fu_756_p3;
wire   [0:0] icmp_ln1494_13_fu_763_p2;
wire   [7:0] or_ln52_11_fu_777_p2;
wire   [7:0] or_ln52_12_fu_787_p2;
wire   [0:0] icmp_ln1495_13_fu_797_p2;
wire   [31:0] select_ln53_9_fu_802_p3;
wire   [0:0] icmp_ln1495_14_fu_809_p2;
wire   [0:0] icmp_ln1494_14_fu_823_p2;
wire   [31:0] select_ln67_9_fu_828_p3;
wire   [0:0] icmp_ln1494_15_fu_835_p2;
wire   [7:0] or_ln52_13_fu_855_p2;
wire   [7:0] or_ln52_14_fu_865_p2;
wire   [0:0] icmp_ln1495_15_fu_875_p2;
wire   [31:0] select_ln53_11_fu_880_p3;
wire   [0:0] icmp_ln1495_16_fu_887_p2;
wire   [0:0] icmp_ln1494_16_fu_901_p2;
wire   [31:0] select_ln67_11_fu_906_p3;
wire   [0:0] icmp_ln1494_17_fu_913_p2;
wire   [0:0] icmp_ln1495_17_fu_927_p2;
wire   [31:0] select_ln53_13_fu_932_p3;
wire   [0:0] icmp_ln1495_18_fu_939_p2;
wire   [0:0] icmp_ln1494_18_fu_953_p2;
wire   [31:0] select_ln67_13_fu_958_p3;
wire   [0:0] icmp_ln1494_19_fu_965_p2;
wire   [0:0] icmp_ln1495_19_fu_979_p2;
wire   [0:0] icmp_ln1494_20_fu_992_p2;
wire   [2:0] zext_ln623_fu_1004_p1;
wire   [0:0] icmp_ln1495_8_fu_1050_p2;
wire    ap_CS_fsm_state68;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg = 1'b0;
end

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_313(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready),
    .ap_ce(1'b1),
    .z_i(grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j),
    .i(3'd5),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_313_j),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_253 <= add_ln623_reg_1266;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_253 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        topL_jL_max_V_reg_265 <= topL_jL_max_V_1_fu_1032_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        topL_jL_max_V_reg_265 <= 32'd2147483648;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        topL_jR_min_V_reg_289 <= topL_jR_min_V_2_fu_1038_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        topL_jR_min_V_reg_289 <= 32'd2146435072;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        topR_jL_max_V_reg_277 <= topR_jL_max_V_1_fu_1044_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        topR_jL_max_V_reg_277 <= 32'd2147483648;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        topR_jR_min_V_reg_301 <= topR_jR_min_V_2_fu_1056_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        topR_jR_min_V_reg_301 <= 32'd2146435072;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln162_reg_1315 <= add_ln162_fu_1007_p2;
        select_ln53_15_reg_1305 <= select_ln53_15_fu_984_p3;
        select_ln67_15_reg_1310 <= select_ln67_15_fu_997_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln52_reg_1088 <= add_ln52_fu_347_p2;
        zTop_min_V_reg_1093 <= zTop_min_V_fu_359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln623_reg_1266 <= add_ln623_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        icmp_ln1494_3_reg_1325 <= icmp_ln1494_3_fu_1014_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        icmp_ln1494_4_reg_1335 <= icmp_ln1494_4_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1495_7_reg_1345 <= icmp_ln1495_7_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln622_reg_1098 <= icmp_ln622_fu_367_p2;
        icmp_ln622_reg_1098_pp0_iter1_reg <= icmp_ln622_reg_1098;
        icmp_ln622_reg_1098_pp0_iter2_reg <= icmp_ln622_reg_1098_pp0_iter1_reg;
        icmp_ln622_reg_1098_pp0_iter3_reg <= icmp_ln622_reg_1098_pp0_iter2_reg;
        icmp_ln622_reg_1098_pp0_iter4_reg <= icmp_ln622_reg_1098_pp0_iter3_reg;
        icmp_ln622_reg_1098_pp0_iter5_reg <= icmp_ln622_reg_1098_pp0_iter4_reg;
        icmp_ln622_reg_1098_pp0_iter6_reg <= icmp_ln622_reg_1098_pp0_iter5_reg;
        icmp_ln622_reg_1098_pp0_iter7_reg <= icmp_ln622_reg_1098_pp0_iter6_reg;
        icmp_ln622_reg_1098_pp0_iter8_reg <= icmp_ln622_reg_1098_pp0_iter7_reg;
        trunc_ln623_reg_1130_pp0_iter1_reg <= trunc_ln623_reg_1130;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_327 <= patch_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        select_ln53_10_reg_1254 <= select_ln53_10_fu_815_p3;
        select_ln67_10_reg_1260 <= select_ln67_10_fu_841_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        select_ln53_12_reg_1281 <= select_ln53_12_fu_893_p3;
        select_ln67_12_reg_1287 <= select_ln67_12_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln53_14_reg_1293 <= select_ln53_14_fu_945_p3;
        select_ln67_14_reg_1299 <= select_ln67_14_fu_971_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln53_2_reg_1166 <= select_ln53_2_fu_522_p3;
        select_ln67_2_reg_1172 <= select_ln67_2_fu_553_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln53_4_reg_1188 <= select_ln53_4_fu_599_p3;
        select_ln67_4_reg_1194 <= select_ln67_4_fu_625_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln53_6_reg_1210 <= select_ln53_6_fu_671_p3;
        select_ln67_6_reg_1216 <= select_ln67_6_fu_697_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln53_8_reg_1232 <= select_ln53_8_fu_743_p3;
        select_ln67_8_reg_1238 <= select_ln67_8_fu_769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln53_reg_1145 <= select_ln53_fu_462_p3;
        select_ln67_reg_1151 <= select_ln67_fu_476_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln622_fu_367_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_11_cast_reg_1102[7 : 4] <= tmp_11_cast_fu_399_p3[7 : 4];
        trunc_ln623_reg_1130 <= trunc_ln623_fu_418_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        topL_jL_reg_1320 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        topL_jR_reg_1340 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln622_reg_1098_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        topR_jL_reg_1330 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
    end
end

always @ (*) begin
    if (((icmp_ln622_reg_1098 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln622_reg_1098 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_257_p4 = add_ln623_reg_1266;
    end else begin
        ap_phi_mux_i_phi_fu_257_p4 = i_reg_253;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_j = add_ln162_reg_1315;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_j = add_ln162_fu_1007_p2;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_j = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i = 32'd52428800;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i = zTop_min_V_reg_1093;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j = select_ln67_15_reg_1310;
    end else if (((1'b0 == ap_block_pp0_stage2) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j = select_ln53_15_reg_1305;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln622_reg_1098_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j = select_ln53_15_fu_984_p3;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            patch_address0 = zext_ln52_18_fu_870_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            patch_address0 = zext_ln52_16_fu_792_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            patch_address0 = zext_ln52_14_fu_720_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            patch_address0 = zext_ln52_12_fu_648_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            patch_address0 = zext_ln52_10_fu_576_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            patch_address0 = zext_ln52_8_fu_499_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            patch_address0 = zext_ln52_6_fu_437_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            patch_address0 = zext_ln52_4_fu_413_p1;
        end else begin
            patch_address0 = 'bx;
        end
    end else begin
        patch_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            patch_address1 = zext_ln52_17_fu_860_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            patch_address1 = zext_ln52_15_fu_782_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            patch_address1 = zext_ln52_13_fu_710_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            patch_address1 = zext_ln52_11_fu_638_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            patch_address1 = zext_ln52_9_fu_566_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            patch_address1 = zext_ln52_7_fu_489_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            patch_address1 = zext_ln52_5_fu_427_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            patch_address1 = zext_ln52_3_fu_394_p1;
        end else begin
            patch_address1 = 'bx;
        end
    end else begin
        patch_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        patch_ce0 = 1'b1;
    end else begin
        patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        patch_ce1 = 1'b1;
    end else begin
        patch_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln162_fu_1007_p2 = (zext_ln623_fu_1004_p1 + 3'd1);

assign add_ln52_1_fu_377_p2 = (add_ln52_reg_1088 + zext_ln52_2_fu_373_p1);

assign add_ln52_fu_347_p2 = (zext_ln52_1_fu_343_p1 + zext_ln52_fu_331_p1);

assign add_ln623_fu_849_p2 = (i_reg_253 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = topL_jL_max_V_reg_265;

assign ap_return_1 = topL_jR_min_V_reg_289;

assign ap_return_2 = topR_jL_max_V_reg_277;

assign ap_return_3 = topR_jR_min_V_reg_301;

assign grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg;

assign icmp_ln1494_10_fu_679_p2 = (($signed(reg_327) > $signed(select_ln67_4_reg_1194)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_691_p2 = (($signed(patch_q1) > $signed(select_ln67_5_fu_684_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_751_p2 = (($signed(reg_327) > $signed(select_ln67_6_reg_1216)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_763_p2 = (($signed(patch_q1) > $signed(select_ln67_7_fu_756_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_823_p2 = (($signed(reg_327) > $signed(select_ln67_8_reg_1238)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_835_p2 = (($signed(patch_q1) > $signed(select_ln67_9_fu_828_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_901_p2 = (($signed(reg_327) > $signed(select_ln67_10_reg_1260)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_913_p2 = (($signed(patch_q1) > $signed(select_ln67_11_fu_906_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_953_p2 = (($signed(reg_327) > $signed(select_ln67_12_reg_1287)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_965_p2 = (($signed(patch_q1) > $signed(select_ln67_13_fu_958_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_20_fu_992_p2 = (($signed(reg_327) > $signed(select_ln67_14_reg_1299)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_1014_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) > $signed(topL_jL_max_V_reg_265)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_1020_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) > $signed(topR_jL_max_V_reg_277)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_470_p2 = (($signed(patch_q1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_533_p2 = (($signed(reg_327) > $signed(select_ln67_cast_fu_530_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_547_p2 = (($signed(patch_q1) > $signed(select_ln67_1_fu_539_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_607_p2 = (($signed(reg_327) > $signed(select_ln67_2_reg_1172)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_619_p2 = (($signed(patch_q1) > $signed(select_ln67_3_fu_612_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_353_p2 = (($signed(zTopMin) > $signed(32'd4242538392)) ? 1'b1 : 1'b0);

assign icmp_ln1495_10_fu_665_p2 = (($signed(patch_q1) < $signed(select_ln53_5_fu_658_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_11_fu_725_p2 = (($signed(reg_327) < $signed(select_ln53_6_reg_1210)) ? 1'b1 : 1'b0);

assign icmp_ln1495_12_fu_737_p2 = (($signed(patch_q1) < $signed(select_ln53_7_fu_730_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_13_fu_797_p2 = (($signed(reg_327) < $signed(select_ln53_8_reg_1232)) ? 1'b1 : 1'b0);

assign icmp_ln1495_14_fu_809_p2 = (($signed(patch_q1) < $signed(select_ln53_9_fu_802_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_15_fu_875_p2 = (($signed(reg_327) < $signed(select_ln53_10_reg_1254)) ? 1'b1 : 1'b0);

assign icmp_ln1495_16_fu_887_p2 = (($signed(patch_q1) < $signed(select_ln53_11_fu_880_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_17_fu_927_p2 = (($signed(reg_327) < $signed(select_ln53_12_reg_1281)) ? 1'b1 : 1'b0);

assign icmp_ln1495_18_fu_939_p2 = (($signed(patch_q1) < $signed(select_ln53_13_fu_932_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_19_fu_979_p2 = (($signed(reg_327) < $signed(select_ln53_14_reg_1293)) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_504_p2 = (($signed(reg_327) < $signed(select_ln53_reg_1145)) ? 1'b1 : 1'b0);

assign icmp_ln1495_4_fu_516_p2 = (($signed(patch_q1) < $signed(select_ln53_1_fu_509_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_5_fu_581_p2 = (($signed(reg_327) < $signed(select_ln53_2_reg_1166)) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_593_p2 = (($signed(patch_q1) < $signed(select_ln53_3_fu_586_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_1026_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) < $signed(topL_jR_min_V_reg_289)) ? 1'b1 : 1'b0);

assign icmp_ln1495_8_fu_1050_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) < $signed(topR_jR_min_V_reg_301)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_653_p2 = (($signed(reg_327) < $signed(select_ln53_4_reg_1188)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_456_p2 = ((tmp_5_fu_446_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln622_fu_367_p2 = ((ap_phi_mux_i_phi_fu_257_p4 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln52_10_fu_715_p2 = (tmp_11_cast_reg_1102 | 8'd11);

assign or_ln52_11_fu_777_p2 = (tmp_11_cast_reg_1102 | 8'd12);

assign or_ln52_12_fu_787_p2 = (tmp_11_cast_reg_1102 | 8'd13);

assign or_ln52_13_fu_855_p2 = (tmp_11_cast_reg_1102 | 8'd14);

assign or_ln52_14_fu_865_p2 = (tmp_11_cast_reg_1102 | 8'd15);

assign or_ln52_1_fu_422_p2 = (tmp_11_cast_reg_1102 | 8'd2);

assign or_ln52_2_fu_432_p2 = (tmp_11_cast_reg_1102 | 8'd3);

assign or_ln52_3_fu_484_p2 = (tmp_11_cast_reg_1102 | 8'd4);

assign or_ln52_4_fu_494_p2 = (tmp_11_cast_reg_1102 | 8'd5);

assign or_ln52_5_fu_561_p2 = (tmp_11_cast_reg_1102 | 8'd6);

assign or_ln52_6_fu_571_p2 = (tmp_11_cast_reg_1102 | 8'd7);

assign or_ln52_7_fu_633_p2 = (tmp_11_cast_reg_1102 | 8'd8);

assign or_ln52_8_fu_643_p2 = (tmp_11_cast_reg_1102 | 8'd9);

assign or_ln52_9_fu_705_p2 = (tmp_11_cast_reg_1102 | 8'd10);

assign or_ln52_fu_407_p2 = (tmp_11_cast_fu_399_p3 | 8'd1);

assign select_ln53_10_fu_815_p3 = ((icmp_ln1495_14_fu_809_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_9_fu_802_p3);

assign select_ln53_11_fu_880_p3 = ((icmp_ln1495_15_fu_875_p2[0:0] == 1'b1) ? reg_327 : select_ln53_10_reg_1254);

assign select_ln53_12_fu_893_p3 = ((icmp_ln1495_16_fu_887_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_11_fu_880_p3);

assign select_ln53_13_fu_932_p3 = ((icmp_ln1495_17_fu_927_p2[0:0] == 1'b1) ? reg_327 : select_ln53_12_reg_1281);

assign select_ln53_14_fu_945_p3 = ((icmp_ln1495_18_fu_939_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_13_fu_932_p3);

assign select_ln53_15_fu_984_p3 = ((icmp_ln1495_19_fu_979_p2[0:0] == 1'b1) ? reg_327 : select_ln53_14_reg_1293);

assign select_ln53_1_fu_509_p3 = ((icmp_ln1495_3_fu_504_p2[0:0] == 1'b1) ? reg_327 : select_ln53_reg_1145);

assign select_ln53_2_fu_522_p3 = ((icmp_ln1495_4_fu_516_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_1_fu_509_p3);

assign select_ln53_3_fu_586_p3 = ((icmp_ln1495_5_fu_581_p2[0:0] == 1'b1) ? reg_327 : select_ln53_2_reg_1166);

assign select_ln53_4_fu_599_p3 = ((icmp_ln1495_6_fu_593_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_3_fu_586_p3);

assign select_ln53_5_fu_658_p3 = ((icmp_ln1495_9_fu_653_p2[0:0] == 1'b1) ? reg_327 : select_ln53_4_reg_1188);

assign select_ln53_6_fu_671_p3 = ((icmp_ln1495_10_fu_665_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_5_fu_658_p3);

assign select_ln53_7_fu_730_p3 = ((icmp_ln1495_11_fu_725_p2[0:0] == 1'b1) ? reg_327 : select_ln53_6_reg_1210);

assign select_ln53_8_fu_743_p3 = ((icmp_ln1495_12_fu_737_p2[0:0] == 1'b1) ? patch_q1 : select_ln53_7_fu_730_p3);

assign select_ln53_9_fu_802_p3 = ((icmp_ln1495_13_fu_797_p2[0:0] == 1'b1) ? reg_327 : select_ln53_8_reg_1232);

assign select_ln53_fu_462_p3 = ((icmp_ln1495_fu_456_p2[0:0] == 1'b1) ? patch_q1 : 32'd1073741824);

assign select_ln67_10_fu_841_p3 = ((icmp_ln1494_15_fu_835_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_9_fu_828_p3);

assign select_ln67_11_fu_906_p3 = ((icmp_ln1494_16_fu_901_p2[0:0] == 1'b1) ? reg_327 : select_ln67_10_reg_1260);

assign select_ln67_12_fu_919_p3 = ((icmp_ln1494_17_fu_913_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_11_fu_906_p3);

assign select_ln67_13_fu_958_p3 = ((icmp_ln1494_18_fu_953_p2[0:0] == 1'b1) ? reg_327 : select_ln67_12_reg_1287);

assign select_ln67_14_fu_971_p3 = ((icmp_ln1494_19_fu_965_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_13_fu_958_p3);

assign select_ln67_15_fu_997_p3 = ((icmp_ln1494_20_fu_992_p2[0:0] == 1'b1) ? reg_327 : select_ln67_14_reg_1299);

assign select_ln67_1_fu_539_p3 = ((icmp_ln1494_6_fu_533_p2[0:0] == 1'b1) ? reg_327 : select_ln67_cast_fu_530_p1);

assign select_ln67_2_fu_553_p3 = ((icmp_ln1494_7_fu_547_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_1_fu_539_p3);

assign select_ln67_3_fu_612_p3 = ((icmp_ln1494_8_fu_607_p2[0:0] == 1'b1) ? reg_327 : select_ln67_2_reg_1172);

assign select_ln67_4_fu_625_p3 = ((icmp_ln1494_9_fu_619_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_3_fu_612_p3);

assign select_ln67_5_fu_684_p3 = ((icmp_ln1494_10_fu_679_p2[0:0] == 1'b1) ? reg_327 : select_ln67_4_reg_1194);

assign select_ln67_6_fu_697_p3 = ((icmp_ln1494_11_fu_691_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_5_fu_684_p3);

assign select_ln67_7_fu_756_p3 = ((icmp_ln1494_12_fu_751_p2[0:0] == 1'b1) ? reg_327 : select_ln67_6_reg_1216);

assign select_ln67_8_fu_769_p3 = ((icmp_ln1494_13_fu_763_p2[0:0] == 1'b1) ? patch_q1 : select_ln67_7_fu_756_p3);

assign select_ln67_9_fu_828_p3 = ((icmp_ln1494_14_fu_823_p2[0:0] == 1'b1) ? reg_327 : select_ln67_8_reg_1238);

assign select_ln67_cast_fu_530_p1 = select_ln67_reg_1151;

assign select_ln67_fu_476_p3 = ((icmp_ln1494_5_fu_470_p2[0:0] == 1'b1) ? trunc_ln1495_fu_442_p1 : 31'd0);

assign tmp_11_cast_fu_399_p3 = {{trunc_ln52_fu_382_p1}, {4'd0}};

assign tmp_4_fu_386_p3 = {{add_ln52_1_fu_377_p2}, {4'd0}};

assign tmp_5_fu_446_p4 = {{patch_q1[31:30]}};

assign tmp_fu_335_p3 = {{patch_offset}, {2'd0}};

assign topL_jL_max_V_1_fu_1032_p3 = ((icmp_ln1494_3_reg_1325[0:0] == 1'b1) ? topL_jL_reg_1320 : topL_jL_max_V_reg_265);

assign topL_jR_min_V_2_fu_1038_p3 = ((icmp_ln1495_7_reg_1345[0:0] == 1'b1) ? topL_jR_reg_1340 : topL_jR_min_V_reg_289);

assign topR_jL_max_V_1_fu_1044_p3 = ((icmp_ln1494_4_reg_1335[0:0] == 1'b1) ? topR_jL_reg_1330 : topR_jL_max_V_reg_277);

assign topR_jR_min_V_2_fu_1056_p3 = ((icmp_ln1495_8_fu_1050_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return : topR_jR_min_V_reg_301);

assign trunc_ln1495_fu_442_p1 = patch_q1[30:0];

assign trunc_ln52_fu_382_p1 = add_ln52_1_fu_377_p2[3:0];

assign trunc_ln623_fu_418_p1 = ap_phi_mux_i_phi_fu_257_p4[1:0];

assign zTop_min_V_fu_359_p3 = ((icmp_ln1494_fu_353_p2[0:0] == 1'b1) ? zTopMin : 32'd4242538392);

assign zext_ln52_10_fu_576_p1 = or_ln52_6_fu_571_p2;

assign zext_ln52_11_fu_638_p1 = or_ln52_7_fu_633_p2;

assign zext_ln52_12_fu_648_p1 = or_ln52_8_fu_643_p2;

assign zext_ln52_13_fu_710_p1 = or_ln52_9_fu_705_p2;

assign zext_ln52_14_fu_720_p1 = or_ln52_10_fu_715_p2;

assign zext_ln52_15_fu_782_p1 = or_ln52_11_fu_777_p2;

assign zext_ln52_16_fu_792_p1 = or_ln52_12_fu_787_p2;

assign zext_ln52_17_fu_860_p1 = or_ln52_13_fu_855_p2;

assign zext_ln52_18_fu_870_p1 = or_ln52_14_fu_865_p2;

assign zext_ln52_1_fu_343_p1 = tmp_fu_335_p3;

assign zext_ln52_2_fu_373_p1 = ap_phi_mux_i_phi_fu_257_p4;

assign zext_ln52_3_fu_394_p1 = tmp_4_fu_386_p3;

assign zext_ln52_4_fu_413_p1 = or_ln52_fu_407_p2;

assign zext_ln52_5_fu_427_p1 = or_ln52_1_fu_422_p2;

assign zext_ln52_6_fu_437_p1 = or_ln52_2_fu_432_p2;

assign zext_ln52_7_fu_489_p1 = or_ln52_3_fu_484_p2;

assign zext_ln52_8_fu_499_p1 = or_ln52_4_fu_494_p2;

assign zext_ln52_9_fu_566_p1 = or_ln52_5_fu_561_p2;

assign zext_ln52_fu_331_p1 = patch_offset;

assign zext_ln623_fu_1004_p1 = trunc_ln623_reg_1130_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    tmp_11_cast_reg_1102[3:0] <= 4'b0000;
end

endmodule //system_top_getShadows
