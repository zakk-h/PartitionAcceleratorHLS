// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_starting_index_and_value10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        points_address1,
        points_ce1,
        points_q1,
        projectionToRow_dout,
        projectionToRow_empty_n,
        projectionToRow_read,
        start_index,
        start_index_ap_vld,
        start_value_i,
        start_value_o,
        start_value_o_ap_vld,
        i_dout,
        i_empty_n,
        i_read
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_pp0_stage2 = 7'd16;
parameter    ap_ST_fsm_pp0_stage3 = 7'd32;
parameter    ap_ST_fsm_state13 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
input  [31:0] projectionToRow_dout;
input   projectionToRow_empty_n;
output   projectionToRow_read;
output  [31:0] start_index;
output   start_index_ap_vld;
input  [31:0] start_value_i;
output  [31:0] start_value_o;
output   start_value_o_ap_vld;
input  [2:0] i_dout;
input   i_empty_n;
output   i_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg num_points_ce1;
reg points_ce1;
reg projectionToRow_read;
reg[31:0] start_index;
reg start_index_ap_vld;
reg[31:0] start_value_o;
reg start_value_o_ap_vld;
reg i_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    projectionToRow_blk_n;
reg    i_blk_n;
reg   [31:0] j_reg_196;
reg   [31:0] j_reg_196_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] j_reg_196_pp0_iter2_reg;
reg   [31:0] p_Val2_21_reg_1263;
reg   [2:0] i_15_reg_1271;
reg   [0:0] p_Result_43_reg_1281;
reg   [31:0] num_points_load_reg_1287;
wire    ap_CS_fsm_state2;
wire   [0:0] tobool_i19_i_fu_230_p2;
reg   [0:0] tobool_i19_i_reg_1292;
wire   [31:0] tmp_V_9_fu_240_p3;
reg   [31:0] tmp_V_9_reg_1297;
wire   [63:0] m_17_i_fu_246_p1;
reg   [63:0] m_17_i_reg_1304;
wire   [15:0] shl_ln_fu_250_p3;
reg   [15:0] shl_ln_reg_1310;
wire   [0:0] icmp_ln300_fu_257_p2;
reg   [0:0] icmp_ln300_reg_1315;
wire   [0:0] icmp_ln958_1_fu_415_p2;
reg   [0:0] icmp_ln958_1_reg_1324;
wire   [31:0] sub_ln959_1_fu_427_p2;
reg   [31:0] sub_ln959_1_reg_1329;
wire   [31:0] add_ln958_1_fu_441_p2;
reg   [31:0] add_ln958_1_reg_1334;
wire   [0:0] select_ln958_2_fu_447_p3;
reg   [0:0] select_ln958_2_reg_1339;
wire   [7:0] trunc_ln943_1_fu_455_p1;
reg   [7:0] trunc_ln943_1_reg_1344;
wire   [31:0] z_bits_fu_459_p1;
reg   [31:0] z_bits_reg_1349;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] z_bits_reg_1349_pp0_iter1_reg;
wire   [0:0] p_Result_39_fu_463_p3;
reg   [0:0] p_Result_39_reg_1355;
wire   [31:0] m_26_fu_477_p3;
reg   [31:0] m_26_reg_1360;
reg   [31:0] p_Result_40_fu_485_p4;
reg   [31:0] p_Result_40_reg_1367;
wire   [31:0] retval_0_i81_i_fu_595_p3;
reg   [31:0] retval_0_i81_i_reg_1372;
wire   [0:0] icmp_ln958_fu_701_p2;
reg   [0:0] icmp_ln958_reg_1377;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] sub_ln959_fu_713_p2;
reg   [31:0] sub_ln959_reg_1382;
wire   [31:0] add_ln958_fu_727_p2;
reg   [31:0] add_ln958_reg_1387;
wire   [0:0] select_ln958_fu_733_p3;
reg   [0:0] select_ln958_reg_1392;
wire   [7:0] trunc_ln943_fu_741_p1;
reg   [7:0] trunc_ln943_reg_1397;
wire   [31:0] add_ln300_fu_745_p2;
reg   [31:0] add_ln300_reg_1402;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] select_ln935_fu_861_p3;
reg   [31:0] select_ln935_reg_1407;
wire   [0:0] icmp_ln935_1_fu_869_p2;
reg   [0:0] icmp_ln935_1_reg_1412;
wire   [0:0] p_Result_48_fu_875_p3;
reg   [0:0] p_Result_48_reg_1417;
wire   [31:0] m_29_fu_889_p3;
reg   [31:0] m_29_reg_1422;
wire   [31:0] sub_ln944_2_fu_915_p2;
reg   [31:0] sub_ln944_2_reg_1428;
wire   [31:0] lsb_index_3_fu_921_p2;
reg   [31:0] lsb_index_3_reg_1434;
reg   [30:0] tmp_63_reg_1441;
wire   [5:0] sub_ln947_2_fu_941_p2;
reg   [5:0] sub_ln947_2_reg_1446;
wire   [0:0] p_Result_50_fu_947_p3;
reg   [0:0] p_Result_50_reg_1451;
wire   [7:0] trunc_ln943_2_fu_955_p1;
reg   [7:0] trunc_ln943_2_reg_1457;
wire   [31:0] grp_fu_209_p2;
reg   [31:0] dc_reg_1462;
reg   [62:0] m_30_reg_1467;
wire   [7:0] select_ln943_2_fu_1102_p3;
reg   [7:0] select_ln943_2_reg_1472;
wire   [0:0] icmp_ln302_fu_1214_p2;
reg   [0:0] icmp_ln302_reg_1487;
wire   [0:0] icmp_ln302_1_fu_1220_p2;
reg   [0:0] icmp_ln302_1_reg_1492;
wire   [0:0] icmp_ln302_2_fu_1226_p2;
reg   [0:0] icmp_ln302_2_reg_1497;
wire   [0:0] icmp_ln302_3_fu_1232_p2;
reg   [0:0] icmp_ln302_3_reg_1502;
wire    ap_block_pp0_stage3_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_phi_mux_j_phi_fu_201_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] idxprom_i_fu_217_p1;
wire   [63:0] zext_ln301_fu_301_p1;
reg    ap_block_state1;
reg   [31:0] start_index_preg;
wire    ap_block_pp0_stage1_01001;
wire   [0:0] and_ln302_1_fu_1252_p2;
wire   [31:0] sub_ln703_fu_1258_p2;
reg   [31:0] start_value_o_preg;
wire   [31:0] grp_fu_213_p0;
wire   [31:0] grp_fu_213_p1;
wire   [31:0] sub_i23_i_fu_235_p2;
wire   [11:0] trunc_ln301_fu_262_p1;
wire   [15:0] shl_ln301_1_fu_266_p3;
wire   [15:0] add_ln301_fu_274_p2;
wire   [2:0] lshr_ln_fu_279_p4;
wire   [8:0] trunc_ln301_1_fu_289_p1;
wire   [11:0] tmp_85_fu_293_p3;
reg   [31:0] p_Result_44_fu_306_p4;
reg   [31:0] l_2_fu_315_p3;
wire   [31:0] sub_ln944_1_fu_323_p2;
wire   [31:0] lsb_index_2_fu_329_p2;
wire   [30:0] tmp_fu_335_p4;
wire   [5:0] trunc_ln947_1_fu_351_p1;
wire   [5:0] sub_ln947_1_fu_355_p2;
wire   [31:0] zext_ln947_1_fu_361_p1;
wire   [31:0] lshr_ln947_1_fu_365_p2;
wire   [31:0] shl_ln949_1_fu_371_p2;
wire   [31:0] or_ln949_fu_377_p2;
wire   [31:0] and_ln949_2_fu_383_p2;
wire   [0:0] tmp_60_fu_394_p3;
wire   [0:0] p_Result_45_fu_408_p3;
wire   [0:0] xor_ln949_1_fu_402_p2;
wire   [0:0] icmp_ln946_1_fu_345_p2;
wire   [0:0] icmp_ln949_1_fu_388_p2;
wire   [0:0] select_ln946_1_fu_433_p3;
wire   [0:0] and_ln949_3_fu_421_p2;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_V_fu_471_p2;
wire   [63:0] zext_ln959_2_fu_495_p1;
wire   [63:0] zext_ln958_1_fu_503_p1;
wire   [63:0] lshr_ln958_1_fu_506_p2;
wire   [63:0] shl_ln959_1_fu_498_p2;
wire   [63:0] m_19_fu_511_p3;
wire   [63:0] zext_ln961_1_fu_518_p1;
wire   [63:0] m_20_fu_521_p2;
wire   [62:0] m_28_fu_527_p4;
wire   [0:0] p_Result_30_fu_541_p3;
wire   [7:0] sub_ln964_1_fu_557_p2;
wire   [7:0] select_ln943_1_fu_549_p3;
wire   [7:0] add_ln964_1_fu_562_p2;
wire   [63:0] zext_ln962_1_fu_537_p1;
wire   [8:0] tmp_11_i_fu_568_p3;
wire   [63:0] p_Result_46_fu_575_p5;
wire   [31:0] LD_2_fu_587_p1;
wire   [31:0] bitcast_ln744_1_fu_591_p1;
wire    ap_block_pp0_stage2;
reg   [31:0] l_fu_602_p3;
wire   [31:0] sub_ln944_fu_609_p2;
wire   [31:0] lsb_index_fu_615_p2;
wire   [30:0] tmp_57_fu_621_p4;
wire   [5:0] trunc_ln947_fu_637_p1;
wire   [5:0] sub_ln947_fu_641_p2;
wire   [31:0] zext_ln947_fu_647_p1;
wire   [31:0] lshr_ln947_fu_651_p2;
wire   [31:0] shl_ln949_fu_657_p2;
wire   [31:0] or_ln949_3_fu_663_p2;
wire   [31:0] and_ln949_fu_669_p2;
wire   [0:0] tmp_58_fu_680_p3;
wire   [0:0] p_Result_41_fu_694_p3;
wire   [0:0] xor_ln949_fu_688_p2;
wire   [0:0] icmp_ln946_fu_631_p2;
wire   [0:0] icmp_ln949_fu_674_p2;
wire   [0:0] select_ln946_fu_719_p3;
wire   [0:0] and_ln949_1_fu_707_p2;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln959_fu_756_p1;
wire   [63:0] zext_ln959_1_fu_759_p1;
wire   [63:0] zext_ln958_fu_768_p1;
wire   [63:0] lshr_ln958_fu_771_p2;
wire   [63:0] shl_ln959_fu_762_p2;
wire   [63:0] m_fu_777_p3;
wire   [63:0] zext_ln961_fu_784_p1;
wire   [63:0] m_15_fu_787_p2;
wire   [62:0] m_27_fu_793_p4;
wire   [0:0] p_Result_s_fu_807_p3;
wire   [7:0] sub_ln964_fu_823_p2;
wire   [7:0] select_ln943_fu_815_p3;
wire   [7:0] add_ln964_fu_828_p2;
wire   [63:0] zext_ln962_fu_803_p1;
wire   [8:0] tmp_i_fu_834_p3;
wire   [63:0] p_Result_42_fu_841_p5;
wire   [31:0] LD_fu_853_p1;
wire   [0:0] icmp_ln935_fu_751_p2;
wire   [31:0] bitcast_ln744_fu_857_p1;
wire   [31:0] tmp_V_6_fu_883_p2;
reg   [31:0] p_Result_49_fu_897_p4;
reg   [31:0] l_3_fu_907_p3;
wire   [5:0] trunc_ln947_2_fu_937_p1;
wire   [31:0] zext_ln947_2_fu_964_p1;
wire   [31:0] lshr_ln947_2_fu_967_p2;
wire   [31:0] shl_ln949_2_fu_973_p2;
wire   [31:0] or_ln949_4_fu_978_p2;
wire   [31:0] and_ln949_4_fu_984_p2;
wire   [0:0] tmp_64_fu_995_p3;
wire   [0:0] xor_ln949_2_fu_1002_p2;
wire   [31:0] sub_ln959_2_fu_1021_p2;
wire   [63:0] zext_ln959_3_fu_1018_p1;
wire   [63:0] zext_ln959_4_fu_1026_p1;
wire   [0:0] icmp_ln946_2_fu_959_p2;
wire   [0:0] icmp_ln949_2_fu_989_p2;
wire   [31:0] add_ln958_2_fu_1043_p2;
wire   [63:0] zext_ln958_2_fu_1048_p1;
wire   [0:0] icmp_ln958_2_fu_1008_p2;
wire   [0:0] select_ln946_2_fu_1036_p3;
wire   [0:0] and_ln949_5_fu_1013_p2;
wire   [63:0] lshr_ln958_2_fu_1052_p2;
wire   [63:0] shl_ln959_2_fu_1030_p2;
wire   [0:0] select_ln958_4_fu_1058_p3;
wire   [63:0] m_23_fu_1066_p3;
wire   [63:0] zext_ln961_2_fu_1074_p1;
wire   [63:0] m_24_fu_1078_p2;
wire   [0:0] p_Result_36_fu_1094_p3;
wire   [31:0] data_V_fu_1110_p1;
wire   [30:0] trunc_ln368_fu_1113_p1;
wire   [31:0] p_Result_47_fu_1121_p3;
wire   [7:0] sub_ln964_2_fu_1137_p2;
wire   [7:0] add_ln964_2_fu_1142_p2;
wire   [63:0] zext_ln962_2_fu_1134_p1;
wire   [8:0] tmp_13_i_fu_1147_p3;
wire   [63:0] p_Result_51_fu_1154_p5;
wire   [30:0] LD_3_fu_1166_p1;
wire   [30:0] data_V_1_fu_1170_p3;
wire   [31:0] p_Result_52_fu_1181_p3;
wire   [7:0] tmp_s_fu_1194_p4;
wire   [22:0] trunc_ln302_fu_1117_p1;
wire   [7:0] tmp_1_fu_1204_p4;
wire   [22:0] trunc_ln302_1_fu_1177_p1;
wire   [0:0] or_ln302_fu_1238_p2;
wire   [0:0] or_ln302_1_fu_1242_p2;
wire   [0:0] and_ln302_fu_1246_p2;
wire   [0:0] grp_fu_213_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state13;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 start_index_preg = 32'd0;
#0 start_value_o_preg = 32'd0;
end

system_top_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln935_reg_1407),
    .din1(retval_0_i81_i_reg_1372),
    .ce(1'b1),
    .dout(grp_fu_209_p2)
);

system_top_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_213_p0),
    .din1(grp_fu_213_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_213_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state6)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_index_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            start_index_preg <= j_reg_196_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_value_o_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            start_value_o_preg <= sub_ln703_fu_1258_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln300_reg_1315 == 1'd0))) begin
        j_reg_196 <= add_ln300_reg_1402;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_196 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln300_reg_1402 <= add_ln300_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln300_fu_257_p2 == 1'd0) & (tobool_i19_i_reg_1292 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln958_1_reg_1334 <= add_ln958_1_fu_441_p2;
        icmp_ln958_1_reg_1324 <= icmp_ln958_1_fu_415_p2;
        select_ln958_2_reg_1339 <= select_ln958_2_fu_447_p3;
        sub_ln959_1_reg_1329 <= sub_ln959_1_fu_427_p2;
        trunc_ln943_1_reg_1344 <= trunc_ln943_1_fu_455_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln300_reg_1315 == 1'd0))) begin
        add_ln958_reg_1387 <= add_ln958_fu_727_p2;
        icmp_ln958_reg_1377 <= icmp_ln958_fu_701_p2;
        select_ln958_reg_1392 <= select_ln958_fu_733_p3;
        sub_ln959_reg_1382 <= sub_ln959_fu_713_p2;
        trunc_ln943_reg_1397 <= trunc_ln943_fu_741_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dc_reg_1462 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_15_reg_1271 <= i_dout;
        p_Result_43_reg_1281 <= projectionToRow_dout[32'd31];
        p_Val2_21_reg_1263 <= projectionToRow_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln300_reg_1315 <= icmp_ln300_fu_257_p2;
        icmp_ln302_1_reg_1492 <= icmp_ln302_1_fu_1220_p2;
        icmp_ln302_2_reg_1497 <= icmp_ln302_2_fu_1226_p2;
        icmp_ln302_3_reg_1502 <= icmp_ln302_3_fu_1232_p2;
        icmp_ln302_reg_1487 <= icmp_ln302_fu_1214_p2;
        j_reg_196_pp0_iter1_reg <= j_reg_196;
        j_reg_196_pp0_iter2_reg <= j_reg_196_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln935_1_reg_1412 <= icmp_ln935_1_fu_869_p2;
        lsb_index_3_reg_1434 <= lsb_index_3_fu_921_p2;
        m_29_reg_1422 <= m_29_fu_889_p3;
        p_Result_48_reg_1417 <= start_value_i[32'd31];
        p_Result_50_reg_1451 <= p_Result_50_fu_947_p3;
        sub_ln944_2_reg_1428 <= sub_ln944_2_fu_915_p2;
        sub_ln947_2_reg_1446 <= sub_ln947_2_fu_941_p2;
        tmp_63_reg_1441 <= {{lsb_index_3_fu_921_p2[31:1]}};
        trunc_ln943_2_reg_1457 <= trunc_ln943_2_fu_955_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_17_i_reg_1304[31 : 0] <= m_17_i_fu_246_p1[31 : 0];
        num_points_load_reg_1287 <= num_points_q1;
        shl_ln_reg_1310[15 : 13] <= shl_ln_fu_250_p3[15 : 13];
        tmp_V_9_reg_1297 <= tmp_V_9_fu_240_p3;
        tobool_i19_i_reg_1292 <= tobool_i19_i_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln300_reg_1315 == 1'd0))) begin
        m_26_reg_1360 <= m_26_fu_477_p3;
        p_Result_39_reg_1355 <= points_q1[32'd31];
        p_Result_40_reg_1367 <= p_Result_40_fu_485_p4;
        retval_0_i81_i_reg_1372 <= retval_0_i81_i_fu_595_p3;
        z_bits_reg_1349 <= z_bits_fu_459_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln935_1_reg_1412 == 1'd0))) begin
        m_30_reg_1467 <= {{m_24_fu_1078_p2[63:1]}};
        select_ln943_2_reg_1472[0] <= select_ln943_2_fu_1102_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln300_reg_1315 == 1'd0))) begin
        select_ln935_reg_1407 <= select_ln935_fu_861_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        z_bits_reg_1349_pp0_iter1_reg <= z_bits_reg_1349;
    end
end

always @ (*) begin
    if ((icmp_ln300_reg_1315 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln300_reg_1315 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_201_p4 = add_ln300_reg_1402;
    end else begin
        ap_phi_mux_j_phi_fu_201_p4 = j_reg_196;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_points_ce1 = 1'b1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        points_ce1 = 1'b1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_blk_n = projectionToRow_empty_n;
    end else begin
        projectionToRow_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_read = 1'b1;
    end else begin
        projectionToRow_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        start_index = j_reg_196_pp0_iter2_reg;
    end else begin
        start_index = start_index_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        start_index_ap_vld = 1'b1;
    end else begin
        start_index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        start_value_o = sub_ln703_fu_1258_p2;
    end else begin
        start_value_o = start_value_o_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln302_1_fu_1252_p2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        start_value_o_ap_vld = 1'b1;
    end else begin
        start_value_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln300_reg_1315 == 1'd1)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln300_reg_1315 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_2_fu_587_p1 = p_Result_46_fu_575_p5[31:0];

assign LD_3_fu_1166_p1 = p_Result_51_fu_1154_p5[30:0];

assign LD_fu_853_p1 = p_Result_42_fu_841_p5[31:0];

assign add_ln300_fu_745_p2 = (j_reg_196 + 32'd1);

assign add_ln301_fu_274_p2 = (shl_ln301_1_fu_266_p3 + shl_ln_reg_1310);

assign add_ln958_1_fu_441_p2 = ($signed(sub_ln944_1_fu_323_p2) + $signed(32'd4294967271));

assign add_ln958_2_fu_1043_p2 = ($signed(sub_ln944_2_reg_1428) + $signed(32'd4294967271));

assign add_ln958_fu_727_p2 = ($signed(sub_ln944_fu_609_p2) + $signed(32'd4294967271));

assign add_ln964_1_fu_562_p2 = (sub_ln964_1_fu_557_p2 + select_ln943_1_fu_549_p3);

assign add_ln964_2_fu_1142_p2 = (sub_ln964_2_fu_1137_p2 + select_ln943_2_reg_1472);

assign add_ln964_fu_828_p2 = (sub_ln964_fu_823_p2 + select_ln943_fu_815_p3);

assign and_ln302_1_fu_1252_p2 = (grp_fu_213_p2 & and_ln302_fu_1246_p2);

assign and_ln302_fu_1246_p2 = (or_ln302_fu_1238_p2 & or_ln302_1_fu_1242_p2);

assign and_ln949_1_fu_707_p2 = (xor_ln949_fu_688_p2 & p_Result_41_fu_694_p3);

assign and_ln949_2_fu_383_p2 = (tmp_V_9_reg_1297 & or_ln949_fu_377_p2);

assign and_ln949_3_fu_421_p2 = (xor_ln949_1_fu_402_p2 & p_Result_45_fu_408_p3);

assign and_ln949_4_fu_984_p2 = (or_ln949_4_fu_978_p2 & m_29_reg_1422);

assign and_ln949_5_fu_1013_p2 = (xor_ln949_2_fu_1002_p2 & p_Result_50_reg_1451);

assign and_ln949_fu_669_p2 = (or_ln949_3_fu_663_p2 & m_26_reg_1360);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln744_1_fu_591_p1 = LD_2_fu_587_p1;

assign bitcast_ln744_fu_857_p1 = LD_fu_853_p1;

assign data_V_1_fu_1170_p3 = ((icmp_ln935_1_reg_1412[0:0] == 1'b1) ? 31'd0 : LD_3_fu_1166_p1);

assign data_V_fu_1110_p1 = dc_reg_1462;

assign grp_fu_213_p0 = p_Result_47_fu_1121_p3;

assign grp_fu_213_p1 = p_Result_52_fu_1181_p3;

assign icmp_ln300_fu_257_p2 = ((ap_phi_mux_j_phi_fu_201_p4 == num_points_load_reg_1287) ? 1'b1 : 1'b0);

assign icmp_ln302_1_fu_1220_p2 = ((trunc_ln302_fu_1117_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln302_2_fu_1226_p2 = ((tmp_1_fu_1204_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln302_3_fu_1232_p2 = ((trunc_ln302_1_fu_1177_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_1214_p2 = ((tmp_s_fu_1194_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_869_p2 = ((start_value_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_751_p2 = ((z_bits_reg_1349 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_1_fu_345_p2 = (($signed(tmp_fu_335_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_2_fu_959_p2 = (($signed(tmp_63_reg_1441) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_631_p2 = (($signed(tmp_57_fu_621_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_1_fu_388_p2 = ((and_ln949_2_fu_383_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_2_fu_989_p2 = ((and_ln949_4_fu_984_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_674_p2 = ((and_ln949_fu_669_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_415_p2 = (($signed(lsb_index_2_fu_329_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_2_fu_1008_p2 = (($signed(lsb_index_3_reg_1434) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_701_p2 = (($signed(lsb_index_fu_615_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_fu_217_p1 = i_dout;


always @ (p_Result_44_fu_306_p4) begin
    if (p_Result_44_fu_306_p4[0] == 1'b1) begin
        l_2_fu_315_p3 = 32'd0;
    end else if (p_Result_44_fu_306_p4[1] == 1'b1) begin
        l_2_fu_315_p3 = 32'd1;
    end else if (p_Result_44_fu_306_p4[2] == 1'b1) begin
        l_2_fu_315_p3 = 32'd2;
    end else if (p_Result_44_fu_306_p4[3] == 1'b1) begin
        l_2_fu_315_p3 = 32'd3;
    end else if (p_Result_44_fu_306_p4[4] == 1'b1) begin
        l_2_fu_315_p3 = 32'd4;
    end else if (p_Result_44_fu_306_p4[5] == 1'b1) begin
        l_2_fu_315_p3 = 32'd5;
    end else if (p_Result_44_fu_306_p4[6] == 1'b1) begin
        l_2_fu_315_p3 = 32'd6;
    end else if (p_Result_44_fu_306_p4[7] == 1'b1) begin
        l_2_fu_315_p3 = 32'd7;
    end else if (p_Result_44_fu_306_p4[8] == 1'b1) begin
        l_2_fu_315_p3 = 32'd8;
    end else if (p_Result_44_fu_306_p4[9] == 1'b1) begin
        l_2_fu_315_p3 = 32'd9;
    end else if (p_Result_44_fu_306_p4[10] == 1'b1) begin
        l_2_fu_315_p3 = 32'd10;
    end else if (p_Result_44_fu_306_p4[11] == 1'b1) begin
        l_2_fu_315_p3 = 32'd11;
    end else if (p_Result_44_fu_306_p4[12] == 1'b1) begin
        l_2_fu_315_p3 = 32'd12;
    end else if (p_Result_44_fu_306_p4[13] == 1'b1) begin
        l_2_fu_315_p3 = 32'd13;
    end else if (p_Result_44_fu_306_p4[14] == 1'b1) begin
        l_2_fu_315_p3 = 32'd14;
    end else if (p_Result_44_fu_306_p4[15] == 1'b1) begin
        l_2_fu_315_p3 = 32'd15;
    end else if (p_Result_44_fu_306_p4[16] == 1'b1) begin
        l_2_fu_315_p3 = 32'd16;
    end else if (p_Result_44_fu_306_p4[17] == 1'b1) begin
        l_2_fu_315_p3 = 32'd17;
    end else if (p_Result_44_fu_306_p4[18] == 1'b1) begin
        l_2_fu_315_p3 = 32'd18;
    end else if (p_Result_44_fu_306_p4[19] == 1'b1) begin
        l_2_fu_315_p3 = 32'd19;
    end else if (p_Result_44_fu_306_p4[20] == 1'b1) begin
        l_2_fu_315_p3 = 32'd20;
    end else if (p_Result_44_fu_306_p4[21] == 1'b1) begin
        l_2_fu_315_p3 = 32'd21;
    end else if (p_Result_44_fu_306_p4[22] == 1'b1) begin
        l_2_fu_315_p3 = 32'd22;
    end else if (p_Result_44_fu_306_p4[23] == 1'b1) begin
        l_2_fu_315_p3 = 32'd23;
    end else if (p_Result_44_fu_306_p4[24] == 1'b1) begin
        l_2_fu_315_p3 = 32'd24;
    end else if (p_Result_44_fu_306_p4[25] == 1'b1) begin
        l_2_fu_315_p3 = 32'd25;
    end else if (p_Result_44_fu_306_p4[26] == 1'b1) begin
        l_2_fu_315_p3 = 32'd26;
    end else if (p_Result_44_fu_306_p4[27] == 1'b1) begin
        l_2_fu_315_p3 = 32'd27;
    end else if (p_Result_44_fu_306_p4[28] == 1'b1) begin
        l_2_fu_315_p3 = 32'd28;
    end else if (p_Result_44_fu_306_p4[29] == 1'b1) begin
        l_2_fu_315_p3 = 32'd29;
    end else if (p_Result_44_fu_306_p4[30] == 1'b1) begin
        l_2_fu_315_p3 = 32'd30;
    end else if (p_Result_44_fu_306_p4[31] == 1'b1) begin
        l_2_fu_315_p3 = 32'd31;
    end else begin
        l_2_fu_315_p3 = 32'd32;
    end
end


always @ (p_Result_49_fu_897_p4) begin
    if (p_Result_49_fu_897_p4[0] == 1'b1) begin
        l_3_fu_907_p3 = 32'd0;
    end else if (p_Result_49_fu_897_p4[1] == 1'b1) begin
        l_3_fu_907_p3 = 32'd1;
    end else if (p_Result_49_fu_897_p4[2] == 1'b1) begin
        l_3_fu_907_p3 = 32'd2;
    end else if (p_Result_49_fu_897_p4[3] == 1'b1) begin
        l_3_fu_907_p3 = 32'd3;
    end else if (p_Result_49_fu_897_p4[4] == 1'b1) begin
        l_3_fu_907_p3 = 32'd4;
    end else if (p_Result_49_fu_897_p4[5] == 1'b1) begin
        l_3_fu_907_p3 = 32'd5;
    end else if (p_Result_49_fu_897_p4[6] == 1'b1) begin
        l_3_fu_907_p3 = 32'd6;
    end else if (p_Result_49_fu_897_p4[7] == 1'b1) begin
        l_3_fu_907_p3 = 32'd7;
    end else if (p_Result_49_fu_897_p4[8] == 1'b1) begin
        l_3_fu_907_p3 = 32'd8;
    end else if (p_Result_49_fu_897_p4[9] == 1'b1) begin
        l_3_fu_907_p3 = 32'd9;
    end else if (p_Result_49_fu_897_p4[10] == 1'b1) begin
        l_3_fu_907_p3 = 32'd10;
    end else if (p_Result_49_fu_897_p4[11] == 1'b1) begin
        l_3_fu_907_p3 = 32'd11;
    end else if (p_Result_49_fu_897_p4[12] == 1'b1) begin
        l_3_fu_907_p3 = 32'd12;
    end else if (p_Result_49_fu_897_p4[13] == 1'b1) begin
        l_3_fu_907_p3 = 32'd13;
    end else if (p_Result_49_fu_897_p4[14] == 1'b1) begin
        l_3_fu_907_p3 = 32'd14;
    end else if (p_Result_49_fu_897_p4[15] == 1'b1) begin
        l_3_fu_907_p3 = 32'd15;
    end else if (p_Result_49_fu_897_p4[16] == 1'b1) begin
        l_3_fu_907_p3 = 32'd16;
    end else if (p_Result_49_fu_897_p4[17] == 1'b1) begin
        l_3_fu_907_p3 = 32'd17;
    end else if (p_Result_49_fu_897_p4[18] == 1'b1) begin
        l_3_fu_907_p3 = 32'd18;
    end else if (p_Result_49_fu_897_p4[19] == 1'b1) begin
        l_3_fu_907_p3 = 32'd19;
    end else if (p_Result_49_fu_897_p4[20] == 1'b1) begin
        l_3_fu_907_p3 = 32'd20;
    end else if (p_Result_49_fu_897_p4[21] == 1'b1) begin
        l_3_fu_907_p3 = 32'd21;
    end else if (p_Result_49_fu_897_p4[22] == 1'b1) begin
        l_3_fu_907_p3 = 32'd22;
    end else if (p_Result_49_fu_897_p4[23] == 1'b1) begin
        l_3_fu_907_p3 = 32'd23;
    end else if (p_Result_49_fu_897_p4[24] == 1'b1) begin
        l_3_fu_907_p3 = 32'd24;
    end else if (p_Result_49_fu_897_p4[25] == 1'b1) begin
        l_3_fu_907_p3 = 32'd25;
    end else if (p_Result_49_fu_897_p4[26] == 1'b1) begin
        l_3_fu_907_p3 = 32'd26;
    end else if (p_Result_49_fu_897_p4[27] == 1'b1) begin
        l_3_fu_907_p3 = 32'd27;
    end else if (p_Result_49_fu_897_p4[28] == 1'b1) begin
        l_3_fu_907_p3 = 32'd28;
    end else if (p_Result_49_fu_897_p4[29] == 1'b1) begin
        l_3_fu_907_p3 = 32'd29;
    end else if (p_Result_49_fu_897_p4[30] == 1'b1) begin
        l_3_fu_907_p3 = 32'd30;
    end else if (p_Result_49_fu_897_p4[31] == 1'b1) begin
        l_3_fu_907_p3 = 32'd31;
    end else begin
        l_3_fu_907_p3 = 32'd32;
    end
end


always @ (p_Result_40_reg_1367) begin
    if (p_Result_40_reg_1367[0] == 1'b1) begin
        l_fu_602_p3 = 32'd0;
    end else if (p_Result_40_reg_1367[1] == 1'b1) begin
        l_fu_602_p3 = 32'd1;
    end else if (p_Result_40_reg_1367[2] == 1'b1) begin
        l_fu_602_p3 = 32'd2;
    end else if (p_Result_40_reg_1367[3] == 1'b1) begin
        l_fu_602_p3 = 32'd3;
    end else if (p_Result_40_reg_1367[4] == 1'b1) begin
        l_fu_602_p3 = 32'd4;
    end else if (p_Result_40_reg_1367[5] == 1'b1) begin
        l_fu_602_p3 = 32'd5;
    end else if (p_Result_40_reg_1367[6] == 1'b1) begin
        l_fu_602_p3 = 32'd6;
    end else if (p_Result_40_reg_1367[7] == 1'b1) begin
        l_fu_602_p3 = 32'd7;
    end else if (p_Result_40_reg_1367[8] == 1'b1) begin
        l_fu_602_p3 = 32'd8;
    end else if (p_Result_40_reg_1367[9] == 1'b1) begin
        l_fu_602_p3 = 32'd9;
    end else if (p_Result_40_reg_1367[10] == 1'b1) begin
        l_fu_602_p3 = 32'd10;
    end else if (p_Result_40_reg_1367[11] == 1'b1) begin
        l_fu_602_p3 = 32'd11;
    end else if (p_Result_40_reg_1367[12] == 1'b1) begin
        l_fu_602_p3 = 32'd12;
    end else if (p_Result_40_reg_1367[13] == 1'b1) begin
        l_fu_602_p3 = 32'd13;
    end else if (p_Result_40_reg_1367[14] == 1'b1) begin
        l_fu_602_p3 = 32'd14;
    end else if (p_Result_40_reg_1367[15] == 1'b1) begin
        l_fu_602_p3 = 32'd15;
    end else if (p_Result_40_reg_1367[16] == 1'b1) begin
        l_fu_602_p3 = 32'd16;
    end else if (p_Result_40_reg_1367[17] == 1'b1) begin
        l_fu_602_p3 = 32'd17;
    end else if (p_Result_40_reg_1367[18] == 1'b1) begin
        l_fu_602_p3 = 32'd18;
    end else if (p_Result_40_reg_1367[19] == 1'b1) begin
        l_fu_602_p3 = 32'd19;
    end else if (p_Result_40_reg_1367[20] == 1'b1) begin
        l_fu_602_p3 = 32'd20;
    end else if (p_Result_40_reg_1367[21] == 1'b1) begin
        l_fu_602_p3 = 32'd21;
    end else if (p_Result_40_reg_1367[22] == 1'b1) begin
        l_fu_602_p3 = 32'd22;
    end else if (p_Result_40_reg_1367[23] == 1'b1) begin
        l_fu_602_p3 = 32'd23;
    end else if (p_Result_40_reg_1367[24] == 1'b1) begin
        l_fu_602_p3 = 32'd24;
    end else if (p_Result_40_reg_1367[25] == 1'b1) begin
        l_fu_602_p3 = 32'd25;
    end else if (p_Result_40_reg_1367[26] == 1'b1) begin
        l_fu_602_p3 = 32'd26;
    end else if (p_Result_40_reg_1367[27] == 1'b1) begin
        l_fu_602_p3 = 32'd27;
    end else if (p_Result_40_reg_1367[28] == 1'b1) begin
        l_fu_602_p3 = 32'd28;
    end else if (p_Result_40_reg_1367[29] == 1'b1) begin
        l_fu_602_p3 = 32'd29;
    end else if (p_Result_40_reg_1367[30] == 1'b1) begin
        l_fu_602_p3 = 32'd30;
    end else if (p_Result_40_reg_1367[31] == 1'b1) begin
        l_fu_602_p3 = 32'd31;
    end else begin
        l_fu_602_p3 = 32'd32;
    end
end

assign lsb_index_2_fu_329_p2 = ($signed(sub_ln944_1_fu_323_p2) + $signed(32'd4294967272));

assign lsb_index_3_fu_921_p2 = ($signed(sub_ln944_2_fu_915_p2) + $signed(32'd4294967272));

assign lsb_index_fu_615_p2 = ($signed(sub_ln944_fu_609_p2) + $signed(32'd4294967272));

assign lshr_ln947_1_fu_365_p2 = 32'd4294967295 >> zext_ln947_1_fu_361_p1;

assign lshr_ln947_2_fu_967_p2 = 32'd4294967295 >> zext_ln947_2_fu_964_p1;

assign lshr_ln947_fu_651_p2 = 32'd4294967295 >> zext_ln947_fu_647_p1;

assign lshr_ln958_1_fu_506_p2 = m_17_i_reg_1304 >> zext_ln958_1_fu_503_p1;

assign lshr_ln958_2_fu_1052_p2 = zext_ln959_3_fu_1018_p1 >> zext_ln958_2_fu_1048_p1;

assign lshr_ln958_fu_771_p2 = zext_ln959_fu_756_p1 >> zext_ln958_fu_768_p1;

assign lshr_ln_fu_279_p4 = {{add_ln301_fu_274_p2[15:13]}};

assign m_15_fu_787_p2 = (m_fu_777_p3 + zext_ln961_fu_784_p1);

assign m_17_i_fu_246_p1 = tmp_V_9_fu_240_p3;

assign m_19_fu_511_p3 = ((icmp_ln958_1_reg_1324[0:0] == 1'b1) ? lshr_ln958_1_fu_506_p2 : shl_ln959_1_fu_498_p2);

assign m_20_fu_521_p2 = (m_19_fu_511_p3 + zext_ln961_1_fu_518_p1);

assign m_23_fu_1066_p3 = ((icmp_ln958_2_fu_1008_p2[0:0] == 1'b1) ? lshr_ln958_2_fu_1052_p2 : shl_ln959_2_fu_1030_p2);

assign m_24_fu_1078_p2 = (m_23_fu_1066_p3 + zext_ln961_2_fu_1074_p1);

assign m_26_fu_477_p3 = ((p_Result_39_fu_463_p3[0:0] == 1'b1) ? tmp_V_fu_471_p2 : z_bits_fu_459_p1);

assign m_27_fu_793_p4 = {{m_15_fu_787_p2[63:1]}};

assign m_28_fu_527_p4 = {{m_20_fu_521_p2[63:1]}};

assign m_29_fu_889_p3 = ((p_Result_48_fu_875_p3[0:0] == 1'b1) ? tmp_V_6_fu_883_p2 : start_value_i);

assign m_fu_777_p3 = ((icmp_ln958_reg_1377[0:0] == 1'b1) ? lshr_ln958_fu_771_p2 : shl_ln959_fu_762_p2);

assign num_points_address1 = idxprom_i_fu_217_p1;

assign or_ln302_1_fu_1242_p2 = (icmp_ln302_3_reg_1502 | icmp_ln302_2_reg_1497);

assign or_ln302_fu_1238_p2 = (icmp_ln302_reg_1487 | icmp_ln302_1_reg_1492);

assign or_ln949_3_fu_663_p2 = (shl_ln949_fu_657_p2 | lshr_ln947_fu_651_p2);

assign or_ln949_4_fu_978_p2 = (shl_ln949_2_fu_973_p2 | lshr_ln947_2_fu_967_p2);

assign or_ln949_fu_377_p2 = (shl_ln949_1_fu_371_p2 | lshr_ln947_1_fu_365_p2);

assign p_Result_30_fu_541_p3 = m_20_fu_521_p2[32'd25];

assign p_Result_36_fu_1094_p3 = m_24_fu_1078_p2[32'd25];

assign p_Result_39_fu_463_p3 = points_q1[32'd31];

integer ap_tvar_int_0;

always @ (m_26_fu_477_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_40_fu_485_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_40_fu_485_p4[ap_tvar_int_0] = m_26_fu_477_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_41_fu_694_p3 = m_26_reg_1360[lsb_index_fu_615_p2];

assign p_Result_42_fu_841_p5 = {{zext_ln962_fu_803_p1[63:32]}, {tmp_i_fu_834_p3}, {zext_ln962_fu_803_p1[22:0]}};

integer ap_tvar_int_1;

always @ (tmp_V_9_reg_1297) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_44_fu_306_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_44_fu_306_p4[ap_tvar_int_1] = tmp_V_9_reg_1297[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_45_fu_408_p3 = tmp_V_9_reg_1297[lsb_index_2_fu_329_p2];

assign p_Result_46_fu_575_p5 = {{zext_ln962_1_fu_537_p1[63:32]}, {tmp_11_i_fu_568_p3}, {zext_ln962_1_fu_537_p1[22:0]}};

assign p_Result_47_fu_1121_p3 = {{1'd0}, {trunc_ln368_fu_1113_p1}};

assign p_Result_48_fu_875_p3 = start_value_i[32'd31];

integer ap_tvar_int_2;

always @ (m_29_fu_889_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_49_fu_897_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_49_fu_897_p4[ap_tvar_int_2] = m_29_fu_889_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_50_fu_947_p3 = m_29_fu_889_p3[lsb_index_3_fu_921_p2];

assign p_Result_51_fu_1154_p5 = {{zext_ln962_2_fu_1134_p1[63:32]}, {tmp_13_i_fu_1147_p3}, {zext_ln962_2_fu_1134_p1[22:0]}};

assign p_Result_52_fu_1181_p3 = {{1'd0}, {data_V_1_fu_1170_p3}};

assign p_Result_s_fu_807_p3 = m_15_fu_787_p2[32'd25];

assign points_address1 = zext_ln301_fu_301_p1;

assign retval_0_i81_i_fu_595_p3 = ((tobool_i19_i_reg_1292[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_1_fu_591_p1);

assign select_ln935_fu_861_p3 = ((icmp_ln935_fu_751_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_857_p1);

assign select_ln943_1_fu_549_p3 = ((p_Result_30_fu_541_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_2_fu_1102_p3 = ((p_Result_36_fu_1094_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_815_p3 = ((p_Result_s_fu_807_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_1_fu_433_p3 = ((icmp_ln946_1_fu_345_p2[0:0] == 1'b1) ? icmp_ln949_1_fu_388_p2 : p_Result_45_fu_408_p3);

assign select_ln946_2_fu_1036_p3 = ((icmp_ln946_2_fu_959_p2[0:0] == 1'b1) ? icmp_ln949_2_fu_989_p2 : p_Result_50_reg_1451);

assign select_ln946_fu_719_p3 = ((icmp_ln946_fu_631_p2[0:0] == 1'b1) ? icmp_ln949_fu_674_p2 : p_Result_41_fu_694_p3);

assign select_ln958_2_fu_447_p3 = ((icmp_ln958_1_fu_415_p2[0:0] == 1'b1) ? select_ln946_1_fu_433_p3 : and_ln949_3_fu_421_p2);

assign select_ln958_4_fu_1058_p3 = ((icmp_ln958_2_fu_1008_p2[0:0] == 1'b1) ? select_ln946_2_fu_1036_p3 : and_ln949_5_fu_1013_p2);

assign select_ln958_fu_733_p3 = ((icmp_ln958_fu_701_p2[0:0] == 1'b1) ? select_ln946_fu_719_p3 : and_ln949_1_fu_707_p2);

assign shl_ln301_1_fu_266_p3 = {{trunc_ln301_fu_262_p1}, {4'd0}};

assign shl_ln949_1_fu_371_p2 = 32'd1 << lsb_index_2_fu_329_p2;

assign shl_ln949_2_fu_973_p2 = 32'd1 << lsb_index_3_reg_1434;

assign shl_ln949_fu_657_p2 = 32'd1 << lsb_index_fu_615_p2;

assign shl_ln959_1_fu_498_p2 = m_17_i_reg_1304 << zext_ln959_2_fu_495_p1;

assign shl_ln959_2_fu_1030_p2 = zext_ln959_3_fu_1018_p1 << zext_ln959_4_fu_1026_p1;

assign shl_ln959_fu_762_p2 = zext_ln959_fu_756_p1 << zext_ln959_1_fu_759_p1;

assign shl_ln_fu_250_p3 = {{i_15_reg_1271}, {13'd0}};

assign sub_i23_i_fu_235_p2 = (32'd0 - p_Val2_21_reg_1263);

assign sub_ln703_fu_1258_p2 = (z_bits_reg_1349_pp0_iter1_reg - p_Val2_21_reg_1263);

assign sub_ln944_1_fu_323_p2 = (32'd32 - l_2_fu_315_p3);

assign sub_ln944_2_fu_915_p2 = (32'd32 - l_3_fu_907_p3);

assign sub_ln944_fu_609_p2 = (32'd32 - l_fu_602_p3);

assign sub_ln947_1_fu_355_p2 = ($signed(6'd57) - $signed(trunc_ln947_1_fu_351_p1));

assign sub_ln947_2_fu_941_p2 = ($signed(6'd57) - $signed(trunc_ln947_2_fu_937_p1));

assign sub_ln947_fu_641_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_637_p1));

assign sub_ln959_1_fu_427_p2 = (32'd25 - sub_ln944_1_fu_323_p2);

assign sub_ln959_2_fu_1021_p2 = (32'd25 - sub_ln944_2_reg_1428);

assign sub_ln959_fu_713_p2 = (32'd25 - sub_ln944_fu_609_p2);

assign sub_ln964_1_fu_557_p2 = (8'd12 - trunc_ln943_1_reg_1344);

assign sub_ln964_2_fu_1137_p2 = (8'd12 - trunc_ln943_2_reg_1457);

assign sub_ln964_fu_823_p2 = (8'd12 - trunc_ln943_reg_1397);

assign tmp_11_i_fu_568_p3 = {{p_Result_43_reg_1281}, {add_ln964_1_fu_562_p2}};

assign tmp_13_i_fu_1147_p3 = {{p_Result_48_reg_1417}, {add_ln964_2_fu_1142_p2}};

assign tmp_1_fu_1204_p4 = {{data_V_1_fu_1170_p3[30:23]}};

assign tmp_57_fu_621_p4 = {{lsb_index_fu_615_p2[31:1]}};

assign tmp_58_fu_680_p3 = lsb_index_fu_615_p2[32'd31];

assign tmp_60_fu_394_p3 = lsb_index_2_fu_329_p2[32'd31];

assign tmp_64_fu_995_p3 = lsb_index_3_reg_1434[32'd31];

assign tmp_85_fu_293_p3 = {{lshr_ln_fu_279_p4}, {trunc_ln301_1_fu_289_p1}};

assign tmp_V_6_fu_883_p2 = (32'd0 - start_value_i);

assign tmp_V_9_fu_240_p3 = ((p_Result_43_reg_1281[0:0] == 1'b1) ? sub_i23_i_fu_235_p2 : p_Val2_21_reg_1263);

assign tmp_V_fu_471_p2 = (32'd0 - z_bits_fu_459_p1);

assign tmp_fu_335_p4 = {{lsb_index_2_fu_329_p2[31:1]}};

assign tmp_i_fu_834_p3 = {{p_Result_39_reg_1355}, {add_ln964_fu_828_p2}};

assign tmp_s_fu_1194_p4 = {{data_V_fu_1110_p1[30:23]}};

assign tobool_i19_i_fu_230_p2 = ((p_Val2_21_reg_1263 == 32'd0) ? 1'b1 : 1'b0);

assign trunc_ln301_1_fu_289_p1 = ap_phi_mux_j_phi_fu_201_p4[8:0];

assign trunc_ln301_fu_262_p1 = ap_phi_mux_j_phi_fu_201_p4[11:0];

assign trunc_ln302_1_fu_1177_p1 = data_V_1_fu_1170_p3[22:0];

assign trunc_ln302_fu_1117_p1 = data_V_fu_1110_p1[22:0];

assign trunc_ln368_fu_1113_p1 = data_V_fu_1110_p1[30:0];

assign trunc_ln943_1_fu_455_p1 = l_2_fu_315_p3[7:0];

assign trunc_ln943_2_fu_955_p1 = l_3_fu_907_p3[7:0];

assign trunc_ln943_fu_741_p1 = l_fu_602_p3[7:0];

assign trunc_ln947_1_fu_351_p1 = sub_ln944_1_fu_323_p2[5:0];

assign trunc_ln947_2_fu_937_p1 = sub_ln944_2_fu_915_p2[5:0];

assign trunc_ln947_fu_637_p1 = sub_ln944_fu_609_p2[5:0];

assign xor_ln949_1_fu_402_p2 = (tmp_60_fu_394_p3 ^ 1'd1);

assign xor_ln949_2_fu_1002_p2 = (tmp_64_fu_995_p3 ^ 1'd1);

assign xor_ln949_fu_688_p2 = (tmp_58_fu_680_p3 ^ 1'd1);

assign z_bits_fu_459_p1 = points_q1[31:0];

assign zext_ln301_fu_301_p1 = tmp_85_fu_293_p3;

assign zext_ln947_1_fu_361_p1 = sub_ln947_1_fu_355_p2;

assign zext_ln947_2_fu_964_p1 = sub_ln947_2_reg_1446;

assign zext_ln947_fu_647_p1 = sub_ln947_fu_641_p2;

assign zext_ln958_1_fu_503_p1 = add_ln958_1_reg_1334;

assign zext_ln958_2_fu_1048_p1 = add_ln958_2_fu_1043_p2;

assign zext_ln958_fu_768_p1 = add_ln958_reg_1387;

assign zext_ln959_1_fu_759_p1 = sub_ln959_reg_1382;

assign zext_ln959_2_fu_495_p1 = sub_ln959_1_reg_1329;

assign zext_ln959_3_fu_1018_p1 = m_29_reg_1422;

assign zext_ln959_4_fu_1026_p1 = sub_ln959_2_fu_1021_p2;

assign zext_ln959_fu_756_p1 = m_26_reg_1360;

assign zext_ln961_1_fu_518_p1 = select_ln958_2_reg_1339;

assign zext_ln961_2_fu_1074_p1 = select_ln958_4_fu_1058_p3;

assign zext_ln961_fu_784_p1 = select_ln958_reg_1392;

assign zext_ln962_1_fu_537_p1 = m_28_fu_527_p4;

assign zext_ln962_2_fu_1134_p1 = m_30_reg_1467;

assign zext_ln962_fu_803_p1 = m_27_fu_793_p4;

always @ (posedge ap_clk) begin
    m_17_i_reg_1304[63:32] <= 32'b00000000000000000000000000000000;
    shl_ln_reg_1310[12:0] <= 13'b0000000000000;
    select_ln943_2_reg_1472[7:1] <= 7'b0111111;
end

endmodule //system_top_p_find_starting_index_and_value10
