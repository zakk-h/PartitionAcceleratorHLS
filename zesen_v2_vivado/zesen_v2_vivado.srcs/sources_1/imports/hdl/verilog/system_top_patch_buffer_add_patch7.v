// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_patch_buffer_add_patch7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        new_patch_address0,
        new_patch_ce0,
        new_patch_q0,
        new_patch_address1,
        new_patch_ce1,
        new_patch_q1,
        patch_buffer_address0,
        patch_buffer_ce0,
        patch_buffer_we0,
        patch_buffer_d0,
        patch_buffer_address1,
        patch_buffer_ce1,
        patch_buffer_we1,
        patch_buffer_d1,
        patch_buffer_is_empty_address0,
        patch_buffer_is_empty_ce0,
        patch_buffer_is_empty_we0,
        patch_buffer_is_empty_d0,
        latest_patch_index_read,
        num_patches_read,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] new_patch_address0;
output   new_patch_ce0;
input  [95:0] new_patch_q0;
output  [6:0] new_patch_address1;
output   new_patch_ce1;
input  [95:0] new_patch_q1;
output  [7:0] patch_buffer_address0;
output   patch_buffer_ce0;
output   patch_buffer_we0;
output  [31:0] patch_buffer_d0;
output  [7:0] patch_buffer_address1;
output   patch_buffer_ce1;
output   patch_buffer_we1;
output  [31:0] patch_buffer_d1;
output  [1:0] patch_buffer_is_empty_address0;
output   patch_buffer_is_empty_ce0;
output   patch_buffer_is_empty_we0;
output  [0:0] patch_buffer_is_empty_d0;
input  [31:0] latest_patch_index_read;
input  [31:0] num_patches_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] new_patch_address0;
reg new_patch_ce0;
reg[6:0] new_patch_address1;
reg new_patch_ce1;
reg[7:0] patch_buffer_address0;
reg patch_buffer_ce0;
reg patch_buffer_we0;
reg[31:0] patch_buffer_d0;
reg[7:0] patch_buffer_address1;
reg patch_buffer_ce1;
reg patch_buffer_we1;
reg[31:0] patch_buffer_d1;
reg patch_buffer_is_empty_ce0;
reg patch_buffer_is_empty_we0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire   [31:0] grp_fu_1756_p2;
reg   [31:0] urem_ln18_reg_3035;
wire   [7:0] add_ln38_fu_1791_p2;
reg   [7:0] add_ln38_reg_3040;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire   [63:0] zext_ln38_fu_1797_p1;
wire   [63:0] zext_ln38_1_fu_1808_p1;
wire   [63:0] zext_ln28_fu_1762_p1;
wire   [63:0] zext_ln38_2_fu_1828_p1;
wire   [63:0] zext_ln38_3_fu_1838_p1;
wire   [63:0] zext_ln38_4_fu_1858_p1;
wire   [63:0] zext_ln38_5_fu_1868_p1;
wire   [63:0] zext_ln38_6_fu_1888_p1;
wire   [63:0] zext_ln38_7_fu_1898_p1;
wire   [63:0] zext_ln38_8_fu_1918_p1;
wire   [63:0] zext_ln38_9_fu_1928_p1;
wire   [63:0] zext_ln38_10_fu_1948_p1;
wire   [63:0] zext_ln38_11_fu_1958_p1;
wire   [63:0] zext_ln38_12_fu_1978_p1;
wire   [63:0] zext_ln38_13_fu_1988_p1;
wire   [63:0] zext_ln38_14_fu_2008_p1;
wire   [63:0] zext_ln38_15_fu_2018_p1;
wire   [63:0] zext_ln38_16_fu_2038_p1;
wire   [63:0] zext_ln38_17_fu_2048_p1;
wire   [63:0] zext_ln38_18_fu_2068_p1;
wire   [63:0] zext_ln38_19_fu_2078_p1;
wire   [63:0] zext_ln38_20_fu_2098_p1;
wire   [63:0] zext_ln38_21_fu_2108_p1;
wire   [63:0] zext_ln38_22_fu_2128_p1;
wire   [63:0] zext_ln38_23_fu_2138_p1;
wire   [63:0] zext_ln38_24_fu_2158_p1;
wire   [63:0] zext_ln38_25_fu_2168_p1;
wire   [63:0] zext_ln38_26_fu_2188_p1;
wire   [63:0] zext_ln38_27_fu_2198_p1;
wire   [63:0] zext_ln38_28_fu_2218_p1;
wire   [63:0] zext_ln38_29_fu_2228_p1;
wire   [63:0] zext_ln38_30_fu_2248_p1;
wire   [63:0] zext_ln38_31_fu_2258_p1;
wire   [63:0] zext_ln38_32_fu_2278_p1;
wire   [63:0] zext_ln38_33_fu_2288_p1;
wire   [63:0] zext_ln38_34_fu_2308_p1;
wire   [63:0] zext_ln38_35_fu_2318_p1;
wire   [63:0] zext_ln38_36_fu_2338_p1;
wire   [63:0] zext_ln38_37_fu_2348_p1;
wire   [63:0] zext_ln38_38_fu_2368_p1;
wire   [63:0] zext_ln38_39_fu_2378_p1;
wire   [63:0] zext_ln38_40_fu_2398_p1;
wire   [63:0] zext_ln38_41_fu_2408_p1;
wire   [63:0] zext_ln38_42_fu_2428_p1;
wire   [63:0] zext_ln38_43_fu_2438_p1;
wire   [63:0] zext_ln38_44_fu_2458_p1;
wire   [63:0] zext_ln38_45_fu_2468_p1;
wire   [63:0] zext_ln38_46_fu_2488_p1;
wire   [63:0] zext_ln38_47_fu_2498_p1;
wire   [63:0] zext_ln38_48_fu_2518_p1;
wire   [63:0] zext_ln38_49_fu_2528_p1;
wire   [63:0] zext_ln38_50_fu_2548_p1;
wire   [63:0] zext_ln38_51_fu_2558_p1;
wire   [63:0] zext_ln38_52_fu_2578_p1;
wire   [63:0] zext_ln38_53_fu_2588_p1;
wire   [63:0] zext_ln38_54_fu_2608_p1;
wire   [63:0] zext_ln38_55_fu_2618_p1;
wire   [63:0] zext_ln38_56_fu_2638_p1;
wire   [63:0] zext_ln38_57_fu_2648_p1;
wire   [63:0] zext_ln38_58_fu_2668_p1;
wire   [63:0] zext_ln38_59_fu_2678_p1;
wire   [63:0] zext_ln38_60_fu_2698_p1;
wire   [63:0] zext_ln38_61_fu_2708_p1;
wire   [63:0] zext_ln38_62_fu_2728_p1;
wire   [63:0] zext_ln38_63_fu_2738_p1;
wire   [63:0] zext_ln38_64_fu_2758_p1;
wire   [63:0] zext_ln38_65_fu_2768_p1;
wire   [63:0] zext_ln38_66_fu_2788_p1;
wire   [63:0] zext_ln38_67_fu_2798_p1;
wire   [63:0] zext_ln38_68_fu_2818_p1;
wire   [63:0] zext_ln38_69_fu_2828_p1;
wire   [63:0] zext_ln38_70_fu_2848_p1;
wire   [63:0] zext_ln38_71_fu_2858_p1;
wire   [63:0] zext_ln38_72_fu_2878_p1;
wire   [63:0] zext_ln38_73_fu_2888_p1;
wire   [63:0] zext_ln38_74_fu_2908_p1;
wire   [63:0] zext_ln38_75_fu_2918_p1;
wire   [63:0] zext_ln38_76_fu_2938_p1;
wire   [63:0] zext_ln38_77_fu_2948_p1;
wire   [63:0] zext_ln38_78_fu_2968_p1;
wire    ap_CS_fsm_state75;
wire   [63:0] zext_ln38_79_fu_2978_p1;
wire   [31:0] empty_fu_1813_p1;
wire   [31:0] empty_62_fu_1818_p1;
wire   [31:0] empty_63_fu_1843_p1;
wire   [31:0] empty_64_fu_1848_p1;
wire   [31:0] empty_65_fu_1873_p1;
wire   [31:0] empty_66_fu_1878_p1;
wire   [31:0] empty_67_fu_1903_p1;
wire   [31:0] empty_68_fu_1908_p1;
wire   [31:0] empty_69_fu_1933_p1;
wire   [31:0] empty_70_fu_1938_p1;
wire   [31:0] empty_71_fu_1963_p1;
wire   [31:0] empty_72_fu_1968_p1;
wire   [31:0] empty_73_fu_1993_p1;
wire   [31:0] empty_74_fu_1998_p1;
wire   [31:0] empty_75_fu_2023_p1;
wire   [31:0] empty_76_fu_2028_p1;
wire   [31:0] empty_77_fu_2053_p1;
wire   [31:0] empty_78_fu_2058_p1;
wire   [31:0] empty_79_fu_2083_p1;
wire   [31:0] empty_80_fu_2088_p1;
wire   [31:0] empty_81_fu_2113_p1;
wire   [31:0] empty_82_fu_2118_p1;
wire   [31:0] empty_83_fu_2143_p1;
wire   [31:0] empty_84_fu_2148_p1;
wire   [31:0] empty_85_fu_2173_p1;
wire   [31:0] empty_86_fu_2178_p1;
wire   [31:0] empty_87_fu_2203_p1;
wire   [31:0] empty_88_fu_2208_p1;
wire   [31:0] empty_89_fu_2233_p1;
wire   [31:0] empty_90_fu_2238_p1;
wire   [31:0] empty_91_fu_2263_p1;
wire   [31:0] empty_92_fu_2268_p1;
wire   [31:0] empty_93_fu_2293_p1;
wire   [31:0] empty_94_fu_2298_p1;
wire   [31:0] empty_95_fu_2323_p1;
wire   [31:0] empty_96_fu_2328_p1;
wire   [31:0] empty_97_fu_2353_p1;
wire   [31:0] empty_98_fu_2358_p1;
wire   [31:0] empty_99_fu_2383_p1;
wire   [31:0] empty_100_fu_2388_p1;
wire   [31:0] empty_101_fu_2413_p1;
wire   [31:0] empty_102_fu_2418_p1;
wire   [31:0] empty_103_fu_2443_p1;
wire   [31:0] empty_104_fu_2448_p1;
wire   [31:0] empty_105_fu_2473_p1;
wire   [31:0] empty_106_fu_2478_p1;
wire   [31:0] empty_107_fu_2503_p1;
wire   [31:0] empty_108_fu_2508_p1;
wire   [31:0] empty_109_fu_2533_p1;
wire   [31:0] empty_110_fu_2538_p1;
wire   [31:0] empty_111_fu_2563_p1;
wire   [31:0] empty_112_fu_2568_p1;
wire   [31:0] empty_113_fu_2593_p1;
wire   [31:0] empty_114_fu_2598_p1;
wire   [31:0] empty_115_fu_2623_p1;
wire   [31:0] empty_116_fu_2628_p1;
wire   [31:0] empty_117_fu_2653_p1;
wire   [31:0] empty_118_fu_2658_p1;
wire   [31:0] empty_119_fu_2683_p1;
wire   [31:0] empty_120_fu_2688_p1;
wire   [31:0] empty_121_fu_2713_p1;
wire   [31:0] empty_122_fu_2718_p1;
wire   [31:0] empty_123_fu_2743_p1;
wire   [31:0] empty_124_fu_2748_p1;
wire   [31:0] empty_125_fu_2773_p1;
wire   [31:0] empty_126_fu_2778_p1;
wire   [31:0] empty_127_fu_2803_p1;
wire   [31:0] empty_128_fu_2808_p1;
wire   [31:0] empty_129_fu_2833_p1;
wire   [31:0] empty_130_fu_2838_p1;
wire   [31:0] empty_131_fu_2863_p1;
wire   [31:0] empty_132_fu_2868_p1;
wire   [31:0] empty_133_fu_2893_p1;
wire   [31:0] empty_134_fu_2898_p1;
wire   [31:0] empty_135_fu_2923_p1;
wire   [31:0] empty_136_fu_2928_p1;
wire   [31:0] empty_137_fu_2953_p1;
wire   [31:0] empty_138_fu_2958_p1;
wire   [31:0] empty_139_fu_2989_p1;
wire   [31:0] empty_140_fu_2994_p1;
wire   [31:0] grp_fu_1756_p0;
wire   [2:0] grp_fu_1756_p1;
wire   [1:0] trunc_ln38_fu_1767_p1;
wire   [3:0] trunc_ln38_1_fu_1779_p1;
wire   [7:0] tmp_cast_fu_1771_p3;
wire   [7:0] tmp_7_cast_fu_1783_p3;
wire   [7:0] or_ln38_fu_1802_p2;
wire   [7:0] or_ln38_1_fu_1823_p2;
wire   [7:0] or_ln38_2_fu_1833_p2;
wire   [7:0] or_ln38_3_fu_1853_p2;
wire   [7:0] or_ln38_4_fu_1863_p2;
wire   [7:0] or_ln38_5_fu_1883_p2;
wire   [7:0] or_ln38_6_fu_1893_p2;
wire   [7:0] or_ln38_7_fu_1913_p2;
wire   [7:0] or_ln38_8_fu_1923_p2;
wire   [7:0] or_ln38_9_fu_1943_p2;
wire   [7:0] or_ln38_10_fu_1953_p2;
wire   [7:0] or_ln38_11_fu_1973_p2;
wire   [7:0] or_ln38_12_fu_1983_p2;
wire   [7:0] or_ln38_13_fu_2003_p2;
wire   [7:0] or_ln38_14_fu_2013_p2;
wire   [7:0] add_ln38_1_fu_2033_p2;
wire   [7:0] add_ln38_2_fu_2043_p2;
wire   [7:0] add_ln38_3_fu_2063_p2;
wire   [7:0] add_ln38_4_fu_2073_p2;
wire   [7:0] add_ln38_5_fu_2093_p2;
wire   [7:0] add_ln38_6_fu_2103_p2;
wire   [7:0] add_ln38_7_fu_2123_p2;
wire   [7:0] add_ln38_8_fu_2133_p2;
wire   [7:0] add_ln38_9_fu_2153_p2;
wire   [7:0] add_ln38_10_fu_2163_p2;
wire   [7:0] add_ln38_11_fu_2183_p2;
wire   [7:0] add_ln38_12_fu_2193_p2;
wire   [7:0] add_ln38_13_fu_2213_p2;
wire   [7:0] add_ln38_14_fu_2223_p2;
wire   [7:0] add_ln38_15_fu_2243_p2;
wire   [7:0] add_ln38_16_fu_2253_p2;
wire   [7:0] add_ln38_17_fu_2273_p2;
wire   [7:0] add_ln38_18_fu_2283_p2;
wire   [7:0] add_ln38_19_fu_2303_p2;
wire   [7:0] add_ln38_20_fu_2313_p2;
wire   [7:0] add_ln38_21_fu_2333_p2;
wire   [7:0] add_ln38_22_fu_2343_p2;
wire   [7:0] add_ln38_23_fu_2363_p2;
wire   [7:0] add_ln38_24_fu_2373_p2;
wire   [7:0] add_ln38_25_fu_2393_p2;
wire   [7:0] add_ln38_26_fu_2403_p2;
wire   [7:0] add_ln38_27_fu_2423_p2;
wire   [7:0] add_ln38_28_fu_2433_p2;
wire   [7:0] add_ln38_29_fu_2453_p2;
wire   [7:0] add_ln38_30_fu_2463_p2;
wire   [7:0] add_ln38_31_fu_2483_p2;
wire   [7:0] add_ln38_32_fu_2493_p2;
wire   [7:0] add_ln38_33_fu_2513_p2;
wire   [7:0] add_ln38_34_fu_2523_p2;
wire   [7:0] add_ln38_35_fu_2543_p2;
wire   [7:0] add_ln38_36_fu_2553_p2;
wire   [7:0] add_ln38_37_fu_2573_p2;
wire   [7:0] add_ln38_38_fu_2583_p2;
wire   [7:0] add_ln38_39_fu_2603_p2;
wire   [7:0] add_ln38_40_fu_2613_p2;
wire   [7:0] add_ln38_41_fu_2633_p2;
wire   [7:0] add_ln38_42_fu_2643_p2;
wire   [7:0] add_ln38_43_fu_2663_p2;
wire   [7:0] add_ln38_44_fu_2673_p2;
wire   [7:0] add_ln38_45_fu_2693_p2;
wire   [7:0] add_ln38_46_fu_2703_p2;
wire   [7:0] add_ln38_47_fu_2723_p2;
wire   [7:0] add_ln38_48_fu_2733_p2;
wire   [7:0] add_ln38_49_fu_2753_p2;
wire   [7:0] add_ln38_50_fu_2763_p2;
wire   [7:0] add_ln38_51_fu_2783_p2;
wire   [7:0] add_ln38_52_fu_2793_p2;
wire   [7:0] add_ln38_53_fu_2813_p2;
wire   [7:0] add_ln38_54_fu_2823_p2;
wire   [7:0] add_ln38_55_fu_2843_p2;
wire   [7:0] add_ln38_56_fu_2853_p2;
wire   [7:0] add_ln38_57_fu_2873_p2;
wire   [7:0] add_ln38_58_fu_2883_p2;
wire   [7:0] add_ln38_59_fu_2903_p2;
wire   [7:0] add_ln38_60_fu_2913_p2;
wire   [7:0] add_ln38_61_fu_2933_p2;
wire   [7:0] add_ln38_62_fu_2943_p2;
wire   [7:0] add_ln38_63_fu_2963_p2;
wire   [7:0] add_ln38_64_fu_2973_p2;
wire   [31:0] add_ln29_fu_2983_p2;
reg    grp_fu_1756_ap_start;
wire    grp_fu_1756_ap_done;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [74:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

system_top_urem_32ns_3ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
urem_32ns_3ns_32_36_seq_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1756_ap_start),
    .done(grp_fu_1756_ap_done),
    .din0(grp_fu_1756_p0),
    .din1(grp_fu_1756_p1),
    .ce(1'b1),
    .dout(grp_fu_1756_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_return_0_preg <= urem_ln18_reg_3035;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_return_1_preg <= add_ln29_fu_2983_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln38_reg_3040[7 : 4] <= add_ln38_fu_1791_p2[7 : 4];
        urem_ln18_reg_3035 <= grp_fu_1756_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_return_0 = urem_ln18_reg_3035;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_return_1 = add_ln29_fu_2983_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1756_ap_start = 1'b1;
    end else begin
        grp_fu_1756_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        new_patch_address0 = 64'd79;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        new_patch_address0 = 64'd77;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        new_patch_address0 = 64'd75;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        new_patch_address0 = 64'd73;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        new_patch_address0 = 64'd71;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        new_patch_address0 = 64'd69;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        new_patch_address0 = 64'd67;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        new_patch_address0 = 64'd65;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        new_patch_address0 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        new_patch_address0 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        new_patch_address0 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        new_patch_address0 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        new_patch_address0 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        new_patch_address0 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        new_patch_address0 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        new_patch_address0 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        new_patch_address0 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        new_patch_address0 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        new_patch_address0 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        new_patch_address0 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        new_patch_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        new_patch_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        new_patch_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        new_patch_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        new_patch_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        new_patch_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        new_patch_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        new_patch_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        new_patch_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        new_patch_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        new_patch_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        new_patch_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        new_patch_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        new_patch_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        new_patch_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        new_patch_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        new_patch_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        new_patch_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        new_patch_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        new_patch_address0 = 64'd1;
    end else begin
        new_patch_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        new_patch_address1 = 64'd78;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        new_patch_address1 = 64'd76;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        new_patch_address1 = 64'd74;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        new_patch_address1 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        new_patch_address1 = 64'd70;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        new_patch_address1 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        new_patch_address1 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        new_patch_address1 = 64'd64;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        new_patch_address1 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        new_patch_address1 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        new_patch_address1 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        new_patch_address1 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        new_patch_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        new_patch_address1 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        new_patch_address1 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        new_patch_address1 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        new_patch_address1 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        new_patch_address1 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        new_patch_address1 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        new_patch_address1 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        new_patch_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        new_patch_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        new_patch_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        new_patch_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        new_patch_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        new_patch_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        new_patch_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        new_patch_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        new_patch_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        new_patch_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        new_patch_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        new_patch_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        new_patch_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        new_patch_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        new_patch_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        new_patch_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        new_patch_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        new_patch_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        new_patch_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        new_patch_address1 = 64'd0;
    end else begin
        new_patch_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        new_patch_ce0 = 1'b1;
    end else begin
        new_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        new_patch_ce1 = 1'b1;
    end else begin
        new_patch_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        patch_buffer_address0 = zext_ln38_79_fu_2978_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        patch_buffer_address0 = zext_ln38_77_fu_2948_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        patch_buffer_address0 = zext_ln38_75_fu_2918_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        patch_buffer_address0 = zext_ln38_73_fu_2888_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        patch_buffer_address0 = zext_ln38_71_fu_2858_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        patch_buffer_address0 = zext_ln38_69_fu_2828_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        patch_buffer_address0 = zext_ln38_67_fu_2798_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        patch_buffer_address0 = zext_ln38_65_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        patch_buffer_address0 = zext_ln38_63_fu_2738_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        patch_buffer_address0 = zext_ln38_61_fu_2708_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        patch_buffer_address0 = zext_ln38_59_fu_2678_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        patch_buffer_address0 = zext_ln38_57_fu_2648_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        patch_buffer_address0 = zext_ln38_55_fu_2618_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        patch_buffer_address0 = zext_ln38_53_fu_2588_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        patch_buffer_address0 = zext_ln38_51_fu_2558_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        patch_buffer_address0 = zext_ln38_49_fu_2528_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        patch_buffer_address0 = zext_ln38_47_fu_2498_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        patch_buffer_address0 = zext_ln38_45_fu_2468_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        patch_buffer_address0 = zext_ln38_43_fu_2438_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        patch_buffer_address0 = zext_ln38_41_fu_2408_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        patch_buffer_address0 = zext_ln38_39_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        patch_buffer_address0 = zext_ln38_37_fu_2348_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        patch_buffer_address0 = zext_ln38_35_fu_2318_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        patch_buffer_address0 = zext_ln38_33_fu_2288_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        patch_buffer_address0 = zext_ln38_31_fu_2258_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        patch_buffer_address0 = zext_ln38_29_fu_2228_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        patch_buffer_address0 = zext_ln38_27_fu_2198_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        patch_buffer_address0 = zext_ln38_25_fu_2168_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        patch_buffer_address0 = zext_ln38_23_fu_2138_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        patch_buffer_address0 = zext_ln38_21_fu_2108_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        patch_buffer_address0 = zext_ln38_19_fu_2078_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        patch_buffer_address0 = zext_ln38_17_fu_2048_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        patch_buffer_address0 = zext_ln38_15_fu_2018_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        patch_buffer_address0 = zext_ln38_13_fu_1988_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_address0 = zext_ln38_11_fu_1958_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_address0 = zext_ln38_9_fu_1928_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_address0 = zext_ln38_7_fu_1898_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_address0 = zext_ln38_5_fu_1868_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_address0 = zext_ln38_3_fu_1838_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_address0 = zext_ln38_1_fu_1808_p1;
    end else begin
        patch_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        patch_buffer_address1 = zext_ln38_78_fu_2968_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        patch_buffer_address1 = zext_ln38_76_fu_2938_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        patch_buffer_address1 = zext_ln38_74_fu_2908_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        patch_buffer_address1 = zext_ln38_72_fu_2878_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        patch_buffer_address1 = zext_ln38_70_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        patch_buffer_address1 = zext_ln38_68_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        patch_buffer_address1 = zext_ln38_66_fu_2788_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        patch_buffer_address1 = zext_ln38_64_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        patch_buffer_address1 = zext_ln38_62_fu_2728_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        patch_buffer_address1 = zext_ln38_60_fu_2698_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        patch_buffer_address1 = zext_ln38_58_fu_2668_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        patch_buffer_address1 = zext_ln38_56_fu_2638_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        patch_buffer_address1 = zext_ln38_54_fu_2608_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        patch_buffer_address1 = zext_ln38_52_fu_2578_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        patch_buffer_address1 = zext_ln38_50_fu_2548_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        patch_buffer_address1 = zext_ln38_48_fu_2518_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        patch_buffer_address1 = zext_ln38_46_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        patch_buffer_address1 = zext_ln38_44_fu_2458_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        patch_buffer_address1 = zext_ln38_42_fu_2428_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        patch_buffer_address1 = zext_ln38_40_fu_2398_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        patch_buffer_address1 = zext_ln38_38_fu_2368_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        patch_buffer_address1 = zext_ln38_36_fu_2338_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        patch_buffer_address1 = zext_ln38_34_fu_2308_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        patch_buffer_address1 = zext_ln38_32_fu_2278_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        patch_buffer_address1 = zext_ln38_30_fu_2248_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        patch_buffer_address1 = zext_ln38_28_fu_2218_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        patch_buffer_address1 = zext_ln38_26_fu_2188_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        patch_buffer_address1 = zext_ln38_24_fu_2158_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        patch_buffer_address1 = zext_ln38_22_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        patch_buffer_address1 = zext_ln38_20_fu_2098_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        patch_buffer_address1 = zext_ln38_18_fu_2068_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        patch_buffer_address1 = zext_ln38_16_fu_2038_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        patch_buffer_address1 = zext_ln38_14_fu_2008_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        patch_buffer_address1 = zext_ln38_12_fu_1978_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_address1 = zext_ln38_10_fu_1948_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_address1 = zext_ln38_8_fu_1918_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_address1 = zext_ln38_6_fu_1888_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_address1 = zext_ln38_4_fu_1858_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_address1 = zext_ln38_2_fu_1828_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_address1 = zext_ln38_fu_1797_p1;
    end else begin
        patch_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        patch_buffer_ce0 = 1'b1;
    end else begin
        patch_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        patch_buffer_ce1 = 1'b1;
    end else begin
        patch_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        patch_buffer_d0 = empty_140_fu_2994_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        patch_buffer_d0 = empty_138_fu_2958_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        patch_buffer_d0 = empty_136_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        patch_buffer_d0 = empty_134_fu_2898_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        patch_buffer_d0 = empty_132_fu_2868_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        patch_buffer_d0 = empty_130_fu_2838_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        patch_buffer_d0 = empty_128_fu_2808_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        patch_buffer_d0 = empty_126_fu_2778_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        patch_buffer_d0 = empty_124_fu_2748_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        patch_buffer_d0 = empty_122_fu_2718_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        patch_buffer_d0 = empty_120_fu_2688_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        patch_buffer_d0 = empty_118_fu_2658_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        patch_buffer_d0 = empty_116_fu_2628_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        patch_buffer_d0 = empty_114_fu_2598_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        patch_buffer_d0 = empty_112_fu_2568_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        patch_buffer_d0 = empty_110_fu_2538_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        patch_buffer_d0 = empty_108_fu_2508_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        patch_buffer_d0 = empty_106_fu_2478_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        patch_buffer_d0 = empty_104_fu_2448_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        patch_buffer_d0 = empty_102_fu_2418_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        patch_buffer_d0 = empty_100_fu_2388_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        patch_buffer_d0 = empty_98_fu_2358_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        patch_buffer_d0 = empty_96_fu_2328_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        patch_buffer_d0 = empty_94_fu_2298_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        patch_buffer_d0 = empty_92_fu_2268_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        patch_buffer_d0 = empty_90_fu_2238_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        patch_buffer_d0 = empty_88_fu_2208_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        patch_buffer_d0 = empty_86_fu_2178_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        patch_buffer_d0 = empty_84_fu_2148_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        patch_buffer_d0 = empty_82_fu_2118_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        patch_buffer_d0 = empty_80_fu_2088_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        patch_buffer_d0 = empty_78_fu_2058_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        patch_buffer_d0 = empty_76_fu_2028_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        patch_buffer_d0 = empty_74_fu_1998_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_d0 = empty_72_fu_1968_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_d0 = empty_70_fu_1938_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_d0 = empty_68_fu_1908_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_d0 = empty_66_fu_1878_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_d0 = empty_64_fu_1848_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_d0 = empty_62_fu_1818_p1;
    end else begin
        patch_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        patch_buffer_d1 = empty_139_fu_2989_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        patch_buffer_d1 = empty_137_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        patch_buffer_d1 = empty_135_fu_2923_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        patch_buffer_d1 = empty_133_fu_2893_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        patch_buffer_d1 = empty_131_fu_2863_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        patch_buffer_d1 = empty_129_fu_2833_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        patch_buffer_d1 = empty_127_fu_2803_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        patch_buffer_d1 = empty_125_fu_2773_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        patch_buffer_d1 = empty_123_fu_2743_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        patch_buffer_d1 = empty_121_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        patch_buffer_d1 = empty_119_fu_2683_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        patch_buffer_d1 = empty_117_fu_2653_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        patch_buffer_d1 = empty_115_fu_2623_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        patch_buffer_d1 = empty_113_fu_2593_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        patch_buffer_d1 = empty_111_fu_2563_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        patch_buffer_d1 = empty_109_fu_2533_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        patch_buffer_d1 = empty_107_fu_2503_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        patch_buffer_d1 = empty_105_fu_2473_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        patch_buffer_d1 = empty_103_fu_2443_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        patch_buffer_d1 = empty_101_fu_2413_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        patch_buffer_d1 = empty_99_fu_2383_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        patch_buffer_d1 = empty_97_fu_2353_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        patch_buffer_d1 = empty_95_fu_2323_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        patch_buffer_d1 = empty_93_fu_2293_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        patch_buffer_d1 = empty_91_fu_2263_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        patch_buffer_d1 = empty_89_fu_2233_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        patch_buffer_d1 = empty_87_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        patch_buffer_d1 = empty_85_fu_2173_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        patch_buffer_d1 = empty_83_fu_2143_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        patch_buffer_d1 = empty_81_fu_2113_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        patch_buffer_d1 = empty_79_fu_2083_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        patch_buffer_d1 = empty_77_fu_2053_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        patch_buffer_d1 = empty_75_fu_2023_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        patch_buffer_d1 = empty_73_fu_1993_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        patch_buffer_d1 = empty_71_fu_1963_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        patch_buffer_d1 = empty_69_fu_1933_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        patch_buffer_d1 = empty_67_fu_1903_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        patch_buffer_d1 = empty_65_fu_1873_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        patch_buffer_d1 = empty_63_fu_1843_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_d1 = empty_fu_1813_p1;
    end else begin
        patch_buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_is_empty_ce0 = 1'b1;
    end else begin
        patch_buffer_is_empty_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        patch_buffer_is_empty_we0 = 1'b1;
    end else begin
        patch_buffer_is_empty_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        patch_buffer_we0 = 1'b1;
    end else begin
        patch_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        patch_buffer_we1 = 1'b1;
    end else begin
        patch_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_2983_p2 = (num_patches_read + 32'd1);

assign add_ln38_10_fu_2163_p2 = (add_ln38_reg_3040 + 8'd25);

assign add_ln38_11_fu_2183_p2 = (add_ln38_reg_3040 + 8'd26);

assign add_ln38_12_fu_2193_p2 = (add_ln38_reg_3040 + 8'd27);

assign add_ln38_13_fu_2213_p2 = (add_ln38_reg_3040 + 8'd28);

assign add_ln38_14_fu_2223_p2 = (add_ln38_reg_3040 + 8'd29);

assign add_ln38_15_fu_2243_p2 = (add_ln38_reg_3040 + 8'd30);

assign add_ln38_16_fu_2253_p2 = (add_ln38_reg_3040 + 8'd31);

assign add_ln38_17_fu_2273_p2 = (add_ln38_reg_3040 + 8'd32);

assign add_ln38_18_fu_2283_p2 = (add_ln38_reg_3040 + 8'd33);

assign add_ln38_19_fu_2303_p2 = (add_ln38_reg_3040 + 8'd34);

assign add_ln38_1_fu_2033_p2 = (add_ln38_reg_3040 + 8'd16);

assign add_ln38_20_fu_2313_p2 = (add_ln38_reg_3040 + 8'd35);

assign add_ln38_21_fu_2333_p2 = (add_ln38_reg_3040 + 8'd36);

assign add_ln38_22_fu_2343_p2 = (add_ln38_reg_3040 + 8'd37);

assign add_ln38_23_fu_2363_p2 = (add_ln38_reg_3040 + 8'd38);

assign add_ln38_24_fu_2373_p2 = (add_ln38_reg_3040 + 8'd39);

assign add_ln38_25_fu_2393_p2 = (add_ln38_reg_3040 + 8'd40);

assign add_ln38_26_fu_2403_p2 = (add_ln38_reg_3040 + 8'd41);

assign add_ln38_27_fu_2423_p2 = (add_ln38_reg_3040 + 8'd42);

assign add_ln38_28_fu_2433_p2 = (add_ln38_reg_3040 + 8'd43);

assign add_ln38_29_fu_2453_p2 = (add_ln38_reg_3040 + 8'd44);

assign add_ln38_2_fu_2043_p2 = (add_ln38_reg_3040 + 8'd17);

assign add_ln38_30_fu_2463_p2 = (add_ln38_reg_3040 + 8'd45);

assign add_ln38_31_fu_2483_p2 = (add_ln38_reg_3040 + 8'd46);

assign add_ln38_32_fu_2493_p2 = (add_ln38_reg_3040 + 8'd47);

assign add_ln38_33_fu_2513_p2 = (add_ln38_reg_3040 + 8'd48);

assign add_ln38_34_fu_2523_p2 = (add_ln38_reg_3040 + 8'd49);

assign add_ln38_35_fu_2543_p2 = (add_ln38_reg_3040 + 8'd50);

assign add_ln38_36_fu_2553_p2 = (add_ln38_reg_3040 + 8'd51);

assign add_ln38_37_fu_2573_p2 = (add_ln38_reg_3040 + 8'd52);

assign add_ln38_38_fu_2583_p2 = (add_ln38_reg_3040 + 8'd53);

assign add_ln38_39_fu_2603_p2 = (add_ln38_reg_3040 + 8'd54);

assign add_ln38_3_fu_2063_p2 = (add_ln38_reg_3040 + 8'd18);

assign add_ln38_40_fu_2613_p2 = (add_ln38_reg_3040 + 8'd55);

assign add_ln38_41_fu_2633_p2 = (add_ln38_reg_3040 + 8'd56);

assign add_ln38_42_fu_2643_p2 = (add_ln38_reg_3040 + 8'd57);

assign add_ln38_43_fu_2663_p2 = (add_ln38_reg_3040 + 8'd58);

assign add_ln38_44_fu_2673_p2 = (add_ln38_reg_3040 + 8'd59);

assign add_ln38_45_fu_2693_p2 = (add_ln38_reg_3040 + 8'd60);

assign add_ln38_46_fu_2703_p2 = (add_ln38_reg_3040 + 8'd61);

assign add_ln38_47_fu_2723_p2 = (add_ln38_reg_3040 + 8'd62);

assign add_ln38_48_fu_2733_p2 = (add_ln38_reg_3040 + 8'd63);

assign add_ln38_49_fu_2753_p2 = (add_ln38_reg_3040 + 8'd64);

assign add_ln38_4_fu_2073_p2 = (add_ln38_reg_3040 + 8'd19);

assign add_ln38_50_fu_2763_p2 = (add_ln38_reg_3040 + 8'd65);

assign add_ln38_51_fu_2783_p2 = (add_ln38_reg_3040 + 8'd66);

assign add_ln38_52_fu_2793_p2 = (add_ln38_reg_3040 + 8'd67);

assign add_ln38_53_fu_2813_p2 = (add_ln38_reg_3040 + 8'd68);

assign add_ln38_54_fu_2823_p2 = (add_ln38_reg_3040 + 8'd69);

assign add_ln38_55_fu_2843_p2 = (add_ln38_reg_3040 + 8'd70);

assign add_ln38_56_fu_2853_p2 = (add_ln38_reg_3040 + 8'd71);

assign add_ln38_57_fu_2873_p2 = (add_ln38_reg_3040 + 8'd72);

assign add_ln38_58_fu_2883_p2 = (add_ln38_reg_3040 + 8'd73);

assign add_ln38_59_fu_2903_p2 = (add_ln38_reg_3040 + 8'd74);

assign add_ln38_5_fu_2093_p2 = (add_ln38_reg_3040 + 8'd20);

assign add_ln38_60_fu_2913_p2 = (add_ln38_reg_3040 + 8'd75);

assign add_ln38_61_fu_2933_p2 = (add_ln38_reg_3040 + 8'd76);

assign add_ln38_62_fu_2943_p2 = (add_ln38_reg_3040 + 8'd77);

assign add_ln38_63_fu_2963_p2 = (add_ln38_reg_3040 + 8'd78);

assign add_ln38_64_fu_2973_p2 = (add_ln38_reg_3040 + 8'd79);

assign add_ln38_6_fu_2103_p2 = (add_ln38_reg_3040 + 8'd21);

assign add_ln38_7_fu_2123_p2 = (add_ln38_reg_3040 + 8'd22);

assign add_ln38_8_fu_2133_p2 = (add_ln38_reg_3040 + 8'd23);

assign add_ln38_9_fu_2153_p2 = (add_ln38_reg_3040 + 8'd24);

assign add_ln38_fu_1791_p2 = (tmp_cast_fu_1771_p3 + tmp_7_cast_fu_1783_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign empty_100_fu_2388_p1 = new_patch_q0[31:0];

assign empty_101_fu_2413_p1 = new_patch_q1[31:0];

assign empty_102_fu_2418_p1 = new_patch_q0[31:0];

assign empty_103_fu_2443_p1 = new_patch_q1[31:0];

assign empty_104_fu_2448_p1 = new_patch_q0[31:0];

assign empty_105_fu_2473_p1 = new_patch_q1[31:0];

assign empty_106_fu_2478_p1 = new_patch_q0[31:0];

assign empty_107_fu_2503_p1 = new_patch_q1[31:0];

assign empty_108_fu_2508_p1 = new_patch_q0[31:0];

assign empty_109_fu_2533_p1 = new_patch_q1[31:0];

assign empty_110_fu_2538_p1 = new_patch_q0[31:0];

assign empty_111_fu_2563_p1 = new_patch_q1[31:0];

assign empty_112_fu_2568_p1 = new_patch_q0[31:0];

assign empty_113_fu_2593_p1 = new_patch_q1[31:0];

assign empty_114_fu_2598_p1 = new_patch_q0[31:0];

assign empty_115_fu_2623_p1 = new_patch_q1[31:0];

assign empty_116_fu_2628_p1 = new_patch_q0[31:0];

assign empty_117_fu_2653_p1 = new_patch_q1[31:0];

assign empty_118_fu_2658_p1 = new_patch_q0[31:0];

assign empty_119_fu_2683_p1 = new_patch_q1[31:0];

assign empty_120_fu_2688_p1 = new_patch_q0[31:0];

assign empty_121_fu_2713_p1 = new_patch_q1[31:0];

assign empty_122_fu_2718_p1 = new_patch_q0[31:0];

assign empty_123_fu_2743_p1 = new_patch_q1[31:0];

assign empty_124_fu_2748_p1 = new_patch_q0[31:0];

assign empty_125_fu_2773_p1 = new_patch_q1[31:0];

assign empty_126_fu_2778_p1 = new_patch_q0[31:0];

assign empty_127_fu_2803_p1 = new_patch_q1[31:0];

assign empty_128_fu_2808_p1 = new_patch_q0[31:0];

assign empty_129_fu_2833_p1 = new_patch_q1[31:0];

assign empty_130_fu_2838_p1 = new_patch_q0[31:0];

assign empty_131_fu_2863_p1 = new_patch_q1[31:0];

assign empty_132_fu_2868_p1 = new_patch_q0[31:0];

assign empty_133_fu_2893_p1 = new_patch_q1[31:0];

assign empty_134_fu_2898_p1 = new_patch_q0[31:0];

assign empty_135_fu_2923_p1 = new_patch_q1[31:0];

assign empty_136_fu_2928_p1 = new_patch_q0[31:0];

assign empty_137_fu_2953_p1 = new_patch_q1[31:0];

assign empty_138_fu_2958_p1 = new_patch_q0[31:0];

assign empty_139_fu_2989_p1 = new_patch_q1[31:0];

assign empty_140_fu_2994_p1 = new_patch_q0[31:0];

assign empty_62_fu_1818_p1 = new_patch_q0[31:0];

assign empty_63_fu_1843_p1 = new_patch_q1[31:0];

assign empty_64_fu_1848_p1 = new_patch_q0[31:0];

assign empty_65_fu_1873_p1 = new_patch_q1[31:0];

assign empty_66_fu_1878_p1 = new_patch_q0[31:0];

assign empty_67_fu_1903_p1 = new_patch_q1[31:0];

assign empty_68_fu_1908_p1 = new_patch_q0[31:0];

assign empty_69_fu_1933_p1 = new_patch_q1[31:0];

assign empty_70_fu_1938_p1 = new_patch_q0[31:0];

assign empty_71_fu_1963_p1 = new_patch_q1[31:0];

assign empty_72_fu_1968_p1 = new_patch_q0[31:0];

assign empty_73_fu_1993_p1 = new_patch_q1[31:0];

assign empty_74_fu_1998_p1 = new_patch_q0[31:0];

assign empty_75_fu_2023_p1 = new_patch_q1[31:0];

assign empty_76_fu_2028_p1 = new_patch_q0[31:0];

assign empty_77_fu_2053_p1 = new_patch_q1[31:0];

assign empty_78_fu_2058_p1 = new_patch_q0[31:0];

assign empty_79_fu_2083_p1 = new_patch_q1[31:0];

assign empty_80_fu_2088_p1 = new_patch_q0[31:0];

assign empty_81_fu_2113_p1 = new_patch_q1[31:0];

assign empty_82_fu_2118_p1 = new_patch_q0[31:0];

assign empty_83_fu_2143_p1 = new_patch_q1[31:0];

assign empty_84_fu_2148_p1 = new_patch_q0[31:0];

assign empty_85_fu_2173_p1 = new_patch_q1[31:0];

assign empty_86_fu_2178_p1 = new_patch_q0[31:0];

assign empty_87_fu_2203_p1 = new_patch_q1[31:0];

assign empty_88_fu_2208_p1 = new_patch_q0[31:0];

assign empty_89_fu_2233_p1 = new_patch_q1[31:0];

assign empty_90_fu_2238_p1 = new_patch_q0[31:0];

assign empty_91_fu_2263_p1 = new_patch_q1[31:0];

assign empty_92_fu_2268_p1 = new_patch_q0[31:0];

assign empty_93_fu_2293_p1 = new_patch_q1[31:0];

assign empty_94_fu_2298_p1 = new_patch_q0[31:0];

assign empty_95_fu_2323_p1 = new_patch_q1[31:0];

assign empty_96_fu_2328_p1 = new_patch_q0[31:0];

assign empty_97_fu_2353_p1 = new_patch_q1[31:0];

assign empty_98_fu_2358_p1 = new_patch_q0[31:0];

assign empty_99_fu_2383_p1 = new_patch_q1[31:0];

assign empty_fu_1813_p1 = new_patch_q1[31:0];

assign grp_fu_1756_p0 = (latest_patch_index_read + 32'd1);

assign grp_fu_1756_p1 = 32'd3;

assign or_ln38_10_fu_1953_p2 = (8'd11 | add_ln38_reg_3040);

assign or_ln38_11_fu_1973_p2 = (8'd12 | add_ln38_reg_3040);

assign or_ln38_12_fu_1983_p2 = (8'd13 | add_ln38_reg_3040);

assign or_ln38_13_fu_2003_p2 = (8'd14 | add_ln38_reg_3040);

assign or_ln38_14_fu_2013_p2 = (8'd15 | add_ln38_reg_3040);

assign or_ln38_1_fu_1823_p2 = (8'd2 | add_ln38_reg_3040);

assign or_ln38_2_fu_1833_p2 = (8'd3 | add_ln38_reg_3040);

assign or_ln38_3_fu_1853_p2 = (8'd4 | add_ln38_reg_3040);

assign or_ln38_4_fu_1863_p2 = (8'd5 | add_ln38_reg_3040);

assign or_ln38_5_fu_1883_p2 = (8'd6 | add_ln38_reg_3040);

assign or_ln38_6_fu_1893_p2 = (8'd7 | add_ln38_reg_3040);

assign or_ln38_7_fu_1913_p2 = (8'd8 | add_ln38_reg_3040);

assign or_ln38_8_fu_1923_p2 = (8'd9 | add_ln38_reg_3040);

assign or_ln38_9_fu_1943_p2 = (8'd10 | add_ln38_reg_3040);

assign or_ln38_fu_1802_p2 = (8'd1 | add_ln38_fu_1791_p2);

assign patch_buffer_is_empty_address0 = zext_ln28_fu_1762_p1;

assign patch_buffer_is_empty_d0 = 1'd0;

assign tmp_7_cast_fu_1783_p3 = {{trunc_ln38_1_fu_1779_p1}, {4'd0}};

assign tmp_cast_fu_1771_p3 = {{trunc_ln38_fu_1767_p1}, {6'd0}};

assign trunc_ln38_1_fu_1779_p1 = grp_fu_1756_p2[3:0];

assign trunc_ln38_fu_1767_p1 = grp_fu_1756_p2[1:0];

assign zext_ln28_fu_1762_p1 = grp_fu_1756_p2;

assign zext_ln38_10_fu_1948_p1 = or_ln38_9_fu_1943_p2;

assign zext_ln38_11_fu_1958_p1 = or_ln38_10_fu_1953_p2;

assign zext_ln38_12_fu_1978_p1 = or_ln38_11_fu_1973_p2;

assign zext_ln38_13_fu_1988_p1 = or_ln38_12_fu_1983_p2;

assign zext_ln38_14_fu_2008_p1 = or_ln38_13_fu_2003_p2;

assign zext_ln38_15_fu_2018_p1 = or_ln38_14_fu_2013_p2;

assign zext_ln38_16_fu_2038_p1 = add_ln38_1_fu_2033_p2;

assign zext_ln38_17_fu_2048_p1 = add_ln38_2_fu_2043_p2;

assign zext_ln38_18_fu_2068_p1 = add_ln38_3_fu_2063_p2;

assign zext_ln38_19_fu_2078_p1 = add_ln38_4_fu_2073_p2;

assign zext_ln38_1_fu_1808_p1 = or_ln38_fu_1802_p2;

assign zext_ln38_20_fu_2098_p1 = add_ln38_5_fu_2093_p2;

assign zext_ln38_21_fu_2108_p1 = add_ln38_6_fu_2103_p2;

assign zext_ln38_22_fu_2128_p1 = add_ln38_7_fu_2123_p2;

assign zext_ln38_23_fu_2138_p1 = add_ln38_8_fu_2133_p2;

assign zext_ln38_24_fu_2158_p1 = add_ln38_9_fu_2153_p2;

assign zext_ln38_25_fu_2168_p1 = add_ln38_10_fu_2163_p2;

assign zext_ln38_26_fu_2188_p1 = add_ln38_11_fu_2183_p2;

assign zext_ln38_27_fu_2198_p1 = add_ln38_12_fu_2193_p2;

assign zext_ln38_28_fu_2218_p1 = add_ln38_13_fu_2213_p2;

assign zext_ln38_29_fu_2228_p1 = add_ln38_14_fu_2223_p2;

assign zext_ln38_2_fu_1828_p1 = or_ln38_1_fu_1823_p2;

assign zext_ln38_30_fu_2248_p1 = add_ln38_15_fu_2243_p2;

assign zext_ln38_31_fu_2258_p1 = add_ln38_16_fu_2253_p2;

assign zext_ln38_32_fu_2278_p1 = add_ln38_17_fu_2273_p2;

assign zext_ln38_33_fu_2288_p1 = add_ln38_18_fu_2283_p2;

assign zext_ln38_34_fu_2308_p1 = add_ln38_19_fu_2303_p2;

assign zext_ln38_35_fu_2318_p1 = add_ln38_20_fu_2313_p2;

assign zext_ln38_36_fu_2338_p1 = add_ln38_21_fu_2333_p2;

assign zext_ln38_37_fu_2348_p1 = add_ln38_22_fu_2343_p2;

assign zext_ln38_38_fu_2368_p1 = add_ln38_23_fu_2363_p2;

assign zext_ln38_39_fu_2378_p1 = add_ln38_24_fu_2373_p2;

assign zext_ln38_3_fu_1838_p1 = or_ln38_2_fu_1833_p2;

assign zext_ln38_40_fu_2398_p1 = add_ln38_25_fu_2393_p2;

assign zext_ln38_41_fu_2408_p1 = add_ln38_26_fu_2403_p2;

assign zext_ln38_42_fu_2428_p1 = add_ln38_27_fu_2423_p2;

assign zext_ln38_43_fu_2438_p1 = add_ln38_28_fu_2433_p2;

assign zext_ln38_44_fu_2458_p1 = add_ln38_29_fu_2453_p2;

assign zext_ln38_45_fu_2468_p1 = add_ln38_30_fu_2463_p2;

assign zext_ln38_46_fu_2488_p1 = add_ln38_31_fu_2483_p2;

assign zext_ln38_47_fu_2498_p1 = add_ln38_32_fu_2493_p2;

assign zext_ln38_48_fu_2518_p1 = add_ln38_33_fu_2513_p2;

assign zext_ln38_49_fu_2528_p1 = add_ln38_34_fu_2523_p2;

assign zext_ln38_4_fu_1858_p1 = or_ln38_3_fu_1853_p2;

assign zext_ln38_50_fu_2548_p1 = add_ln38_35_fu_2543_p2;

assign zext_ln38_51_fu_2558_p1 = add_ln38_36_fu_2553_p2;

assign zext_ln38_52_fu_2578_p1 = add_ln38_37_fu_2573_p2;

assign zext_ln38_53_fu_2588_p1 = add_ln38_38_fu_2583_p2;

assign zext_ln38_54_fu_2608_p1 = add_ln38_39_fu_2603_p2;

assign zext_ln38_55_fu_2618_p1 = add_ln38_40_fu_2613_p2;

assign zext_ln38_56_fu_2638_p1 = add_ln38_41_fu_2633_p2;

assign zext_ln38_57_fu_2648_p1 = add_ln38_42_fu_2643_p2;

assign zext_ln38_58_fu_2668_p1 = add_ln38_43_fu_2663_p2;

assign zext_ln38_59_fu_2678_p1 = add_ln38_44_fu_2673_p2;

assign zext_ln38_5_fu_1868_p1 = or_ln38_4_fu_1863_p2;

assign zext_ln38_60_fu_2698_p1 = add_ln38_45_fu_2693_p2;

assign zext_ln38_61_fu_2708_p1 = add_ln38_46_fu_2703_p2;

assign zext_ln38_62_fu_2728_p1 = add_ln38_47_fu_2723_p2;

assign zext_ln38_63_fu_2738_p1 = add_ln38_48_fu_2733_p2;

assign zext_ln38_64_fu_2758_p1 = add_ln38_49_fu_2753_p2;

assign zext_ln38_65_fu_2768_p1 = add_ln38_50_fu_2763_p2;

assign zext_ln38_66_fu_2788_p1 = add_ln38_51_fu_2783_p2;

assign zext_ln38_67_fu_2798_p1 = add_ln38_52_fu_2793_p2;

assign zext_ln38_68_fu_2818_p1 = add_ln38_53_fu_2813_p2;

assign zext_ln38_69_fu_2828_p1 = add_ln38_54_fu_2823_p2;

assign zext_ln38_6_fu_1888_p1 = or_ln38_5_fu_1883_p2;

assign zext_ln38_70_fu_2848_p1 = add_ln38_55_fu_2843_p2;

assign zext_ln38_71_fu_2858_p1 = add_ln38_56_fu_2853_p2;

assign zext_ln38_72_fu_2878_p1 = add_ln38_57_fu_2873_p2;

assign zext_ln38_73_fu_2888_p1 = add_ln38_58_fu_2883_p2;

assign zext_ln38_74_fu_2908_p1 = add_ln38_59_fu_2903_p2;

assign zext_ln38_75_fu_2918_p1 = add_ln38_60_fu_2913_p2;

assign zext_ln38_76_fu_2938_p1 = add_ln38_61_fu_2933_p2;

assign zext_ln38_77_fu_2948_p1 = add_ln38_62_fu_2943_p2;

assign zext_ln38_78_fu_2968_p1 = add_ln38_63_fu_2963_p2;

assign zext_ln38_79_fu_2978_p1 = add_ln38_64_fu_2973_p2;

assign zext_ln38_7_fu_1898_p1 = or_ln38_6_fu_1893_p2;

assign zext_ln38_8_fu_1918_p1 = or_ln38_7_fu_1913_p2;

assign zext_ln38_9_fu_1928_p1 = or_ln38_8_fu_1923_p2;

assign zext_ln38_fu_1797_p1 = add_ln38_fu_1791_p2;

always @ (posedge ap_clk) begin
    add_ln38_reg_3040[3:0] <= 4'b0000;
end

endmodule //system_top_patch_buffer_add_patch7
