-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_p_find_starting_index_and_value is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce1 : OUT STD_LOGIC;
    num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce1 : OUT STD_LOGIC;
    points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    projectionToRow_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    projectionToRow_empty_n : IN STD_LOGIC;
    projectionToRow_read : OUT STD_LOGIC;
    start_index : OUT STD_LOGIC_VECTOR (31 downto 0);
    start_index_ap_vld : OUT STD_LOGIC;
    start_value_i : IN STD_LOGIC_VECTOR (31 downto 0);
    start_value_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    start_value_o_ap_vld : OUT STD_LOGIC;
    i_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    i_empty_n : IN STD_LOGIC;
    i_read : OUT STD_LOGIC );
end;


architecture behav of system_top_p_find_starting_index_and_value is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal projectionToRow_blk_n : STD_LOGIC;
    signal i_blk_n : STD_LOGIC;
    signal p_Val2_20_reg_1265 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_1273 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_53_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_points_load_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tobool_i19_i_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i19_i_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_10_fu_238_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_10_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_22_i_fu_244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_22_i_reg_1306 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_248_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_1312 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln300_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln300_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln300_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_1_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_1_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_1_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln959_1_reg_1335 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_1_fu_445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_1_reg_1340 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln958_2_fu_451_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_2_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_1_fu_459_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_1_reg_1350 : STD_LOGIC_VECTOR (7 downto 0);
    signal z_bits_fu_463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_bits_reg_1355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_49_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_49_reg_1361 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_32_fu_481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_32_reg_1366 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_50_fu_489_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_50_reg_1373 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i81_i_fu_599_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i81_i_reg_1378 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sub_ln959_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln959_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_reg_1393 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln958_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_1398 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_745_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_1403 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_1408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln935_1_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_1_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Result_58_fu_873_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_58_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_35_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_35_reg_1423 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_59_fu_895_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_59_reg_1430 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_2_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_2_reg_1435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sub_ln959_2_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln959_2_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_2_fu_1030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_2_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln958_4_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_4_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_2_fu_1044_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_2_reg_1455 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_reg_1460 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal LD_3_fu_1145_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal LD_3_reg_1465 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln302_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_1_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_1_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_2_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_2_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_3_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_3_reg_1495 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal idxprom_i_fu_215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln301_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal start_index_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal and_ln302_1_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_fu_1260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_value_o_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i23_i_fu_233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln301_fu_266_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln301_1_fu_270_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln301_fu_278_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_283_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln301_1_fu_293_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_297_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_54_fu_310_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_2_fu_319_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_1_fu_327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_2_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_339_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_1_fu_355_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_1_fu_359_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_1_fu_365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_1_fu_369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_1_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_2_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_fu_398_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_55_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_1_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_1_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_1_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_1_fu_437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_3_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_2_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_1_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_1_fu_510_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_1_fu_502_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_25_fu_515_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_1_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_26_fu_525_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_34_fu_531_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_40_fu_545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_1_fu_561_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_1_fu_553_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_1_fu_566_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_1_fu_541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_i_fu_572_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_56_fu_579_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_2_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_1_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_606_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_fu_625_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_641_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_645_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_661_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_3_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_fu_698_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_1_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln959_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_1_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_769_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_760_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_775_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_21_fu_785_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_33_fu_791_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_805_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_821_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_813_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_826_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_832_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_52_fu_839_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln935_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln744_fu_855_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_7_fu_881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_3_fu_905_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_2_fu_912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_3_fu_918_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_fu_924_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_2_fu_940_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_2_fu_944_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_2_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_2_fu_954_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_2_fu_960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_4_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_4_fu_972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_fu_997_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_2_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_2_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_2_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_2_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_5_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln959_3_fu_1048_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_4_fu_1051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_2_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_2_fu_1063_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_2_fu_1054_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_29_fu_1069_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_2_fu_1076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_30_fu_1079_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_36_fu_1085_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_46_fu_1099_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_2_fu_1115_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_2_fu_1107_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_2_fu_1120_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_2_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_i_fu_1126_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_61_fu_1133_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_1149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_fu_1152_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_57_fu_1160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_1_fu_1173_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_62_fu_1183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1196_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln302_fu_1156_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_fu_1206_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln302_1_fu_1179_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln302_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_1_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component system_top_fsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fsub_32ns_32ns_32_4_full_dsp_1_U18 : component system_top_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln935_reg_1408,
        din1 => retval_0_i81_i_reg_1378,
        ce => ap_const_logic_1,
        dout => grp_fu_207_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U19 : component system_top_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        din1 => grp_fu_211_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_211_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln300_fu_261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_index_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_index_preg <= ap_const_lv32_0;
            else
                if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    start_index_preg <= j_reg_194;
                end if; 
            end if;
        end if;
    end process;


    start_value_o_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_value_o_preg <= ap_const_lv32_0;
            else
                if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    start_value_o_preg <= sub_ln703_fu_1260_p2;
                end if; 
            end if;
        end if;
    end process;


    j_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                j_reg_194 <= add_ln300_reg_1317;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_194 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln935_1_reg_1413 = ap_const_lv1_0))) then
                LD_3_reg_1465 <= LD_3_fu_1145_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln300_reg_1317 <= add_ln300_fu_255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln300_fu_261_p2 = ap_const_lv1_0) and (tobool_i19_i_reg_1294 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln958_1_reg_1340 <= add_ln958_1_fu_445_p2;
                icmp_ln958_1_reg_1330 <= icmp_ln958_1_fu_419_p2;
                select_ln958_2_reg_1345 <= select_ln958_2_fu_451_p3;
                sub_ln959_1_reg_1335 <= sub_ln959_1_fu_431_p2;
                trunc_ln943_1_reg_1350 <= trunc_ln943_1_fu_459_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln935_1_reg_1413 = ap_const_lv1_0))) then
                add_ln958_2_reg_1445 <= add_ln958_2_fu_1030_p2;
                icmp_ln958_2_reg_1435 <= icmp_ln958_2_fu_1004_p2;
                select_ln958_4_reg_1450 <= select_ln958_4_fu_1036_p3;
                sub_ln959_2_reg_1440 <= sub_ln959_2_fu_1016_p2;
                trunc_ln943_2_reg_1455 <= trunc_ln943_2_fu_1044_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln958_reg_1393 <= add_ln958_fu_731_p2;
                icmp_ln958_reg_1383 <= icmp_ln958_fu_705_p2;
                select_ln958_reg_1398 <= select_ln958_fu_737_p3;
                sub_ln959_reg_1388 <= sub_ln959_fu_717_p2;
                trunc_ln943_reg_1403 <= trunc_ln943_fu_745_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                dc_reg_1460 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                i_1_reg_1273 <= i_dout;
                p_Result_53_reg_1283 <= projectionToRow_dout(31 downto 31);
                p_Val2_20_reg_1265 <= projectionToRow_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln302_1_reg_1485 <= icmp_ln302_1_fu_1222_p2;
                icmp_ln302_2_reg_1490 <= icmp_ln302_2_fu_1228_p2;
                icmp_ln302_3_reg_1495 <= icmp_ln302_3_fu_1234_p2;
                icmp_ln302_reg_1480 <= icmp_ln302_fu_1216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln935_1_reg_1413 <= icmp_ln935_1_fu_867_p2;
                m_35_reg_1423 <= m_35_fu_887_p3;
                p_Result_58_reg_1418 <= start_value_i(31 downto 31);
                p_Result_59_reg_1430 <= p_Result_59_fu_895_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    m_22_i_reg_1306(31 downto 0) <= m_22_i_fu_244_p1(31 downto 0);
                num_points_load_reg_1289 <= num_points_q1;
                    shl_ln_reg_1312(15 downto 13) <= shl_ln_fu_248_p3(15 downto 13);
                tmp_V_10_reg_1299 <= tmp_V_10_fu_238_p3;
                tobool_i19_i_reg_1294 <= tobool_i19_i_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                m_32_reg_1366 <= m_32_fu_481_p3;
                p_Result_49_reg_1361 <= points_q1(31 downto 31);
                p_Result_50_reg_1373 <= p_Result_50_fu_489_p4;
                retval_0_i81_i_reg_1378 <= retval_0_i81_i_fu_599_p3;
                z_bits_reg_1355 <= z_bits_fu_463_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                select_ln935_reg_1408 <= select_ln935_fu_859_p3;
            end if;
        end if;
    end process;
    m_22_i_reg_1306(63 downto 32) <= "00000000000000000000000000000000";
    shl_ln_reg_1312(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, projectionToRow_empty_n, i_empty_n, ap_CS_fsm_state3, icmp_ln300_fu_261_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((i_empty_n = ap_const_logic_0) or (projectionToRow_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln300_fu_261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    LD_2_fu_591_p1 <= p_Result_56_fu_579_p5(32 - 1 downto 0);
    LD_3_fu_1145_p1 <= p_Result_61_fu_1133_p5(31 - 1 downto 0);
    LD_fu_851_p1 <= p_Result_52_fu_839_p5(32 - 1 downto 0);
    add_ln300_fu_255_p2 <= std_logic_vector(unsigned(j_reg_194) + unsigned(ap_const_lv32_1));
    add_ln301_fu_278_p2 <= std_logic_vector(unsigned(shl_ln301_1_fu_270_p3) + unsigned(shl_ln_reg_1312));
    add_ln958_1_fu_445_p2 <= std_logic_vector(unsigned(sub_ln944_1_fu_327_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_2_fu_1030_p2 <= std_logic_vector(unsigned(sub_ln944_2_fu_912_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_fu_731_p2 <= std_logic_vector(unsigned(sub_ln944_fu_613_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_1_fu_566_p2 <= std_logic_vector(unsigned(sub_ln964_1_fu_561_p2) + unsigned(select_ln943_1_fu_553_p3));
    add_ln964_2_fu_1120_p2 <= std_logic_vector(unsigned(sub_ln964_2_fu_1115_p2) + unsigned(select_ln943_2_fu_1107_p3));
    add_ln964_fu_826_p2 <= std_logic_vector(unsigned(sub_ln964_fu_821_p2) + unsigned(select_ln943_fu_813_p3));
    and_ln302_1_fu_1254_p2 <= (grp_fu_211_p2 and and_ln302_fu_1248_p2);
    and_ln302_fu_1248_p2 <= (or_ln302_fu_1240_p2 and or_ln302_1_fu_1244_p2);
    and_ln949_1_fu_711_p2 <= (xor_ln949_fu_692_p2 and p_Result_51_fu_698_p3);
    and_ln949_2_fu_387_p2 <= (tmp_V_10_reg_1299 and or_ln949_fu_381_p2);
    and_ln949_3_fu_425_p2 <= (xor_ln949_1_fu_406_p2 and p_Result_55_fu_412_p3);
    and_ln949_4_fu_972_p2 <= (or_ln949_4_fu_966_p2 and m_35_reg_1423);
    and_ln949_5_fu_1010_p2 <= (xor_ln949_2_fu_991_p2 and p_Result_60_fu_997_p3);
    and_ln949_fu_673_p2 <= (or_ln949_3_fu_667_p2 and m_32_reg_1366);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, projectionToRow_empty_n, i_empty_n)
    begin
                ap_block_state1 <= ((i_empty_n = ap_const_logic_0) or (projectionToRow_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln300_fu_261_p2)
    begin
        if (((icmp_ln300_fu_261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln300_fu_261_p2)
    begin
        if (((icmp_ln300_fu_261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln744_1_fu_595_p1 <= LD_2_fu_591_p1;
    bitcast_ln744_fu_855_p1 <= LD_fu_851_p1;
    data_V_1_fu_1173_p3 <= 
        ap_const_lv31_0 when (icmp_ln935_1_reg_1413(0) = '1') else 
        LD_3_reg_1465;
    data_V_fu_1149_p1 <= dc_reg_1460;
    grp_fu_211_p0 <= p_Result_57_fu_1160_p3;
    grp_fu_211_p1 <= p_Result_62_fu_1183_p3;

    i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_blk_n <= i_empty_n;
        else 
            i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, projectionToRow_empty_n, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (projectionToRow_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_read <= ap_const_logic_1;
        else 
            i_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln300_fu_261_p2 <= "1" when (j_reg_194 = num_points_load_reg_1289) else "0";
    icmp_ln302_1_fu_1222_p2 <= "1" when (trunc_ln302_fu_1156_p1 = ap_const_lv23_0) else "0";
    icmp_ln302_2_fu_1228_p2 <= "0" when (tmp_1_fu_1206_p4 = ap_const_lv8_FF) else "1";
    icmp_ln302_3_fu_1234_p2 <= "1" when (trunc_ln302_1_fu_1179_p1 = ap_const_lv23_0) else "0";
    icmp_ln302_fu_1216_p2 <= "0" when (tmp_s_fu_1196_p4 = ap_const_lv8_FF) else "1";
    icmp_ln935_1_fu_867_p2 <= "1" when (start_value_i = ap_const_lv32_0) else "0";
    icmp_ln935_fu_749_p2 <= "1" when (z_bits_reg_1355 = ap_const_lv32_0) else "0";
    icmp_ln946_1_fu_349_p2 <= "1" when (signed(tmp_fu_339_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_2_fu_934_p2 <= "1" when (signed(tmp_116_fu_924_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_635_p2 <= "1" when (signed(tmp_110_fu_625_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_1_fu_392_p2 <= "0" when (and_ln949_2_fu_387_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_2_fu_977_p2 <= "0" when (and_ln949_4_fu_972_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_678_p2 <= "0" when (and_ln949_fu_673_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_1_fu_419_p2 <= "1" when (signed(lsb_index_2_fu_333_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_2_fu_1004_p2 <= "1" when (signed(lsb_index_3_fu_918_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_fu_705_p2 <= "1" when (signed(lsb_index_fu_619_p2) > signed(ap_const_lv32_0)) else "0";
    idxprom_i_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_dout),64));
    
    l_2_fu_319_p3_proc : process(p_Result_54_fu_310_p4)
    begin
        l_2_fu_319_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_54_fu_310_p4(i) = '1' then
                l_2_fu_319_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_3_fu_905_p3_proc : process(p_Result_59_reg_1430)
    begin
        l_3_fu_905_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_59_reg_1430(i) = '1' then
                l_3_fu_905_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_606_p3_proc : process(p_Result_50_reg_1373)
    begin
        l_fu_606_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_50_reg_1373(i) = '1' then
                l_fu_606_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_2_fu_333_p2 <= std_logic_vector(unsigned(sub_ln944_1_fu_327_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_3_fu_918_p2 <= std_logic_vector(unsigned(sub_ln944_2_fu_912_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_619_p2 <= std_logic_vector(unsigned(sub_ln944_fu_613_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_1_fu_369_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_1_fu_365_p1(31-1 downto 0)))));
    lshr_ln947_2_fu_954_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_2_fu_950_p1(31-1 downto 0)))));
    lshr_ln947_fu_655_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_651_p1(31-1 downto 0)))));
    lshr_ln958_1_fu_510_p2 <= std_logic_vector(shift_right(unsigned(m_22_i_reg_1306),to_integer(unsigned('0' & zext_ln958_1_fu_507_p1(31-1 downto 0)))));
    lshr_ln958_2_fu_1063_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_3_fu_1048_p1),to_integer(unsigned('0' & zext_ln958_2_fu_1060_p1(31-1 downto 0)))));
    lshr_ln958_fu_769_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_fu_754_p1),to_integer(unsigned('0' & zext_ln958_fu_766_p1(31-1 downto 0)))));
    lshr_ln_fu_283_p4 <= add_ln301_fu_278_p2(15 downto 13);
    m_21_fu_785_p2 <= std_logic_vector(unsigned(m_fu_775_p3) + unsigned(zext_ln961_fu_782_p1));
    m_22_i_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_10_fu_238_p3),64));
    m_25_fu_515_p3 <= 
        lshr_ln958_1_fu_510_p2 when (icmp_ln958_1_reg_1330(0) = '1') else 
        shl_ln959_1_fu_502_p2;
    m_26_fu_525_p2 <= std_logic_vector(unsigned(m_25_fu_515_p3) + unsigned(zext_ln961_1_fu_522_p1));
    m_29_fu_1069_p3 <= 
        lshr_ln958_2_fu_1063_p2 when (icmp_ln958_2_reg_1435(0) = '1') else 
        shl_ln959_2_fu_1054_p2;
    m_30_fu_1079_p2 <= std_logic_vector(unsigned(m_29_fu_1069_p3) + unsigned(zext_ln961_2_fu_1076_p1));
    m_32_fu_481_p3 <= 
        tmp_V_fu_475_p2 when (p_Result_49_fu_467_p3(0) = '1') else 
        z_bits_fu_463_p1;
    m_33_fu_791_p4 <= m_21_fu_785_p2(63 downto 1);
    m_34_fu_531_p4 <= m_26_fu_525_p2(63 downto 1);
    m_35_fu_887_p3 <= 
        tmp_V_7_fu_881_p2 when (p_Result_58_fu_873_p3(0) = '1') else 
        start_value_i;
    m_36_fu_1085_p4 <= m_30_fu_1079_p2(63 downto 1);
    m_fu_775_p3 <= 
        lshr_ln958_fu_769_p2 when (icmp_ln958_reg_1383(0) = '1') else 
        shl_ln959_fu_760_p2;
    num_points_address1 <= idxprom_i_fu_215_p1(3 - 1 downto 0);

    num_points_ce1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, projectionToRow_empty_n, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (projectionToRow_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_points_ce1 <= ap_const_logic_1;
        else 
            num_points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln302_1_fu_1244_p2 <= (icmp_ln302_3_reg_1495 or icmp_ln302_2_reg_1490);
    or_ln302_fu_1240_p2 <= (icmp_ln302_reg_1480 or icmp_ln302_1_reg_1485);
    or_ln949_3_fu_667_p2 <= (shl_ln949_fu_661_p2 or lshr_ln947_fu_655_p2);
    or_ln949_4_fu_966_p2 <= (shl_ln949_2_fu_960_p2 or lshr_ln947_2_fu_954_p2);
    or_ln949_fu_381_p2 <= (shl_ln949_1_fu_375_p2 or lshr_ln947_1_fu_369_p2);
    p_Result_40_fu_545_p3 <= m_26_fu_525_p2(25 downto 25);
    p_Result_46_fu_1099_p3 <= m_30_fu_1079_p2(25 downto 25);
    p_Result_49_fu_467_p3 <= points_q1(31 downto 31);
    
    p_Result_50_fu_489_p4_proc : process(m_32_fu_481_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_50_fu_489_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_32_fu_481_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_50_fu_489_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_50_fu_489_p4_i) := m_32_fu_481_p3(32-1-p_Result_50_fu_489_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_50_fu_489_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_51_fu_698_p3 <= m_32_reg_1366(to_integer(unsigned(lsb_index_fu_619_p2)) downto to_integer(unsigned(lsb_index_fu_619_p2))) when (to_integer(unsigned(lsb_index_fu_619_p2))>= 0 and to_integer(unsigned(lsb_index_fu_619_p2))<=31) else "-";
    p_Result_52_fu_839_p5 <= (zext_ln962_fu_801_p1(63 downto 32) & tmp_i_fu_832_p3 & zext_ln962_fu_801_p1(22 downto 0));
    
    p_Result_54_fu_310_p4_proc : process(tmp_V_10_reg_1299)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_54_fu_310_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := tmp_V_10_reg_1299;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_54_fu_310_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_54_fu_310_p4_i) := tmp_V_10_reg_1299(32-1-p_Result_54_fu_310_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_54_fu_310_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_55_fu_412_p3 <= tmp_V_10_reg_1299(to_integer(unsigned(lsb_index_2_fu_333_p2)) downto to_integer(unsigned(lsb_index_2_fu_333_p2))) when (to_integer(unsigned(lsb_index_2_fu_333_p2))>= 0 and to_integer(unsigned(lsb_index_2_fu_333_p2))<=31) else "-";
    p_Result_56_fu_579_p5 <= (zext_ln962_1_fu_541_p1(63 downto 32) & tmp_11_i_fu_572_p3 & zext_ln962_1_fu_541_p1(22 downto 0));
    p_Result_57_fu_1160_p3 <= (ap_const_lv1_0 & trunc_ln368_fu_1152_p1);
    p_Result_58_fu_873_p3 <= start_value_i(31 downto 31);
    
    p_Result_59_fu_895_p4_proc : process(m_35_fu_887_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_59_fu_895_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_35_fu_887_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_59_fu_895_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_59_fu_895_p4_i) := m_35_fu_887_p3(32-1-p_Result_59_fu_895_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_59_fu_895_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_60_fu_997_p3 <= m_35_reg_1423(to_integer(unsigned(lsb_index_3_fu_918_p2)) downto to_integer(unsigned(lsb_index_3_fu_918_p2))) when (to_integer(unsigned(lsb_index_3_fu_918_p2))>= 0 and to_integer(unsigned(lsb_index_3_fu_918_p2))<=31) else "-";
    p_Result_61_fu_1133_p5 <= (zext_ln962_2_fu_1095_p1(63 downto 32) & tmp_13_i_fu_1126_p3 & zext_ln962_2_fu_1095_p1(22 downto 0));
    p_Result_62_fu_1183_p3 <= (ap_const_lv1_0 & data_V_1_fu_1173_p3);
    p_Result_s_fu_805_p3 <= m_21_fu_785_p2(25 downto 25);
    points_address1 <= zext_ln301_fu_305_p1(12 - 1 downto 0);

    points_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            points_ce1 <= ap_const_logic_1;
        else 
            points_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    projectionToRow_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, projectionToRow_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            projectionToRow_blk_n <= projectionToRow_empty_n;
        else 
            projectionToRow_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    projectionToRow_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, projectionToRow_empty_n, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (projectionToRow_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            projectionToRow_read <= ap_const_logic_1;
        else 
            projectionToRow_read <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_i81_i_fu_599_p3 <= 
        ap_const_lv32_0 when (tobool_i19_i_reg_1294(0) = '1') else 
        bitcast_ln744_1_fu_595_p1;
    select_ln935_fu_859_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_fu_749_p2(0) = '1') else 
        bitcast_ln744_fu_855_p1;
    select_ln943_1_fu_553_p3 <= 
        ap_const_lv8_7F when (p_Result_40_fu_545_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_2_fu_1107_p3 <= 
        ap_const_lv8_7F when (p_Result_46_fu_1099_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_813_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_805_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_1_fu_437_p3 <= 
        icmp_ln949_1_fu_392_p2 when (icmp_ln946_1_fu_349_p2(0) = '1') else 
        p_Result_55_fu_412_p3;
    select_ln946_2_fu_1022_p3 <= 
        icmp_ln949_2_fu_977_p2 when (icmp_ln946_2_fu_934_p2(0) = '1') else 
        p_Result_60_fu_997_p3;
    select_ln946_fu_723_p3 <= 
        icmp_ln949_fu_678_p2 when (icmp_ln946_fu_635_p2(0) = '1') else 
        p_Result_51_fu_698_p3;
    select_ln958_2_fu_451_p3 <= 
        select_ln946_1_fu_437_p3 when (icmp_ln958_1_fu_419_p2(0) = '1') else 
        and_ln949_3_fu_425_p2;
    select_ln958_4_fu_1036_p3 <= 
        select_ln946_2_fu_1022_p3 when (icmp_ln958_2_fu_1004_p2(0) = '1') else 
        and_ln949_5_fu_1010_p2;
    select_ln958_fu_737_p3 <= 
        select_ln946_fu_723_p3 when (icmp_ln958_fu_705_p2(0) = '1') else 
        and_ln949_1_fu_711_p2;
    shl_ln301_1_fu_270_p3 <= (trunc_ln301_fu_266_p1 & ap_const_lv4_0);
    shl_ln949_1_fu_375_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_2_fu_333_p2(31-1 downto 0)))));
    shl_ln949_2_fu_960_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_3_fu_918_p2(31-1 downto 0)))));
    shl_ln949_fu_661_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_619_p2(31-1 downto 0)))));
    shl_ln959_1_fu_502_p2 <= std_logic_vector(shift_left(unsigned(m_22_i_reg_1306),to_integer(unsigned('0' & zext_ln959_2_fu_499_p1(31-1 downto 0)))));
    shl_ln959_2_fu_1054_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_3_fu_1048_p1),to_integer(unsigned('0' & zext_ln959_4_fu_1051_p1(31-1 downto 0)))));
    shl_ln959_fu_760_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_fu_754_p1),to_integer(unsigned('0' & zext_ln959_1_fu_757_p1(31-1 downto 0)))));
    shl_ln_fu_248_p3 <= (i_1_reg_1273 & ap_const_lv13_0);

    start_index_assign_proc : process(j_reg_194, ap_CS_fsm_state12, start_index_preg, and_ln302_1_fu_1254_p2)
    begin
        if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            start_index <= j_reg_194;
        else 
            start_index <= start_index_preg;
        end if; 
    end process;


    start_index_ap_vld_assign_proc : process(ap_CS_fsm_state12, and_ln302_1_fu_1254_p2)
    begin
        if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            start_index_ap_vld <= ap_const_logic_1;
        else 
            start_index_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    start_value_o_assign_proc : process(ap_CS_fsm_state12, and_ln302_1_fu_1254_p2, sub_ln703_fu_1260_p2, start_value_o_preg)
    begin
        if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            start_value_o <= sub_ln703_fu_1260_p2;
        else 
            start_value_o <= start_value_o_preg;
        end if; 
    end process;


    start_value_o_ap_vld_assign_proc : process(ap_CS_fsm_state12, and_ln302_1_fu_1254_p2)
    begin
        if (((ap_const_lv1_1 = and_ln302_1_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            start_value_o_ap_vld <= ap_const_logic_1;
        else 
            start_value_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sub_i23_i_fu_233_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_20_reg_1265));
    sub_ln703_fu_1260_p2 <= std_logic_vector(unsigned(z_bits_reg_1355) - unsigned(p_Val2_20_reg_1265));
    sub_ln944_1_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_2_fu_319_p3));
    sub_ln944_2_fu_912_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_3_fu_905_p3));
    sub_ln944_fu_613_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_606_p3));
    sub_ln947_1_fu_359_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_1_fu_355_p1));
    sub_ln947_2_fu_944_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_2_fu_940_p1));
    sub_ln947_fu_645_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_641_p1));
    sub_ln959_1_fu_431_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_1_fu_327_p2));
    sub_ln959_2_fu_1016_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_2_fu_912_p2));
    sub_ln959_fu_717_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_fu_613_p2));
    sub_ln964_1_fu_561_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_1_reg_1350));
    sub_ln964_2_fu_1115_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_2_reg_1455));
    sub_ln964_fu_821_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_reg_1403));
    tmp_110_fu_625_p4 <= lsb_index_fu_619_p2(31 downto 1);
    tmp_111_fu_684_p3 <= lsb_index_fu_619_p2(31 downto 31);
    tmp_113_fu_398_p3 <= lsb_index_2_fu_333_p2(31 downto 31);
    tmp_116_fu_924_p4 <= lsb_index_3_fu_918_p2(31 downto 1);
    tmp_117_fu_983_p3 <= lsb_index_3_fu_918_p2(31 downto 31);
    tmp_11_i_fu_572_p3 <= (p_Result_53_reg_1283 & add_ln964_1_fu_566_p2);
    tmp_13_i_fu_1126_p3 <= (p_Result_58_reg_1418 & add_ln964_2_fu_1120_p2);
    tmp_1_fu_1206_p4 <= data_V_1_fu_1173_p3(30 downto 23);
    tmp_67_fu_297_p3 <= (lshr_ln_fu_283_p4 & trunc_ln301_1_fu_293_p1);
    tmp_V_10_fu_238_p3 <= 
        sub_i23_i_fu_233_p2 when (p_Result_53_reg_1283(0) = '1') else 
        p_Val2_20_reg_1265;
    tmp_V_7_fu_881_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(start_value_i));
    tmp_V_fu_475_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(z_bits_fu_463_p1));
    tmp_fu_339_p4 <= lsb_index_2_fu_333_p2(31 downto 1);
    tmp_i_fu_832_p3 <= (p_Result_49_reg_1361 & add_ln964_fu_826_p2);
    tmp_s_fu_1196_p4 <= data_V_fu_1149_p1(30 downto 23);
    tobool_i19_i_fu_228_p2 <= "1" when (p_Val2_20_reg_1265 = ap_const_lv32_0) else "0";
    trunc_ln301_1_fu_293_p1 <= j_reg_194(9 - 1 downto 0);
    trunc_ln301_fu_266_p1 <= j_reg_194(12 - 1 downto 0);
    trunc_ln302_1_fu_1179_p1 <= data_V_1_fu_1173_p3(23 - 1 downto 0);
    trunc_ln302_fu_1156_p1 <= data_V_fu_1149_p1(23 - 1 downto 0);
    trunc_ln368_fu_1152_p1 <= data_V_fu_1149_p1(31 - 1 downto 0);
    trunc_ln943_1_fu_459_p1 <= l_2_fu_319_p3(8 - 1 downto 0);
    trunc_ln943_2_fu_1044_p1 <= l_3_fu_905_p3(8 - 1 downto 0);
    trunc_ln943_fu_745_p1 <= l_fu_606_p3(8 - 1 downto 0);
    trunc_ln947_1_fu_355_p1 <= sub_ln944_1_fu_327_p2(6 - 1 downto 0);
    trunc_ln947_2_fu_940_p1 <= sub_ln944_2_fu_912_p2(6 - 1 downto 0);
    trunc_ln947_fu_641_p1 <= sub_ln944_fu_613_p2(6 - 1 downto 0);
    xor_ln949_1_fu_406_p2 <= (tmp_113_fu_398_p3 xor ap_const_lv1_1);
    xor_ln949_2_fu_991_p2 <= (tmp_117_fu_983_p3 xor ap_const_lv1_1);
    xor_ln949_fu_692_p2 <= (tmp_111_fu_684_p3 xor ap_const_lv1_1);
    z_bits_fu_463_p1 <= points_q1(32 - 1 downto 0);
    zext_ln301_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_297_p3),64));
    zext_ln947_1_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_1_fu_359_p2),32));
    zext_ln947_2_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_2_fu_944_p2),32));
    zext_ln947_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_645_p2),32));
    zext_ln958_1_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_1_reg_1340),64));
    zext_ln958_2_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_2_reg_1445),64));
    zext_ln958_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_reg_1393),64));
    zext_ln959_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_reg_1388),64));
    zext_ln959_2_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_1_reg_1335),64));
    zext_ln959_3_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_35_reg_1423),64));
    zext_ln959_4_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_2_reg_1440),64));
    zext_ln959_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_32_reg_1366),64));
    zext_ln961_1_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_2_reg_1345),64));
    zext_ln961_2_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_4_reg_1450),64));
    zext_ln961_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_1398),64));
    zext_ln962_1_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_34_fu_531_p4),64));
    zext_ln962_2_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_36_fu_1085_p4),64));
    zext_ln962_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_33_fu_791_p4),64));
end behav;
