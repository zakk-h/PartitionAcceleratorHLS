-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_p_find_left_and_right_boundaries is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    left_bound_ap_vld : OUT STD_LOGIC;
    right_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    right_bound_ap_vld : OUT STD_LOGIC;
    i_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    i_empty_n : IN STD_LOGIC;
    i_read : OUT STD_LOGIC;
    lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
    rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_top_p_find_left_and_right_boundaries is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_trapezoid_edgestrapezoid_edges_ce0 : STD_LOGIC;
    signal get_trapezoid_edgestrapezoid_edges_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_blk_n : STD_LOGIC;
    signal grp_fu_242_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_123_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_130_fu_1228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_249_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln935_2_reg_1959 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_1706 : STD_LOGIC_VECTOR (2 downto 0);
    signal num_points_load_reg_1721 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_load_reg_1726 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_348_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_1733 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ireg_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_reg_1738 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_75_reg_1744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_1749 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln588_reg_1755 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln317_fu_402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln317_reg_1765 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal lshr_ln_reg_1773 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln317_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_fu_453_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_1778 : STD_LOGIC_VECTOR (51 downto 0);
    signal F2_fu_456_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1783 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sh_amt_fu_517_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1796 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_1801 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln585_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_reg_1806 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_reg_1811 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_reg_1816 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln603_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_1821 : STD_LOGIC_VECTOR (0 downto 0);
    signal points_load_reg_1826 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal z_bits_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_bits_reg_1831 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_reg_1841 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_1_V_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_1_V_reg_1848 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_reg_1853 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_77_reg_1857 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_1862 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_1867 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_836_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_1872 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_948_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_1877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_reg_1882 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln368_fu_960_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln368_reg_1887 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal bitcast_ln351_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_Result_82_reg_1897 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal trunc_ln565_1_fu_1006_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_1_reg_1902 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_1_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_1907 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_1_fu_1016_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_reg_1915 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_fu_1061_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_1923 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln582_1_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_1928 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_1_fu_1074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_1_reg_1933 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln581_1_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_reg_1939 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_reg_1944 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_2_fu_1164_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_2_reg_1950 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_reg_1955 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_84_reg_1964 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_3_reg_1969 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_7_fu_1307_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_7_reg_1974 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_3_fu_1315_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_3_reg_1979 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_2_fu_1427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_2_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal trunc_ln368_1_fu_1438_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln368_1_reg_1989 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal bitcast_ln351_2_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal p_Result_89_reg_1999 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal trunc_ln565_2_fu_1484_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_2_reg_2004 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_2_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_reg_2009 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_1494_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_2017 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_fu_1539_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_2025 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln582_2_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_2_reg_2030 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_2_fu_1552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_2_reg_2035 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln581_2_fu_1601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_2_reg_2041 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_2_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_2_reg_2046 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_7_fu_1642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_7_reg_2052 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal idxprom_i_fu_342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln318_fu_473_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln571_5_fu_1214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_10_fu_1692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal left_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal right_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_292_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln555_fu_359_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal bitcast_ln702_1_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln318_fu_413_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln318_1_fu_417_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln318_fu_425_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal exp_tmp_fu_440_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln455_fu_449_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln318_1_fu_462_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_466_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_76_fu_478_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_485_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_489_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln581_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_507_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_512_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_495_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_540_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_556_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_560_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_564_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln582_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_1_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln582_fu_579_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln581_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_fu_648_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln585_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_fu_654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln703_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_121_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_fu_690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1495_fu_696_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln703_27_fu_714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_fu_718_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln703_28_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1495_5_fu_730_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_0_V_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_fu_756_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_760_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_5_fu_782_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_fu_800_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_6_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln959_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_5_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_858_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_864_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_38_fu_874_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_46_fu_880_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_910_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_902_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_915_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_i_fu_921_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_80_fu_928_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_4_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_81_fu_964_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_1_fu_976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_1_fu_992_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_1_fu_980_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_1_fu_1002_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_83_fu_1022_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_1_fu_1029_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_1033_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln581_1_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_1_fu_1051_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1056_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_5_fu_1039_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_129_fu_1078_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_2_fu_1094_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_1_fu_1098_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1102_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_1_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_3_fu_1108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_1_fu_1172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_1_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_1_fu_1175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_1_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_1_fu_1190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_1_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_4_fu_1204_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_3_fu_1197_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_3_fu_1235_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_3_fu_1239_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_3_fu_1245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_3_fu_1249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_3_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_8_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_133_fu_1279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_3_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_3_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_3_fu_1299_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_7_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln959_6_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_7_fu_1323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_3_fu_1333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_3_fu_1337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_3_fu_1327_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_42_fu_1343_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_3_fu_1350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_43_fu_1353_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_48_fu_1359_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_70_fu_1373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_3_fu_1389_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_3_fu_1381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_3_fu_1394_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_3_fu_1369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_i_fu_1400_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_87_fu_1407_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_6_fu_1419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_2_fu_1423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_1434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_88_fu_1442_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_2_fu_1454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_2_fu_1470_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_2_fu_1458_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_2_fu_1480_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_90_fu_1500_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_2_fu_1507_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_7_fu_1511_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln581_2_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_2_fu_1529_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_fu_1534_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_8_fu_1517_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_136_fu_1556_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_4_fu_1572_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_2_fu_1576_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_2_fu_1580_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_2_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_2_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_2_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_2_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_2_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_2_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_2_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_3_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_5_fu_1586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_2_fu_1650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_2_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_2_fu_1653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_2_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_6_fu_1668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_3_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_9_fu_1682_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_8_fu_1675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component system_top_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_p_find_left_and_right_boundaries_get_trapezoid_edgestrapezoid_edges IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_trapezoid_edgestrapezoid_edges_U : component system_top_p_find_left_and_right_boundaries_get_trapezoid_edgestrapezoid_edges
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_trapezoid_edgestrapezoid_edges_address0,
        ce0 => get_trapezoid_edgestrapezoid_edges_ce0,
        q0 => get_trapezoid_edgestrapezoid_edges_q0);

    faddfsub_32ns_32ns_32_4_full_dsp_1_U6 : component system_top_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_221_p0,
        din1 => grp_fu_221_p1,
        opcode => grp_fu_221_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_221_p2);

    fpext_32ns_64_2_no_dsp_1_U7 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_226_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_226_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    left_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                left_bound_preg <= ap_const_lv32_0;
            else
                if (((tmp_123_fu_748_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    left_bound_preg <= j_reg_207;
                end if; 
            end if;
        end if;
    end process;


    right_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                right_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_1))) then 
                    right_bound_preg <= j_reg_207;
                end if; 
            end if;
        end if;
    end process;


    j_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                j_reg_207 <= add_ln317_reg_1765;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                j_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                F2_1_reg_1915 <= F2_1_fu_1016_p2;
                icmp_ln571_1_reg_1907 <= icmp_ln571_1_fu_1010_p2;
                p_Result_82_reg_1897 <= ireg_1_fu_976_p1(63 downto 63);
                trunc_ln565_1_reg_1902 <= trunc_ln565_1_fu_1006_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                F2_2_reg_2017 <= F2_2_fu_1494_p2;
                icmp_ln571_2_reg_2009 <= icmp_ln571_2_fu_1488_p2;
                p_Result_89_reg_1999 <= ireg_2_fu_1454_p1(63 downto 63);
                trunc_ln565_2_reg_2004 <= trunc_ln565_2_fu_1484_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_0))) then
                F2_reg_1783 <= F2_fu_456_p2;
                lshr_ln_reg_1773 <= add_ln318_fu_425_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                add_i_reg_1882 <= grp_fu_221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln317_reg_1765 <= add_ln317_fu_402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                and_ln581_1_reg_1939 <= and_ln581_1_fu_1123_p2;
                icmp_ln582_1_reg_1928 <= icmp_ln582_1_fu_1069_p2;
                or_ln571_reg_1944 <= or_ln571_fu_1159_p2;
                select_ln571_2_reg_1950 <= select_ln571_2_fu_1164_p3;
                sh_amt_1_reg_1923 <= sh_amt_1_fu_1061_p3;
                trunc_ln583_1_reg_1933 <= trunc_ln583_1_fu_1074_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                and_ln581_2_reg_2041 <= and_ln581_2_fu_1601_p2;
                icmp_ln582_2_reg_2030 <= icmp_ln582_2_fu_1547_p2;
                or_ln571_2_reg_2046 <= or_ln571_2_fu_1637_p2;
                select_ln571_7_reg_2052 <= select_ln571_7_fu_1642_p3;
                sh_amt_2_reg_2025 <= sh_amt_2_fu_1539_p3;
                trunc_ln583_2_reg_2035 <= trunc_ln583_2_fu_1552_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln581_reg_1811 <= and_ln581_fu_598_p2;
                icmp_ln585_reg_1806 <= icmp_ln585_fu_534_p2;
                sh_amt_reg_1796 <= sh_amt_fu_517_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln571_reg_1749 = ap_const_lv1_0))) then
                and_ln603_reg_1821 <= and_ln603_fu_630_p2;
                select_ln585_reg_1816 <= select_ln585_fu_610_p3;
                trunc_ln583_reg_1801 <= trunc_ln583_fu_530_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                diff_1_V_reg_1848 <= diff_1_V_fu_742_p2;
                tmp_123_reg_1853 <= diff_0_V_fu_708_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                get_trapezoid_edgestrapezoid_edges_load_reg_1726 <= get_trapezoid_edgestrapezoid_edges_q0;
                num_points_load_reg_1721 <= num_points_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                i_2_reg_1706 <= i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln571_reg_1749 <= icmp_ln571_fu_371_p2;
                ireg_reg_1738 <= ireg_fu_355_p1;
                p_Result_75_reg_1744 <= ireg_fu_355_p1(63 downto 63);
                select_ln588_reg_1755 <= select_ln588_fu_388_p3;
                    shl_ln_reg_1733(15 downto 13) <= shl_ln_fu_348_p3(15 downto 13);
                xor_ln571_reg_1760 <= xor_ln571_fu_396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_1))) then
                icmp_ln935_2_reg_1959 <= grp_fu_259_p2;
                p_Result_84_reg_1964 <= points_load_reg_1826(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln935_2_reg_1959 = ap_const_lv1_0))) then
                icmp_ln958_3_reg_1969 <= grp_fu_316_p2;
                select_ln958_7_reg_1974 <= select_ln958_7_fu_1307_p3;
                trunc_ln943_3_reg_1979 <= trunc_ln943_3_fu_1315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln958_reg_1862 <= grp_fu_316_p2;
                select_ln958_reg_1867 <= select_ln958_fu_828_p3;
                trunc_ln943_reg_1872 <= trunc_ln943_fu_836_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_123_fu_748_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                p_Result_77_reg_1857 <= points_load_reg_1826(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                points_load_reg_1826 <= points_q0;
                select_ln585_1_reg_1841 <= select_ln585_1_fu_671_p3;
                z_bits_reg_1831 <= z_bits_fu_636_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_1)) or ((tmp_123_fu_748_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_264 <= grp_fu_242_p3;
                reg_268 <= grp_fu_249_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln935_2_reg_1959 = ap_const_lv1_0)))) then
                reg_334 <= grp_fu_322_p2;
                reg_338 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                select_ln935_2_reg_1984 <= select_ln935_2_fu_1427_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                select_ln935_reg_1877 <= select_ln935_fu_948_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                tmp_130_reg_1955 <= diff_1_V_reg_1848(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                trunc_ln368_1_reg_1989 <= trunc_ln368_1_fu_1438_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                trunc_ln368_reg_1887 <= trunc_ln368_fu_960_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_0) and (icmp_ln571_reg_1749 = ap_const_lv1_0))) then
                trunc_ln565_reg_1778 <= trunc_ln565_fu_453_p1;
            end if;
        end if;
    end process;
    shl_ln_reg_1733(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, i_empty_n, ap_CS_fsm_state7, tmp_123_fu_748_p3, ap_CS_fsm_state21, tmp_130_fu_1228_p3, ap_CS_fsm_state4, icmp_ln317_fu_408_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((tmp_123_fu_748_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1016_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_1_fu_1002_p1));
    F2_2_fu_1494_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_2_fu_1480_p1));
    F2_fu_456_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_449_p1));
    LD_4_fu_940_p1 <= p_Result_80_fu_928_p5(32 - 1 downto 0);
    LD_6_fu_1419_p1 <= p_Result_87_fu_1407_p5(32 - 1 downto 0);
    add_ln317_fu_402_p2 <= std_logic_vector(unsigned(j_reg_207) + unsigned(ap_const_lv32_1));
    add_ln318_fu_425_p2 <= std_logic_vector(unsigned(shl_ln318_1_fu_417_p3) + unsigned(shl_ln_reg_1733));
    add_ln581_1_fu_1051_p2 <= std_logic_vector(unsigned(F2_1_reg_1915) + unsigned(ap_const_lv12_FEC));
    add_ln581_2_fu_1529_p2 <= std_logic_vector(unsigned(F2_2_reg_2017) + unsigned(ap_const_lv12_FEC));
    add_ln581_fu_507_p2 <= std_logic_vector(unsigned(F2_reg_1783) + unsigned(ap_const_lv12_FEC));
    add_ln703_fu_678_p2 <= std_logic_vector(unsigned(select_ln585_1_reg_1841) + unsigned(z_bits_reg_1831));
    add_ln964_3_fu_1394_p2 <= std_logic_vector(unsigned(sub_ln964_3_fu_1389_p2) + unsigned(select_ln943_3_fu_1381_p3));
    add_ln964_fu_915_p2 <= std_logic_vector(unsigned(sub_ln964_fu_910_p2) + unsigned(select_ln943_fu_902_p3));
    and_ln581_1_fu_1123_p2 <= (xor_ln582_1_fu_1117_p2 and icmp_ln581_1_fu_1046_p2);
    and_ln581_2_fu_1601_p2 <= (xor_ln582_2_fu_1595_p2 and icmp_ln581_2_fu_1524_p2);
    and_ln581_fu_598_p2 <= (xor_ln582_fu_592_p2 and icmp_ln581_fu_502_p2);
    and_ln582_1_fu_1185_p2 <= (xor_ln571_1_fu_1180_p2 and icmp_ln582_1_reg_1928);
    and_ln582_2_fu_1663_p2 <= (xor_ln571_2_fu_1658_p2 and icmp_ln582_2_reg_2030);
    and_ln582_fu_574_p2 <= (xor_ln571_reg_1760 and icmp_ln582_fu_525_p2);
    and_ln585_1_fu_666_p2 <= (xor_ln585_fu_661_p2 and and_ln581_reg_1811);
    and_ln585_2_fu_1135_p2 <= (icmp_ln585_1_fu_1129_p2 and and_ln581_1_fu_1123_p2);
    and_ln585_3_fu_1613_p2 <= (icmp_ln585_2_fu_1607_p2 and and_ln581_2_fu_1601_p2);
    and_ln585_fu_604_p2 <= (icmp_ln585_fu_534_p2 and and_ln581_fu_598_p2);
    and_ln603_1_fu_1153_p2 <= (xor_ln581_1_fu_1147_p2 and icmp_ln603_1_fu_1088_p2);
    and_ln603_2_fu_1631_p2 <= (xor_ln581_2_fu_1625_p2 and icmp_ln603_2_fu_1566_p2);
    and_ln603_fu_630_p2 <= (xor_ln581_fu_624_p2 and icmp_ln603_fu_550_p2);
    and_ln949_6_fu_814_p2 <= (xor_ln949_fu_808_p2 and grp_fu_308_p3);
    and_ln949_7_fu_1293_p2 <= (xor_ln949_3_fu_1287_p2 and grp_fu_308_p3);
    and_ln949_8_fu_1267_p2 <= (reg_264 and or_ln949_fu_1261_p2);
    and_ln949_fu_788_p2 <= (reg_264 and or_ln949_5_fu_782_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, i_empty_n)
    begin
                ap_block_state1 <= ((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, icmp_ln317_fu_408_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln317_fu_408_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln317_fu_408_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_1_fu_1102_p2 <= std_logic_vector(shift_right(signed(man_V_5_fu_1039_p3),to_integer(unsigned('0' & zext_ln586_1_fu_1098_p1(31-1 downto 0)))));
    ashr_ln586_2_fu_1580_p2 <= std_logic_vector(shift_right(signed(man_V_8_fu_1517_p3),to_integer(unsigned('0' & zext_ln586_2_fu_1576_p1(31-1 downto 0)))));
    ashr_ln586_fu_564_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_495_p3),to_integer(unsigned('0' & zext_ln586_fu_560_p1(31-1 downto 0)))));
    bitcast_ln351_2_fu_1449_p1 <= p_Result_88_fu_1442_p3;
    bitcast_ln351_fu_971_p1 <= p_Result_81_fu_964_p3;
    bitcast_ln702_1_fu_377_p1 <= get_trapezoid_edgestrapezoid_edges_load_reg_1726;
    bitcast_ln744_2_fu_1423_p1 <= LD_6_fu_1419_p1;
    bitcast_ln744_fu_944_p1 <= LD_4_fu_940_p1;
    data_V_2_fu_1434_p1 <= grp_fu_221_p2;
    data_V_fu_956_p1 <= grp_fu_221_p2;
    diff_0_V_fu_708_p2 <= std_logic_vector(unsigned(select_ln1495_fu_696_p3) - unsigned(lbVal_constprop_i));
    diff_1_V_fu_742_p2 <= std_logic_vector(unsigned(select_ln1495_5_fu_730_p3) - unsigned(rbVal_constprop_i));
    exp_tmp_1_fu_992_p4 <= ireg_1_fu_976_p1(62 downto 52);
    exp_tmp_2_fu_1470_p4 <= ireg_2_fu_1454_p1(62 downto 52);
    exp_tmp_fu_440_p4 <= ireg_reg_1738(62 downto 52);
    get_trapezoid_edgestrapezoid_edges_address0 <= idxprom_i_fu_342_p1(3 - 1 downto 0);

    get_trapezoid_edgestrapezoid_edges_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_1;
        else 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_221_opcode_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_221_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_221_opcode <= ap_const_lv2_0;
        else 
            grp_fu_221_opcode <= "XX";
        end if; 
    end process;


    grp_fu_221_p0_assign_proc : process(select_ln935_reg_1877, add_i_reg_1882, select_ln935_2_reg_1984, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_221_p0 <= select_ln935_2_reg_1984;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_221_p0 <= add_i_reg_1882;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_221_p0 <= select_ln935_reg_1877;
        else 
            grp_fu_221_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_221_p1_assign_proc : process(get_trapezoid_edgestrapezoid_edges_load_reg_1726, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_221_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_221_p1 <= get_trapezoid_edgestrapezoid_edges_load_reg_1726;
        else 
            grp_fu_221_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_p0_assign_proc : process(get_trapezoid_edgestrapezoid_edges_q0, ap_CS_fsm_state2, bitcast_ln351_fu_971_p1, ap_CS_fsm_state18, bitcast_ln351_2_fu_1449_p1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_226_p0 <= bitcast_ln351_2_fu_1449_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_226_p0 <= bitcast_ln351_fu_971_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_226_p0 <= get_trapezoid_edgestrapezoid_edges_q0;
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_230_p3 <= points_load_reg_1826(31 downto 31);
    grp_fu_237_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(z_bits_reg_1831));
    grp_fu_242_p3 <= 
        grp_fu_237_p2 when (grp_fu_230_p3(0) = '1') else 
        z_bits_reg_1831;
    
    grp_fu_249_p4_proc : process(grp_fu_242_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable grp_fu_249_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := grp_fu_242_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for grp_fu_249_p4_i in 0 to 32-1 loop
                v0_cpy(grp_fu_249_p4_i) := grp_fu_242_p3(32-1-grp_fu_249_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_249_p4 <= resvalue(32-1 downto 0);
    end process;

    grp_fu_259_p2 <= "1" when (z_bits_reg_1831 = ap_const_lv32_0) else "0";
    
    grp_fu_272_p3_proc : process(reg_268)
    begin
        grp_fu_272_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if reg_268(i) = '1' then
                grp_fu_272_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    grp_fu_280_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(grp_fu_272_p3));
    grp_fu_286_p2 <= std_logic_vector(unsigned(grp_fu_280_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    grp_fu_292_p4 <= grp_fu_286_p2(31 downto 1);
    grp_fu_302_p2 <= "1" when (signed(grp_fu_292_p4) > signed(ap_const_lv31_0)) else "0";
    grp_fu_308_p3 <= reg_264(to_integer(unsigned(grp_fu_286_p2)) downto to_integer(unsigned(grp_fu_286_p2))) when (to_integer(unsigned(grp_fu_286_p2))>= 0 and to_integer(unsigned(grp_fu_286_p2))<=31) else "-";
    grp_fu_316_p2 <= "1" when (signed(grp_fu_286_p2) > signed(ap_const_lv32_0)) else "0";
    grp_fu_322_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(grp_fu_280_p2));
    grp_fu_328_p2 <= std_logic_vector(unsigned(grp_fu_280_p2) + unsigned(ap_const_lv32_FFFFFFE7));

    i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_blk_n <= i_empty_n;
        else 
            i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_read <= ap_const_logic_1;
        else 
            i_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln317_fu_408_p2 <= "1" when (j_reg_207 = num_points_load_reg_1721) else "0";
    icmp_ln571_1_fu_1010_p2 <= "1" when (trunc_ln555_1_fu_980_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_2_fu_1488_p2 <= "1" when (trunc_ln555_2_fu_1458_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_371_p2 <= "1" when (trunc_ln555_fu_359_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1046_p2 <= "1" when (signed(F2_1_reg_1915) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_2_fu_1524_p2 <= "1" when (signed(F2_2_reg_2017) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_502_p2 <= "1" when (signed(F2_reg_1783) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_1_fu_1069_p2 <= "1" when (F2_1_reg_1915 = ap_const_lv12_14) else "0";
    icmp_ln582_2_fu_1547_p2 <= "1" when (F2_2_reg_2017 = ap_const_lv12_14) else "0";
    icmp_ln582_fu_525_p2 <= "1" when (F2_reg_1783 = ap_const_lv12_14) else "0";
    icmp_ln585_1_fu_1129_p2 <= "1" when (unsigned(sh_amt_1_fu_1061_p3) > unsigned(ap_const_lv12_35)) else "0";
    icmp_ln585_2_fu_1607_p2 <= "1" when (unsigned(sh_amt_2_fu_1539_p3) > unsigned(ap_const_lv12_35)) else "0";
    icmp_ln585_fu_534_p2 <= "1" when (unsigned(sh_amt_fu_517_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_1088_p2 <= "1" when (tmp_129_fu_1078_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_2_fu_1566_p2 <= "1" when (tmp_136_fu_1556_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_550_p2 <= "1" when (tmp_fu_540_p4 = ap_const_lv7_0) else "0";
    icmp_ln949_3_fu_1273_p2 <= "0" when (and_ln949_8_fu_1267_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_794_p2 <= "0" when (and_ln949_fu_788_p2 = ap_const_lv32_0) else "1";
    idxprom_i_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_dout),64));
    ireg_1_fu_976_p1 <= grp_fu_226_p1;
    ireg_2_fu_1454_p1 <= grp_fu_226_p1;
    ireg_fu_355_p1 <= grp_fu_226_p1;

    lbVal_constprop_o_assign_proc : process(lbVal_constprop_i, ap_CS_fsm_state21, tmp_123_reg_1853, select_ln571_5_fu_1214_p3)
    begin
        if (((tmp_123_reg_1853 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            lbVal_constprop_o <= select_ln571_5_fu_1214_p3;
        else 
            lbVal_constprop_o <= lbVal_constprop_i;
        end if; 
    end process;


    lbVal_constprop_o_ap_vld_assign_proc : process(ap_CS_fsm_state21, tmp_123_reg_1853)
    begin
        if (((tmp_123_reg_1853 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            lbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            lbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    left_bound_assign_proc : process(ap_CS_fsm_state7, tmp_123_fu_748_p3, j_reg_207, left_bound_preg)
    begin
        if (((tmp_123_fu_748_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            left_bound <= j_reg_207;
        else 
            left_bound <= left_bound_preg;
        end if; 
    end process;


    left_bound_ap_vld_assign_proc : process(ap_CS_fsm_state7, tmp_123_fu_748_p3)
    begin
        if (((tmp_123_fu_748_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            left_bound_ap_vld <= ap_const_logic_1;
        else 
            left_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln947_3_fu_1249_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_3_fu_1245_p1(31-1 downto 0)))));
    lshr_ln947_fu_770_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_766_p1(31-1 downto 0)))));
    lshr_ln958_3_fu_1337_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_6_fu_1319_p1),to_integer(unsigned('0' & zext_ln958_3_fu_1333_p1(31-1 downto 0)))));
    lshr_ln958_fu_858_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_fu_840_p1),to_integer(unsigned('0' & zext_ln958_fu_854_p1(31-1 downto 0)))));
    m_38_fu_874_p2 <= std_logic_vector(unsigned(m_fu_864_p3) + unsigned(zext_ln961_fu_871_p1));
    m_42_fu_1343_p3 <= 
        lshr_ln958_3_fu_1337_p2 when (icmp_ln958_3_reg_1969(0) = '1') else 
        shl_ln959_3_fu_1327_p2;
    m_43_fu_1353_p2 <= std_logic_vector(unsigned(m_42_fu_1343_p3) + unsigned(zext_ln961_3_fu_1350_p1));
    m_46_fu_880_p4 <= m_38_fu_874_p2(63 downto 1);
    m_48_fu_1359_p4 <= m_43_fu_1353_p2(63 downto 1);
    m_fu_864_p3 <= 
        lshr_ln958_fu_858_p2 when (icmp_ln958_reg_1862(0) = '1') else 
        shl_ln959_fu_848_p2;
    man_V_1_fu_489_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_485_p1));
    man_V_2_fu_495_p3 <= 
        man_V_1_fu_489_p2 when (p_Result_75_reg_1744(0) = '1') else 
        zext_ln569_fu_485_p1;
    man_V_4_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_1_fu_1029_p1));
    man_V_5_fu_1039_p3 <= 
        man_V_4_fu_1033_p2 when (p_Result_82_reg_1897(0) = '1') else 
        zext_ln569_1_fu_1029_p1;
    man_V_7_fu_1511_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_2_fu_1507_p1));
    man_V_8_fu_1517_p3 <= 
        man_V_7_fu_1511_p2 when (p_Result_89_reg_1999(0) = '1') else 
        zext_ln569_2_fu_1507_p1;
    num_points_address0 <= idxprom_i_fu_342_p1(3 - 1 downto 0);

    num_points_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_points_ce0 <= ap_const_logic_1;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln571_1_fu_1210_p2 <= (or_ln571_reg_1944 or and_ln581_1_reg_1939);
    or_ln571_2_fu_1637_p2 <= (icmp_ln571_2_reg_2009 or and_ln603_2_fu_1631_p2);
    or_ln571_3_fu_1688_p2 <= (or_ln571_2_reg_2046 or and_ln581_2_reg_2041);
    or_ln571_fu_1159_p2 <= (icmp_ln571_1_reg_1907 or and_ln603_1_fu_1153_p2);
    or_ln581_1_fu_1141_p2 <= (or_ln582_1_fu_1112_p2 or icmp_ln581_1_fu_1046_p2);
    or_ln581_2_fu_1619_p2 <= (or_ln582_2_fu_1590_p2 or icmp_ln581_2_fu_1524_p2);
    or_ln581_fu_618_p2 <= (or_ln582_fu_587_p2 or icmp_ln581_fu_502_p2);
    or_ln582_1_fu_1112_p2 <= (icmp_ln582_1_fu_1069_p2 or icmp_ln571_1_reg_1907);
    or_ln582_2_fu_1590_p2 <= (icmp_ln582_2_fu_1547_p2 or icmp_ln571_2_reg_2009);
    or_ln582_fu_587_p2 <= (icmp_ln582_fu_525_p2 or icmp_ln571_reg_1749);
    or_ln949_5_fu_782_p2 <= (shl_ln949_fu_776_p2 or lshr_ln947_fu_770_p2);
    or_ln949_fu_1261_p2 <= (shl_ln949_3_fu_1255_p2 or lshr_ln947_3_fu_1249_p2);
    p_Result_70_fu_1373_p3 <= m_43_fu_1353_p2(25 downto 25);
    p_Result_76_fu_478_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_1778);
    p_Result_80_fu_928_p5 <= (zext_ln962_fu_890_p1(63 downto 32) & tmp_15_i_fu_921_p3 & zext_ln962_fu_890_p1(22 downto 0));
    p_Result_81_fu_964_p3 <= (ap_const_lv1_0 & trunc_ln368_reg_1887);
    p_Result_83_fu_1022_p3 <= (ap_const_lv1_1 & trunc_ln565_1_reg_1902);
    p_Result_87_fu_1407_p5 <= (zext_ln962_3_fu_1369_p1(63 downto 32) & tmp_18_i_fu_1400_p3 & zext_ln962_3_fu_1369_p1(22 downto 0));
    p_Result_88_fu_1442_p3 <= (ap_const_lv1_0 & trunc_ln368_1_reg_1989);
    p_Result_90_fu_1500_p3 <= (ap_const_lv1_1 & trunc_ln565_2_reg_2004);
    p_Result_s_fu_894_p3 <= m_38_fu_874_p2(25 downto 25);
    points_address0 <= zext_ln318_fu_473_p1(12 - 1 downto 0);

    points_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            points_ce0 <= ap_const_logic_1;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rbVal_constprop_o_assign_proc : process(rbVal_constprop_i, tmp_130_reg_1955, ap_CS_fsm_state31, select_ln571_10_fu_1692_p3)
    begin
        if (((tmp_130_reg_1955 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            rbVal_constprop_o <= select_ln571_10_fu_1692_p3;
        else 
            rbVal_constprop_o <= rbVal_constprop_i;
        end if; 
    end process;


    rbVal_constprop_o_ap_vld_assign_proc : process(tmp_130_reg_1955, ap_CS_fsm_state31)
    begin
        if (((tmp_130_reg_1955 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            rbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            rbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    right_bound_assign_proc : process(ap_CS_fsm_state21, tmp_130_fu_1228_p3, j_reg_207, right_bound_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_1))) then 
            right_bound <= j_reg_207;
        else 
            right_bound <= right_bound_preg;
        end if; 
    end process;


    right_bound_ap_vld_assign_proc : process(ap_CS_fsm_state21, tmp_130_fu_1228_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_130_fu_1228_p3 = ap_const_lv1_1))) then 
            right_bound_ap_vld <= ap_const_logic_1;
        else 
            right_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1495_5_fu_730_p3 <= 
        sub_ln703_28_fu_726_p2 when (tmp_122_fu_718_p3(0) = '1') else 
        sub_ln703_27_fu_714_p2;
    select_ln1495_fu_696_p3 <= 
        sub_ln703_fu_690_p2 when (tmp_121_fu_682_p3(0) = '1') else 
        add_ln703_fu_678_p2;
    select_ln571_10_fu_1692_p3 <= 
        select_ln571_9_fu_1682_p3 when (or_ln571_3_fu_1688_p2(0) = '1') else 
        select_ln571_8_fu_1675_p3;
    select_ln571_1_fu_1190_p3 <= 
        ap_const_lv32_0 when (icmp_ln571_1_reg_1907(0) = '1') else 
        shl_ln604_1_fu_1175_p2;
    select_ln571_2_fu_1164_p3 <= 
        ap_const_lv32_0 when (and_ln585_2_fu_1135_p2(0) = '1') else 
        trunc_ln586_3_fu_1108_p1;
    select_ln571_3_fu_1197_p3 <= 
        trunc_ln583_1_reg_1933 when (and_ln582_1_fu_1185_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_4_fu_1204_p3 <= 
        select_ln571_1_fu_1190_p3 when (or_ln571_reg_1944(0) = '1') else 
        select_ln571_2_reg_1950;
    select_ln571_5_fu_1214_p3 <= 
        select_ln571_4_fu_1204_p3 when (or_ln571_1_fu_1210_p2(0) = '1') else 
        select_ln571_3_fu_1197_p3;
    select_ln571_6_fu_1668_p3 <= 
        ap_const_lv32_0 when (icmp_ln571_2_reg_2009(0) = '1') else 
        shl_ln604_2_fu_1653_p2;
    select_ln571_7_fu_1642_p3 <= 
        ap_const_lv32_0 when (and_ln585_3_fu_1613_p2(0) = '1') else 
        trunc_ln586_5_fu_1586_p1;
    select_ln571_8_fu_1675_p3 <= 
        trunc_ln583_2_reg_2035 when (and_ln582_2_fu_1663_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_9_fu_1682_p3 <= 
        select_ln571_6_fu_1668_p3 when (or_ln571_2_reg_2046(0) = '1') else 
        select_ln571_7_reg_2052;
    select_ln571_fu_654_p3 <= 
        ap_const_lv32_0 when (icmp_ln571_reg_1749(0) = '1') else 
        select_ln603_fu_648_p3;
    select_ln582_fu_579_p3 <= 
        trunc_ln583_fu_530_p1 when (and_ln582_fu_574_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_1_fu_671_p3 <= 
        select_ln588_reg_1755 when (and_ln585_1_fu_666_p2(0) = '1') else 
        select_ln571_fu_654_p3;
    select_ln585_fu_610_p3 <= 
        trunc_ln586_1_fu_570_p1 when (and_ln585_fu_604_p2(0) = '1') else 
        select_ln582_fu_579_p3;
    select_ln588_fu_388_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_119_fu_380_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_fu_648_p3 <= 
        shl_ln604_fu_643_p2 when (and_ln603_reg_1821(0) = '1') else 
        select_ln585_reg_1816;
    select_ln935_2_fu_1427_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_2_reg_1959(0) = '1') else 
        bitcast_ln744_2_fu_1423_p1;
    select_ln935_fu_948_p3 <= 
        ap_const_lv32_0 when (grp_fu_259_p2(0) = '1') else 
        bitcast_ln744_fu_944_p1;
    select_ln943_3_fu_1381_p3 <= 
        ap_const_lv8_7F when (p_Result_70_fu_1373_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_902_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_894_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_3_fu_1299_p3 <= 
        icmp_ln949_3_fu_1273_p2 when (grp_fu_302_p2(0) = '1') else 
        grp_fu_308_p3;
    select_ln946_fu_820_p3 <= 
        icmp_ln949_fu_794_p2 when (grp_fu_302_p2(0) = '1') else 
        grp_fu_308_p3;
    select_ln958_7_fu_1307_p3 <= 
        select_ln946_3_fu_1299_p3 when (grp_fu_316_p2(0) = '1') else 
        and_ln949_7_fu_1293_p2;
    select_ln958_fu_828_p3 <= 
        select_ln946_fu_820_p3 when (grp_fu_316_p2(0) = '1') else 
        and_ln949_6_fu_814_p2;
        sext_ln581_1_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_1923),32));

        sext_ln581_2_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_2025),32));

        sext_ln581_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_1796),32));

    sh_amt_1_fu_1061_p3 <= 
        add_ln581_1_fu_1051_p2 when (icmp_ln581_1_fu_1046_p2(0) = '1') else 
        sub_ln581_1_fu_1056_p2;
    sh_amt_2_fu_1539_p3 <= 
        add_ln581_2_fu_1529_p2 when (icmp_ln581_2_fu_1524_p2(0) = '1') else 
        sub_ln581_2_fu_1534_p2;
    sh_amt_fu_517_p3 <= 
        add_ln581_fu_507_p2 when (icmp_ln581_fu_502_p2(0) = '1') else 
        sub_ln581_fu_512_p2;
    shl_ln318_1_fu_417_p3 <= (trunc_ln318_fu_413_p1 & ap_const_lv4_0);
    shl_ln604_1_fu_1175_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_1933),to_integer(unsigned('0' & sext_ln581_1_fu_1172_p1(31-1 downto 0)))));
    shl_ln604_2_fu_1653_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_2_reg_2035),to_integer(unsigned('0' & sext_ln581_2_fu_1650_p1(31-1 downto 0)))));
    shl_ln604_fu_643_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_1801),to_integer(unsigned('0' & sext_ln581_fu_640_p1(31-1 downto 0)))));
    shl_ln949_3_fu_1255_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_286_p2(31-1 downto 0)))));
    shl_ln949_fu_776_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_286_p2(31-1 downto 0)))));
    shl_ln959_3_fu_1327_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_6_fu_1319_p1),to_integer(unsigned('0' & zext_ln959_7_fu_1323_p1(31-1 downto 0)))));
    shl_ln959_fu_848_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_fu_840_p1),to_integer(unsigned('0' & zext_ln959_5_fu_844_p1(31-1 downto 0)))));
    shl_ln_fu_348_p3 <= (i_2_reg_1706 & ap_const_lv13_0);
    sub_ln581_1_fu_1056_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_1_reg_1915));
    sub_ln581_2_fu_1534_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_2_reg_2017));
    sub_ln581_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_reg_1783));
    sub_ln703_27_fu_714_p2 <= std_logic_vector(unsigned(z_bits_reg_1831) - unsigned(select_ln585_1_reg_1841));
    sub_ln703_28_fu_726_p2 <= std_logic_vector(unsigned(select_ln585_1_reg_1841) - unsigned(z_bits_reg_1831));
    sub_ln703_fu_690_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(add_ln703_fu_678_p2));
    sub_ln947_3_fu_1239_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_3_fu_1235_p1));
    sub_ln947_fu_760_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_756_p1));
    sub_ln964_3_fu_1389_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_3_reg_1979));
    sub_ln964_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_reg_1872));
    tmp_119_fu_380_p3 <= bitcast_ln702_1_fu_377_p1(31 downto 31);
    tmp_121_fu_682_p3 <= add_ln703_fu_678_p2(31 downto 31);
    tmp_122_fu_718_p3 <= sub_ln703_27_fu_714_p2(31 downto 31);
    tmp_123_fu_748_p3 <= diff_0_V_fu_708_p2(31 downto 31);
    tmp_126_fu_800_p3 <= grp_fu_286_p2(31 downto 31);
    tmp_129_fu_1078_p4 <= sh_amt_1_fu_1061_p3(11 downto 5);
    tmp_130_fu_1228_p3 <= diff_1_V_reg_1848(31 downto 31);
    tmp_133_fu_1279_p3 <= grp_fu_286_p2(31 downto 31);
    tmp_136_fu_1556_p4 <= sh_amt_2_fu_1539_p3(11 downto 5);
    tmp_15_i_fu_921_p3 <= (p_Result_77_reg_1857 & add_ln964_fu_915_p2);
    tmp_18_i_fu_1400_p3 <= (p_Result_84_reg_1964 & add_ln964_3_fu_1394_p2);
    tmp_fu_540_p4 <= sh_amt_fu_517_p3(11 downto 5);
    tmp_s_fu_466_p3 <= (lshr_ln_reg_1773 & trunc_ln318_1_fu_462_p1);
    trunc_ln318_1_fu_462_p1 <= j_reg_207(9 - 1 downto 0);
    trunc_ln318_fu_413_p1 <= j_reg_207(12 - 1 downto 0);
    trunc_ln368_1_fu_1438_p1 <= data_V_2_fu_1434_p1(31 - 1 downto 0);
    trunc_ln368_fu_960_p1 <= data_V_fu_956_p1(31 - 1 downto 0);
    trunc_ln555_1_fu_980_p1 <= ireg_1_fu_976_p1(63 - 1 downto 0);
    trunc_ln555_2_fu_1458_p1 <= ireg_2_fu_1454_p1(63 - 1 downto 0);
    trunc_ln555_fu_359_p1 <= ireg_fu_355_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_1006_p1 <= ireg_1_fu_976_p1(52 - 1 downto 0);
    trunc_ln565_2_fu_1484_p1 <= ireg_2_fu_1454_p1(52 - 1 downto 0);
    trunc_ln565_fu_453_p1 <= ireg_reg_1738(52 - 1 downto 0);
    trunc_ln583_1_fu_1074_p1 <= man_V_5_fu_1039_p3(32 - 1 downto 0);
    trunc_ln583_2_fu_1552_p1 <= man_V_8_fu_1517_p3(32 - 1 downto 0);
    trunc_ln583_fu_530_p1 <= man_V_2_fu_495_p3(32 - 1 downto 0);
    trunc_ln586_1_fu_570_p1 <= ashr_ln586_fu_564_p2(32 - 1 downto 0);
    trunc_ln586_2_fu_1094_p1 <= sh_amt_1_fu_1061_p3(6 - 1 downto 0);
    trunc_ln586_3_fu_1108_p1 <= ashr_ln586_1_fu_1102_p2(32 - 1 downto 0);
    trunc_ln586_4_fu_1572_p1 <= sh_amt_2_fu_1539_p3(6 - 1 downto 0);
    trunc_ln586_5_fu_1586_p1 <= ashr_ln586_2_fu_1580_p2(32 - 1 downto 0);
    trunc_ln586_fu_556_p1 <= sh_amt_fu_517_p3(6 - 1 downto 0);
    trunc_ln943_3_fu_1315_p1 <= grp_fu_272_p3(8 - 1 downto 0);
    trunc_ln943_fu_836_p1 <= grp_fu_272_p3(8 - 1 downto 0);
    trunc_ln947_3_fu_1235_p1 <= grp_fu_280_p2(6 - 1 downto 0);
    trunc_ln947_fu_756_p1 <= grp_fu_280_p2(6 - 1 downto 0);
    xor_ln571_1_fu_1180_p2 <= (icmp_ln571_1_reg_1907 xor ap_const_lv1_1);
    xor_ln571_2_fu_1658_p2 <= (icmp_ln571_2_reg_2009 xor ap_const_lv1_1);
    xor_ln571_fu_396_p2 <= (icmp_ln571_fu_371_p2 xor ap_const_lv1_1);
    xor_ln581_1_fu_1147_p2 <= (or_ln581_1_fu_1141_p2 xor ap_const_lv1_1);
    xor_ln581_2_fu_1625_p2 <= (or_ln581_2_fu_1619_p2 xor ap_const_lv1_1);
    xor_ln581_fu_624_p2 <= (or_ln581_fu_618_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1117_p2 <= (or_ln582_1_fu_1112_p2 xor ap_const_lv1_1);
    xor_ln582_2_fu_1595_p2 <= (or_ln582_2_fu_1590_p2 xor ap_const_lv1_1);
    xor_ln582_fu_592_p2 <= (or_ln582_fu_587_p2 xor ap_const_lv1_1);
    xor_ln585_fu_661_p2 <= (icmp_ln585_reg_1806 xor ap_const_lv1_1);
    xor_ln949_3_fu_1287_p2 <= (tmp_133_fu_1279_p3 xor ap_const_lv1_1);
    xor_ln949_fu_808_p2 <= (tmp_126_fu_800_p3 xor ap_const_lv1_1);
    z_bits_fu_636_p1 <= points_q0(32 - 1 downto 0);
    zext_ln318_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_466_p3),64));
    zext_ln455_1_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_992_p4),12));
    zext_ln455_2_fu_1480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_2_fu_1470_p4),12));
    zext_ln455_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_440_p4),12));
    zext_ln569_1_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_83_fu_1022_p3),54));
    zext_ln569_2_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_90_fu_1500_p3),54));
    zext_ln569_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_76_fu_478_p3),54));
    zext_ln586_1_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_2_fu_1094_p1),54));
    zext_ln586_2_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_4_fu_1572_p1),54));
    zext_ln586_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_556_p1),54));
    zext_ln947_3_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_3_fu_1239_p2),32));
    zext_ln947_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_760_p2),32));
    zext_ln958_3_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_338),64));
    zext_ln958_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_338),64));
    zext_ln959_5_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_334),64));
    zext_ln959_6_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_264),64));
    zext_ln959_7_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_334),64));
    zext_ln959_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_264),64));
    zext_ln961_3_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_7_reg_1974),64));
    zext_ln961_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_1867),64));
    zext_ln962_3_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_48_fu_1359_p4),64));
    zext_ln962_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_46_fu_880_p4),64));
end behav;
