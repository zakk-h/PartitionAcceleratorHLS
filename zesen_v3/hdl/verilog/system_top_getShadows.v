// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_getShadows (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zTopMin,
        zTopMax,
        patch_0_0_address0,
        patch_0_0_ce0,
        patch_0_0_q0,
        patch_0_1_address0,
        patch_0_1_ce0,
        patch_0_1_q0,
        patch_0_2_address0,
        patch_0_2_ce0,
        patch_0_2_q0,
        patch_0_3_address0,
        patch_0_3_ce0,
        patch_0_3_q0,
        patch_0_4_address0,
        patch_0_4_ce0,
        patch_0_4_q0,
        patch_0_5_address0,
        patch_0_5_ce0,
        patch_0_5_q0,
        patch_0_6_address0,
        patch_0_6_ce0,
        patch_0_6_q0,
        patch_0_7_address0,
        patch_0_7_ce0,
        patch_0_7_q0,
        patch_0_8_address0,
        patch_0_8_ce0,
        patch_0_8_q0,
        patch_0_9_address0,
        patch_0_9_ce0,
        patch_0_9_q0,
        patch_0_10_address0,
        patch_0_10_ce0,
        patch_0_10_q0,
        patch_0_11_address0,
        patch_0_11_ce0,
        patch_0_11_q0,
        patch_0_12_address0,
        patch_0_12_ce0,
        patch_0_12_q0,
        patch_0_13_address0,
        patch_0_13_ce0,
        patch_0_13_q0,
        patch_0_14_address0,
        patch_0_14_ce0,
        patch_0_14_q0,
        patch_0_15_address0,
        patch_0_15_ce0,
        patch_0_15_q0,
        patch_1_0_address0,
        patch_1_0_ce0,
        patch_1_0_q0,
        patch_1_1_address0,
        patch_1_1_ce0,
        patch_1_1_q0,
        patch_1_2_address0,
        patch_1_2_ce0,
        patch_1_2_q0,
        patch_1_3_address0,
        patch_1_3_ce0,
        patch_1_3_q0,
        patch_1_4_address0,
        patch_1_4_ce0,
        patch_1_4_q0,
        patch_1_5_address0,
        patch_1_5_ce0,
        patch_1_5_q0,
        patch_1_6_address0,
        patch_1_6_ce0,
        patch_1_6_q0,
        patch_1_7_address0,
        patch_1_7_ce0,
        patch_1_7_q0,
        patch_1_8_address0,
        patch_1_8_ce0,
        patch_1_8_q0,
        patch_1_9_address0,
        patch_1_9_ce0,
        patch_1_9_q0,
        patch_1_10_address0,
        patch_1_10_ce0,
        patch_1_10_q0,
        patch_1_11_address0,
        patch_1_11_ce0,
        patch_1_11_q0,
        patch_1_12_address0,
        patch_1_12_ce0,
        patch_1_12_q0,
        patch_1_13_address0,
        patch_1_13_ce0,
        patch_1_13_q0,
        patch_1_14_address0,
        patch_1_14_ce0,
        patch_1_14_q0,
        patch_1_15_address0,
        patch_1_15_ce0,
        patch_1_15_q0,
        patch_2_0_address0,
        patch_2_0_ce0,
        patch_2_0_q0,
        patch_2_1_address0,
        patch_2_1_ce0,
        patch_2_1_q0,
        patch_2_2_address0,
        patch_2_2_ce0,
        patch_2_2_q0,
        patch_2_3_address0,
        patch_2_3_ce0,
        patch_2_3_q0,
        patch_2_4_address0,
        patch_2_4_ce0,
        patch_2_4_q0,
        patch_2_5_address0,
        patch_2_5_ce0,
        patch_2_5_q0,
        patch_2_6_address0,
        patch_2_6_ce0,
        patch_2_6_q0,
        patch_2_7_address0,
        patch_2_7_ce0,
        patch_2_7_q0,
        patch_2_8_address0,
        patch_2_8_ce0,
        patch_2_8_q0,
        patch_2_9_address0,
        patch_2_9_ce0,
        patch_2_9_q0,
        patch_2_10_address0,
        patch_2_10_ce0,
        patch_2_10_q0,
        patch_2_11_address0,
        patch_2_11_ce0,
        patch_2_11_q0,
        patch_2_12_address0,
        patch_2_12_ce0,
        patch_2_12_q0,
        patch_2_13_address0,
        patch_2_13_ce0,
        patch_2_13_q0,
        patch_2_14_address0,
        patch_2_14_ce0,
        patch_2_14_q0,
        patch_2_15_address0,
        patch_2_15_ce0,
        patch_2_15_q0,
        patch_3_0_address0,
        patch_3_0_ce0,
        patch_3_0_q0,
        patch_3_1_address0,
        patch_3_1_ce0,
        patch_3_1_q0,
        patch_3_2_address0,
        patch_3_2_ce0,
        patch_3_2_q0,
        patch_3_3_address0,
        patch_3_3_ce0,
        patch_3_3_q0,
        patch_3_4_address0,
        patch_3_4_ce0,
        patch_3_4_q0,
        patch_3_5_address0,
        patch_3_5_ce0,
        patch_3_5_q0,
        patch_3_6_address0,
        patch_3_6_ce0,
        patch_3_6_q0,
        patch_3_7_address0,
        patch_3_7_ce0,
        patch_3_7_q0,
        patch_3_8_address0,
        patch_3_8_ce0,
        patch_3_8_q0,
        patch_3_9_address0,
        patch_3_9_ce0,
        patch_3_9_q0,
        patch_3_10_address0,
        patch_3_10_ce0,
        patch_3_10_q0,
        patch_3_11_address0,
        patch_3_11_ce0,
        patch_3_11_q0,
        patch_3_12_address0,
        patch_3_12_ce0,
        patch_3_12_q0,
        patch_3_13_address0,
        patch_3_13_ce0,
        patch_3_13_q0,
        patch_3_14_address0,
        patch_3_14_ce0,
        patch_3_14_q0,
        patch_3_15_address0,
        patch_3_15_ce0,
        patch_3_15_q0,
        patch_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] zTopMin;
input  [31:0] zTopMax;
output  [1:0] patch_0_0_address0;
output   patch_0_0_ce0;
input  [95:0] patch_0_0_q0;
output  [1:0] patch_0_1_address0;
output   patch_0_1_ce0;
input  [95:0] patch_0_1_q0;
output  [1:0] patch_0_2_address0;
output   patch_0_2_ce0;
input  [95:0] patch_0_2_q0;
output  [1:0] patch_0_3_address0;
output   patch_0_3_ce0;
input  [95:0] patch_0_3_q0;
output  [1:0] patch_0_4_address0;
output   patch_0_4_ce0;
input  [95:0] patch_0_4_q0;
output  [1:0] patch_0_5_address0;
output   patch_0_5_ce0;
input  [95:0] patch_0_5_q0;
output  [1:0] patch_0_6_address0;
output   patch_0_6_ce0;
input  [95:0] patch_0_6_q0;
output  [1:0] patch_0_7_address0;
output   patch_0_7_ce0;
input  [95:0] patch_0_7_q0;
output  [1:0] patch_0_8_address0;
output   patch_0_8_ce0;
input  [95:0] patch_0_8_q0;
output  [1:0] patch_0_9_address0;
output   patch_0_9_ce0;
input  [95:0] patch_0_9_q0;
output  [1:0] patch_0_10_address0;
output   patch_0_10_ce0;
input  [95:0] patch_0_10_q0;
output  [1:0] patch_0_11_address0;
output   patch_0_11_ce0;
input  [95:0] patch_0_11_q0;
output  [1:0] patch_0_12_address0;
output   patch_0_12_ce0;
input  [95:0] patch_0_12_q0;
output  [1:0] patch_0_13_address0;
output   patch_0_13_ce0;
input  [95:0] patch_0_13_q0;
output  [1:0] patch_0_14_address0;
output   patch_0_14_ce0;
input  [95:0] patch_0_14_q0;
output  [1:0] patch_0_15_address0;
output   patch_0_15_ce0;
input  [95:0] patch_0_15_q0;
output  [1:0] patch_1_0_address0;
output   patch_1_0_ce0;
input  [95:0] patch_1_0_q0;
output  [1:0] patch_1_1_address0;
output   patch_1_1_ce0;
input  [95:0] patch_1_1_q0;
output  [1:0] patch_1_2_address0;
output   patch_1_2_ce0;
input  [95:0] patch_1_2_q0;
output  [1:0] patch_1_3_address0;
output   patch_1_3_ce0;
input  [95:0] patch_1_3_q0;
output  [1:0] patch_1_4_address0;
output   patch_1_4_ce0;
input  [95:0] patch_1_4_q0;
output  [1:0] patch_1_5_address0;
output   patch_1_5_ce0;
input  [95:0] patch_1_5_q0;
output  [1:0] patch_1_6_address0;
output   patch_1_6_ce0;
input  [95:0] patch_1_6_q0;
output  [1:0] patch_1_7_address0;
output   patch_1_7_ce0;
input  [95:0] patch_1_7_q0;
output  [1:0] patch_1_8_address0;
output   patch_1_8_ce0;
input  [95:0] patch_1_8_q0;
output  [1:0] patch_1_9_address0;
output   patch_1_9_ce0;
input  [95:0] patch_1_9_q0;
output  [1:0] patch_1_10_address0;
output   patch_1_10_ce0;
input  [95:0] patch_1_10_q0;
output  [1:0] patch_1_11_address0;
output   patch_1_11_ce0;
input  [95:0] patch_1_11_q0;
output  [1:0] patch_1_12_address0;
output   patch_1_12_ce0;
input  [95:0] patch_1_12_q0;
output  [1:0] patch_1_13_address0;
output   patch_1_13_ce0;
input  [95:0] patch_1_13_q0;
output  [1:0] patch_1_14_address0;
output   patch_1_14_ce0;
input  [95:0] patch_1_14_q0;
output  [1:0] patch_1_15_address0;
output   patch_1_15_ce0;
input  [95:0] patch_1_15_q0;
output  [1:0] patch_2_0_address0;
output   patch_2_0_ce0;
input  [95:0] patch_2_0_q0;
output  [1:0] patch_2_1_address0;
output   patch_2_1_ce0;
input  [95:0] patch_2_1_q0;
output  [1:0] patch_2_2_address0;
output   patch_2_2_ce0;
input  [95:0] patch_2_2_q0;
output  [1:0] patch_2_3_address0;
output   patch_2_3_ce0;
input  [95:0] patch_2_3_q0;
output  [1:0] patch_2_4_address0;
output   patch_2_4_ce0;
input  [95:0] patch_2_4_q0;
output  [1:0] patch_2_5_address0;
output   patch_2_5_ce0;
input  [95:0] patch_2_5_q0;
output  [1:0] patch_2_6_address0;
output   patch_2_6_ce0;
input  [95:0] patch_2_6_q0;
output  [1:0] patch_2_7_address0;
output   patch_2_7_ce0;
input  [95:0] patch_2_7_q0;
output  [1:0] patch_2_8_address0;
output   patch_2_8_ce0;
input  [95:0] patch_2_8_q0;
output  [1:0] patch_2_9_address0;
output   patch_2_9_ce0;
input  [95:0] patch_2_9_q0;
output  [1:0] patch_2_10_address0;
output   patch_2_10_ce0;
input  [95:0] patch_2_10_q0;
output  [1:0] patch_2_11_address0;
output   patch_2_11_ce0;
input  [95:0] patch_2_11_q0;
output  [1:0] patch_2_12_address0;
output   patch_2_12_ce0;
input  [95:0] patch_2_12_q0;
output  [1:0] patch_2_13_address0;
output   patch_2_13_ce0;
input  [95:0] patch_2_13_q0;
output  [1:0] patch_2_14_address0;
output   patch_2_14_ce0;
input  [95:0] patch_2_14_q0;
output  [1:0] patch_2_15_address0;
output   patch_2_15_ce0;
input  [95:0] patch_2_15_q0;
output  [1:0] patch_3_0_address0;
output   patch_3_0_ce0;
input  [95:0] patch_3_0_q0;
output  [1:0] patch_3_1_address0;
output   patch_3_1_ce0;
input  [95:0] patch_3_1_q0;
output  [1:0] patch_3_2_address0;
output   patch_3_2_ce0;
input  [95:0] patch_3_2_q0;
output  [1:0] patch_3_3_address0;
output   patch_3_3_ce0;
input  [95:0] patch_3_3_q0;
output  [1:0] patch_3_4_address0;
output   patch_3_4_ce0;
input  [95:0] patch_3_4_q0;
output  [1:0] patch_3_5_address0;
output   patch_3_5_ce0;
input  [95:0] patch_3_5_q0;
output  [1:0] patch_3_6_address0;
output   patch_3_6_ce0;
input  [95:0] patch_3_6_q0;
output  [1:0] patch_3_7_address0;
output   patch_3_7_ce0;
input  [95:0] patch_3_7_q0;
output  [1:0] patch_3_8_address0;
output   patch_3_8_ce0;
input  [95:0] patch_3_8_q0;
output  [1:0] patch_3_9_address0;
output   patch_3_9_ce0;
input  [95:0] patch_3_9_q0;
output  [1:0] patch_3_10_address0;
output   patch_3_10_ce0;
input  [95:0] patch_3_10_q0;
output  [1:0] patch_3_11_address0;
output   patch_3_11_ce0;
input  [95:0] patch_3_11_q0;
output  [1:0] patch_3_12_address0;
output   patch_3_12_ce0;
input  [95:0] patch_3_12_q0;
output  [1:0] patch_3_13_address0;
output   patch_3_13_ce0;
input  [95:0] patch_3_13_q0;
output  [1:0] patch_3_14_address0;
output   patch_3_14_ce0;
input  [95:0] patch_3_14_q0;
output  [1:0] patch_3_15_address0;
output   patch_3_15_ce0;
input  [95:0] patch_3_15_q0;
input  [1:0] patch_offset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg patch_0_0_ce0;
reg patch_0_1_ce0;
reg patch_0_2_ce0;
reg patch_0_3_ce0;
reg patch_0_4_ce0;
reg patch_0_5_ce0;
reg patch_0_6_ce0;
reg patch_0_7_ce0;
reg patch_0_8_ce0;
reg patch_0_9_ce0;
reg patch_0_10_ce0;
reg patch_0_11_ce0;
reg patch_0_12_ce0;
reg patch_0_13_ce0;
reg patch_0_14_ce0;
reg patch_0_15_ce0;
reg patch_1_0_ce0;
reg patch_1_1_ce0;
reg patch_1_2_ce0;
reg patch_1_3_ce0;
reg patch_1_4_ce0;
reg patch_1_5_ce0;
reg patch_1_6_ce0;
reg patch_1_7_ce0;
reg patch_1_8_ce0;
reg patch_1_9_ce0;
reg patch_1_10_ce0;
reg patch_1_11_ce0;
reg patch_1_12_ce0;
reg patch_1_13_ce0;
reg patch_1_14_ce0;
reg patch_1_15_ce0;
reg patch_2_0_ce0;
reg patch_2_1_ce0;
reg patch_2_2_ce0;
reg patch_2_3_ce0;
reg patch_2_4_ce0;
reg patch_2_5_ce0;
reg patch_2_6_ce0;
reg patch_2_7_ce0;
reg patch_2_8_ce0;
reg patch_2_9_ce0;
reg patch_2_10_ce0;
reg patch_2_11_ce0;
reg patch_2_12_ce0;
reg patch_2_13_ce0;
reg patch_2_14_ce0;
reg patch_2_15_ce0;
reg patch_3_0_ce0;
reg patch_3_1_ce0;
reg patch_3_2_ce0;
reg patch_3_3_ce0;
reg patch_3_4_ce0;
reg patch_3_5_ce0;
reg patch_3_6_ce0;
reg patch_3_7_ce0;
reg patch_3_8_ce0;
reg patch_3_9_ce0;
reg patch_3_10_ce0;
reg patch_3_11_ce0;
reg patch_3_12_ce0;
reg patch_3_13_ce0;
reg patch_3_14_ce0;
reg patch_3_15_ce0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] zext_ln609_fu_1198_p1;
reg   [63:0] zext_ln609_reg_3436;
wire   [31:0] select_ln53_1_fu_1254_p3;
reg   [31:0] select_ln53_1_reg_3544;
wire    ap_CS_fsm_state2;
wire   [31:0] trunc_ln674_2_fu_1262_p1;
reg   [31:0] trunc_ln674_2_reg_3550;
wire   [31:0] select_ln67_1_fu_1290_p3;
reg   [31:0] select_ln67_1_reg_3568;
wire   [31:0] select_ln53_17_fu_1340_p3;
reg   [31:0] select_ln53_17_reg_3574;
wire   [31:0] select_ln67_17_fu_1372_p3;
reg   [31:0] select_ln67_17_reg_3590;
wire   [31:0] select_ln53_33_fu_1422_p3;
reg   [31:0] select_ln53_33_reg_3596;
wire   [31:0] trunc_ln674_34_fu_1430_p1;
reg   [31:0] trunc_ln674_34_reg_3602;
wire   [31:0] select_ln67_33_fu_1458_p3;
reg   [31:0] select_ln67_33_reg_3620;
wire   [31:0] select_ln53_49_fu_1508_p3;
reg   [31:0] select_ln53_49_reg_3626;
wire   [31:0] select_ln67_49_fu_1540_p3;
reg   [31:0] select_ln67_49_reg_3642;
wire   [31:0] select_ln53_3_fu_1568_p3;
reg   [31:0] select_ln53_3_reg_3648;
wire    ap_CS_fsm_state3;
wire   [31:0] trunc_ln674_4_fu_1576_p1;
reg   [31:0] trunc_ln674_4_reg_3653;
wire   [0:0] icmp_ln1495_13_fu_1580_p2;
reg   [0:0] icmp_ln1495_13_reg_3659;
wire   [31:0] select_ln67_3_fu_1602_p3;
reg   [31:0] select_ln67_3_reg_3674;
wire   [0:0] icmp_ln1494_11_fu_1610_p2;
reg   [0:0] icmp_ln1494_11_reg_3679;
wire   [31:0] select_ln53_19_fu_1642_p3;
reg   [31:0] select_ln53_19_reg_3684;
wire   [31:0] select_ln67_19_fu_1668_p3;
reg   [31:0] select_ln67_19_reg_3700;
wire   [31:0] select_ln53_35_fu_1696_p3;
reg   [31:0] select_ln53_35_reg_3706;
wire   [31:0] trunc_ln674_36_fu_1704_p1;
reg   [31:0] trunc_ln674_36_reg_3711;
wire   [0:0] icmp_ln1495_49_fu_1708_p2;
reg   [0:0] icmp_ln1495_49_reg_3717;
wire   [31:0] select_ln67_35_fu_1730_p3;
reg   [31:0] select_ln67_35_reg_3732;
wire   [0:0] icmp_ln1494_45_fu_1738_p2;
reg   [0:0] icmp_ln1494_45_reg_3737;
wire   [31:0] select_ln53_51_fu_1770_p3;
reg   [31:0] select_ln53_51_reg_3742;
wire   [31:0] select_ln67_51_fu_1796_p3;
reg   [31:0] select_ln67_51_reg_3758;
wire   [31:0] select_ln53_6_fu_1837_p3;
reg   [31:0] select_ln53_6_reg_3764;
wire    ap_CS_fsm_state4;
wire   [31:0] select_ln67_6_fu_1870_p3;
reg   [31:0] select_ln67_6_reg_3780;
wire   [31:0] select_ln53_21_fu_1904_p3;
reg   [31:0] select_ln53_21_reg_3786;
wire   [31:0] select_ln67_21_fu_1930_p3;
reg   [31:0] select_ln67_21_reg_3807;
wire   [31:0] select_ln53_38_fu_1971_p3;
reg   [31:0] select_ln53_38_reg_3813;
wire   [31:0] select_ln67_38_fu_2004_p3;
reg   [31:0] select_ln67_38_reg_3829;
wire   [31:0] select_ln53_53_fu_2038_p3;
reg   [31:0] select_ln53_53_reg_3835;
wire   [31:0] select_ln67_53_fu_2064_p3;
reg   [31:0] select_ln67_53_reg_3851;
wire   [31:0] select_ln53_8_fu_2098_p3;
reg   [31:0] select_ln53_8_reg_3857;
wire    ap_CS_fsm_state5;
wire   [31:0] select_ln67_8_fu_2124_p3;
reg   [31:0] select_ln67_8_reg_3873;
wire   [31:0] select_ln53_23_fu_2158_p3;
reg   [31:0] select_ln53_23_reg_3879;
wire   [31:0] trunc_ln674_24_fu_2166_p1;
reg   [31:0] trunc_ln674_24_reg_3885;
wire   [31:0] select_ln67_23_fu_2188_p3;
reg   [31:0] select_ln67_23_reg_3903;
wire   [31:0] select_ln53_40_fu_2222_p3;
reg   [31:0] select_ln53_40_reg_3909;
wire   [31:0] select_ln67_40_fu_2248_p3;
reg   [31:0] select_ln67_40_reg_3925;
wire   [31:0] select_ln53_55_fu_2282_p3;
reg   [31:0] select_ln53_55_reg_3931;
wire   [31:0] select_ln67_55_fu_2308_p3;
reg   [31:0] select_ln67_55_reg_3947;
wire   [31:0] select_ln53_10_fu_2342_p3;
reg   [31:0] select_ln53_10_reg_3953;
wire    ap_CS_fsm_state6;
wire   [31:0] select_ln67_10_fu_2368_p3;
reg   [31:0] select_ln67_10_reg_3969;
wire   [31:0] select_ln53_25_fu_2396_p3;
reg   [31:0] select_ln53_25_reg_3975;
wire   [31:0] trunc_ln674_26_fu_2404_p1;
reg   [31:0] trunc_ln674_26_reg_3980;
wire   [0:0] icmp_ln1495_37_fu_2408_p2;
reg   [0:0] icmp_ln1495_37_reg_3986;
wire   [31:0] select_ln67_25_fu_2430_p3;
reg   [31:0] select_ln67_25_reg_4001;
wire   [0:0] icmp_ln1494_33_fu_2438_p2;
reg   [0:0] icmp_ln1494_33_reg_4006;
wire   [31:0] select_ln53_42_fu_2470_p3;
reg   [31:0] select_ln53_42_reg_4011;
wire   [31:0] select_ln67_42_fu_2496_p3;
reg   [31:0] select_ln67_42_reg_4027;
wire   [31:0] select_ln53_57_fu_2530_p3;
reg   [31:0] select_ln53_57_reg_4033;
wire   [31:0] select_ln67_57_fu_2556_p3;
reg   [31:0] select_ln67_57_reg_4049;
wire   [31:0] select_ln53_12_fu_2590_p3;
reg   [31:0] select_ln53_12_reg_4055;
wire    ap_CS_fsm_state7;
wire   [31:0] select_ln67_12_fu_2616_p3;
reg   [31:0] select_ln67_12_reg_4076;
wire   [31:0] select_ln53_28_fu_2657_p3;
reg   [31:0] select_ln53_28_reg_4082;
wire   [31:0] select_ln67_28_fu_2690_p3;
reg   [31:0] select_ln67_28_reg_4103;
wire   [31:0] select_ln53_44_fu_2724_p3;
reg   [31:0] select_ln53_44_reg_4109;
wire   [31:0] select_ln67_44_fu_2750_p3;
reg   [31:0] select_ln67_44_reg_4130;
wire   [31:0] select_ln53_59_fu_2784_p3;
reg   [31:0] select_ln53_59_reg_4136;
wire   [31:0] select_ln67_59_fu_2810_p3;
reg   [31:0] select_ln67_59_reg_4162;
wire   [31:0] select_ln53_14_fu_2844_p3;
reg   [31:0] select_ln53_14_reg_4168;
wire    ap_CS_fsm_state8;
wire   [31:0] trunc_ln674_15_fu_2852_p1;
reg   [31:0] trunc_ln674_15_reg_4174;
wire   [31:0] select_ln67_14_fu_2874_p3;
reg   [31:0] select_ln67_14_reg_4182;
wire   [31:0] select_ln53_30_fu_2908_p3;
reg   [31:0] select_ln53_30_reg_4188;
wire   [31:0] trunc_ln674_31_fu_2916_p1;
reg   [31:0] trunc_ln674_31_reg_4194;
wire   [31:0] select_ln67_30_fu_2938_p3;
reg   [31:0] select_ln67_30_reg_4202;
wire   [31:0] select_ln53_46_fu_2972_p3;
reg   [31:0] select_ln53_46_reg_4208;
wire   [31:0] trunc_ln674_47_fu_2980_p1;
reg   [31:0] trunc_ln674_47_reg_4214;
wire   [31:0] select_ln67_46_fu_3002_p3;
reg   [31:0] select_ln67_46_reg_4222;
wire   [31:0] select_ln53_61_fu_3036_p3;
reg   [31:0] select_ln53_61_reg_4228;
wire   [31:0] trunc_ln674_62_fu_3044_p1;
reg   [31:0] trunc_ln674_62_reg_4234;
wire   [31:0] trunc_ln674_63_fu_3048_p1;
reg   [31:0] trunc_ln674_63_reg_4242;
wire   [31:0] select_ln67_61_fu_3070_p3;
reg   [31:0] select_ln67_61_reg_4250;
wire   [31:0] zTop_min_V_fu_3084_p3;
reg   [31:0] zTop_min_V_reg_4256;
wire    ap_CS_fsm_state9;
wire   [31:0] zTop_max_V_fu_3104_p3;
reg   [31:0] zTop_max_V_reg_4266;
wire   [31:0] select_ln53_15_fu_3122_p3;
reg   [31:0] select_ln53_15_reg_4276;
wire   [31:0] select_ln67_15_fu_3134_p3;
reg   [31:0] select_ln67_15_reg_4282;
wire   [31:0] select_ln53_31_fu_3146_p3;
reg   [31:0] select_ln53_31_reg_4288;
wire   [31:0] select_ln67_31_fu_3158_p3;
reg   [31:0] select_ln67_31_reg_4294;
wire   [31:0] select_ln53_47_fu_3170_p3;
reg   [31:0] select_ln53_47_reg_4300;
wire   [31:0] select_ln67_47_fu_3182_p3;
reg   [31:0] select_ln67_47_reg_4306;
wire   [31:0] select_ln53_63_fu_3205_p3;
reg   [31:0] select_ln53_63_reg_4312;
wire   [31:0] select_ln67_63_fu_3227_p3;
reg   [31:0] select_ln67_63_reg_4318;
wire   [31:0] select_ln659_fu_3240_p3;
reg   [31:0] select_ln659_reg_4324;
wire    ap_CS_fsm_state10;
wire   [31:0] select_ln665_fu_3254_p3;
reg   [31:0] select_ln665_reg_4329;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_return;
reg   [31:0] ref_tmp39_0_1_reg_4334;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_return;
reg   [31:0] ref_tmp55_0_1_reg_4339;
wire   [31:0] select_ln656_fu_3268_p3;
reg   [31:0] select_ln656_reg_4344;
wire   [0:0] icmp_ln1495_43_fu_3276_p2;
reg   [0:0] icmp_ln1495_43_reg_4350;
wire   [31:0] select_ln662_fu_3288_p3;
reg   [31:0] select_ln662_reg_4355;
wire   [0:0] icmp_ln1495_44_fu_3296_p2;
reg   [0:0] icmp_ln1495_44_reg_4361;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_return;
reg   [31:0] ref_tmp32_0_2_reg_4366;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_return;
reg   [31:0] ref_tmp39_0_2_reg_4372;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_return;
reg   [31:0] ref_tmp47_0_2_reg_4378;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_return;
reg   [31:0] ref_tmp55_0_2_reg_4384;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1026_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1026_j;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1040_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1040_j;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1054_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1054_j;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1068_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1068_j;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_ready;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg;
reg    ap_block_state10_on_subcall_done;
wire    ap_CS_fsm_state11;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg;
wire   [1:0] tmp_fu_1220_p4;
wire   [0:0] icmp_ln1495_9_fu_1230_p2;
wire   [31:0] trunc_ln674_fu_1212_p1;
wire   [31:0] trunc_ln674_1_fu_1244_p1;
wire   [31:0] select_ln53_fu_1236_p3;
wire   [0:0] icmp_ln1495_10_fu_1248_p2;
wire   [0:0] icmp_ln1494_7_fu_1266_p2;
wire   [30:0] trunc_ln1495_fu_1216_p1;
wire   [30:0] select_ln67_fu_1272_p3;
wire   [31:0] select_ln67_cast_fu_1280_p1;
wire   [0:0] icmp_ln1494_8_fu_1284_p2;
wire   [1:0] tmp_4_fu_1306_p4;
wire   [0:0] icmp_ln1495_27_fu_1316_p2;
wire   [31:0] trunc_ln674_16_fu_1298_p1;
wire   [31:0] trunc_ln674_17_fu_1330_p1;
wire   [31:0] select_ln53_16_fu_1322_p3;
wire   [0:0] icmp_ln1495_28_fu_1334_p2;
wire   [0:0] icmp_ln1494_23_fu_1348_p2;
wire   [30:0] trunc_ln1495_1_fu_1302_p1;
wire   [30:0] select_ln67_16_fu_1354_p3;
wire   [31:0] select_ln67_16_cast_fu_1362_p1;
wire   [0:0] icmp_ln1494_24_fu_1366_p2;
wire   [1:0] tmp_5_fu_1388_p4;
wire   [0:0] icmp_ln1495_45_fu_1398_p2;
wire   [31:0] trunc_ln674_32_fu_1380_p1;
wire   [31:0] trunc_ln674_33_fu_1412_p1;
wire   [31:0] select_ln53_32_fu_1404_p3;
wire   [0:0] icmp_ln1495_46_fu_1416_p2;
wire   [0:0] icmp_ln1494_41_fu_1434_p2;
wire   [30:0] trunc_ln1495_2_fu_1384_p1;
wire   [30:0] select_ln67_32_fu_1440_p3;
wire   [31:0] select_ln67_32_cast_fu_1448_p1;
wire   [0:0] icmp_ln1494_42_fu_1452_p2;
wire   [1:0] tmp_6_fu_1474_p4;
wire   [0:0] icmp_ln1495_63_fu_1484_p2;
wire   [31:0] trunc_ln674_48_fu_1466_p1;
wire   [31:0] trunc_ln674_49_fu_1498_p1;
wire   [31:0] select_ln53_48_fu_1490_p3;
wire   [0:0] icmp_ln1495_64_fu_1502_p2;
wire   [0:0] icmp_ln1494_59_fu_1516_p2;
wire   [30:0] trunc_ln1495_3_fu_1470_p1;
wire   [30:0] select_ln67_48_fu_1522_p3;
wire   [31:0] select_ln67_48_cast_fu_1530_p1;
wire   [0:0] icmp_ln1494_60_fu_1534_p2;
wire   [0:0] icmp_ln1495_11_fu_1548_p2;
wire   [31:0] trunc_ln674_3_fu_1558_p1;
wire   [31:0] select_ln53_2_fu_1552_p3;
wire   [0:0] icmp_ln1495_12_fu_1562_p2;
wire   [0:0] icmp_ln1494_9_fu_1586_p2;
wire   [31:0] select_ln67_2_fu_1590_p3;
wire   [0:0] icmp_ln1494_10_fu_1596_p2;
wire   [31:0] trunc_ln674_18_fu_1616_p1;
wire   [0:0] icmp_ln1495_29_fu_1620_p2;
wire   [31:0] trunc_ln674_19_fu_1632_p1;
wire   [31:0] select_ln53_18_fu_1625_p3;
wire   [0:0] icmp_ln1495_30_fu_1636_p2;
wire   [0:0] icmp_ln1494_25_fu_1650_p2;
wire   [31:0] select_ln67_18_fu_1655_p3;
wire   [0:0] icmp_ln1494_26_fu_1662_p2;
wire   [0:0] icmp_ln1495_47_fu_1676_p2;
wire   [31:0] trunc_ln674_35_fu_1686_p1;
wire   [31:0] select_ln53_34_fu_1680_p3;
wire   [0:0] icmp_ln1495_48_fu_1690_p2;
wire   [0:0] icmp_ln1494_43_fu_1714_p2;
wire   [31:0] select_ln67_34_fu_1718_p3;
wire   [0:0] icmp_ln1494_44_fu_1724_p2;
wire   [31:0] trunc_ln674_50_fu_1744_p1;
wire   [0:0] icmp_ln1495_65_fu_1748_p2;
wire   [31:0] trunc_ln674_51_fu_1760_p1;
wire   [31:0] select_ln53_50_fu_1753_p3;
wire   [0:0] icmp_ln1495_66_fu_1764_p2;
wire   [0:0] icmp_ln1494_61_fu_1778_p2;
wire   [31:0] select_ln67_50_fu_1783_p3;
wire   [0:0] icmp_ln1494_62_fu_1790_p2;
wire   [31:0] trunc_ln674_5_fu_1809_p1;
wire   [31:0] select_ln53_4_fu_1804_p3;
wire   [0:0] icmp_ln1495_14_fu_1813_p2;
wire   [31:0] trunc_ln674_6_fu_1827_p1;
wire   [31:0] select_ln53_5_fu_1819_p3;
wire   [0:0] icmp_ln1495_15_fu_1831_p2;
wire   [31:0] select_ln67_4_fu_1845_p3;
wire   [0:0] icmp_ln1494_12_fu_1850_p2;
wire   [31:0] select_ln67_5_fu_1856_p3;
wire   [0:0] icmp_ln1494_13_fu_1864_p2;
wire   [31:0] trunc_ln674_20_fu_1878_p1;
wire   [0:0] icmp_ln1495_31_fu_1882_p2;
wire   [31:0] trunc_ln674_21_fu_1894_p1;
wire   [31:0] select_ln53_20_fu_1887_p3;
wire   [0:0] icmp_ln1495_32_fu_1898_p2;
wire   [0:0] icmp_ln1494_27_fu_1912_p2;
wire   [31:0] select_ln67_20_fu_1917_p3;
wire   [0:0] icmp_ln1494_28_fu_1924_p2;
wire   [31:0] trunc_ln674_37_fu_1943_p1;
wire   [31:0] select_ln53_36_fu_1938_p3;
wire   [0:0] icmp_ln1495_50_fu_1947_p2;
wire   [31:0] trunc_ln674_38_fu_1961_p1;
wire   [31:0] select_ln53_37_fu_1953_p3;
wire   [0:0] icmp_ln1495_51_fu_1965_p2;
wire   [31:0] select_ln67_36_fu_1979_p3;
wire   [0:0] icmp_ln1494_46_fu_1984_p2;
wire   [31:0] select_ln67_37_fu_1990_p3;
wire   [0:0] icmp_ln1494_47_fu_1998_p2;
wire   [31:0] trunc_ln674_52_fu_2012_p1;
wire   [0:0] icmp_ln1495_67_fu_2016_p2;
wire   [31:0] trunc_ln674_53_fu_2028_p1;
wire   [31:0] select_ln53_52_fu_2021_p3;
wire   [0:0] icmp_ln1495_68_fu_2032_p2;
wire   [0:0] icmp_ln1494_63_fu_2046_p2;
wire   [31:0] select_ln67_52_fu_2051_p3;
wire   [0:0] icmp_ln1494_64_fu_2058_p2;
wire   [31:0] trunc_ln674_7_fu_2072_p1;
wire   [0:0] icmp_ln1495_16_fu_2076_p2;
wire   [31:0] trunc_ln674_8_fu_2088_p1;
wire   [31:0] select_ln53_7_fu_2081_p3;
wire   [0:0] icmp_ln1495_17_fu_2092_p2;
wire   [0:0] icmp_ln1494_14_fu_2106_p2;
wire   [31:0] select_ln67_7_fu_2111_p3;
wire   [0:0] icmp_ln1494_15_fu_2118_p2;
wire   [31:0] trunc_ln674_22_fu_2132_p1;
wire   [0:0] icmp_ln1495_33_fu_2136_p2;
wire   [31:0] trunc_ln674_23_fu_2148_p1;
wire   [31:0] select_ln53_22_fu_2141_p3;
wire   [0:0] icmp_ln1495_34_fu_2152_p2;
wire   [0:0] icmp_ln1494_29_fu_2170_p2;
wire   [31:0] select_ln67_22_fu_2175_p3;
wire   [0:0] icmp_ln1494_30_fu_2182_p2;
wire   [31:0] trunc_ln674_39_fu_2196_p1;
wire   [0:0] icmp_ln1495_52_fu_2200_p2;
wire   [31:0] trunc_ln674_40_fu_2212_p1;
wire   [31:0] select_ln53_39_fu_2205_p3;
wire   [0:0] icmp_ln1495_53_fu_2216_p2;
wire   [0:0] icmp_ln1494_48_fu_2230_p2;
wire   [31:0] select_ln67_39_fu_2235_p3;
wire   [0:0] icmp_ln1494_49_fu_2242_p2;
wire   [31:0] trunc_ln674_54_fu_2256_p1;
wire   [0:0] icmp_ln1495_69_fu_2260_p2;
wire   [31:0] trunc_ln674_55_fu_2272_p1;
wire   [31:0] select_ln53_54_fu_2265_p3;
wire   [0:0] icmp_ln1495_70_fu_2276_p2;
wire   [0:0] icmp_ln1494_65_fu_2290_p2;
wire   [31:0] select_ln67_54_fu_2295_p3;
wire   [0:0] icmp_ln1494_66_fu_2302_p2;
wire   [31:0] trunc_ln674_9_fu_2316_p1;
wire   [0:0] icmp_ln1495_18_fu_2320_p2;
wire   [31:0] trunc_ln674_10_fu_2332_p1;
wire   [31:0] select_ln53_9_fu_2325_p3;
wire   [0:0] icmp_ln1495_19_fu_2336_p2;
wire   [0:0] icmp_ln1494_16_fu_2350_p2;
wire   [31:0] select_ln67_9_fu_2355_p3;
wire   [0:0] icmp_ln1494_17_fu_2362_p2;
wire   [0:0] icmp_ln1495_35_fu_2376_p2;
wire   [31:0] trunc_ln674_25_fu_2386_p1;
wire   [31:0] select_ln53_24_fu_2380_p3;
wire   [0:0] icmp_ln1495_36_fu_2390_p2;
wire   [0:0] icmp_ln1494_31_fu_2414_p2;
wire   [31:0] select_ln67_24_fu_2418_p3;
wire   [0:0] icmp_ln1494_32_fu_2424_p2;
wire   [31:0] trunc_ln674_41_fu_2444_p1;
wire   [0:0] icmp_ln1495_54_fu_2448_p2;
wire   [31:0] trunc_ln674_42_fu_2460_p1;
wire   [31:0] select_ln53_41_fu_2453_p3;
wire   [0:0] icmp_ln1495_55_fu_2464_p2;
wire   [0:0] icmp_ln1494_50_fu_2478_p2;
wire   [31:0] select_ln67_41_fu_2483_p3;
wire   [0:0] icmp_ln1494_51_fu_2490_p2;
wire   [31:0] trunc_ln674_56_fu_2504_p1;
wire   [0:0] icmp_ln1495_71_fu_2508_p2;
wire   [31:0] trunc_ln674_57_fu_2520_p1;
wire   [31:0] select_ln53_56_fu_2513_p3;
wire   [0:0] icmp_ln1495_72_fu_2524_p2;
wire   [0:0] icmp_ln1494_67_fu_2538_p2;
wire   [31:0] select_ln67_56_fu_2543_p3;
wire   [0:0] icmp_ln1494_68_fu_2550_p2;
wire   [31:0] trunc_ln674_11_fu_2564_p1;
wire   [0:0] icmp_ln1495_20_fu_2568_p2;
wire   [31:0] trunc_ln674_12_fu_2580_p1;
wire   [31:0] select_ln53_11_fu_2573_p3;
wire   [0:0] icmp_ln1495_21_fu_2584_p2;
wire   [0:0] icmp_ln1494_18_fu_2598_p2;
wire   [31:0] select_ln67_11_fu_2603_p3;
wire   [0:0] icmp_ln1494_19_fu_2610_p2;
wire   [31:0] trunc_ln674_27_fu_2629_p1;
wire   [31:0] select_ln53_26_fu_2624_p3;
wire   [0:0] icmp_ln1495_38_fu_2633_p2;
wire   [31:0] trunc_ln674_28_fu_2647_p1;
wire   [31:0] select_ln53_27_fu_2639_p3;
wire   [0:0] icmp_ln1495_39_fu_2651_p2;
wire   [31:0] select_ln67_26_fu_2665_p3;
wire   [0:0] icmp_ln1494_34_fu_2670_p2;
wire   [31:0] select_ln67_27_fu_2676_p3;
wire   [0:0] icmp_ln1494_35_fu_2684_p2;
wire   [31:0] trunc_ln674_43_fu_2698_p1;
wire   [0:0] icmp_ln1495_56_fu_2702_p2;
wire   [31:0] trunc_ln674_44_fu_2714_p1;
wire   [31:0] select_ln53_43_fu_2707_p3;
wire   [0:0] icmp_ln1495_57_fu_2718_p2;
wire   [0:0] icmp_ln1494_52_fu_2732_p2;
wire   [31:0] select_ln67_43_fu_2737_p3;
wire   [0:0] icmp_ln1494_53_fu_2744_p2;
wire   [31:0] trunc_ln674_58_fu_2758_p1;
wire   [0:0] icmp_ln1495_73_fu_2762_p2;
wire   [31:0] trunc_ln674_59_fu_2774_p1;
wire   [31:0] select_ln53_58_fu_2767_p3;
wire   [0:0] icmp_ln1495_74_fu_2778_p2;
wire   [0:0] icmp_ln1494_69_fu_2792_p2;
wire   [31:0] select_ln67_58_fu_2797_p3;
wire   [0:0] icmp_ln1494_70_fu_2804_p2;
wire   [31:0] trunc_ln674_13_fu_2818_p1;
wire   [0:0] icmp_ln1495_22_fu_2822_p2;
wire   [31:0] trunc_ln674_14_fu_2834_p1;
wire   [31:0] select_ln53_13_fu_2827_p3;
wire   [0:0] icmp_ln1495_23_fu_2838_p2;
wire   [0:0] icmp_ln1494_20_fu_2856_p2;
wire   [31:0] select_ln67_13_fu_2861_p3;
wire   [0:0] icmp_ln1494_21_fu_2868_p2;
wire   [31:0] trunc_ln674_29_fu_2882_p1;
wire   [0:0] icmp_ln1495_40_fu_2886_p2;
wire   [31:0] trunc_ln674_30_fu_2898_p1;
wire   [31:0] select_ln53_29_fu_2891_p3;
wire   [0:0] icmp_ln1495_41_fu_2902_p2;
wire   [0:0] icmp_ln1494_36_fu_2920_p2;
wire   [31:0] select_ln67_29_fu_2925_p3;
wire   [0:0] icmp_ln1494_37_fu_2932_p2;
wire   [31:0] trunc_ln674_45_fu_2946_p1;
wire   [0:0] icmp_ln1495_58_fu_2950_p2;
wire   [31:0] trunc_ln674_46_fu_2962_p1;
wire   [31:0] select_ln53_45_fu_2955_p3;
wire   [0:0] icmp_ln1495_59_fu_2966_p2;
wire   [0:0] icmp_ln1494_54_fu_2984_p2;
wire   [31:0] select_ln67_45_fu_2989_p3;
wire   [0:0] icmp_ln1494_55_fu_2996_p2;
wire   [31:0] trunc_ln674_60_fu_3010_p1;
wire   [0:0] icmp_ln1495_75_fu_3014_p2;
wire   [31:0] trunc_ln674_61_fu_3026_p1;
wire   [31:0] select_ln53_60_fu_3019_p3;
wire   [0:0] icmp_ln1495_76_fu_3030_p2;
wire   [0:0] icmp_ln1494_71_fu_3052_p2;
wire   [31:0] select_ln67_60_fu_3057_p3;
wire   [0:0] icmp_ln1494_72_fu_3064_p2;
wire   [0:0] icmp_ln1494_fu_3078_p2;
wire   [0:0] icmp_ln1495_fu_3098_p2;
wire   [0:0] icmp_ln1495_24_fu_3118_p2;
wire   [0:0] icmp_ln1494_22_fu_3130_p2;
wire   [0:0] icmp_ln1495_42_fu_3142_p2;
wire   [0:0] icmp_ln1494_38_fu_3154_p2;
wire   [0:0] icmp_ln1495_60_fu_3166_p2;
wire   [0:0] icmp_ln1494_56_fu_3178_p2;
wire   [0:0] icmp_ln1495_77_fu_3190_p2;
wire   [31:0] select_ln53_62_fu_3194_p3;
wire   [0:0] icmp_ln1495_78_fu_3200_p2;
wire   [0:0] icmp_ln1494_73_fu_3212_p2;
wire   [31:0] select_ln67_62_fu_3216_p3;
wire   [0:0] icmp_ln1494_74_fu_3222_p2;
wire   [0:0] icmp_ln1495_25_fu_3234_p2;
wire   [0:0] icmp_ln1495_26_fu_3248_p2;
wire   [0:0] icmp_ln1494_39_fu_3262_p2;
wire   [0:0] icmp_ln1494_40_fu_3282_p2;
wire   [0:0] icmp_ln1494_57_fu_3312_p2;
wire   [31:0] select_ln659_1_fu_3302_p3;
wire   [0:0] icmp_ln1495_61_fu_3322_p2;
wire   [0:0] icmp_ln1494_58_fu_3334_p2;
wire   [31:0] select_ln665_1_fu_3307_p3;
wire   [0:0] icmp_ln1495_62_fu_3344_p2;
wire   [31:0] select_ln656_1_fu_3316_p3;
wire   [0:0] icmp_ln1494_75_fu_3356_p2;
wire   [31:0] select_ln659_2_fu_3327_p3;
wire   [0:0] icmp_ln1495_79_fu_3370_p2;
wire   [31:0] select_ln662_1_fu_3338_p3;
wire   [0:0] icmp_ln1494_76_fu_3384_p2;
wire   [31:0] select_ln665_2_fu_3349_p3;
wire   [0:0] icmp_ln1495_80_fu_3398_p2;
wire   [31:0] select_ln656_2_fu_3362_p3;
wire   [31:0] select_ln659_3_fu_3376_p3;
wire   [31:0] select_ln662_2_fu_3390_p3;
wire   [31:0] select_ln665_3_fu_3404_p3;
reg    ap_block_state11_on_subcall_done;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [10:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
end

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1026(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_1026_z_j),
    .i(3'd5),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_1026_j),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1040(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_1040_z_j),
    .i(3'd5),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_1040_j),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1054(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_1054_z_j),
    .i(3'd5),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_1054_j),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1068(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_1068_z_j),
    .i(3'd5),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_1068_j),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1082(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(select_ln53_31_reg_4288),
    .i(3'd5),
    .j(3'd2),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1096(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(select_ln67_31_reg_4294),
    .i(3'd5),
    .j(3'd2),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(select_ln53_31_reg_4288),
    .i(3'd5),
    .j(3'd2),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(select_ln67_31_reg_4294),
    .i(3'd5),
    .j(3'd2),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(select_ln53_47_reg_4300),
    .i(3'd5),
    .j(3'd3),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_ready),
    .z_i(zTop_min_V_reg_4256),
    .z_j(select_ln67_47_reg_4306),
    .i(3'd5),
    .j(3'd3),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(select_ln53_47_reg_4300),
    .i(3'd5),
    .j(3'd3),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_return)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_1180(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_ready),
    .z_i(zTop_max_V_reg_4266),
    .z_j(select_ln67_47_reg_4306),
    .i(3'd5),
    .j(3'd3),
    .k(3'd1),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_0_preg <= select_ln656_2_fu_3362_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_1_preg <= select_ln659_3_fu_3376_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_2_preg <= select_ln662_2_fu_3390_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_3_preg <= select_ln665_3_fu_3404_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln1494_11_reg_3679 <= icmp_ln1494_11_fu_1610_p2;
        icmp_ln1494_45_reg_3737 <= icmp_ln1494_45_fu_1738_p2;
        icmp_ln1495_13_reg_3659 <= icmp_ln1495_13_fu_1580_p2;
        icmp_ln1495_49_reg_3717 <= icmp_ln1495_49_fu_1708_p2;
        select_ln53_19_reg_3684 <= select_ln53_19_fu_1642_p3;
        select_ln53_35_reg_3706 <= select_ln53_35_fu_1696_p3;
        select_ln53_3_reg_3648 <= select_ln53_3_fu_1568_p3;
        select_ln53_51_reg_3742 <= select_ln53_51_fu_1770_p3;
        select_ln67_19_reg_3700 <= select_ln67_19_fu_1668_p3;
        select_ln67_35_reg_3732 <= select_ln67_35_fu_1730_p3;
        select_ln67_3_reg_3674 <= select_ln67_3_fu_1602_p3;
        select_ln67_51_reg_3758 <= select_ln67_51_fu_1796_p3;
        trunc_ln674_36_reg_3711 <= trunc_ln674_36_fu_1704_p1;
        trunc_ln674_4_reg_3653 <= trunc_ln674_4_fu_1576_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1494_33_reg_4006 <= icmp_ln1494_33_fu_2438_p2;
        icmp_ln1495_37_reg_3986 <= icmp_ln1495_37_fu_2408_p2;
        select_ln53_10_reg_3953 <= select_ln53_10_fu_2342_p3;
        select_ln53_25_reg_3975 <= select_ln53_25_fu_2396_p3;
        select_ln53_42_reg_4011 <= select_ln53_42_fu_2470_p3;
        select_ln53_57_reg_4033 <= select_ln53_57_fu_2530_p3;
        select_ln67_10_reg_3969 <= select_ln67_10_fu_2368_p3;
        select_ln67_25_reg_4001 <= select_ln67_25_fu_2430_p3;
        select_ln67_42_reg_4027 <= select_ln67_42_fu_2496_p3;
        select_ln67_57_reg_4049 <= select_ln67_57_fu_2556_p3;
        trunc_ln674_26_reg_3980 <= trunc_ln674_26_fu_2404_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln1495_43_reg_4350 <= icmp_ln1495_43_fu_3276_p2;
        icmp_ln1495_44_reg_4361 <= icmp_ln1495_44_fu_3296_p2;
        ref_tmp32_0_2_reg_4366 <= grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_return;
        ref_tmp39_0_1_reg_4334 <= grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_return;
        ref_tmp39_0_2_reg_4372 <= grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_return;
        ref_tmp47_0_2_reg_4378 <= grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_return;
        ref_tmp55_0_1_reg_4339 <= grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_return;
        ref_tmp55_0_2_reg_4384 <= grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_return;
        select_ln656_reg_4344 <= select_ln656_fu_3268_p3;
        select_ln659_reg_4324 <= select_ln659_fu_3240_p3;
        select_ln662_reg_4355 <= select_ln662_fu_3288_p3;
        select_ln665_reg_4329 <= select_ln665_fu_3254_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        select_ln53_12_reg_4055 <= select_ln53_12_fu_2590_p3;
        select_ln53_28_reg_4082 <= select_ln53_28_fu_2657_p3;
        select_ln53_44_reg_4109 <= select_ln53_44_fu_2724_p3;
        select_ln53_59_reg_4136 <= select_ln53_59_fu_2784_p3;
        select_ln67_12_reg_4076 <= select_ln67_12_fu_2616_p3;
        select_ln67_28_reg_4103 <= select_ln67_28_fu_2690_p3;
        select_ln67_44_reg_4130 <= select_ln67_44_fu_2750_p3;
        select_ln67_59_reg_4162 <= select_ln67_59_fu_2810_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        select_ln53_14_reg_4168 <= select_ln53_14_fu_2844_p3;
        select_ln53_30_reg_4188 <= select_ln53_30_fu_2908_p3;
        select_ln53_46_reg_4208 <= select_ln53_46_fu_2972_p3;
        select_ln53_61_reg_4228 <= select_ln53_61_fu_3036_p3;
        select_ln67_14_reg_4182 <= select_ln67_14_fu_2874_p3;
        select_ln67_30_reg_4202 <= select_ln67_30_fu_2938_p3;
        select_ln67_46_reg_4222 <= select_ln67_46_fu_3002_p3;
        select_ln67_61_reg_4250 <= select_ln67_61_fu_3070_p3;
        trunc_ln674_15_reg_4174 <= trunc_ln674_15_fu_2852_p1;
        trunc_ln674_31_reg_4194 <= trunc_ln674_31_fu_2916_p1;
        trunc_ln674_47_reg_4214 <= trunc_ln674_47_fu_2980_p1;
        trunc_ln674_62_reg_4234 <= trunc_ln674_62_fu_3044_p1;
        trunc_ln674_63_reg_4242 <= trunc_ln674_63_fu_3048_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        select_ln53_15_reg_4276 <= select_ln53_15_fu_3122_p3;
        select_ln53_31_reg_4288 <= select_ln53_31_fu_3146_p3;
        select_ln53_47_reg_4300 <= select_ln53_47_fu_3170_p3;
        select_ln53_63_reg_4312 <= select_ln53_63_fu_3205_p3;
        select_ln67_15_reg_4282 <= select_ln67_15_fu_3134_p3;
        select_ln67_31_reg_4294 <= select_ln67_31_fu_3158_p3;
        select_ln67_47_reg_4306 <= select_ln67_47_fu_3182_p3;
        select_ln67_63_reg_4318 <= select_ln67_63_fu_3227_p3;
        zTop_max_V_reg_4266 <= zTop_max_V_fu_3104_p3;
        zTop_min_V_reg_4256 <= zTop_min_V_fu_3084_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln53_17_reg_3574 <= select_ln53_17_fu_1340_p3;
        select_ln53_1_reg_3544 <= select_ln53_1_fu_1254_p3;
        select_ln53_33_reg_3596 <= select_ln53_33_fu_1422_p3;
        select_ln53_49_reg_3626 <= select_ln53_49_fu_1508_p3;
        select_ln67_17_reg_3590 <= select_ln67_17_fu_1372_p3;
        select_ln67_1_reg_3568 <= select_ln67_1_fu_1290_p3;
        select_ln67_33_reg_3620 <= select_ln67_33_fu_1458_p3;
        select_ln67_49_reg_3642 <= select_ln67_49_fu_1540_p3;
        trunc_ln674_2_reg_3550 <= trunc_ln674_2_fu_1262_p1;
        trunc_ln674_34_reg_3602 <= trunc_ln674_34_fu_1430_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln53_21_reg_3786 <= select_ln53_21_fu_1904_p3;
        select_ln53_38_reg_3813 <= select_ln53_38_fu_1971_p3;
        select_ln53_53_reg_3835 <= select_ln53_53_fu_2038_p3;
        select_ln53_6_reg_3764 <= select_ln53_6_fu_1837_p3;
        select_ln67_21_reg_3807 <= select_ln67_21_fu_1930_p3;
        select_ln67_38_reg_3829 <= select_ln67_38_fu_2004_p3;
        select_ln67_53_reg_3851 <= select_ln67_53_fu_2064_p3;
        select_ln67_6_reg_3780 <= select_ln67_6_fu_1870_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln53_23_reg_3879 <= select_ln53_23_fu_2158_p3;
        select_ln53_40_reg_3909 <= select_ln53_40_fu_2222_p3;
        select_ln53_55_reg_3931 <= select_ln53_55_fu_2282_p3;
        select_ln53_8_reg_3857 <= select_ln53_8_fu_2098_p3;
        select_ln67_23_reg_3903 <= select_ln67_23_fu_2188_p3;
        select_ln67_40_reg_3925 <= select_ln67_40_fu_2248_p3;
        select_ln67_55_reg_3947 <= select_ln67_55_fu_2308_p3;
        select_ln67_8_reg_3873 <= select_ln67_8_fu_2124_p3;
        trunc_ln674_24_reg_3885 <= trunc_ln674_24_fu_2166_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln609_reg_3436[1 : 0] <= zext_ln609_fu_1198_p1[1 : 0];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_0 = select_ln656_2_fu_3362_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_1 = select_ln659_3_fu_3376_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_2 = select_ln662_2_fu_3390_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_3 = select_ln665_3_fu_3404_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_j = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_j = 3'd1;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_z_j = select_ln53_63_reg_4312;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_z_j = select_ln53_15_reg_4276;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1026_z_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_j = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_j = 3'd1;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_z_j = select_ln67_63_reg_4318;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_z_j = select_ln67_15_reg_4282;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1040_z_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_j = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_j = 3'd1;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_z_j = select_ln53_63_reg_4312;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_z_j = select_ln53_15_reg_4276;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1054_z_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_j = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_j = 3'd1;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_j = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_z_j = select_ln67_63_reg_4318;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_z_j = select_ln67_15_reg_4282;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1068_z_j = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_0_0_ce0 = 1'b1;
    end else begin
        patch_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_0_10_ce0 = 1'b1;
    end else begin
        patch_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_0_11_ce0 = 1'b1;
    end else begin
        patch_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_0_12_ce0 = 1'b1;
    end else begin
        patch_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_0_13_ce0 = 1'b1;
    end else begin
        patch_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_0_14_ce0 = 1'b1;
    end else begin
        patch_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_0_15_ce0 = 1'b1;
    end else begin
        patch_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_0_1_ce0 = 1'b1;
    end else begin
        patch_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_0_2_ce0 = 1'b1;
    end else begin
        patch_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_0_3_ce0 = 1'b1;
    end else begin
        patch_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_0_4_ce0 = 1'b1;
    end else begin
        patch_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_0_5_ce0 = 1'b1;
    end else begin
        patch_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_0_6_ce0 = 1'b1;
    end else begin
        patch_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_0_7_ce0 = 1'b1;
    end else begin
        patch_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_0_8_ce0 = 1'b1;
    end else begin
        patch_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_0_9_ce0 = 1'b1;
    end else begin
        patch_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_1_0_ce0 = 1'b1;
    end else begin
        patch_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_1_10_ce0 = 1'b1;
    end else begin
        patch_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_1_11_ce0 = 1'b1;
    end else begin
        patch_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_1_12_ce0 = 1'b1;
    end else begin
        patch_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_1_13_ce0 = 1'b1;
    end else begin
        patch_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_1_14_ce0 = 1'b1;
    end else begin
        patch_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_1_15_ce0 = 1'b1;
    end else begin
        patch_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_1_1_ce0 = 1'b1;
    end else begin
        patch_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_1_2_ce0 = 1'b1;
    end else begin
        patch_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_1_3_ce0 = 1'b1;
    end else begin
        patch_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_1_4_ce0 = 1'b1;
    end else begin
        patch_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_1_5_ce0 = 1'b1;
    end else begin
        patch_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_1_6_ce0 = 1'b1;
    end else begin
        patch_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_1_7_ce0 = 1'b1;
    end else begin
        patch_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_1_8_ce0 = 1'b1;
    end else begin
        patch_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_1_9_ce0 = 1'b1;
    end else begin
        patch_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_2_0_ce0 = 1'b1;
    end else begin
        patch_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_2_10_ce0 = 1'b1;
    end else begin
        patch_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_2_11_ce0 = 1'b1;
    end else begin
        patch_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_2_12_ce0 = 1'b1;
    end else begin
        patch_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_2_13_ce0 = 1'b1;
    end else begin
        patch_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_2_14_ce0 = 1'b1;
    end else begin
        patch_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_2_15_ce0 = 1'b1;
    end else begin
        patch_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_2_1_ce0 = 1'b1;
    end else begin
        patch_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_2_2_ce0 = 1'b1;
    end else begin
        patch_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_2_3_ce0 = 1'b1;
    end else begin
        patch_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_2_4_ce0 = 1'b1;
    end else begin
        patch_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_2_5_ce0 = 1'b1;
    end else begin
        patch_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_2_6_ce0 = 1'b1;
    end else begin
        patch_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_2_7_ce0 = 1'b1;
    end else begin
        patch_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_2_8_ce0 = 1'b1;
    end else begin
        patch_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_2_9_ce0 = 1'b1;
    end else begin
        patch_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_3_0_ce0 = 1'b1;
    end else begin
        patch_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_3_10_ce0 = 1'b1;
    end else begin
        patch_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        patch_3_11_ce0 = 1'b1;
    end else begin
        patch_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_3_12_ce0 = 1'b1;
    end else begin
        patch_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_3_13_ce0 = 1'b1;
    end else begin
        patch_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_3_14_ce0 = 1'b1;
    end else begin
        patch_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patch_3_15_ce0 = 1'b1;
    end else begin
        patch_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        patch_3_1_ce0 = 1'b1;
    end else begin
        patch_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_3_2_ce0 = 1'b1;
    end else begin
        patch_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patch_3_3_ce0 = 1'b1;
    end else begin
        patch_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_3_4_ce0 = 1'b1;
    end else begin
        patch_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        patch_3_5_ce0 = 1'b1;
    end else begin
        patch_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_3_6_ce0 = 1'b1;
    end else begin
        patch_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        patch_3_7_ce0 = 1'b1;
    end else begin
        patch_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_3_8_ce0 = 1'b1;
    end else begin
        patch_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patch_3_9_ce0 = 1'b1;
    end else begin
        patch_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state11_on_subcall_done = ((grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_done == 1'b0) | (grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_done == 1'b0));
end

assign grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1138_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1152_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1166_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1180_ap_start_reg;

assign icmp_ln1494_10_fu_1596_p2 = (($signed(trunc_ln674_3_fu_1558_p1) > $signed(select_ln67_2_fu_1590_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_1610_p2 = (($signed(trunc_ln674_4_fu_1576_p1) > $signed(select_ln67_3_fu_1602_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_1850_p2 = (($signed(trunc_ln674_5_fu_1809_p1) > $signed(select_ln67_4_fu_1845_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1864_p2 = (($signed(trunc_ln674_6_fu_1827_p1) > $signed(select_ln67_5_fu_1856_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_2106_p2 = (($signed(trunc_ln674_7_fu_2072_p1) > $signed(select_ln67_6_reg_3780)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_2118_p2 = (($signed(trunc_ln674_8_fu_2088_p1) > $signed(select_ln67_7_fu_2111_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_2350_p2 = (($signed(trunc_ln674_9_fu_2316_p1) > $signed(select_ln67_8_reg_3873)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_2362_p2 = (($signed(trunc_ln674_10_fu_2332_p1) > $signed(select_ln67_9_fu_2355_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_2598_p2 = (($signed(trunc_ln674_11_fu_2564_p1) > $signed(select_ln67_10_reg_3969)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_2610_p2 = (($signed(trunc_ln674_12_fu_2580_p1) > $signed(select_ln67_11_fu_2603_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_20_fu_2856_p2 = (($signed(trunc_ln674_13_fu_2818_p1) > $signed(select_ln67_12_reg_4076)) ? 1'b1 : 1'b0);

assign icmp_ln1494_21_fu_2868_p2 = (($signed(trunc_ln674_14_fu_2834_p1) > $signed(select_ln67_13_fu_2861_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_22_fu_3130_p2 = (($signed(trunc_ln674_15_reg_4174) > $signed(select_ln67_14_reg_4182)) ? 1'b1 : 1'b0);

assign icmp_ln1494_23_fu_1348_p2 = (($signed(trunc_ln674_16_fu_1298_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_24_fu_1366_p2 = (($signed(trunc_ln674_17_fu_1330_p1) > $signed(select_ln67_16_cast_fu_1362_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_25_fu_1650_p2 = (($signed(trunc_ln674_18_fu_1616_p1) > $signed(select_ln67_17_reg_3590)) ? 1'b1 : 1'b0);

assign icmp_ln1494_26_fu_1662_p2 = (($signed(trunc_ln674_19_fu_1632_p1) > $signed(select_ln67_18_fu_1655_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_27_fu_1912_p2 = (($signed(trunc_ln674_20_fu_1878_p1) > $signed(select_ln67_19_reg_3700)) ? 1'b1 : 1'b0);

assign icmp_ln1494_28_fu_1924_p2 = (($signed(trunc_ln674_21_fu_1894_p1) > $signed(select_ln67_20_fu_1917_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_29_fu_2170_p2 = (($signed(trunc_ln674_22_fu_2132_p1) > $signed(select_ln67_21_reg_3807)) ? 1'b1 : 1'b0);

assign icmp_ln1494_30_fu_2182_p2 = (($signed(trunc_ln674_23_fu_2148_p1) > $signed(select_ln67_22_fu_2175_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_31_fu_2414_p2 = (($signed(trunc_ln674_24_reg_3885) > $signed(select_ln67_23_reg_3903)) ? 1'b1 : 1'b0);

assign icmp_ln1494_32_fu_2424_p2 = (($signed(trunc_ln674_25_fu_2386_p1) > $signed(select_ln67_24_fu_2418_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_33_fu_2438_p2 = (($signed(trunc_ln674_26_fu_2404_p1) > $signed(select_ln67_25_fu_2430_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_34_fu_2670_p2 = (($signed(trunc_ln674_27_fu_2629_p1) > $signed(select_ln67_26_fu_2665_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_35_fu_2684_p2 = (($signed(trunc_ln674_28_fu_2647_p1) > $signed(select_ln67_27_fu_2676_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_36_fu_2920_p2 = (($signed(trunc_ln674_29_fu_2882_p1) > $signed(select_ln67_28_reg_4103)) ? 1'b1 : 1'b0);

assign icmp_ln1494_37_fu_2932_p2 = (($signed(trunc_ln674_30_fu_2898_p1) > $signed(select_ln67_29_fu_2925_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_38_fu_3154_p2 = (($signed(trunc_ln674_31_reg_4194) > $signed(select_ln67_30_reg_4202)) ? 1'b1 : 1'b0);

assign icmp_ln1494_39_fu_3262_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_return) > $signed(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return)) ? 1'b1 : 1'b0);

assign icmp_ln1494_40_fu_3282_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_return) > $signed(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return)) ? 1'b1 : 1'b0);

assign icmp_ln1494_41_fu_1434_p2 = (($signed(trunc_ln674_32_fu_1380_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_42_fu_1452_p2 = (($signed(trunc_ln674_33_fu_1412_p1) > $signed(select_ln67_32_cast_fu_1448_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_43_fu_1714_p2 = (($signed(trunc_ln674_34_reg_3602) > $signed(select_ln67_33_reg_3620)) ? 1'b1 : 1'b0);

assign icmp_ln1494_44_fu_1724_p2 = (($signed(trunc_ln674_35_fu_1686_p1) > $signed(select_ln67_34_fu_1718_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_45_fu_1738_p2 = (($signed(trunc_ln674_36_fu_1704_p1) > $signed(select_ln67_35_fu_1730_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_46_fu_1984_p2 = (($signed(trunc_ln674_37_fu_1943_p1) > $signed(select_ln67_36_fu_1979_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_47_fu_1998_p2 = (($signed(trunc_ln674_38_fu_1961_p1) > $signed(select_ln67_37_fu_1990_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_48_fu_2230_p2 = (($signed(trunc_ln674_39_fu_2196_p1) > $signed(select_ln67_38_reg_3829)) ? 1'b1 : 1'b0);

assign icmp_ln1494_49_fu_2242_p2 = (($signed(trunc_ln674_40_fu_2212_p1) > $signed(select_ln67_39_fu_2235_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_50_fu_2478_p2 = (($signed(trunc_ln674_41_fu_2444_p1) > $signed(select_ln67_40_reg_3925)) ? 1'b1 : 1'b0);

assign icmp_ln1494_51_fu_2490_p2 = (($signed(trunc_ln674_42_fu_2460_p1) > $signed(select_ln67_41_fu_2483_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_52_fu_2732_p2 = (($signed(trunc_ln674_43_fu_2698_p1) > $signed(select_ln67_42_reg_4027)) ? 1'b1 : 1'b0);

assign icmp_ln1494_53_fu_2744_p2 = (($signed(trunc_ln674_44_fu_2714_p1) > $signed(select_ln67_43_fu_2737_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_54_fu_2984_p2 = (($signed(trunc_ln674_45_fu_2946_p1) > $signed(select_ln67_44_reg_4130)) ? 1'b1 : 1'b0);

assign icmp_ln1494_55_fu_2996_p2 = (($signed(trunc_ln674_46_fu_2962_p1) > $signed(select_ln67_45_fu_2989_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_56_fu_3178_p2 = (($signed(trunc_ln674_47_reg_4214) > $signed(select_ln67_46_reg_4222)) ? 1'b1 : 1'b0);

assign icmp_ln1494_57_fu_3312_p2 = (($signed(ref_tmp32_0_2_reg_4366) > $signed(select_ln656_reg_4344)) ? 1'b1 : 1'b0);

assign icmp_ln1494_58_fu_3334_p2 = (($signed(ref_tmp47_0_2_reg_4378) > $signed(select_ln662_reg_4355)) ? 1'b1 : 1'b0);

assign icmp_ln1494_59_fu_1516_p2 = (($signed(trunc_ln674_48_fu_1466_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_60_fu_1534_p2 = (($signed(trunc_ln674_49_fu_1498_p1) > $signed(select_ln67_48_cast_fu_1530_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_61_fu_1778_p2 = (($signed(trunc_ln674_50_fu_1744_p1) > $signed(select_ln67_49_reg_3642)) ? 1'b1 : 1'b0);

assign icmp_ln1494_62_fu_1790_p2 = (($signed(trunc_ln674_51_fu_1760_p1) > $signed(select_ln67_50_fu_1783_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_63_fu_2046_p2 = (($signed(trunc_ln674_52_fu_2012_p1) > $signed(select_ln67_51_reg_3758)) ? 1'b1 : 1'b0);

assign icmp_ln1494_64_fu_2058_p2 = (($signed(trunc_ln674_53_fu_2028_p1) > $signed(select_ln67_52_fu_2051_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_65_fu_2290_p2 = (($signed(trunc_ln674_54_fu_2256_p1) > $signed(select_ln67_53_reg_3851)) ? 1'b1 : 1'b0);

assign icmp_ln1494_66_fu_2302_p2 = (($signed(trunc_ln674_55_fu_2272_p1) > $signed(select_ln67_54_fu_2295_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_67_fu_2538_p2 = (($signed(trunc_ln674_56_fu_2504_p1) > $signed(select_ln67_55_reg_3947)) ? 1'b1 : 1'b0);

assign icmp_ln1494_68_fu_2550_p2 = (($signed(trunc_ln674_57_fu_2520_p1) > $signed(select_ln67_56_fu_2543_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_69_fu_2792_p2 = (($signed(trunc_ln674_58_fu_2758_p1) > $signed(select_ln67_57_reg_4049)) ? 1'b1 : 1'b0);

assign icmp_ln1494_70_fu_2804_p2 = (($signed(trunc_ln674_59_fu_2774_p1) > $signed(select_ln67_58_fu_2797_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_71_fu_3052_p2 = (($signed(trunc_ln674_60_fu_3010_p1) > $signed(select_ln67_59_reg_4162)) ? 1'b1 : 1'b0);

assign icmp_ln1494_72_fu_3064_p2 = (($signed(trunc_ln674_61_fu_3026_p1) > $signed(select_ln67_60_fu_3057_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_73_fu_3212_p2 = (($signed(trunc_ln674_62_reg_4234) > $signed(select_ln67_61_reg_4250)) ? 1'b1 : 1'b0);

assign icmp_ln1494_74_fu_3222_p2 = (($signed(trunc_ln674_63_reg_4242) > $signed(select_ln67_62_fu_3216_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_75_fu_3356_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return) > $signed(select_ln656_1_fu_3316_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_76_fu_3384_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return) > $signed(select_ln662_1_fu_3338_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_1266_p2 = (($signed(trunc_ln674_fu_1212_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_1284_p2 = (($signed(trunc_ln674_1_fu_1244_p1) > $signed(select_ln67_cast_fu_1280_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_1586_p2 = (($signed(trunc_ln674_2_reg_3550) > $signed(select_ln67_1_reg_3568)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_3078_p2 = (($signed(zTopMin) > $signed(32'd4242538392)) ? 1'b1 : 1'b0);

assign icmp_ln1495_10_fu_1248_p2 = (($signed(trunc_ln674_1_fu_1244_p1) < $signed(select_ln53_fu_1236_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_11_fu_1548_p2 = (($signed(trunc_ln674_2_reg_3550) < $signed(select_ln53_1_reg_3544)) ? 1'b1 : 1'b0);

assign icmp_ln1495_12_fu_1562_p2 = (($signed(trunc_ln674_3_fu_1558_p1) < $signed(select_ln53_2_fu_1552_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_13_fu_1580_p2 = (($signed(trunc_ln674_4_fu_1576_p1) < $signed(select_ln53_3_fu_1568_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_14_fu_1813_p2 = (($signed(trunc_ln674_5_fu_1809_p1) < $signed(select_ln53_4_fu_1804_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_15_fu_1831_p2 = (($signed(trunc_ln674_6_fu_1827_p1) < $signed(select_ln53_5_fu_1819_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_16_fu_2076_p2 = (($signed(trunc_ln674_7_fu_2072_p1) < $signed(select_ln53_6_reg_3764)) ? 1'b1 : 1'b0);

assign icmp_ln1495_17_fu_2092_p2 = (($signed(trunc_ln674_8_fu_2088_p1) < $signed(select_ln53_7_fu_2081_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_18_fu_2320_p2 = (($signed(trunc_ln674_9_fu_2316_p1) < $signed(select_ln53_8_reg_3857)) ? 1'b1 : 1'b0);

assign icmp_ln1495_19_fu_2336_p2 = (($signed(trunc_ln674_10_fu_2332_p1) < $signed(select_ln53_9_fu_2325_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_20_fu_2568_p2 = (($signed(trunc_ln674_11_fu_2564_p1) < $signed(select_ln53_10_reg_3953)) ? 1'b1 : 1'b0);

assign icmp_ln1495_21_fu_2584_p2 = (($signed(trunc_ln674_12_fu_2580_p1) < $signed(select_ln53_11_fu_2573_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_22_fu_2822_p2 = (($signed(trunc_ln674_13_fu_2818_p1) < $signed(select_ln53_12_reg_4055)) ? 1'b1 : 1'b0);

assign icmp_ln1495_23_fu_2838_p2 = (($signed(trunc_ln674_14_fu_2834_p1) < $signed(select_ln53_13_fu_2827_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_24_fu_3118_p2 = (($signed(trunc_ln674_15_reg_4174) < $signed(select_ln53_14_reg_4168)) ? 1'b1 : 1'b0);

assign icmp_ln1495_25_fu_3234_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return) < $signed(32'd2146435072)) ? 1'b1 : 1'b0);

assign icmp_ln1495_26_fu_3248_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return) < $signed(32'd2146435072)) ? 1'b1 : 1'b0);

assign icmp_ln1495_27_fu_1316_p2 = ((tmp_4_fu_1306_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_28_fu_1334_p2 = (($signed(trunc_ln674_17_fu_1330_p1) < $signed(select_ln53_16_fu_1322_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_29_fu_1620_p2 = (($signed(trunc_ln674_18_fu_1616_p1) < $signed(select_ln53_17_reg_3574)) ? 1'b1 : 1'b0);

assign icmp_ln1495_30_fu_1636_p2 = (($signed(trunc_ln674_19_fu_1632_p1) < $signed(select_ln53_18_fu_1625_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_31_fu_1882_p2 = (($signed(trunc_ln674_20_fu_1878_p1) < $signed(select_ln53_19_reg_3684)) ? 1'b1 : 1'b0);

assign icmp_ln1495_32_fu_1898_p2 = (($signed(trunc_ln674_21_fu_1894_p1) < $signed(select_ln53_20_fu_1887_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_33_fu_2136_p2 = (($signed(trunc_ln674_22_fu_2132_p1) < $signed(select_ln53_21_reg_3786)) ? 1'b1 : 1'b0);

assign icmp_ln1495_34_fu_2152_p2 = (($signed(trunc_ln674_23_fu_2148_p1) < $signed(select_ln53_22_fu_2141_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_35_fu_2376_p2 = (($signed(trunc_ln674_24_reg_3885) < $signed(select_ln53_23_reg_3879)) ? 1'b1 : 1'b0);

assign icmp_ln1495_36_fu_2390_p2 = (($signed(trunc_ln674_25_fu_2386_p1) < $signed(select_ln53_24_fu_2380_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_37_fu_2408_p2 = (($signed(trunc_ln674_26_fu_2404_p1) < $signed(select_ln53_25_fu_2396_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_38_fu_2633_p2 = (($signed(trunc_ln674_27_fu_2629_p1) < $signed(select_ln53_26_fu_2624_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_39_fu_2651_p2 = (($signed(trunc_ln674_28_fu_2647_p1) < $signed(select_ln53_27_fu_2639_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_40_fu_2886_p2 = (($signed(trunc_ln674_29_fu_2882_p1) < $signed(select_ln53_28_reg_4082)) ? 1'b1 : 1'b0);

assign icmp_ln1495_41_fu_2902_p2 = (($signed(trunc_ln674_30_fu_2898_p1) < $signed(select_ln53_29_fu_2891_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_42_fu_3142_p2 = (($signed(trunc_ln674_31_reg_4194) < $signed(select_ln53_30_reg_4188)) ? 1'b1 : 1'b0);

assign icmp_ln1495_43_fu_3276_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1096_ap_return) < $signed(select_ln659_fu_3240_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_44_fu_3296_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1124_ap_return) < $signed(select_ln665_fu_3254_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_45_fu_1398_p2 = ((tmp_5_fu_1388_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_46_fu_1416_p2 = (($signed(trunc_ln674_33_fu_1412_p1) < $signed(select_ln53_32_fu_1404_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_47_fu_1676_p2 = (($signed(trunc_ln674_34_reg_3602) < $signed(select_ln53_33_reg_3596)) ? 1'b1 : 1'b0);

assign icmp_ln1495_48_fu_1690_p2 = (($signed(trunc_ln674_35_fu_1686_p1) < $signed(select_ln53_34_fu_1680_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_49_fu_1708_p2 = (($signed(trunc_ln674_36_fu_1704_p1) < $signed(select_ln53_35_fu_1696_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_50_fu_1947_p2 = (($signed(trunc_ln674_37_fu_1943_p1) < $signed(select_ln53_36_fu_1938_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_51_fu_1965_p2 = (($signed(trunc_ln674_38_fu_1961_p1) < $signed(select_ln53_37_fu_1953_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_52_fu_2200_p2 = (($signed(trunc_ln674_39_fu_2196_p1) < $signed(select_ln53_38_reg_3813)) ? 1'b1 : 1'b0);

assign icmp_ln1495_53_fu_2216_p2 = (($signed(trunc_ln674_40_fu_2212_p1) < $signed(select_ln53_39_fu_2205_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_54_fu_2448_p2 = (($signed(trunc_ln674_41_fu_2444_p1) < $signed(select_ln53_40_reg_3909)) ? 1'b1 : 1'b0);

assign icmp_ln1495_55_fu_2464_p2 = (($signed(trunc_ln674_42_fu_2460_p1) < $signed(select_ln53_41_fu_2453_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_56_fu_2702_p2 = (($signed(trunc_ln674_43_fu_2698_p1) < $signed(select_ln53_42_reg_4011)) ? 1'b1 : 1'b0);

assign icmp_ln1495_57_fu_2718_p2 = (($signed(trunc_ln674_44_fu_2714_p1) < $signed(select_ln53_43_fu_2707_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_58_fu_2950_p2 = (($signed(trunc_ln674_45_fu_2946_p1) < $signed(select_ln53_44_reg_4109)) ? 1'b1 : 1'b0);

assign icmp_ln1495_59_fu_2966_p2 = (($signed(trunc_ln674_46_fu_2962_p1) < $signed(select_ln53_45_fu_2955_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_60_fu_3166_p2 = (($signed(trunc_ln674_47_reg_4214) < $signed(select_ln53_46_reg_4208)) ? 1'b1 : 1'b0);

assign icmp_ln1495_61_fu_3322_p2 = (($signed(ref_tmp39_0_2_reg_4372) < $signed(select_ln659_1_fu_3302_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_62_fu_3344_p2 = (($signed(ref_tmp55_0_2_reg_4384) < $signed(select_ln665_1_fu_3307_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_63_fu_1484_p2 = ((tmp_6_fu_1474_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_64_fu_1502_p2 = (($signed(trunc_ln674_49_fu_1498_p1) < $signed(select_ln53_48_fu_1490_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_65_fu_1748_p2 = (($signed(trunc_ln674_50_fu_1744_p1) < $signed(select_ln53_49_reg_3626)) ? 1'b1 : 1'b0);

assign icmp_ln1495_66_fu_1764_p2 = (($signed(trunc_ln674_51_fu_1760_p1) < $signed(select_ln53_50_fu_1753_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_67_fu_2016_p2 = (($signed(trunc_ln674_52_fu_2012_p1) < $signed(select_ln53_51_reg_3742)) ? 1'b1 : 1'b0);

assign icmp_ln1495_68_fu_2032_p2 = (($signed(trunc_ln674_53_fu_2028_p1) < $signed(select_ln53_52_fu_2021_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_69_fu_2260_p2 = (($signed(trunc_ln674_54_fu_2256_p1) < $signed(select_ln53_53_reg_3835)) ? 1'b1 : 1'b0);

assign icmp_ln1495_70_fu_2276_p2 = (($signed(trunc_ln674_55_fu_2272_p1) < $signed(select_ln53_54_fu_2265_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_71_fu_2508_p2 = (($signed(trunc_ln674_56_fu_2504_p1) < $signed(select_ln53_55_reg_3931)) ? 1'b1 : 1'b0);

assign icmp_ln1495_72_fu_2524_p2 = (($signed(trunc_ln674_57_fu_2520_p1) < $signed(select_ln53_56_fu_2513_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_73_fu_2762_p2 = (($signed(trunc_ln674_58_fu_2758_p1) < $signed(select_ln53_57_reg_4033)) ? 1'b1 : 1'b0);

assign icmp_ln1495_74_fu_2778_p2 = (($signed(trunc_ln674_59_fu_2774_p1) < $signed(select_ln53_58_fu_2767_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_75_fu_3014_p2 = (($signed(trunc_ln674_60_fu_3010_p1) < $signed(select_ln53_59_reg_4136)) ? 1'b1 : 1'b0);

assign icmp_ln1495_76_fu_3030_p2 = (($signed(trunc_ln674_61_fu_3026_p1) < $signed(select_ln53_60_fu_3019_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_77_fu_3190_p2 = (($signed(trunc_ln674_62_reg_4234) < $signed(select_ln53_61_reg_4228)) ? 1'b1 : 1'b0);

assign icmp_ln1495_78_fu_3200_p2 = (($signed(trunc_ln674_63_reg_4242) < $signed(select_ln53_62_fu_3194_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_79_fu_3370_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return) < $signed(select_ln659_2_fu_3327_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_80_fu_3398_p2 = (($signed(grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return) < $signed(select_ln665_2_fu_3349_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_1230_p2 = ((tmp_fu_1220_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_3098_p2 = (($signed(zTopMax) < $signed(32'd52428904)) ? 1'b1 : 1'b0);

assign patch_0_0_address0 = zext_ln609_fu_1198_p1;

assign patch_0_10_address0 = zext_ln609_reg_3436;

assign patch_0_11_address0 = zext_ln609_reg_3436;

assign patch_0_12_address0 = zext_ln609_reg_3436;

assign patch_0_13_address0 = zext_ln609_reg_3436;

assign patch_0_14_address0 = zext_ln609_reg_3436;

assign patch_0_15_address0 = zext_ln609_reg_3436;

assign patch_0_1_address0 = zext_ln609_fu_1198_p1;

assign patch_0_2_address0 = zext_ln609_fu_1198_p1;

assign patch_0_3_address0 = zext_ln609_reg_3436;

assign patch_0_4_address0 = zext_ln609_reg_3436;

assign patch_0_5_address0 = zext_ln609_reg_3436;

assign patch_0_6_address0 = zext_ln609_reg_3436;

assign patch_0_7_address0 = zext_ln609_reg_3436;

assign patch_0_8_address0 = zext_ln609_reg_3436;

assign patch_0_9_address0 = zext_ln609_reg_3436;

assign patch_1_0_address0 = zext_ln609_fu_1198_p1;

assign patch_1_10_address0 = zext_ln609_reg_3436;

assign patch_1_11_address0 = zext_ln609_reg_3436;

assign patch_1_12_address0 = zext_ln609_reg_3436;

assign patch_1_13_address0 = zext_ln609_reg_3436;

assign patch_1_14_address0 = zext_ln609_reg_3436;

assign patch_1_15_address0 = zext_ln609_reg_3436;

assign patch_1_1_address0 = zext_ln609_fu_1198_p1;

assign patch_1_2_address0 = zext_ln609_reg_3436;

assign patch_1_3_address0 = zext_ln609_reg_3436;

assign patch_1_4_address0 = zext_ln609_reg_3436;

assign patch_1_5_address0 = zext_ln609_reg_3436;

assign patch_1_6_address0 = zext_ln609_reg_3436;

assign patch_1_7_address0 = zext_ln609_reg_3436;

assign patch_1_8_address0 = zext_ln609_reg_3436;

assign patch_1_9_address0 = zext_ln609_reg_3436;

assign patch_2_0_address0 = zext_ln609_fu_1198_p1;

assign patch_2_10_address0 = zext_ln609_reg_3436;

assign patch_2_11_address0 = zext_ln609_reg_3436;

assign patch_2_12_address0 = zext_ln609_reg_3436;

assign patch_2_13_address0 = zext_ln609_reg_3436;

assign patch_2_14_address0 = zext_ln609_reg_3436;

assign patch_2_15_address0 = zext_ln609_reg_3436;

assign patch_2_1_address0 = zext_ln609_fu_1198_p1;

assign patch_2_2_address0 = zext_ln609_fu_1198_p1;

assign patch_2_3_address0 = zext_ln609_reg_3436;

assign patch_2_4_address0 = zext_ln609_reg_3436;

assign patch_2_5_address0 = zext_ln609_reg_3436;

assign patch_2_6_address0 = zext_ln609_reg_3436;

assign patch_2_7_address0 = zext_ln609_reg_3436;

assign patch_2_8_address0 = zext_ln609_reg_3436;

assign patch_2_9_address0 = zext_ln609_reg_3436;

assign patch_3_0_address0 = zext_ln609_fu_1198_p1;

assign patch_3_10_address0 = zext_ln609_reg_3436;

assign patch_3_11_address0 = zext_ln609_reg_3436;

assign patch_3_12_address0 = zext_ln609_reg_3436;

assign patch_3_13_address0 = zext_ln609_reg_3436;

assign patch_3_14_address0 = zext_ln609_reg_3436;

assign patch_3_15_address0 = zext_ln609_reg_3436;

assign patch_3_1_address0 = zext_ln609_fu_1198_p1;

assign patch_3_2_address0 = zext_ln609_reg_3436;

assign patch_3_3_address0 = zext_ln609_reg_3436;

assign patch_3_4_address0 = zext_ln609_reg_3436;

assign patch_3_5_address0 = zext_ln609_reg_3436;

assign patch_3_6_address0 = zext_ln609_reg_3436;

assign patch_3_7_address0 = zext_ln609_reg_3436;

assign patch_3_8_address0 = zext_ln609_reg_3436;

assign patch_3_9_address0 = zext_ln609_reg_3436;

assign select_ln53_10_fu_2342_p3 = ((icmp_ln1495_19_fu_2336_p2[0:0] == 1'b1) ? trunc_ln674_10_fu_2332_p1 : select_ln53_9_fu_2325_p3);

assign select_ln53_11_fu_2573_p3 = ((icmp_ln1495_20_fu_2568_p2[0:0] == 1'b1) ? trunc_ln674_11_fu_2564_p1 : select_ln53_10_reg_3953);

assign select_ln53_12_fu_2590_p3 = ((icmp_ln1495_21_fu_2584_p2[0:0] == 1'b1) ? trunc_ln674_12_fu_2580_p1 : select_ln53_11_fu_2573_p3);

assign select_ln53_13_fu_2827_p3 = ((icmp_ln1495_22_fu_2822_p2[0:0] == 1'b1) ? trunc_ln674_13_fu_2818_p1 : select_ln53_12_reg_4055);

assign select_ln53_14_fu_2844_p3 = ((icmp_ln1495_23_fu_2838_p2[0:0] == 1'b1) ? trunc_ln674_14_fu_2834_p1 : select_ln53_13_fu_2827_p3);

assign select_ln53_15_fu_3122_p3 = ((icmp_ln1495_24_fu_3118_p2[0:0] == 1'b1) ? trunc_ln674_15_reg_4174 : select_ln53_14_reg_4168);

assign select_ln53_16_fu_1322_p3 = ((icmp_ln1495_27_fu_1316_p2[0:0] == 1'b1) ? trunc_ln674_16_fu_1298_p1 : 32'd1073741824);

assign select_ln53_17_fu_1340_p3 = ((icmp_ln1495_28_fu_1334_p2[0:0] == 1'b1) ? trunc_ln674_17_fu_1330_p1 : select_ln53_16_fu_1322_p3);

assign select_ln53_18_fu_1625_p3 = ((icmp_ln1495_29_fu_1620_p2[0:0] == 1'b1) ? trunc_ln674_18_fu_1616_p1 : select_ln53_17_reg_3574);

assign select_ln53_19_fu_1642_p3 = ((icmp_ln1495_30_fu_1636_p2[0:0] == 1'b1) ? trunc_ln674_19_fu_1632_p1 : select_ln53_18_fu_1625_p3);

assign select_ln53_1_fu_1254_p3 = ((icmp_ln1495_10_fu_1248_p2[0:0] == 1'b1) ? trunc_ln674_1_fu_1244_p1 : select_ln53_fu_1236_p3);

assign select_ln53_20_fu_1887_p3 = ((icmp_ln1495_31_fu_1882_p2[0:0] == 1'b1) ? trunc_ln674_20_fu_1878_p1 : select_ln53_19_reg_3684);

assign select_ln53_21_fu_1904_p3 = ((icmp_ln1495_32_fu_1898_p2[0:0] == 1'b1) ? trunc_ln674_21_fu_1894_p1 : select_ln53_20_fu_1887_p3);

assign select_ln53_22_fu_2141_p3 = ((icmp_ln1495_33_fu_2136_p2[0:0] == 1'b1) ? trunc_ln674_22_fu_2132_p1 : select_ln53_21_reg_3786);

assign select_ln53_23_fu_2158_p3 = ((icmp_ln1495_34_fu_2152_p2[0:0] == 1'b1) ? trunc_ln674_23_fu_2148_p1 : select_ln53_22_fu_2141_p3);

assign select_ln53_24_fu_2380_p3 = ((icmp_ln1495_35_fu_2376_p2[0:0] == 1'b1) ? trunc_ln674_24_reg_3885 : select_ln53_23_reg_3879);

assign select_ln53_25_fu_2396_p3 = ((icmp_ln1495_36_fu_2390_p2[0:0] == 1'b1) ? trunc_ln674_25_fu_2386_p1 : select_ln53_24_fu_2380_p3);

assign select_ln53_26_fu_2624_p3 = ((icmp_ln1495_37_reg_3986[0:0] == 1'b1) ? trunc_ln674_26_reg_3980 : select_ln53_25_reg_3975);

assign select_ln53_27_fu_2639_p3 = ((icmp_ln1495_38_fu_2633_p2[0:0] == 1'b1) ? trunc_ln674_27_fu_2629_p1 : select_ln53_26_fu_2624_p3);

assign select_ln53_28_fu_2657_p3 = ((icmp_ln1495_39_fu_2651_p2[0:0] == 1'b1) ? trunc_ln674_28_fu_2647_p1 : select_ln53_27_fu_2639_p3);

assign select_ln53_29_fu_2891_p3 = ((icmp_ln1495_40_fu_2886_p2[0:0] == 1'b1) ? trunc_ln674_29_fu_2882_p1 : select_ln53_28_reg_4082);

assign select_ln53_2_fu_1552_p3 = ((icmp_ln1495_11_fu_1548_p2[0:0] == 1'b1) ? trunc_ln674_2_reg_3550 : select_ln53_1_reg_3544);

assign select_ln53_30_fu_2908_p3 = ((icmp_ln1495_41_fu_2902_p2[0:0] == 1'b1) ? trunc_ln674_30_fu_2898_p1 : select_ln53_29_fu_2891_p3);

assign select_ln53_31_fu_3146_p3 = ((icmp_ln1495_42_fu_3142_p2[0:0] == 1'b1) ? trunc_ln674_31_reg_4194 : select_ln53_30_reg_4188);

assign select_ln53_32_fu_1404_p3 = ((icmp_ln1495_45_fu_1398_p2[0:0] == 1'b1) ? trunc_ln674_32_fu_1380_p1 : 32'd1073741824);

assign select_ln53_33_fu_1422_p3 = ((icmp_ln1495_46_fu_1416_p2[0:0] == 1'b1) ? trunc_ln674_33_fu_1412_p1 : select_ln53_32_fu_1404_p3);

assign select_ln53_34_fu_1680_p3 = ((icmp_ln1495_47_fu_1676_p2[0:0] == 1'b1) ? trunc_ln674_34_reg_3602 : select_ln53_33_reg_3596);

assign select_ln53_35_fu_1696_p3 = ((icmp_ln1495_48_fu_1690_p2[0:0] == 1'b1) ? trunc_ln674_35_fu_1686_p1 : select_ln53_34_fu_1680_p3);

assign select_ln53_36_fu_1938_p3 = ((icmp_ln1495_49_reg_3717[0:0] == 1'b1) ? trunc_ln674_36_reg_3711 : select_ln53_35_reg_3706);

assign select_ln53_37_fu_1953_p3 = ((icmp_ln1495_50_fu_1947_p2[0:0] == 1'b1) ? trunc_ln674_37_fu_1943_p1 : select_ln53_36_fu_1938_p3);

assign select_ln53_38_fu_1971_p3 = ((icmp_ln1495_51_fu_1965_p2[0:0] == 1'b1) ? trunc_ln674_38_fu_1961_p1 : select_ln53_37_fu_1953_p3);

assign select_ln53_39_fu_2205_p3 = ((icmp_ln1495_52_fu_2200_p2[0:0] == 1'b1) ? trunc_ln674_39_fu_2196_p1 : select_ln53_38_reg_3813);

assign select_ln53_3_fu_1568_p3 = ((icmp_ln1495_12_fu_1562_p2[0:0] == 1'b1) ? trunc_ln674_3_fu_1558_p1 : select_ln53_2_fu_1552_p3);

assign select_ln53_40_fu_2222_p3 = ((icmp_ln1495_53_fu_2216_p2[0:0] == 1'b1) ? trunc_ln674_40_fu_2212_p1 : select_ln53_39_fu_2205_p3);

assign select_ln53_41_fu_2453_p3 = ((icmp_ln1495_54_fu_2448_p2[0:0] == 1'b1) ? trunc_ln674_41_fu_2444_p1 : select_ln53_40_reg_3909);

assign select_ln53_42_fu_2470_p3 = ((icmp_ln1495_55_fu_2464_p2[0:0] == 1'b1) ? trunc_ln674_42_fu_2460_p1 : select_ln53_41_fu_2453_p3);

assign select_ln53_43_fu_2707_p3 = ((icmp_ln1495_56_fu_2702_p2[0:0] == 1'b1) ? trunc_ln674_43_fu_2698_p1 : select_ln53_42_reg_4011);

assign select_ln53_44_fu_2724_p3 = ((icmp_ln1495_57_fu_2718_p2[0:0] == 1'b1) ? trunc_ln674_44_fu_2714_p1 : select_ln53_43_fu_2707_p3);

assign select_ln53_45_fu_2955_p3 = ((icmp_ln1495_58_fu_2950_p2[0:0] == 1'b1) ? trunc_ln674_45_fu_2946_p1 : select_ln53_44_reg_4109);

assign select_ln53_46_fu_2972_p3 = ((icmp_ln1495_59_fu_2966_p2[0:0] == 1'b1) ? trunc_ln674_46_fu_2962_p1 : select_ln53_45_fu_2955_p3);

assign select_ln53_47_fu_3170_p3 = ((icmp_ln1495_60_fu_3166_p2[0:0] == 1'b1) ? trunc_ln674_47_reg_4214 : select_ln53_46_reg_4208);

assign select_ln53_48_fu_1490_p3 = ((icmp_ln1495_63_fu_1484_p2[0:0] == 1'b1) ? trunc_ln674_48_fu_1466_p1 : 32'd1073741824);

assign select_ln53_49_fu_1508_p3 = ((icmp_ln1495_64_fu_1502_p2[0:0] == 1'b1) ? trunc_ln674_49_fu_1498_p1 : select_ln53_48_fu_1490_p3);

assign select_ln53_4_fu_1804_p3 = ((icmp_ln1495_13_reg_3659[0:0] == 1'b1) ? trunc_ln674_4_reg_3653 : select_ln53_3_reg_3648);

assign select_ln53_50_fu_1753_p3 = ((icmp_ln1495_65_fu_1748_p2[0:0] == 1'b1) ? trunc_ln674_50_fu_1744_p1 : select_ln53_49_reg_3626);

assign select_ln53_51_fu_1770_p3 = ((icmp_ln1495_66_fu_1764_p2[0:0] == 1'b1) ? trunc_ln674_51_fu_1760_p1 : select_ln53_50_fu_1753_p3);

assign select_ln53_52_fu_2021_p3 = ((icmp_ln1495_67_fu_2016_p2[0:0] == 1'b1) ? trunc_ln674_52_fu_2012_p1 : select_ln53_51_reg_3742);

assign select_ln53_53_fu_2038_p3 = ((icmp_ln1495_68_fu_2032_p2[0:0] == 1'b1) ? trunc_ln674_53_fu_2028_p1 : select_ln53_52_fu_2021_p3);

assign select_ln53_54_fu_2265_p3 = ((icmp_ln1495_69_fu_2260_p2[0:0] == 1'b1) ? trunc_ln674_54_fu_2256_p1 : select_ln53_53_reg_3835);

assign select_ln53_55_fu_2282_p3 = ((icmp_ln1495_70_fu_2276_p2[0:0] == 1'b1) ? trunc_ln674_55_fu_2272_p1 : select_ln53_54_fu_2265_p3);

assign select_ln53_56_fu_2513_p3 = ((icmp_ln1495_71_fu_2508_p2[0:0] == 1'b1) ? trunc_ln674_56_fu_2504_p1 : select_ln53_55_reg_3931);

assign select_ln53_57_fu_2530_p3 = ((icmp_ln1495_72_fu_2524_p2[0:0] == 1'b1) ? trunc_ln674_57_fu_2520_p1 : select_ln53_56_fu_2513_p3);

assign select_ln53_58_fu_2767_p3 = ((icmp_ln1495_73_fu_2762_p2[0:0] == 1'b1) ? trunc_ln674_58_fu_2758_p1 : select_ln53_57_reg_4033);

assign select_ln53_59_fu_2784_p3 = ((icmp_ln1495_74_fu_2778_p2[0:0] == 1'b1) ? trunc_ln674_59_fu_2774_p1 : select_ln53_58_fu_2767_p3);

assign select_ln53_5_fu_1819_p3 = ((icmp_ln1495_14_fu_1813_p2[0:0] == 1'b1) ? trunc_ln674_5_fu_1809_p1 : select_ln53_4_fu_1804_p3);

assign select_ln53_60_fu_3019_p3 = ((icmp_ln1495_75_fu_3014_p2[0:0] == 1'b1) ? trunc_ln674_60_fu_3010_p1 : select_ln53_59_reg_4136);

assign select_ln53_61_fu_3036_p3 = ((icmp_ln1495_76_fu_3030_p2[0:0] == 1'b1) ? trunc_ln674_61_fu_3026_p1 : select_ln53_60_fu_3019_p3);

assign select_ln53_62_fu_3194_p3 = ((icmp_ln1495_77_fu_3190_p2[0:0] == 1'b1) ? trunc_ln674_62_reg_4234 : select_ln53_61_reg_4228);

assign select_ln53_63_fu_3205_p3 = ((icmp_ln1495_78_fu_3200_p2[0:0] == 1'b1) ? trunc_ln674_63_reg_4242 : select_ln53_62_fu_3194_p3);

assign select_ln53_6_fu_1837_p3 = ((icmp_ln1495_15_fu_1831_p2[0:0] == 1'b1) ? trunc_ln674_6_fu_1827_p1 : select_ln53_5_fu_1819_p3);

assign select_ln53_7_fu_2081_p3 = ((icmp_ln1495_16_fu_2076_p2[0:0] == 1'b1) ? trunc_ln674_7_fu_2072_p1 : select_ln53_6_reg_3764);

assign select_ln53_8_fu_2098_p3 = ((icmp_ln1495_17_fu_2092_p2[0:0] == 1'b1) ? trunc_ln674_8_fu_2088_p1 : select_ln53_7_fu_2081_p3);

assign select_ln53_9_fu_2325_p3 = ((icmp_ln1495_18_fu_2320_p2[0:0] == 1'b1) ? trunc_ln674_9_fu_2316_p1 : select_ln53_8_reg_3857);

assign select_ln53_fu_1236_p3 = ((icmp_ln1495_9_fu_1230_p2[0:0] == 1'b1) ? trunc_ln674_fu_1212_p1 : 32'd1073741824);

assign select_ln656_1_fu_3316_p3 = ((icmp_ln1494_57_fu_3312_p2[0:0] == 1'b1) ? ref_tmp32_0_2_reg_4366 : select_ln656_reg_4344);

assign select_ln656_2_fu_3362_p3 = ((icmp_ln1494_75_fu_3356_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return : select_ln656_1_fu_3316_p3);

assign select_ln656_fu_3268_p3 = ((icmp_ln1494_39_fu_3262_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1082_ap_return : grp_straightLineProjectorFromLayerIJtoK_fu_1026_ap_return);

assign select_ln659_1_fu_3302_p3 = ((icmp_ln1495_43_reg_4350[0:0] == 1'b1) ? ref_tmp39_0_1_reg_4334 : select_ln659_reg_4324);

assign select_ln659_2_fu_3327_p3 = ((icmp_ln1495_61_fu_3322_p2[0:0] == 1'b1) ? ref_tmp39_0_2_reg_4372 : select_ln659_1_fu_3302_p3);

assign select_ln659_3_fu_3376_p3 = ((icmp_ln1495_79_fu_3370_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return : select_ln659_2_fu_3327_p3);

assign select_ln659_fu_3240_p3 = ((icmp_ln1495_25_fu_3234_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1040_ap_return : 32'd2146435072);

assign select_ln662_1_fu_3338_p3 = ((icmp_ln1494_58_fu_3334_p2[0:0] == 1'b1) ? ref_tmp47_0_2_reg_4378 : select_ln662_reg_4355);

assign select_ln662_2_fu_3390_p3 = ((icmp_ln1494_76_fu_3384_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return : select_ln662_1_fu_3338_p3);

assign select_ln662_fu_3288_p3 = ((icmp_ln1494_40_fu_3282_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1110_ap_return : grp_straightLineProjectorFromLayerIJtoK_fu_1054_ap_return);

assign select_ln665_1_fu_3307_p3 = ((icmp_ln1495_44_reg_4361[0:0] == 1'b1) ? ref_tmp55_0_1_reg_4339 : select_ln665_reg_4329);

assign select_ln665_2_fu_3349_p3 = ((icmp_ln1495_62_fu_3344_p2[0:0] == 1'b1) ? ref_tmp55_0_2_reg_4384 : select_ln665_1_fu_3307_p3);

assign select_ln665_3_fu_3404_p3 = ((icmp_ln1495_80_fu_3398_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return : select_ln665_2_fu_3349_p3);

assign select_ln665_fu_3254_p3 = ((icmp_ln1495_26_fu_3248_p2[0:0] == 1'b1) ? grp_straightLineProjectorFromLayerIJtoK_fu_1068_ap_return : 32'd2146435072);

assign select_ln67_10_fu_2368_p3 = ((icmp_ln1494_17_fu_2362_p2[0:0] == 1'b1) ? trunc_ln674_10_fu_2332_p1 : select_ln67_9_fu_2355_p3);

assign select_ln67_11_fu_2603_p3 = ((icmp_ln1494_18_fu_2598_p2[0:0] == 1'b1) ? trunc_ln674_11_fu_2564_p1 : select_ln67_10_reg_3969);

assign select_ln67_12_fu_2616_p3 = ((icmp_ln1494_19_fu_2610_p2[0:0] == 1'b1) ? trunc_ln674_12_fu_2580_p1 : select_ln67_11_fu_2603_p3);

assign select_ln67_13_fu_2861_p3 = ((icmp_ln1494_20_fu_2856_p2[0:0] == 1'b1) ? trunc_ln674_13_fu_2818_p1 : select_ln67_12_reg_4076);

assign select_ln67_14_fu_2874_p3 = ((icmp_ln1494_21_fu_2868_p2[0:0] == 1'b1) ? trunc_ln674_14_fu_2834_p1 : select_ln67_13_fu_2861_p3);

assign select_ln67_15_fu_3134_p3 = ((icmp_ln1494_22_fu_3130_p2[0:0] == 1'b1) ? trunc_ln674_15_reg_4174 : select_ln67_14_reg_4182);

assign select_ln67_16_cast_fu_1362_p1 = select_ln67_16_fu_1354_p3;

assign select_ln67_16_fu_1354_p3 = ((icmp_ln1494_23_fu_1348_p2[0:0] == 1'b1) ? trunc_ln1495_1_fu_1302_p1 : 31'd0);

assign select_ln67_17_fu_1372_p3 = ((icmp_ln1494_24_fu_1366_p2[0:0] == 1'b1) ? trunc_ln674_17_fu_1330_p1 : select_ln67_16_cast_fu_1362_p1);

assign select_ln67_18_fu_1655_p3 = ((icmp_ln1494_25_fu_1650_p2[0:0] == 1'b1) ? trunc_ln674_18_fu_1616_p1 : select_ln67_17_reg_3590);

assign select_ln67_19_fu_1668_p3 = ((icmp_ln1494_26_fu_1662_p2[0:0] == 1'b1) ? trunc_ln674_19_fu_1632_p1 : select_ln67_18_fu_1655_p3);

assign select_ln67_1_fu_1290_p3 = ((icmp_ln1494_8_fu_1284_p2[0:0] == 1'b1) ? trunc_ln674_1_fu_1244_p1 : select_ln67_cast_fu_1280_p1);

assign select_ln67_20_fu_1917_p3 = ((icmp_ln1494_27_fu_1912_p2[0:0] == 1'b1) ? trunc_ln674_20_fu_1878_p1 : select_ln67_19_reg_3700);

assign select_ln67_21_fu_1930_p3 = ((icmp_ln1494_28_fu_1924_p2[0:0] == 1'b1) ? trunc_ln674_21_fu_1894_p1 : select_ln67_20_fu_1917_p3);

assign select_ln67_22_fu_2175_p3 = ((icmp_ln1494_29_fu_2170_p2[0:0] == 1'b1) ? trunc_ln674_22_fu_2132_p1 : select_ln67_21_reg_3807);

assign select_ln67_23_fu_2188_p3 = ((icmp_ln1494_30_fu_2182_p2[0:0] == 1'b1) ? trunc_ln674_23_fu_2148_p1 : select_ln67_22_fu_2175_p3);

assign select_ln67_24_fu_2418_p3 = ((icmp_ln1494_31_fu_2414_p2[0:0] == 1'b1) ? trunc_ln674_24_reg_3885 : select_ln67_23_reg_3903);

assign select_ln67_25_fu_2430_p3 = ((icmp_ln1494_32_fu_2424_p2[0:0] == 1'b1) ? trunc_ln674_25_fu_2386_p1 : select_ln67_24_fu_2418_p3);

assign select_ln67_26_fu_2665_p3 = ((icmp_ln1494_33_reg_4006[0:0] == 1'b1) ? trunc_ln674_26_reg_3980 : select_ln67_25_reg_4001);

assign select_ln67_27_fu_2676_p3 = ((icmp_ln1494_34_fu_2670_p2[0:0] == 1'b1) ? trunc_ln674_27_fu_2629_p1 : select_ln67_26_fu_2665_p3);

assign select_ln67_28_fu_2690_p3 = ((icmp_ln1494_35_fu_2684_p2[0:0] == 1'b1) ? trunc_ln674_28_fu_2647_p1 : select_ln67_27_fu_2676_p3);

assign select_ln67_29_fu_2925_p3 = ((icmp_ln1494_36_fu_2920_p2[0:0] == 1'b1) ? trunc_ln674_29_fu_2882_p1 : select_ln67_28_reg_4103);

assign select_ln67_2_fu_1590_p3 = ((icmp_ln1494_9_fu_1586_p2[0:0] == 1'b1) ? trunc_ln674_2_reg_3550 : select_ln67_1_reg_3568);

assign select_ln67_30_fu_2938_p3 = ((icmp_ln1494_37_fu_2932_p2[0:0] == 1'b1) ? trunc_ln674_30_fu_2898_p1 : select_ln67_29_fu_2925_p3);

assign select_ln67_31_fu_3158_p3 = ((icmp_ln1494_38_fu_3154_p2[0:0] == 1'b1) ? trunc_ln674_31_reg_4194 : select_ln67_30_reg_4202);

assign select_ln67_32_cast_fu_1448_p1 = select_ln67_32_fu_1440_p3;

assign select_ln67_32_fu_1440_p3 = ((icmp_ln1494_41_fu_1434_p2[0:0] == 1'b1) ? trunc_ln1495_2_fu_1384_p1 : 31'd0);

assign select_ln67_33_fu_1458_p3 = ((icmp_ln1494_42_fu_1452_p2[0:0] == 1'b1) ? trunc_ln674_33_fu_1412_p1 : select_ln67_32_cast_fu_1448_p1);

assign select_ln67_34_fu_1718_p3 = ((icmp_ln1494_43_fu_1714_p2[0:0] == 1'b1) ? trunc_ln674_34_reg_3602 : select_ln67_33_reg_3620);

assign select_ln67_35_fu_1730_p3 = ((icmp_ln1494_44_fu_1724_p2[0:0] == 1'b1) ? trunc_ln674_35_fu_1686_p1 : select_ln67_34_fu_1718_p3);

assign select_ln67_36_fu_1979_p3 = ((icmp_ln1494_45_reg_3737[0:0] == 1'b1) ? trunc_ln674_36_reg_3711 : select_ln67_35_reg_3732);

assign select_ln67_37_fu_1990_p3 = ((icmp_ln1494_46_fu_1984_p2[0:0] == 1'b1) ? trunc_ln674_37_fu_1943_p1 : select_ln67_36_fu_1979_p3);

assign select_ln67_38_fu_2004_p3 = ((icmp_ln1494_47_fu_1998_p2[0:0] == 1'b1) ? trunc_ln674_38_fu_1961_p1 : select_ln67_37_fu_1990_p3);

assign select_ln67_39_fu_2235_p3 = ((icmp_ln1494_48_fu_2230_p2[0:0] == 1'b1) ? trunc_ln674_39_fu_2196_p1 : select_ln67_38_reg_3829);

assign select_ln67_3_fu_1602_p3 = ((icmp_ln1494_10_fu_1596_p2[0:0] == 1'b1) ? trunc_ln674_3_fu_1558_p1 : select_ln67_2_fu_1590_p3);

assign select_ln67_40_fu_2248_p3 = ((icmp_ln1494_49_fu_2242_p2[0:0] == 1'b1) ? trunc_ln674_40_fu_2212_p1 : select_ln67_39_fu_2235_p3);

assign select_ln67_41_fu_2483_p3 = ((icmp_ln1494_50_fu_2478_p2[0:0] == 1'b1) ? trunc_ln674_41_fu_2444_p1 : select_ln67_40_reg_3925);

assign select_ln67_42_fu_2496_p3 = ((icmp_ln1494_51_fu_2490_p2[0:0] == 1'b1) ? trunc_ln674_42_fu_2460_p1 : select_ln67_41_fu_2483_p3);

assign select_ln67_43_fu_2737_p3 = ((icmp_ln1494_52_fu_2732_p2[0:0] == 1'b1) ? trunc_ln674_43_fu_2698_p1 : select_ln67_42_reg_4027);

assign select_ln67_44_fu_2750_p3 = ((icmp_ln1494_53_fu_2744_p2[0:0] == 1'b1) ? trunc_ln674_44_fu_2714_p1 : select_ln67_43_fu_2737_p3);

assign select_ln67_45_fu_2989_p3 = ((icmp_ln1494_54_fu_2984_p2[0:0] == 1'b1) ? trunc_ln674_45_fu_2946_p1 : select_ln67_44_reg_4130);

assign select_ln67_46_fu_3002_p3 = ((icmp_ln1494_55_fu_2996_p2[0:0] == 1'b1) ? trunc_ln674_46_fu_2962_p1 : select_ln67_45_fu_2989_p3);

assign select_ln67_47_fu_3182_p3 = ((icmp_ln1494_56_fu_3178_p2[0:0] == 1'b1) ? trunc_ln674_47_reg_4214 : select_ln67_46_reg_4222);

assign select_ln67_48_cast_fu_1530_p1 = select_ln67_48_fu_1522_p3;

assign select_ln67_48_fu_1522_p3 = ((icmp_ln1494_59_fu_1516_p2[0:0] == 1'b1) ? trunc_ln1495_3_fu_1470_p1 : 31'd0);

assign select_ln67_49_fu_1540_p3 = ((icmp_ln1494_60_fu_1534_p2[0:0] == 1'b1) ? trunc_ln674_49_fu_1498_p1 : select_ln67_48_cast_fu_1530_p1);

assign select_ln67_4_fu_1845_p3 = ((icmp_ln1494_11_reg_3679[0:0] == 1'b1) ? trunc_ln674_4_reg_3653 : select_ln67_3_reg_3674);

assign select_ln67_50_fu_1783_p3 = ((icmp_ln1494_61_fu_1778_p2[0:0] == 1'b1) ? trunc_ln674_50_fu_1744_p1 : select_ln67_49_reg_3642);

assign select_ln67_51_fu_1796_p3 = ((icmp_ln1494_62_fu_1790_p2[0:0] == 1'b1) ? trunc_ln674_51_fu_1760_p1 : select_ln67_50_fu_1783_p3);

assign select_ln67_52_fu_2051_p3 = ((icmp_ln1494_63_fu_2046_p2[0:0] == 1'b1) ? trunc_ln674_52_fu_2012_p1 : select_ln67_51_reg_3758);

assign select_ln67_53_fu_2064_p3 = ((icmp_ln1494_64_fu_2058_p2[0:0] == 1'b1) ? trunc_ln674_53_fu_2028_p1 : select_ln67_52_fu_2051_p3);

assign select_ln67_54_fu_2295_p3 = ((icmp_ln1494_65_fu_2290_p2[0:0] == 1'b1) ? trunc_ln674_54_fu_2256_p1 : select_ln67_53_reg_3851);

assign select_ln67_55_fu_2308_p3 = ((icmp_ln1494_66_fu_2302_p2[0:0] == 1'b1) ? trunc_ln674_55_fu_2272_p1 : select_ln67_54_fu_2295_p3);

assign select_ln67_56_fu_2543_p3 = ((icmp_ln1494_67_fu_2538_p2[0:0] == 1'b1) ? trunc_ln674_56_fu_2504_p1 : select_ln67_55_reg_3947);

assign select_ln67_57_fu_2556_p3 = ((icmp_ln1494_68_fu_2550_p2[0:0] == 1'b1) ? trunc_ln674_57_fu_2520_p1 : select_ln67_56_fu_2543_p3);

assign select_ln67_58_fu_2797_p3 = ((icmp_ln1494_69_fu_2792_p2[0:0] == 1'b1) ? trunc_ln674_58_fu_2758_p1 : select_ln67_57_reg_4049);

assign select_ln67_59_fu_2810_p3 = ((icmp_ln1494_70_fu_2804_p2[0:0] == 1'b1) ? trunc_ln674_59_fu_2774_p1 : select_ln67_58_fu_2797_p3);

assign select_ln67_5_fu_1856_p3 = ((icmp_ln1494_12_fu_1850_p2[0:0] == 1'b1) ? trunc_ln674_5_fu_1809_p1 : select_ln67_4_fu_1845_p3);

assign select_ln67_60_fu_3057_p3 = ((icmp_ln1494_71_fu_3052_p2[0:0] == 1'b1) ? trunc_ln674_60_fu_3010_p1 : select_ln67_59_reg_4162);

assign select_ln67_61_fu_3070_p3 = ((icmp_ln1494_72_fu_3064_p2[0:0] == 1'b1) ? trunc_ln674_61_fu_3026_p1 : select_ln67_60_fu_3057_p3);

assign select_ln67_62_fu_3216_p3 = ((icmp_ln1494_73_fu_3212_p2[0:0] == 1'b1) ? trunc_ln674_62_reg_4234 : select_ln67_61_reg_4250);

assign select_ln67_63_fu_3227_p3 = ((icmp_ln1494_74_fu_3222_p2[0:0] == 1'b1) ? trunc_ln674_63_reg_4242 : select_ln67_62_fu_3216_p3);

assign select_ln67_6_fu_1870_p3 = ((icmp_ln1494_13_fu_1864_p2[0:0] == 1'b1) ? trunc_ln674_6_fu_1827_p1 : select_ln67_5_fu_1856_p3);

assign select_ln67_7_fu_2111_p3 = ((icmp_ln1494_14_fu_2106_p2[0:0] == 1'b1) ? trunc_ln674_7_fu_2072_p1 : select_ln67_6_reg_3780);

assign select_ln67_8_fu_2124_p3 = ((icmp_ln1494_15_fu_2118_p2[0:0] == 1'b1) ? trunc_ln674_8_fu_2088_p1 : select_ln67_7_fu_2111_p3);

assign select_ln67_9_fu_2355_p3 = ((icmp_ln1494_16_fu_2350_p2[0:0] == 1'b1) ? trunc_ln674_9_fu_2316_p1 : select_ln67_8_reg_3873);

assign select_ln67_cast_fu_1280_p1 = select_ln67_fu_1272_p3;

assign select_ln67_fu_1272_p3 = ((icmp_ln1494_7_fu_1266_p2[0:0] == 1'b1) ? trunc_ln1495_fu_1216_p1 : 31'd0);

assign tmp_4_fu_1306_p4 = {{patch_1_0_q0[31:30]}};

assign tmp_5_fu_1388_p4 = {{patch_2_0_q0[31:30]}};

assign tmp_6_fu_1474_p4 = {{patch_3_0_q0[31:30]}};

assign tmp_fu_1220_p4 = {{patch_0_0_q0[31:30]}};

assign trunc_ln1495_1_fu_1302_p1 = patch_1_0_q0[30:0];

assign trunc_ln1495_2_fu_1384_p1 = patch_2_0_q0[30:0];

assign trunc_ln1495_3_fu_1470_p1 = patch_3_0_q0[30:0];

assign trunc_ln1495_fu_1216_p1 = patch_0_0_q0[30:0];

assign trunc_ln674_10_fu_2332_p1 = patch_0_10_q0[31:0];

assign trunc_ln674_11_fu_2564_p1 = patch_0_11_q0[31:0];

assign trunc_ln674_12_fu_2580_p1 = patch_0_12_q0[31:0];

assign trunc_ln674_13_fu_2818_p1 = patch_0_13_q0[31:0];

assign trunc_ln674_14_fu_2834_p1 = patch_0_14_q0[31:0];

assign trunc_ln674_15_fu_2852_p1 = patch_0_15_q0[31:0];

assign trunc_ln674_16_fu_1298_p1 = patch_1_0_q0[31:0];

assign trunc_ln674_17_fu_1330_p1 = patch_1_1_q0[31:0];

assign trunc_ln674_18_fu_1616_p1 = patch_1_2_q0[31:0];

assign trunc_ln674_19_fu_1632_p1 = patch_1_3_q0[31:0];

assign trunc_ln674_1_fu_1244_p1 = patch_0_1_q0[31:0];

assign trunc_ln674_20_fu_1878_p1 = patch_1_4_q0[31:0];

assign trunc_ln674_21_fu_1894_p1 = patch_1_5_q0[31:0];

assign trunc_ln674_22_fu_2132_p1 = patch_1_6_q0[31:0];

assign trunc_ln674_23_fu_2148_p1 = patch_1_7_q0[31:0];

assign trunc_ln674_24_fu_2166_p1 = patch_1_8_q0[31:0];

assign trunc_ln674_25_fu_2386_p1 = patch_1_9_q0[31:0];

assign trunc_ln674_26_fu_2404_p1 = patch_1_10_q0[31:0];

assign trunc_ln674_27_fu_2629_p1 = patch_1_11_q0[31:0];

assign trunc_ln674_28_fu_2647_p1 = patch_1_12_q0[31:0];

assign trunc_ln674_29_fu_2882_p1 = patch_1_13_q0[31:0];

assign trunc_ln674_2_fu_1262_p1 = patch_0_2_q0[31:0];

assign trunc_ln674_30_fu_2898_p1 = patch_1_14_q0[31:0];

assign trunc_ln674_31_fu_2916_p1 = patch_1_15_q0[31:0];

assign trunc_ln674_32_fu_1380_p1 = patch_2_0_q0[31:0];

assign trunc_ln674_33_fu_1412_p1 = patch_2_1_q0[31:0];

assign trunc_ln674_34_fu_1430_p1 = patch_2_2_q0[31:0];

assign trunc_ln674_35_fu_1686_p1 = patch_2_3_q0[31:0];

assign trunc_ln674_36_fu_1704_p1 = patch_2_4_q0[31:0];

assign trunc_ln674_37_fu_1943_p1 = patch_2_5_q0[31:0];

assign trunc_ln674_38_fu_1961_p1 = patch_2_6_q0[31:0];

assign trunc_ln674_39_fu_2196_p1 = patch_2_7_q0[31:0];

assign trunc_ln674_3_fu_1558_p1 = patch_0_3_q0[31:0];

assign trunc_ln674_40_fu_2212_p1 = patch_2_8_q0[31:0];

assign trunc_ln674_41_fu_2444_p1 = patch_2_9_q0[31:0];

assign trunc_ln674_42_fu_2460_p1 = patch_2_10_q0[31:0];

assign trunc_ln674_43_fu_2698_p1 = patch_2_11_q0[31:0];

assign trunc_ln674_44_fu_2714_p1 = patch_2_12_q0[31:0];

assign trunc_ln674_45_fu_2946_p1 = patch_2_13_q0[31:0];

assign trunc_ln674_46_fu_2962_p1 = patch_2_14_q0[31:0];

assign trunc_ln674_47_fu_2980_p1 = patch_2_15_q0[31:0];

assign trunc_ln674_48_fu_1466_p1 = patch_3_0_q0[31:0];

assign trunc_ln674_49_fu_1498_p1 = patch_3_1_q0[31:0];

assign trunc_ln674_4_fu_1576_p1 = patch_0_4_q0[31:0];

assign trunc_ln674_50_fu_1744_p1 = patch_3_2_q0[31:0];

assign trunc_ln674_51_fu_1760_p1 = patch_3_3_q0[31:0];

assign trunc_ln674_52_fu_2012_p1 = patch_3_4_q0[31:0];

assign trunc_ln674_53_fu_2028_p1 = patch_3_5_q0[31:0];

assign trunc_ln674_54_fu_2256_p1 = patch_3_6_q0[31:0];

assign trunc_ln674_55_fu_2272_p1 = patch_3_7_q0[31:0];

assign trunc_ln674_56_fu_2504_p1 = patch_3_8_q0[31:0];

assign trunc_ln674_57_fu_2520_p1 = patch_3_9_q0[31:0];

assign trunc_ln674_58_fu_2758_p1 = patch_3_10_q0[31:0];

assign trunc_ln674_59_fu_2774_p1 = patch_3_11_q0[31:0];

assign trunc_ln674_5_fu_1809_p1 = patch_0_5_q0[31:0];

assign trunc_ln674_60_fu_3010_p1 = patch_3_12_q0[31:0];

assign trunc_ln674_61_fu_3026_p1 = patch_3_13_q0[31:0];

assign trunc_ln674_62_fu_3044_p1 = patch_3_14_q0[31:0];

assign trunc_ln674_63_fu_3048_p1 = patch_3_15_q0[31:0];

assign trunc_ln674_6_fu_1827_p1 = patch_0_6_q0[31:0];

assign trunc_ln674_7_fu_2072_p1 = patch_0_7_q0[31:0];

assign trunc_ln674_8_fu_2088_p1 = patch_0_8_q0[31:0];

assign trunc_ln674_9_fu_2316_p1 = patch_0_9_q0[31:0];

assign trunc_ln674_fu_1212_p1 = patch_0_0_q0[31:0];

assign zTop_max_V_fu_3104_p3 = ((icmp_ln1495_fu_3098_p2[0:0] == 1'b1) ? zTopMax : 32'd52428904);

assign zTop_min_V_fu_3084_p3 = ((icmp_ln1494_fu_3078_p2[0:0] == 1'b1) ? zTopMin : 32'd4242538392);

assign zext_ln609_fu_1198_p1 = patch_offset;

always @ (posedge ap_clk) begin
    zext_ln609_reg_3436[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //system_top_getShadows
