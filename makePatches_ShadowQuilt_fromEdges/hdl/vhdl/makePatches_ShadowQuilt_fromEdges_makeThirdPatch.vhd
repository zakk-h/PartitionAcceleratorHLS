-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (31 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDarray_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarray_ce0 : OUT STD_LOGIC;
    GDarray_q0 : IN STD_LOGIC_VECTOR (191 downto 0);
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    lastPatchIndex : IN STD_LOGIC_VECTOR (4 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (63 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (63 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (63 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (63 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    temp_ce0 : OUT STD_LOGIC;
    temp_we0 : OUT STD_LOGIC;
    temp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    temp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    temp_ce1 : OUT STD_LOGIC;
    temp_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_idle : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_idle : IN STD_LOGIC;
    grp_fu_631_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_631_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_631_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_631_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_631_p_ce : OUT STD_LOGIC;
    grp_fu_636_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_636_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_636_p_ce : OUT STD_LOGIC );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (114 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (114 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (114 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (114 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (114 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (114 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (114 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (114 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (114 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (114 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_FFFFFFFFFFF0BDC0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111100001011110111000000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv64_41B1E1A300000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000110110001111000011010001100000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv64_FFFFFFFFFFFFFF9C : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111110011100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_24 : STD_LOGIC_VECTOR (11 downto 0) := "000000100100";
    constant ap_const_lv12_2A : STD_LOGIC_VECTOR (11 downto 0) := "000000101010";
    constant ap_const_lv12_1E : STD_LOGIC_VECTOR (11 downto 0) := "000000011110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv64_E4E1C0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000111001001110000111000000";
    constant ap_const_lv64_E4E1C1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000111001001110000111000001";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_595 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal or_ln749_1_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln749_1_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln749_2_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal secondLastPatchIndex_fu_605_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_reg_1470 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_ln681_fu_630_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln681_reg_1478 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal original_topR_jL_reg_1507 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln682_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln682_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal patches_parameters_addr_14_reg_1523 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_15_reg_1528 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_16_reg_1533 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_17_reg_1538 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_13_reg_1543 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_18_reg_1548 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_19_reg_1553 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln521_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal notlhs9_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs9_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs10_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs10_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_75_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal original_topL_jL_reg_1578 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln687_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_3_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal notlhs7_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs7_reg_1594 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs8_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs8_reg_1599 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_80_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal complementary_topR_jR_reg_1609 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal and_ln692_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln692_reg_1616 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_4_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal notlhs5_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_reg_1625 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs6_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs6_reg_1630 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_85_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal complementary_topL_jR_reg_1640 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal and_ln697_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_5_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal notlhs_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_1656 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_1661 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_90_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal or_ln749_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln749_reg_1685 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln749_2_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln749_2_reg_1690 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal complementary_topR_jL_reg_1695 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal complementary_topL_jL_reg_1700 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftTop_fu_1026_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal horizontalShiftBottom_fu_1030_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_1_fu_1060_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_1730 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_reg_1743 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_1_fu_1085_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal newZtop_1_reg_1749 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_fu_1191_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_1764 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln769_fu_1198_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln769_reg_1770 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_463_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign1_reg_1775 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal add_ln775_fu_1209_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln775_reg_1780 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal sub_ln779_fu_1235_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln779_reg_1788 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal original_topL_jL_2_fu_1283_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topL_jL_2_reg_1814 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jL_2_fu_1290_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jL_2_reg_1821 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topR_jL_2_fu_1297_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topR_jL_2_reg_1828 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topL_jL_2_fu_1304_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topL_jL_2_reg_1834 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topR_jR_2_fu_1311_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topR_jR_2_reg_1840 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal complementary_topL_jR_2_fu_1318_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topL_jR_2_reg_1846 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jR_2_fu_1325_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jR_2_reg_1852 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topL_jR_2_fu_1333_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topL_jR_2_reg_1859 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftTop_2_fu_1340_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftTop_2_reg_1865 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftBottom_2_fu_1345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftBottom_2_reg_1870 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln815_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln815_reg_1878 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln819_fu_1439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln819_reg_1882 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_463_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_n_patches_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_GDarray_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_GDarray_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_patches_superpoints_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_patches_parameters_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_temp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_temp_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_temp_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_463_temp_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_temp_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_temp_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_488_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_488_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_488_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_488_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_superpoints_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_getShadows_fu_488_wp_superpoints_2_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_superpoints_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_getShadows_fu_488_wp_superpoints_2_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_parameters_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_488_wp_parameters_2_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_parameters_2_we0 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_parameters_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getShadows_fu_488_wp_parameters_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_488_wp_parameters_2_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_parameters_2_we1 : STD_LOGIC;
    signal grp_getShadows_fu_488_wp_parameters_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getShadows_fu_488_wp_superpoints : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getShadows_fu_488_wp_parameters : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_delete_patch_fu_506_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_506_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_506_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_506_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_506_n_patches : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_506_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_superpoints_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_delete_patch_fu_506_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_superpoints_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_506_patches_superpoints_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_delete_patch_fu_506_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_506_patches_parameters_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_parameters_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_506_patches_parameters_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_506_patches_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_506_patches_parameters_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_506_index : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_z_i : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_z_j : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_76_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_81_reg_284 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_86_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_91_reg_308 : STD_LOGIC_VECTOR (0 downto 0);
    signal ppl_assign_0_reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal complementary_topR_jR_1_reg_329 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topL_jR_1_reg_339 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topL_jL_1_reg_349 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftTop_1_reg_359 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jL_1_reg_368 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalShiftBottom_1_reg_378 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topR_jL_1_reg_387 : STD_LOGIC_VECTOR (63 downto 0);
    signal complementary_topL_jL_1_reg_397 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topR_jR_1_reg_407 : STD_LOGIC_VECTOR (63 downto 0);
    signal original_topL_jR_1_reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal makeHorizontallyShiftedPatch_reg_427 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_441 : STD_LOGIC_VECTOR (63 downto 0);
    signal newZtop_reg_451 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_463_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_getShadows_fu_488_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_delete_patch_fu_506_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (114 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state23 : STD_LOGIC;
    signal ap_NS_fsm_state39 : STD_LOGIC;
    signal ap_NS_fsm_state55 : STD_LOGIC;
    signal ap_NS_fsm_state69 : STD_LOGIC;
    signal ap_NS_fsm_state90 : STD_LOGIC;
    signal ap_NS_fsm_state102 : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln681_1_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln690_1_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln695_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln704_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln685_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln705_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln706_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln779_1_fu_1247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln780_fu_1258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln781_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln782_fu_1278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_fu_124 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln798_fu_1392_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln795_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalOverlapTop_fu_128 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapTop_1_fu_1370_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_553_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal grp_fu_568_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_619_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_612_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln681_fu_626_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln681_fu_636_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_660_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_653_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln690_fu_667_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln690_fu_671_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln690_fu_677_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln695_fu_688_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_699_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln704_fu_710_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln685_fu_721_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln705_fu_731_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln706_fu_741_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_755_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_768_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_778_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_73_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_74_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_7_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_814_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_3_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_827_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_77_fu_837_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_78_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_79_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln692_fu_869_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln692_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_8_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_7_fu_890_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_4_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_903_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_82_fu_913_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_83_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_84_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_9_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_8_fu_949_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_5_fu_953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_962_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_87_fu_972_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_88_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_89_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln732_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_1042_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp84_not_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1091_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal icmp_ln749_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1126_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal icmp_ln749_1_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln749_3_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln749_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln749_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp93_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalShiftBottom_0_horizontalShiftTop_0_fu_1171_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_1179_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_1185_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln775_fu_1205_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_fu_1224_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_1217_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln779_fu_1231_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln779_fu_1241_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln780_fu_1252_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln781_fu_1263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln782_fu_1273_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln797_fu_1356_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln797_1_fu_1360_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln797_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln798_fu_1378_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln798_1_fu_1382_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln798_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln815_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln815_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln817_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln815_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_548_ce : STD_LOGIC;
    signal grp_fu_548_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_553_ce : STD_LOGIC;
    signal ap_predicate_op491_call_state115 : BOOLEAN;
    signal ap_block_state115_on_subcall_done : BOOLEAN;
    signal ap_block_state83_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (31 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDarray_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarray_ce0 : OUT STD_LOGIC;
        GDarray_q0 : IN STD_LOGIC_VECTOR (191 downto 0);
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (63 downto 0);
        z_top : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_we0 : OUT STD_LOGIC;
        temp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        temp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        temp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        temp_ce1 : OUT STD_LOGIC;
        temp_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        wp_superpoints_2_ce0 : OUT STD_LOGIC;
        wp_superpoints_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        wp_superpoints_2_ce1 : OUT STD_LOGIC;
        wp_superpoints_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_2_ce0 : OUT STD_LOGIC;
        wp_parameters_2_we0 : OUT STD_LOGIC;
        wp_parameters_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_2_ce1 : OUT STD_LOGIC;
        wp_parameters_2_we1 : OUT STD_LOGIC;
        wp_parameters_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints : IN STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters : IN STD_LOGIC_VECTOR (4 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (63 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        index : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (63 downto 0);
        z_j : IN STD_LOGIC_VECTOR (63 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_makePatch_alignedToLine_fu_463 : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_463_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_463_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_463_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_463_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_463_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld,
        GDarray_address0 => grp_makePatch_alignedToLine_fu_463_GDarray_address0,
        GDarray_ce0 => grp_makePatch_alignedToLine_fu_463_GDarray_ce0,
        GDarray_q0 => GDarray_q0,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_463_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_463_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_463_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_463_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_463_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_463_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_463_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_463_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_463_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_463_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        apexZ0 => shifted_Align_5_reg_1764,
        z_top => newZtop_1_reg_1749,
        p_read => ppl_assign_0_reg_319,
        leftRight => lnot_reg_1743,
        temp_address0 => grp_makePatch_alignedToLine_fu_463_temp_address0,
        temp_ce0 => grp_makePatch_alignedToLine_fu_463_temp_ce0,
        temp_we0 => grp_makePatch_alignedToLine_fu_463_temp_we0,
        temp_d0 => grp_makePatch_alignedToLine_fu_463_temp_d0,
        temp_q0 => temp_q0,
        temp_address1 => grp_makePatch_alignedToLine_fu_463_temp_address1,
        temp_ce1 => grp_makePatch_alignedToLine_fu_463_temp_ce1,
        temp_q1 => temp_q1,
        ap_return => grp_makePatch_alignedToLine_fu_463_ap_return);

    grp_getShadows_fu_488 : component makePatches_ShadowQuilt_fromEdges_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_488_ap_start,
        ap_done => grp_getShadows_fu_488_ap_done,
        ap_idle => grp_getShadows_fu_488_ap_idle,
        ap_ready => grp_getShadows_fu_488_ap_ready,
        wp_superpoints_2_address0 => grp_getShadows_fu_488_wp_superpoints_2_address0,
        wp_superpoints_2_ce0 => grp_getShadows_fu_488_wp_superpoints_2_ce0,
        wp_superpoints_2_q0 => patches_superpoints_q0,
        wp_superpoints_2_address1 => grp_getShadows_fu_488_wp_superpoints_2_address1,
        wp_superpoints_2_ce1 => grp_getShadows_fu_488_wp_superpoints_2_ce1,
        wp_superpoints_2_q1 => patches_superpoints_q1,
        wp_parameters_2_address0 => grp_getShadows_fu_488_wp_parameters_2_address0,
        wp_parameters_2_ce0 => grp_getShadows_fu_488_wp_parameters_2_ce0,
        wp_parameters_2_we0 => grp_getShadows_fu_488_wp_parameters_2_we0,
        wp_parameters_2_d0 => grp_getShadows_fu_488_wp_parameters_2_d0,
        wp_parameters_2_q0 => patches_parameters_q0,
        wp_parameters_2_address1 => grp_getShadows_fu_488_wp_parameters_2_address1,
        wp_parameters_2_ce1 => grp_getShadows_fu_488_wp_parameters_2_ce1,
        wp_parameters_2_we1 => grp_getShadows_fu_488_wp_parameters_2_we1,
        wp_parameters_2_d1 => grp_getShadows_fu_488_wp_parameters_2_d1,
        wp_superpoints => grp_getShadows_fu_488_wp_superpoints,
        wp_parameters => grp_getShadows_fu_488_wp_parameters,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_506 : component makePatches_ShadowQuilt_fromEdges_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_506_ap_start,
        ap_done => grp_delete_patch_fu_506_ap_done,
        ap_idle => grp_delete_patch_fu_506_ap_idle,
        ap_ready => grp_delete_patch_fu_506_ap_ready,
        n_patches => grp_delete_patch_fu_506_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_506_n_patches_ap_vld,
        n_patches_read => reg_600,
        patches_superpoints_address0 => grp_delete_patch_fu_506_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_delete_patch_fu_506_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_delete_patch_fu_506_patches_superpoints_we0,
        patches_superpoints_d0 => grp_delete_patch_fu_506_patches_superpoints_d0,
        patches_superpoints_address1 => grp_delete_patch_fu_506_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_delete_patch_fu_506_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_delete_patch_fu_506_patches_parameters_address0,
        patches_parameters_ce0 => grp_delete_patch_fu_506_patches_parameters_ce0,
        patches_parameters_we0 => grp_delete_patch_fu_506_patches_parameters_we0,
        patches_parameters_d0 => grp_delete_patch_fu_506_patches_parameters_d0,
        patches_parameters_address1 => grp_delete_patch_fu_506_patches_parameters_address1,
        patches_parameters_ce1 => grp_delete_patch_fu_506_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        index => grp_delete_patch_fu_506_index);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_delete_patch_fu_506_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_506_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    grp_delete_patch_fu_506_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_506_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_506_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_488_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_488_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_getShadows_fu_488_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_488_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_488_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_463_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_463_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                    grp_makePatch_alignedToLine_fu_463_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_463_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_463_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state102) and (ap_const_logic_1 = ap_CS_fsm_state81)) or ((shiftOriginal_1_reg_1730 = ap_const_lv1_1) and (ap_const_logic_1 = ap_NS_fsm_state90) and (ap_const_logic_1 = ap_CS_fsm_state89)) or ((ap_const_logic_1 = ap_NS_fsm_state69) and ((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) or ((ap_const_logic_1 = ap_NS_fsm_state55) and (ap_const_logic_1 = ap_CS_fsm_state54)) or ((ap_const_logic_1 = ap_NS_fsm_state39) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_const_logic_1 = ap_NS_fsm_state23) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = and_ln682_fu_647_p2) and (ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state69) and ((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    complementary_topL_jL_1_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                complementary_topL_jL_1_reg_397 <= complementary_topL_jL_2_reg_1834;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topL_jL_1_reg_397 <= complementary_topL_jL_reg_1700;
            end if; 
        end if;
    end process;

    complementary_topL_jR_1_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                complementary_topL_jR_1_reg_339 <= complementary_topL_jR_2_reg_1846;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topL_jR_1_reg_339 <= complementary_topL_jR_reg_1640;
            end if; 
        end if;
    end process;

    complementary_topR_jL_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                complementary_topR_jL_1_reg_387 <= complementary_topR_jL_2_reg_1828;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topR_jL_1_reg_387 <= complementary_topR_jL_reg_1695;
            end if; 
        end if;
    end process;

    complementary_topR_jR_1_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                complementary_topR_jR_1_reg_329 <= complementary_topR_jR_2_reg_1840;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topR_jR_1_reg_329 <= complementary_topR_jR_reg_1609;
            end if; 
        end if;
    end process;

    empty_76_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln682_reg_1514) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                empty_76_reg_272 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln682_reg_1514) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                empty_76_reg_272 <= empty_75_fu_804_p2;
            end if; 
        end if;
    end process;

    empty_81_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                empty_81_reg_284 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln687_reg_1585) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                empty_81_reg_284 <= empty_80_fu_863_p2;
            end if; 
        end if;
    end process;

    empty_86_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln692_fu_880_p2) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                empty_86_reg_296 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln692_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                empty_86_reg_296 <= empty_85_fu_939_p2;
            end if; 
        end if;
    end process;

    empty_91_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                empty_91_reg_308 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln697_reg_1647) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                empty_91_reg_308 <= empty_90_fu_998_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                horizontalOverlapBottom_fu_124 <= ap_const_lv64_FFFFFFFFFFF0BDC0;
            elsif (((icmp_ln795_fu_1350_p2 = ap_const_lv1_1) and (shiftOriginal_1_reg_1730 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state101))) then 
                horizontalOverlapBottom_fu_124 <= select_ln798_fu_1392_p3;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                horizontalOverlapTop_fu_128 <= ap_const_lv64_FFFFFFFFFFF0BDC0;
            elsif (((icmp_ln795_fu_1350_p2 = ap_const_lv1_1) and (shiftOriginal_1_reg_1730 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state101))) then 
                horizontalOverlapTop_fu_128 <= horizontalOverlapTop_1_fu_1370_p3;
            end if; 
        end if;
    end process;

    horizontalShiftBottom_1_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                horizontalShiftBottom_1_reg_378 <= horizontalShiftBottom_2_reg_1870;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                horizontalShiftBottom_1_reg_378 <= horizontalShiftBottom_fu_1030_p2;
            end if; 
        end if;
    end process;

    horizontalShiftTop_1_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                horizontalShiftTop_1_reg_359 <= horizontalShiftTop_2_reg_1865;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                horizontalShiftTop_1_reg_359 <= horizontalShiftTop_fu_1026_p2;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                makeHorizontallyShiftedPatch_reg_427 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                makeHorizontallyShiftedPatch_reg_427 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                newZtop_reg_451 <= newZtop_1_reg_1749;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                newZtop_reg_451 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    original_topL_jL_1_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                original_topL_jL_1_reg_349 <= original_topL_jL_2_reg_1814;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topL_jL_1_reg_349 <= original_topL_jL_reg_1578;
            end if; 
        end if;
    end process;

    original_topL_jR_1_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                original_topL_jR_1_reg_417 <= original_topL_jR_2_reg_1859;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topL_jR_1_reg_417 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_1_reg_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                original_topR_jL_1_reg_368 <= original_topR_jL_2_reg_1821;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topR_jL_1_reg_368 <= original_topR_jL_reg_1507;
            end if; 
        end if;
    end process;

    original_topR_jR_1_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                original_topR_jR_1_reg_407 <= original_topR_jR_2_reg_1852;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topR_jR_1_reg_407 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                ppl_assign_0_reg_319 <= ppl_assign1_reg_1775;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                ppl_assign_0_reg_319 <= ppl;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                shifted_Align_2_reg_441 <= shifted_Align_5_reg_1764;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                shifted_Align_2_reg_441 <= shifted_Align_1_fu_1060_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                add_ln769_reg_1770 <= add_ln769_fu_1198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                add_ln775_reg_1780 <= add_ln775_fu_1209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state114)) then
                add_ln819_reg_1882 <= add_ln819_fu_1439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln682_reg_1514 <= and_ln682_fu_647_p2;
                original_topR_jL_reg_1507 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                and_ln687_reg_1585 <= grp_fu_579_p2;
                original_topL_jL_reg_1578 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                and_ln692_reg_1616 <= and_ln692_fu_880_p2;
                complementary_topR_jR_reg_1609 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                and_ln697_reg_1647 <= grp_fu_579_p2;
                complementary_topL_jR_reg_1640 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state113)) then
                and_ln815_reg_1878 <= and_ln815_fu_1433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                complementary_topL_jL_2_reg_1834 <= complementary_topL_jL_2_fu_1304_p3;
                complementary_topR_jL_2_reg_1828 <= complementary_topR_jL_2_fu_1297_p3;
                original_topL_jL_2_reg_1814 <= original_topL_jL_2_fu_1283_p3;
                original_topR_jL_2_reg_1821 <= original_topR_jL_2_fu_1290_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                complementary_topL_jL_reg_1700 <= patches_parameters_q0;
                complementary_topR_jL_reg_1695 <= patches_parameters_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                complementary_topL_jR_2_reg_1846 <= complementary_topL_jR_2_fu_1318_p3;
                complementary_topR_jR_2_reg_1840 <= complementary_topR_jR_2_fu_1311_p3;
                horizontalShiftBottom_2_reg_1870 <= horizontalShiftBottom_2_fu_1345_p2;
                horizontalShiftTop_2_reg_1865 <= horizontalShiftTop_2_fu_1340_p2;
                original_topL_jR_2_reg_1859 <= original_topL_jR_2_fu_1333_p3;
                original_topR_jR_2_reg_1852 <= original_topR_jR_2_fu_1325_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                lnot_reg_1743 <= lnot_fu_1079_p2;
                newZtop_1_reg_1749 <= newZtop_1_fu_1085_p3;
                shiftOriginal_1_reg_1730 <= shiftOriginal_1_fu_1067_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                notlhs5_reg_1625 <= notlhs5_fu_917_p2;
                notrhs6_reg_1630 <= notrhs6_fu_923_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                notlhs7_reg_1594 <= notlhs7_fu_841_p2;
                notrhs8_reg_1599 <= notrhs8_fu_847_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                notlhs9_reg_1563 <= notlhs9_fu_782_p2;
                notrhs10_reg_1568 <= notrhs10_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                notlhs_reg_1656 <= notlhs_fu_976_p2;
                notrhs_reg_1661 <= notrhs_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                or_ln749_2_reg_1690 <= or_ln749_2_fu_1020_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                or_ln749_reg_1685 <= or_ln749_fu_1004_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    patches_parameters_addr_13_reg_1543(11 downto 3) <= zext_ln685_fu_726_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_14_reg_1523(11 downto 3) <= zext_ln690_1_fu_683_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_15_reg_1528(11 downto 3) <= zext_ln695_fu_694_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_16_reg_1533(11 downto 3) <= zext_ln703_fu_705_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_17_reg_1538(11 downto 3) <= zext_ln704_fu_716_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_18_reg_1548(11 downto 3) <= zext_ln705_fu_736_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_19_reg_1553(11 downto 3) <= zext_ln706_fu_746_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                ppl_assign1_reg_1775 <= grp_makePatch_alignedToLine_fu_463_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_595 <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state113) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln749_2_fu_1120_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln749_1_fu_1159_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_1)))))) then
                reg_600 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                secondLastPatchIndex_reg_1470 <= secondLastPatchIndex_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_1 = and_ln749_2_fu_1120_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln749_1_fu_1159_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_1))))) then
                shifted_Align_5_reg_1764 <= shifted_Align_5_fu_1191_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    sub_ln681_reg_1478(11 downto 3) <= sub_ln681_fu_630_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                    sub_ln779_reg_1788(11 downto 3) <= sub_ln779_fu_1235_p2(11 downto 3);
            end if;
        end if;
    end process;
    sub_ln681_reg_1478(2 downto 0) <= "000";
    patches_parameters_addr_14_reg_1523(2 downto 0) <= "010";
    patches_parameters_addr_15_reg_1528(2 downto 0) <= "110";
    patches_parameters_addr_16_reg_1533(2 downto 0) <= "100";
    patches_parameters_addr_17_reg_1538(2 downto 0) <= "000";
    patches_parameters_addr_13_reg_1543(2 downto 0) <= "000";
    patches_parameters_addr_18_reg_1548(2 downto 0) <= "010";
    patches_parameters_addr_19_reg_1553(2 downto 0) <= "110";
    sub_ln779_reg_1788(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state81, or_ln749_1_fu_1107_p2, and_ln749_1_fu_1159_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4, and_ln749_2_fu_1120_p2, ap_CS_fsm_state113, and_ln682_reg_1514, ap_CS_fsm_state7, ap_CS_fsm_state22, grp_fu_579_p2, ap_CS_fsm_state38, and_ln692_fu_880_p2, ap_CS_fsm_state54, shiftOriginal_1_reg_1730, ap_CS_fsm_state85, ap_CS_fsm_state90, and_ln815_fu_1433_p2, grp_makePatch_alignedToLine_fu_463_ap_done, grp_getShadows_fu_488_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115, ap_block_state115_on_subcall_done, ap_block_state83_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_getShadows_fu_488_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_getShadows_fu_488_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_lv1_0 = and_ln682_reg_1514) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((ap_const_lv1_0 = and_ln692_fu_880_p2) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((grp_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_0 = and_ln749_2_fu_1120_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln749_1_fu_1159_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state115;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_0 = and_ln749_2_fu_1120_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln749_1_fu_1159_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln749_2_fu_1120_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln749_1_fu_1159_p2) and (or_ln749_1_fu_1107_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                if (((grp_makePatch_alignedToLine_fu_463_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state85;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                if (((grp_getShadows_fu_488_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((shiftOriginal_1_reg_1730 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state101;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                if (((ap_const_lv1_0 = and_ln815_fu_1433_p2) and (ap_const_logic_1 = ap_CS_fsm_state113))) then
                    ap_NS_fsm <= ap_ST_fsm_state115;
                else
                    ap_NS_fsm <= ap_ST_fsm_state114;
                end if;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state115) and (ap_const_boolean_0 = ap_block_state115_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state115;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarray_address0 <= grp_makePatch_alignedToLine_fu_463_GDarray_address0;
    GDarray_ce0 <= grp_makePatch_alignedToLine_fu_463_GDarray_ce0;
    GDn_points_address0 <= grp_makePatch_alignedToLine_fu_463_GDn_points_address0;
    GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_463_GDn_points_ce0;
    add_ln681_fu_636_p2 <= std_logic_vector(unsigned(sub_ln681_fu_630_p2) + unsigned(ap_const_lv12_24));
    add_ln685_fu_721_p2 <= std_logic_vector(unsigned(sub_ln681_reg_1478) + unsigned(ap_const_lv12_18));
    add_ln690_fu_677_p2 <= std_logic_vector(unsigned(sub_ln690_fu_671_p2) + unsigned(ap_const_lv12_2A));
    add_ln695_fu_688_p2 <= std_logic_vector(unsigned(sub_ln690_fu_671_p2) + unsigned(ap_const_lv12_1E));
    add_ln703_fu_699_p2 <= std_logic_vector(unsigned(sub_ln690_fu_671_p2) + unsigned(ap_const_lv12_24));
    add_ln704_fu_710_p2 <= std_logic_vector(unsigned(sub_ln690_fu_671_p2) + unsigned(ap_const_lv12_18));
    add_ln705_fu_731_p2 <= std_logic_vector(unsigned(sub_ln681_reg_1478) + unsigned(ap_const_lv12_2A));
    add_ln706_fu_741_p2 <= std_logic_vector(unsigned(sub_ln681_reg_1478) + unsigned(ap_const_lv12_1E));
    add_ln769_fu_1198_p2 <= std_logic_vector(unsigned(reg_600) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln775_fu_1209_p2 <= std_logic_vector(unsigned(trunc_ln775_fu_1205_p1) + unsigned(ap_const_lv5_1F));
    add_ln779_fu_1241_p2 <= std_logic_vector(unsigned(sub_ln779_fu_1235_p2) + unsigned(ap_const_lv12_24));
    add_ln780_fu_1252_p2 <= std_logic_vector(unsigned(sub_ln779_fu_1235_p2) + unsigned(ap_const_lv12_18));
    add_ln781_fu_1263_p2 <= std_logic_vector(unsigned(sub_ln779_reg_1788) + unsigned(ap_const_lv12_2A));
    add_ln782_fu_1273_p2 <= std_logic_vector(unsigned(sub_ln779_reg_1788) + unsigned(ap_const_lv12_1E));
    add_ln819_fu_1439_p2 <= std_logic_vector(unsigned(reg_600) + unsigned(ap_const_lv32_FFFFFFFD));
    and_ln682_fu_647_p2 <= (grp_fu_562_p2 and grp_fu_556_p2);
    and_ln692_fu_880_p2 <= (icmp_ln692_fu_874_p2 and grp_fu_562_p2);
    and_ln749_1_fu_1159_p2 <= (grp_fu_585_p2 and and_ln749_fu_1153_p2);
    and_ln749_2_fu_1120_p2 <= (grp_fu_590_p2 and grp_fu_585_p2);
    and_ln749_fu_1153_p2 <= (xor_ln749_fu_1147_p2 and grp_fu_590_p2);
    and_ln815_fu_1433_p2 <= (xor_ln815_fu_1421_p2 and icmp_ln817_fu_1427_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_NS_fsm_state102 <= ap_NS_fsm(101);
    ap_NS_fsm_state23 <= ap_NS_fsm(22);
    ap_NS_fsm_state39 <= ap_NS_fsm(38);
    ap_NS_fsm_state55 <= ap_NS_fsm(54);
    ap_NS_fsm_state69 <= ap_NS_fsm(68);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state90 <= ap_NS_fsm(89);

    ap_block_state115_on_subcall_done_assign_proc : process(grp_delete_patch_fu_506_ap_done, ap_predicate_op491_call_state115)
    begin
                ap_block_state115_on_subcall_done <= ((grp_delete_patch_fu_506_ap_done = ap_const_logic_0) and (ap_predicate_op491_call_state115 = ap_const_boolean_1));
    end process;


    ap_block_state83_on_subcall_done_assign_proc : process(grp_delete_patch_fu_506_ap_done, makeHorizontallyShiftedPatch_reg_427)
    begin
                ap_block_state83_on_subcall_done <= ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (grp_delete_patch_fu_506_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state115, ap_block_state115_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state115) and (ap_const_boolean_0 = ap_block_state115_on_subcall_done)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 <= makeHorizontallyShiftedPatch_reg_427;

    ap_predicate_op491_call_state115_assign_proc : process(and_ln815_reg_1878, makeHorizontallyShiftedPatch_reg_427)
    begin
                ap_predicate_op491_call_state115 <= ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state115, ap_block_state115_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) and (ap_const_boolean_0 = ap_block_state115_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln521_3_fu_822_p1 <= zext_ln368_3_fu_818_p1;
    bitcast_ln521_4_fu_898_p1 <= zext_ln368_4_fu_894_p1;
    bitcast_ln521_5_fu_957_p1 <= zext_ln368_5_fu_953_p1;
    bitcast_ln521_fu_763_p1 <= zext_ln368_fu_759_p1;
    cmp84_not_fu_1073_p2 <= (icmp_ln732_fu_1054_p2 xor ap_const_lv1_1);
    cmp93_fu_1165_p2 <= "1" when (signed(horizontalShiftTop_1_reg_359) < signed(horizontalShiftBottom_1_reg_378)) else "0";
    complementary_topL_jL_2_fu_1304_p3 <= 
        complementary_topL_jL_1_reg_397 when (shiftOriginal_1_reg_1730(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_2_fu_1318_p3 <= 
        complementary_topL_jR_1_reg_339 when (shiftOriginal_1_reg_1730(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_2_fu_1297_p3 <= 
        complementary_topR_jL_1_reg_387 when (shiftOriginal_1_reg_1730(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_2_fu_1311_p3 <= 
        complementary_topR_jR_1_reg_329 when (shiftOriginal_1_reg_1730(0) = '1') else 
        patches_parameters_q0;
    data_V_7_fu_810_p1 <= grp_fu_636_p_dout0;
    data_V_8_fu_886_p1 <= grp_fu_636_p_dout0;
    data_V_9_fu_945_p1 <= grp_fu_636_p_dout0;
    data_V_fu_751_p1 <= grp_fu_636_p_dout0;
    empty_73_fu_794_p2 <= (notrhs10_reg_1568 or notlhs9_reg_1563);
    empty_74_fu_798_p2 <= (grp_fu_631_p_dout0 and empty_73_fu_794_p2);
    empty_75_fu_804_p2 <= (empty_74_fu_798_p2 xor ap_const_lv1_1);
    empty_77_fu_837_p1 <= data_V_7_fu_810_p1(52 - 1 downto 0);
    empty_78_fu_853_p2 <= (notrhs8_reg_1599 or notlhs7_reg_1594);
    empty_79_fu_857_p2 <= (grp_fu_631_p_dout0 and empty_78_fu_853_p2);
    empty_80_fu_863_p2 <= (empty_79_fu_857_p2 xor ap_const_lv1_1);
    empty_82_fu_913_p1 <= data_V_8_fu_886_p1(52 - 1 downto 0);
    empty_83_fu_929_p2 <= (notrhs6_reg_1630 or notlhs5_reg_1625);
    empty_84_fu_933_p2 <= (grp_fu_631_p_dout0 and empty_83_fu_929_p2);
    empty_85_fu_939_p2 <= (empty_84_fu_933_p2 xor ap_const_lv1_1);
    empty_87_fu_972_p1 <= data_V_9_fu_945_p1(52 - 1 downto 0);
    empty_88_fu_988_p2 <= (notrhs_reg_1661 or notlhs_reg_1656);
    empty_89_fu_992_p2 <= (grp_fu_631_p_dout0 and empty_88_fu_988_p2);
    empty_90_fu_998_p2 <= (empty_89_fu_992_p2 xor ap_const_lv1_1);
    empty_fu_778_p1 <= data_V_fu_751_p1(52 - 1 downto 0);
    grp_delete_patch_fu_506_ap_start <= grp_delete_patch_fu_506_ap_start_reg;

    grp_delete_patch_fu_506_index_assign_proc : process(add_ln769_reg_1770, and_ln815_reg_1878, add_ln819_reg_1882, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)) then
            if (((ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115))) then 
                grp_delete_patch_fu_506_index <= add_ln819_reg_1882;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                grp_delete_patch_fu_506_index <= add_ln769_reg_1770;
            else 
                grp_delete_patch_fu_506_index <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_delete_patch_fu_506_index <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_548_ce <= ap_const_logic_1;
    grp_fu_548_opcode <= ap_const_lv5_4;

    grp_fu_548_p0_assign_proc : process(bitcast_ln521_fu_763_p1, ap_CS_fsm_state20, bitcast_ln521_3_fu_822_p1, ap_CS_fsm_state36, bitcast_ln521_4_fu_898_p1, ap_CS_fsm_state52, bitcast_ln521_5_fu_957_p1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_fu_548_p0 <= bitcast_ln521_5_fu_957_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_548_p0 <= bitcast_ln521_4_fu_898_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_548_p0 <= bitcast_ln521_3_fu_822_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_548_p0 <= bitcast_ln521_fu_763_p1;
        else 
            grp_fu_548_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_548_p1 <= ap_const_lv64_41B1E1A300000000;
    grp_fu_548_p2 <= grp_fu_631_p_dout0;
    grp_fu_553_ce <= ap_const_logic_1;
    grp_fu_553_p0 <= reg_595;
    grp_fu_553_p1 <= grp_fu_636_p_dout0;
    grp_fu_556_p2 <= "1" when (signed(patches_parameters_q0) > signed(complementary_apexZ0)) else "0";
    grp_fu_562_p2 <= "1" when (signed(patches_parameters_q0) < signed(apexZ0)) else "0";
    grp_fu_568_p2 <= std_logic_vector(unsigned(patches_parameters_q0) - unsigned(apexZ0));
    grp_fu_573_p2 <= "1" when (signed(grp_fu_568_p2) < signed(ap_const_lv64_FFFFFFFFFFFFFF9C)) else "0";
    grp_fu_579_p2 <= (grp_fu_573_p2 and grp_fu_556_p2);
    grp_fu_585_p2 <= "1" when (signed(horizontalOverlapTop_fu_128) < signed(ap_const_lv64_1)) else "0";
    grp_fu_590_p2 <= "1" when (signed(horizontalOverlapBottom_fu_124) < signed(ap_const_lv64_1)) else "0";
    grp_fu_631_p_ce <= ap_const_logic_1;
    grp_fu_631_p_din0 <= grp_fu_548_p0;
    grp_fu_631_p_din1 <= ap_const_lv64_41B1E1A300000000;
    grp_fu_631_p_opcode <= ap_const_lv5_4;
    grp_fu_636_p_ce <= ap_const_logic_1;
    grp_fu_636_p_din0 <= reg_595;
    grp_getShadows_fu_488_ap_start <= grp_getShadows_fu_488_ap_start_reg;

    grp_getShadows_fu_488_wp_parameters_assign_proc : process(lastPatchIndex, secondLastPatchIndex_reg_1470, add_ln775_reg_1780, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            grp_getShadows_fu_488_wp_parameters <= add_ln775_reg_1780;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_488_wp_parameters <= secondLastPatchIndex_reg_1470;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_488_wp_parameters <= lastPatchIndex;
        else 
            grp_getShadows_fu_488_wp_parameters <= "XXXXX";
        end if; 
    end process;


    grp_getShadows_fu_488_wp_superpoints_assign_proc : process(lastPatchIndex, secondLastPatchIndex_reg_1470, add_ln775_reg_1780, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            grp_getShadows_fu_488_wp_superpoints <= add_ln775_reg_1780;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_488_wp_superpoints <= secondLastPatchIndex_reg_1470;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_488_wp_superpoints <= lastPatchIndex;
        else 
            grp_getShadows_fu_488_wp_superpoints <= "XXXXX";
        end if; 
    end process;

    grp_makePatch_alignedToLine_fu_463_ap_start <= grp_makePatch_alignedToLine_fu_463_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din4 <= ap_const_lv32_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din1 <= complementary_apexZ0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din2 <= z_top_min;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din4 <= ap_const_lv32_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_518_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_j <= ap_const_lv32_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_518_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i_assign_proc : process(apexZ0, original_topR_jL_reg_1507, and_ln682_reg_1514, ap_CS_fsm_state7, original_topL_jL_reg_1578, complementary_topR_jR_reg_1609, complementary_topL_jR_reg_1640, ap_CS_fsm_state69, shiftOriginal_1_reg_1730, ap_CS_fsm_state90, original_topR_jR_2_fu_1325_p3, shifted_Align_2_reg_441, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state55, ap_CS_fsm_state102)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= shifted_Align_2_reg_441;
        elsif (((shiftOriginal_1_reg_1730 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= original_topR_jR_2_fu_1325_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= complementary_topL_jR_reg_1640;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= complementary_topR_jR_reg_1609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= original_topL_jL_reg_1578;
        elsif (((ap_const_lv1_1 = and_ln682_reg_1514) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= original_topR_jL_reg_1507;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j_assign_proc : process(z_top_min, z_top_max, and_ln682_reg_1514, ap_CS_fsm_state7, ap_CS_fsm_state69, shiftOriginal_1_reg_1730, ap_CS_fsm_state90, newZtop_reg_451, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state55, ap_CS_fsm_state102)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j <= newZtop_reg_451;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state69) or ((shiftOriginal_1_reg_1730 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = and_ln682_reg_1514) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_518_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_532_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_j <= ap_const_lv32_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_k <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_z_i <= complementary_apexZ0;
    grp_straightLineProjectorFromLayerIJtoK_fu_532_z_j <= z_top_min;
    horizontalOverlapTop_1_fu_1370_p3 <= 
        sub_ln797_1_fu_1360_p2 when (icmp_ln797_fu_1364_p2(0) = '1') else 
        sub_ln797_fu_1356_p2;
    horizontalShiftBottom_0_horizontalShiftTop_0_fu_1171_p3 <= 
        horizontalShiftBottom_1_reg_378 when (cmp93_fu_1165_p2(0) = '1') else 
        horizontalShiftTop_1_reg_359;
    horizontalShiftBottom_2_fu_1345_p2 <= std_logic_vector(unsigned(original_topL_jL_2_reg_1814) - unsigned(complementary_topL_jR_2_fu_1318_p3));
    horizontalShiftBottom_fu_1030_p2 <= std_logic_vector(unsigned(original_topL_jL_reg_1578) - unsigned(complementary_topL_jR_reg_1640));
    horizontalShiftTop_2_fu_1340_p2 <= std_logic_vector(unsigned(original_topR_jL_2_reg_1821) - unsigned(complementary_topR_jR_2_fu_1311_p3));
    horizontalShiftTop_fu_1026_p2 <= std_logic_vector(unsigned(original_topR_jL_reg_1507) - unsigned(complementary_topR_jR_reg_1609));
    icmp_ln692_fu_874_p2 <= "1" when (signed(sub_ln692_fu_869_p2) > signed(ap_const_lv64_32)) else "0";
    icmp_ln732_fu_1054_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1590_p_dout0) > signed(ap_const_lv64_0)) else "0";
    icmp_ln749_1_fu_1136_p2 <= "1" when (signed(tmp_50_fu_1126_p4) < signed(ap_const_lv63_1)) else "0";
    icmp_ln749_fu_1101_p2 <= "1" when (signed(tmp_49_fu_1091_p4) < signed(ap_const_lv63_1)) else "0";
    icmp_ln795_fu_1350_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0) < signed(ap_const_lv64_E4E1C0)) else "0";
    icmp_ln797_fu_1364_p2 <= "1" when (signed(sub_ln797_fu_1356_p2) < signed(sub_ln797_1_fu_1360_p2)) else "0";
    icmp_ln798_fu_1386_p2 <= "1" when (signed(sub_ln798_fu_1378_p2) < signed(sub_ln798_1_fu_1382_p2)) else "0";
    icmp_ln815_fu_1410_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0) < signed(ap_const_lv64_E4E1C1)) else "0";
    icmp_ln817_fu_1427_p2 <= "1" when (signed(n_patches_i) > signed(ap_const_lv32_2)) else "0";
    lnot_fu_1079_p2 <= (tmp_48_fu_1034_p3 and cmp84_not_fu_1073_p2);

    n_patches_o_assign_proc : process(n_patches_i, ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_n_patches_o, grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld, grp_delete_patch_fu_506_n_patches, grp_delete_patch_fu_506_n_patches_ap_vld, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (grp_delete_patch_fu_506_n_patches_ap_vld = ap_const_logic_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (grp_delete_patch_fu_506_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            n_patches_o <= grp_delete_patch_fu_506_n_patches;
        elsif (((grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_463_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld, grp_delete_patch_fu_506_n_patches_ap_vld, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_506_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_463_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_1_fu_1085_p3 <= 
        z_top_max when (shiftOriginal_1_fu_1067_p2(0) = '1') else 
        z_top_min;
    notlhs5_fu_917_p2 <= "0" when (tmp_31_fu_903_p4 = ap_const_lv11_7FF) else "1";
    notlhs7_fu_841_p2 <= "0" when (tmp_28_fu_827_p4 = ap_const_lv11_7FF) else "1";
    notlhs9_fu_782_p2 <= "0" when (tmp_s_fu_768_p4 = ap_const_lv11_7FF) else "1";
    notlhs_fu_976_p2 <= "0" when (tmp_34_fu_962_p4 = ap_const_lv11_7FF) else "1";
    notrhs10_fu_788_p2 <= "1" when (empty_fu_778_p1 = ap_const_lv52_0) else "0";
    notrhs6_fu_923_p2 <= "1" when (empty_82_fu_913_p1 = ap_const_lv52_0) else "0";
    notrhs8_fu_847_p2 <= "1" when (empty_77_fu_837_p1 = ap_const_lv52_0) else "0";
    notrhs_fu_982_p2 <= "1" when (empty_87_fu_972_p1 = ap_const_lv52_0) else "0";
    or_ln749_1_fu_1107_p2 <= (or_ln749_reg_1685 or icmp_ln749_fu_1101_p2);
    or_ln749_2_fu_1020_p2 <= (empty_91_reg_308 or empty_81_reg_284);
    or_ln749_3_fu_1142_p2 <= (or_ln749_2_reg_1690 or icmp_ln749_1_fu_1136_p2);
    or_ln749_fu_1004_p2 <= (empty_86_reg_296 or empty_76_reg_272);
    or_ln815_fu_1416_p2 <= (lnot_reg_1743 or icmp_ln815_fu_1410_p2);
    original_topL_jL_2_fu_1283_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1730(0) = '1') else 
        original_topL_jL_1_reg_349;
    original_topL_jR_2_fu_1333_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1730(0) = '1') else 
        original_topL_jR_1_reg_417;
    original_topR_jL_2_fu_1290_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1730(0) = '1') else 
        original_topR_jL_1_reg_368;
    original_topR_jR_2_fu_1325_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1730(0) = '1') else 
        original_topR_jR_1_reg_407;
    p_Result_6_fu_814_p1 <= data_V_7_fu_810_p1(63 - 1 downto 0);
    p_Result_7_fu_890_p1 <= data_V_8_fu_886_p1(63 - 1 downto 0);
    p_Result_8_fu_949_p1 <= data_V_9_fu_945_p1(63 - 1 downto 0);
    p_Result_s_fu_755_p1 <= data_V_fu_751_p1(63 - 1 downto 0);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state5, patches_parameters_addr_14_reg_1523, patches_parameters_addr_15_reg_1528, patches_parameters_addr_17_reg_1538, patches_parameters_addr_13_reg_1543, patches_parameters_addr_18_reg_1548, ap_CS_fsm_state21, ap_CS_fsm_state37, ap_CS_fsm_state53, ap_CS_fsm_state79, ap_CS_fsm_state85, ap_CS_fsm_state88, ap_CS_fsm_state89, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_parameters_address0, grp_getShadows_fu_488_wp_parameters_2_address0, grp_delete_patch_fu_506_patches_parameters_address0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115, zext_ln681_1_fu_642_p1, zext_ln779_1_fu_1247_p1, zext_ln781_fu_1268_p1, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            patches_parameters_address0 <= zext_ln781_fu_1268_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            patches_parameters_address0 <= zext_ln779_1_fu_1247_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            patches_parameters_address0 <= patches_parameters_addr_18_reg_1548;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            patches_parameters_address0 <= patches_parameters_addr_17_reg_1538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            patches_parameters_address0 <= patches_parameters_addr_15_reg_1528;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_1523;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            patches_parameters_address0 <= patches_parameters_addr_13_reg_1543;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= zext_ln681_1_fu_642_p1(12 - 1 downto 0);
        elsif ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_506_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_488_wp_parameters_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_463_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(patches_parameters_addr_16_reg_1533, patches_parameters_addr_19_reg_1553, ap_CS_fsm_state79, ap_CS_fsm_state88, ap_CS_fsm_state89, and_ln815_reg_1878, grp_getShadows_fu_488_wp_parameters_2_address1, grp_delete_patch_fu_506_patches_parameters_address1, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115, zext_ln780_fu_1258_p1, zext_ln782_fu_1278_p1, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            patches_parameters_address1 <= zext_ln782_fu_1278_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            patches_parameters_address1 <= zext_ln780_fu_1258_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            patches_parameters_address1 <= patches_parameters_addr_19_reg_1553;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            patches_parameters_address1 <= patches_parameters_addr_16_reg_1533;
        elsif ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_506_patches_parameters_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_488_wp_parameters_2_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state21, ap_CS_fsm_state37, ap_CS_fsm_state53, ap_CS_fsm_state79, ap_CS_fsm_state85, ap_CS_fsm_state88, ap_CS_fsm_state89, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_parameters_ce0, grp_getShadows_fu_488_wp_parameters_2_ce0, grp_delete_patch_fu_506_patches_parameters_ce0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_506_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_488_wp_parameters_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_463_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(ap_CS_fsm_state79, ap_CS_fsm_state88, ap_CS_fsm_state89, and_ln815_reg_1878, grp_getShadows_fu_488_wp_parameters_2_ce1, grp_delete_patch_fu_506_patches_parameters_ce1, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_506_patches_parameters_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_488_wp_parameters_2_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_parameters_d0, grp_getShadows_fu_488_wp_parameters_2_d0, grp_delete_patch_fu_506_patches_parameters_d0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_506_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_488_wp_parameters_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_463_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_488_wp_parameters_2_d1;

    patches_parameters_we0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_parameters_we0, grp_getShadows_fu_488_wp_parameters_2_we0, grp_delete_patch_fu_506_patches_parameters_we0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_506_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_488_wp_parameters_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_463_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_getShadows_fu_488_wp_parameters_2_we1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_488_wp_parameters_2_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_superpoints_address0, grp_getShadows_fu_488_wp_superpoints_2_address0, grp_delete_patch_fu_506_patches_superpoints_address0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_506_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_488_wp_superpoints_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_463_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_address1_assign_proc : process(and_ln815_reg_1878, grp_getShadows_fu_488_wp_superpoints_2_address1, grp_delete_patch_fu_506_patches_superpoints_address1, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_address1 <= grp_delete_patch_fu_506_patches_superpoints_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address1 <= grp_getShadows_fu_488_wp_superpoints_2_address1;
        else 
            patches_superpoints_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_superpoints_ce0, grp_getShadows_fu_488_wp_superpoints_2_ce0, grp_delete_patch_fu_506_patches_superpoints_ce0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_506_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_488_wp_superpoints_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_463_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(and_ln815_reg_1878, grp_getShadows_fu_488_wp_superpoints_2_ce1, grp_delete_patch_fu_506_patches_superpoints_ce1, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state87, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_506_patches_superpoints_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce1 <= grp_getShadows_fu_488_wp_superpoints_2_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_superpoints_d0, grp_delete_patch_fu_506_patches_superpoints_d0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_506_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_463_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(ap_CS_fsm_state85, and_ln815_reg_1878, grp_makePatch_alignedToLine_fu_463_patches_superpoints_we0, grp_delete_patch_fu_506_patches_superpoints_we0, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state83, ap_CS_fsm_state115)
    begin
        if ((((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln815_reg_1878) and (ap_const_logic_1 = ap_CS_fsm_state115)) or ((makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_506_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_463_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    secondLastPatchIndex_fu_605_p2 <= std_logic_vector(unsigned(lastPatchIndex) + unsigned(ap_const_lv5_1F));
    select_ln798_fu_1392_p3 <= 
        sub_ln798_1_fu_1382_p2 when (icmp_ln798_fu_1386_p2(0) = '1') else 
        sub_ln798_fu_1378_p2;
    shiftOriginal_1_fu_1067_p2 <= (shiftOriginal_fu_1048_p2 or icmp_ln732_fu_1054_p2);
    shiftOriginal_fu_1048_p2 <= (tmp_48_fu_1034_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_1060_p3 <= 
        apexZ0 when (icmp_ln732_fu_1054_p2(0) = '1') else 
        shifted_Align_fu_1042_p3;
    shifted_Align_3_fu_1179_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_441) - unsigned(horizontalShiftBottom_0_horizontalShiftTop_0_fu_1171_p3));
    shifted_Align_4_fu_1185_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_441) + unsigned(horizontalShiftBottom_0_horizontalShiftTop_0_fu_1171_p3));
    shifted_Align_5_fu_1191_p3 <= 
        shifted_Align_3_fu_1179_p2 when (shiftOriginal_1_reg_1730(0) = '1') else 
        shifted_Align_4_fu_1185_p2;
    shifted_Align_fu_1042_p3 <= 
        complementary_apexZ0 when (tmp_48_fu_1034_p3(0) = '1') else 
        apexZ0;
    sub_ln681_fu_630_p2 <= std_logic_vector(unsigned(tmp_37_fu_612_p3) - unsigned(zext_ln681_fu_626_p1));
    sub_ln690_fu_671_p2 <= std_logic_vector(unsigned(tmp_fu_653_p3) - unsigned(zext_ln690_fu_667_p1));
    sub_ln692_fu_869_p2 <= std_logic_vector(unsigned(patches_parameters_q0) - unsigned(complementary_apexZ0));
    sub_ln779_fu_1235_p2 <= std_logic_vector(unsigned(tmp_39_fu_1217_p3) - unsigned(zext_ln779_fu_1231_p1));
    sub_ln797_1_fu_1360_p2 <= std_logic_vector(unsigned(complementary_topR_jR_2_reg_1840) - unsigned(original_topR_jR_2_reg_1852));
    sub_ln797_fu_1356_p2 <= std_logic_vector(unsigned(complementary_topR_jL_2_reg_1828) - unsigned(original_topR_jL_2_reg_1821));
    sub_ln798_1_fu_1382_p2 <= std_logic_vector(unsigned(complementary_topL_jR_2_reg_1846) - unsigned(original_topL_jR_2_reg_1859));
    sub_ln798_fu_1378_p2 <= std_logic_vector(unsigned(complementary_topL_jL_2_reg_1834) - unsigned(original_topL_jL_2_reg_1814));
    temp_address0 <= grp_makePatch_alignedToLine_fu_463_temp_address0;
    temp_address1 <= grp_makePatch_alignedToLine_fu_463_temp_address1;
    temp_ce0 <= grp_makePatch_alignedToLine_fu_463_temp_ce0;
    temp_ce1 <= grp_makePatch_alignedToLine_fu_463_temp_ce1;
    temp_d0 <= grp_makePatch_alignedToLine_fu_463_temp_d0;
    temp_we0 <= grp_makePatch_alignedToLine_fu_463_temp_we0;
    tmp_28_fu_827_p4 <= data_V_7_fu_810_p1(62 downto 52);
    tmp_31_fu_903_p4 <= data_V_8_fu_886_p1(62 downto 52);
    tmp_34_fu_962_p4 <= data_V_9_fu_945_p1(62 downto 52);
    tmp_35_fu_660_p3 <= (lastPatchIndex & ap_const_lv3_0);
    tmp_37_fu_612_p3 <= (secondLastPatchIndex_reg_1470 & ap_const_lv7_0);
    tmp_38_fu_619_p3 <= (secondLastPatchIndex_reg_1470 & ap_const_lv3_0);
    tmp_39_fu_1217_p3 <= (add_ln775_reg_1780 & ap_const_lv7_0);
    tmp_40_fu_1224_p3 <= (add_ln775_reg_1780 & ap_const_lv3_0);
    tmp_48_fu_1034_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1581_p_dout0(63 downto 63);
    tmp_49_fu_1091_p4 <= horizontalShiftTop_1_reg_359(63 downto 1);
    tmp_50_fu_1126_p4 <= horizontalShiftBottom_1_reg_378(63 downto 1);
    tmp_fu_653_p3 <= (lastPatchIndex & ap_const_lv7_0);
    tmp_s_fu_768_p4 <= data_V_fu_751_p1(62 downto 52);
    trunc_ln775_fu_1205_p1 <= n_patches_i(5 - 1 downto 0);
    xor_ln749_fu_1147_p2 <= (or_ln749_3_fu_1142_p2 xor ap_const_lv1_1);
    xor_ln815_fu_1421_p2 <= (or_ln815_fu_1416_p2 xor ap_const_lv1_1);
    zext_ln368_3_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_814_p1),64));
    zext_ln368_4_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_fu_890_p1),64));
    zext_ln368_5_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_949_p1),64));
    zext_ln368_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_755_p1),64));
    zext_ln681_1_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln681_fu_636_p2),64));
    zext_ln681_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_619_p3),12));
    zext_ln685_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln685_fu_721_p2),64));
    zext_ln690_1_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln690_fu_677_p2),64));
    zext_ln690_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_660_p3),12));
    zext_ln695_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln695_fu_688_p2),64));
    zext_ln703_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_fu_699_p2),64));
    zext_ln704_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln704_fu_710_p2),64));
    zext_ln705_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln705_fu_731_p2),64));
    zext_ln706_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln706_fu_741_p2),64));
    zext_ln779_1_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln779_fu_1241_p2),64));
    zext_ln779_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_1224_p3),12));
    zext_ln780_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln780_fu_1252_p2),64));
    zext_ln781_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln781_fu_1263_p2),64));
    zext_ln782_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln782_fu_1273_p2),64));
end behav;
