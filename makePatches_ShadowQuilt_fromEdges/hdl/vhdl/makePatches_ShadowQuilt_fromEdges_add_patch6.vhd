-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_add_patch6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches : OUT STD_LOGIC_VECTOR (31 downto 0);
    n_patches_ap_vld : OUT STD_LOGIC;
    n_patches_read : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    wp_superpoints_ce0 : OUT STD_LOGIC;
    wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_add_patch6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv12_66 : STD_LOGIC_VECTOR (11 downto 0) := "000001100110";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_63 : STD_LOGIC_VECTOR (14 downto 0) := "000000001100011";
    constant ap_const_lv10_63 : STD_LOGIC_VECTOR (9 downto 0) := "0001100011";
    constant ap_const_lv15_66 : STD_LOGIC_VECTOR (14 downto 0) := "000000001100110";
    constant ap_const_lv10_66 : STD_LOGIC_VECTOR (9 downto 0) := "0001100110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten105_reg_333 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_5_reg_344 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten81_reg_355 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_7_reg_366 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten67_reg_377 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_7_reg_388 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_4_reg_399 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten127_reg_410 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_6_reg_421 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten113_reg_432 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_8_reg_443 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_8_reg_454 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten37_reg_465 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_reg_476 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten13_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_498 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_509 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_reg_520 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_reg_531 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten59_reg_542 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_4_reg_553 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten45_reg_564 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_6_reg_575 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_6_reg_586 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln292_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln292_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_613_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_reg_1929 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln332_cast_fu_676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln332_cast_reg_1940 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_122_fu_680_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_122_reg_1945 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln330_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_1_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_1_reg_1954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln330_fu_699_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln330_reg_1958 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln332_2_fu_734_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln332_2_reg_1963 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln332_4_fu_775_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln332_4_reg_1973 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_reg_1993 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln343_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln343_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln353_fu_841_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln353_reg_2004 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln345_1_fu_847_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln345_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln345_reg_2015 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_1_fu_879_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln345_1_reg_2019 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln347_1_fu_994_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln347_1_reg_2024 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln349_1_fu_1086_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln349_1_reg_2029 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln353_6_fu_1162_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln353_6_reg_2034 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln351_fu_1179_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln349_2_fu_1191_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln347_2_fu_1205_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln359_1_fu_1217_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state10_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln359_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln359_reg_2064 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln359_1_fu_1249_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln359_1_reg_2068 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln361_fu_1299_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln361_reg_2074 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln361_1_fu_1307_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln361_1_reg_2079 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln363_fu_1366_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln361_2_fu_1378_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln295_1_fu_1465_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state14_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln295_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln295_reg_2105 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln295_1_fu_1497_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln295_1_reg_2109 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln297_1_fu_1581_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln297_1_reg_2114 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln299_1_fu_1655_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln299_1_reg_2119 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln303_5_fu_1705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln303_5_reg_2124 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln301_fu_1710_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln299_2_fu_1722_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln297_2_fu_1736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln309_1_fu_1744_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state17_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln309_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_2154 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln309_1_fu_1776_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln309_1_reg_2158 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln311_1_fu_1834_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln311_1_reg_2163 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln315_4_fu_1892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln315_4_reg_2168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln313_fu_1897_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln311_2_fu_1909_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state17 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal i_reg_322 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_a_5_phi_fu_348_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_b_7_phi_fu_370_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_c_7_phi_fu_392_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_a_6_phi_fu_425_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_b_8_phi_fu_447_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_a_phi_fu_480_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_b_phi_fu_502_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_c_phi_fu_524_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_a_4_phi_fu_557_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_phi_mux_b_6_phi_fu_579_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_cast_fu_651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_2_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_3_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_1_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln353_13_fu_1174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln353_12_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln365_7_fu_1361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln365_6_fu_1454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln373_fu_1459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal empty_fu_603_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_fu_627_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_619_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_203_cast_fu_635_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_120_fu_639_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_121_fu_645_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_659_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln332_1_fu_666_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln332_fu_656_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln332_fu_670_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_cast_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln332_1_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln332_fu_710_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln332_1_fu_722_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl11_cast_fu_714_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl12_cast_fu_726_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln332_3_fu_740_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln332_2_fu_751_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln332_3_fu_763_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_210_cast_fu_755_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_211_cast_fu_767_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln332_5_fu_781_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln333_fu_792_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln333_1_fu_802_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_109_fu_812_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_71_fu_830_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln353_1_fu_837_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln353_fu_827_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal icmp_ln347_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln345_fu_859_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln353_3_fu_891_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln353_1_fu_895_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_110_fu_904_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal zext_ln353_5_fu_912_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal zext_ln353_4_fu_900_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_72_fu_922_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln353_6_fu_930_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln353_2_fu_887_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln353_1_fu_934_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln351_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln345_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln349_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_fu_871_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln345_1_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln347_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln347_fu_974_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln353_fu_916_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal zext_ln353_8_fu_1006_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal add_ln353_2_fu_1010_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal sext_ln347_fu_940_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln353_7_fu_1002_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln353_3_fu_1024_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_111_fu_1030_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln347_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln345_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln347_1_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln347_fu_986_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln347_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln349_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln349_1_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln349_fu_1060_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_219_cast_fu_1016_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln353_9_fu_1094_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln353_4_fu_1098_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln353_1_fu_1108_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl15_cast_fu_1112_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln353_fu_1104_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln349_fu_1038_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln353_5_fu_1126_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln353_3_fu_1136_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl14_cast_fu_1140_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln353_2_fu_1132_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln349_fu_1078_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln353_2_fu_1120_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln353_11_fu_1158_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln353_3_fu_1148_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln353_10_fu_1154_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln353_7_fu_1168_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln349_1_fu_1185_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln347_1_fu_1199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln361_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln359_fu_1229_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_73_fu_1257_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln363_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln359_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln359_fu_1241_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln359_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln361_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln361_fu_1287_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln361_fu_1265_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln365_2_fu_1315_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln365_2_fu_1319_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln365_2_fu_1325_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl18_cast_fu_1329_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl19_cast_fu_1337_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln365_1_fu_1345_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln365_4_fu_1351_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln365_4_fu_1355_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln361_1_fu_1372_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln365_fu_1386_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln365_fu_1389_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_112_fu_1394_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal zext_ln365_1_fu_1402_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln365_3_fu_1406_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln365_1_fu_1409_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln365_fu_1415_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln365_1_fu_1427_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl16_cast_fu_1419_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl17_cast_fu_1431_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln365_fu_1439_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln365_5_fu_1445_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln365_3_fu_1448_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln297_fu_1483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln295_fu_1477_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_69_fu_1509_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln303_1_fu_1517_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln303_fu_1505_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln303_fu_1521_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln301_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln295_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln299_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln295_fu_1489_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln295_1_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln297_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_fu_1561_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln297_fu_1527_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln303_2_fu_1589_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln303_fu_1593_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_106_fu_1599_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln297_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln295_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln297_1_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln297_fu_1573_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln297_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln299_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln299_1_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln299_fu_1629_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln299_fu_1607_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln303_3_fu_1663_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln303_1_fu_1667_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln303_1_fu_1677_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl_cast_fu_1681_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln303_fu_1673_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln299_fu_1647_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln303_1_fu_1689_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln303_4_fu_1695_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln303_2_fu_1699_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln299_1_fu_1716_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln297_1_fu_1730_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln311_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln309_fu_1756_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_70_fu_1784_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln313_fu_1802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln309_fu_1768_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln309_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln311_fu_1820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln311_fu_1814_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln311_fu_1792_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln315_fu_1842_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln315_fu_1846_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_107_fu_1852_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_fu_1864_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln315_1_fu_1860_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln315_2_fu_1872_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln311_fu_1826_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln315_fu_1876_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln315_3_fu_1882_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln315_1_fu_1886_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln311_1_fu_1903_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state7);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state10);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state14) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state14);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state17) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state17);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_4_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                a_4_reg_553 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln309_reg_2154 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                a_4_reg_553 <= select_ln309_1_reg_2158;
            end if; 
        end if;
    end process;

    a_5_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                a_5_reg_344 <= select_ln345_1_reg_2019;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                a_5_reg_344 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    a_6_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                a_6_reg_421 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln359_reg_2064 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                a_6_reg_421 <= select_ln359_1_reg_2068;
            end if; 
        end if;
    end process;

    a_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                a_reg_476 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                a_reg_476 <= select_ln295_1_reg_2109;
            end if; 
        end if;
    end process;

    b_6_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                b_6_reg_575 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln309_reg_2154 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                b_6_reg_575 <= select_ln311_1_reg_2163;
            end if; 
        end if;
    end process;

    b_7_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                b_7_reg_366 <= select_ln347_1_reg_2024;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                b_7_reg_366 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    b_8_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                b_8_reg_443 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln359_reg_2064 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                b_8_reg_443 <= select_ln361_1_reg_2079;
            end if; 
        end if;
    end process;

    b_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                b_reg_498 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                b_reg_498 <= select_ln297_1_reg_2114;
            end if; 
        end if;
    end process;

    c_6_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                c_6_reg_586 <= ap_const_lv3_0;
            elsif (((icmp_ln309_fu_1750_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                c_6_reg_586 <= add_ln313_fu_1897_p2;
            end if; 
        end if;
    end process;

    c_7_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                c_7_reg_388 <= select_ln349_1_reg_2029;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                c_7_reg_388 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    c_8_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                c_8_reg_454 <= ap_const_lv3_0;
            elsif (((icmp_ln359_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                c_8_reg_454 <= add_ln363_fu_1366_p2;
            end if; 
        end if;
    end process;

    c_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                c_reg_520 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                c_reg_520 <= select_ln299_1_reg_2119;
            end if; 
        end if;
    end process;

    d_4_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                d_4_reg_399 <= add_ln351_fu_1179_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                d_4_reg_399 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    d_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                d_reg_531 <= ap_const_lv2_0;
            elsif (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                d_reg_531 <= add_ln301_fu_1710_p2;
            end if; 
        end if;
    end process;

    i_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln330_fu_684_p2 = ap_const_lv1_1))) then 
                i_reg_322 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln332_reg_1993 = ap_const_lv1_1) and (grp_fu_597_p2 = ap_const_lv1_1) and (icmp_ln330_1_reg_1954 = ap_const_lv1_1))) then 
                i_reg_322 <= add_ln330_reg_1958;
            end if; 
        end if;
    end process;

    indvar_flatten105_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten105_reg_333 <= add_ln345_1_fu_847_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                indvar_flatten105_reg_333 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten113_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten113_reg_432 <= ap_const_lv6_0;
            elsif (((icmp_ln359_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten113_reg_432 <= select_ln361_2_fu_1378_p3;
            end if; 
        end if;
    end process;

    indvar_flatten127_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten127_reg_410 <= ap_const_lv7_0;
            elsif (((icmp_ln359_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten127_reg_410 <= add_ln359_1_fu_1217_p2;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                indvar_flatten13_reg_487 <= ap_const_lv8_0;
            elsif (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                indvar_flatten13_reg_487 <= select_ln297_2_fu_1736_p3;
            end if; 
        end if;
    end process;

    indvar_flatten37_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                indvar_flatten37_reg_465 <= ap_const_lv10_0;
            elsif (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                indvar_flatten37_reg_465 <= add_ln295_1_fu_1465_p2;
            end if; 
        end if;
    end process;

    indvar_flatten45_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar_flatten45_reg_564 <= ap_const_lv6_0;
            elsif (((icmp_ln309_fu_1750_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                indvar_flatten45_reg_564 <= select_ln311_2_fu_1909_p3;
            end if; 
        end if;
    end process;

    indvar_flatten59_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar_flatten59_reg_542 <= ap_const_lv7_0;
            elsif (((icmp_ln309_fu_1750_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                indvar_flatten59_reg_542 <= add_ln309_1_fu_1744_p2;
            end if; 
        end if;
    end process;

    indvar_flatten67_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten67_reg_377 <= select_ln349_2_fu_1191_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                indvar_flatten67_reg_377 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten81_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar_flatten81_reg_355 <= select_ln347_2_fu_1205_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then 
                indvar_flatten81_reg_355 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then 
                indvar_flatten_reg_509 <= ap_const_lv7_0;
            elsif (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                indvar_flatten_reg_509 <= select_ln299_2_fu_1722_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln330_reg_1958 <= add_ln330_fu_699_p2;
                icmp_ln330_1_reg_1954 <= icmp_ln330_1_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln330_1_fu_694_p2 = ap_const_lv1_1))) then
                    add_ln332_2_reg_1963(14 downto 4) <= add_ln332_2_fu_734_p2(14 downto 4);
                    add_ln332_4_reg_1973(9 downto 4) <= add_ln332_4_fu_775_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    add_ln332_cast_reg_1940(7 downto 0) <= add_ln332_cast_fu_676_p1(7 downto 0);
                empty_122_reg_1945 <= empty_122_fu_680_p1;
                icmp_ln330_reg_1950 <= icmp_ln330_fu_684_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                add_ln353_6_reg_2034 <= add_ln353_6_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then
                add_ln353_reg_2004 <= add_ln353_fu_841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln292_reg_1925 <= icmp_ln292_fu_607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln295_reg_2105 <= icmp_ln295_fu_1471_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                icmp_ln309_reg_2154 <= icmp_ln309_fu_1750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln330_1_reg_1954 = ap_const_lv1_1))) then
                icmp_ln332_reg_1993 <= grp_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln343_reg_2000 <= icmp_ln343_fu_821_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln345_reg_2015 <= icmp_ln345_fu_853_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln359_reg_2064 <= icmp_ln359_fu_1223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                select_ln295_1_reg_2109 <= select_ln295_1_fu_1497_p3;
                select_ln297_1_reg_2114 <= select_ln297_1_fu_1581_p3;
                select_ln299_1_reg_2119 <= select_ln299_1_fu_1655_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln309_fu_1750_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                select_ln309_1_reg_2158 <= select_ln309_1_fu_1776_p3;
                select_ln311_1_reg_2163 <= select_ln311_1_fu_1834_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_fu_853_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                select_ln345_1_reg_2019 <= select_ln345_1_fu_879_p3;
                select_ln347_1_reg_2024 <= select_ln347_1_fu_994_p3;
                select_ln349_1_reg_2029 <= select_ln349_1_fu_1086_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln359_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                select_ln359_1_reg_2068 <= select_ln359_1_fu_1249_p3;
                select_ln361_1_reg_2079 <= select_ln361_1_fu_1307_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln359_fu_1223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                select_ln361_reg_2074 <= select_ln361_fu_1299_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_0))) then
                sub_reg_1929 <= sub_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln295_fu_1471_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                    zext_ln303_5_reg_2124(14 downto 0) <= zext_ln303_5_fu_1705_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln309_fu_1750_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                    zext_ln315_4_reg_2168(11 downto 0) <= zext_ln315_4_fu_1892_p1(11 downto 0);
            end if;
        end if;
    end process;
    add_ln332_cast_reg_1940(31 downto 8) <= "000000000000000000000000";
    add_ln332_2_reg_1963(3 downto 0) <= "0000";
    add_ln332_4_reg_1973(3 downto 0) <= "0000";
    zext_ln303_5_reg_2124(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln315_4_reg_2168(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln292_fu_607_p2, ap_CS_fsm_state2, icmp_ln330_fu_684_p2, icmp_ln330_1_reg_1954, grp_fu_597_p2, icmp_ln332_reg_1993, icmp_ln343_fu_821_p2, ap_CS_fsm_state6, ap_enable_reg_pp1_iter0, icmp_ln345_fu_853_p2, ap_enable_reg_pp2_iter0, icmp_ln359_fu_1223_p2, ap_enable_reg_pp3_iter0, icmp_ln295_fu_1471_p2, ap_enable_reg_pp4_iter0, icmp_ln309_fu_1750_p2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln292_fu_607_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln330_fu_684_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln332_reg_1993 = ap_const_lv1_1) and (grp_fu_597_p2 = ap_const_lv1_1) and (icmp_ln330_1_reg_1954 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln330_1_reg_1954 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln343_fu_821_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((icmp_ln345_fu_853_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((icmp_ln345_fu_853_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((icmp_ln359_fu_1223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((icmp_ln359_fu_1223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((icmp_ln295_fu_1471_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((icmp_ln295_fu_1471_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((icmp_ln309_fu_1750_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((icmp_ln309_fu_1750_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln295_1_fu_1465_p2 <= std_logic_vector(unsigned(indvar_flatten37_reg_465) + unsigned(ap_const_lv10_1));
    add_ln295_fu_1477_p2 <= std_logic_vector(unsigned(ap_phi_mux_a_phi_fu_480_p4) + unsigned(ap_const_lv3_1));
    add_ln297_1_fu_1730_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_487) + unsigned(ap_const_lv8_1));
    add_ln297_fu_1561_p2 <= std_logic_vector(unsigned(select_ln295_fu_1489_p3) + unsigned(ap_const_lv2_1));
    add_ln299_1_fu_1716_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_509) + unsigned(ap_const_lv7_1));
    add_ln299_fu_1629_p2 <= std_logic_vector(unsigned(select_ln297_fu_1573_p3) + unsigned(ap_const_lv5_1));
    add_ln301_fu_1710_p2 <= std_logic_vector(unsigned(select_ln299_fu_1647_p3) + unsigned(ap_const_lv2_1));
    add_ln303_1_fu_1667_p2 <= std_logic_vector(signed(sext_ln299_fu_1607_p1) + signed(zext_ln303_3_fu_1663_p1));
    add_ln303_2_fu_1699_p2 <= std_logic_vector(unsigned(sub_ln303_1_fu_1689_p2) + unsigned(zext_ln303_4_fu_1695_p1));
    add_ln303_fu_1593_p2 <= std_logic_vector(signed(sext_ln297_fu_1527_p1) + signed(zext_ln303_2_fu_1589_p1));
    add_ln309_1_fu_1744_p2 <= std_logic_vector(unsigned(indvar_flatten59_reg_542) + unsigned(ap_const_lv7_1));
    add_ln309_fu_1756_p2 <= std_logic_vector(unsigned(ap_phi_mux_a_4_phi_fu_557_p4) + unsigned(ap_const_lv3_1));
    add_ln311_1_fu_1903_p2 <= std_logic_vector(unsigned(indvar_flatten45_reg_564) + unsigned(ap_const_lv6_1));
    add_ln311_fu_1814_p2 <= std_logic_vector(unsigned(select_ln309_fu_1768_p3) + unsigned(ap_const_lv3_1));
    add_ln313_fu_1897_p2 <= std_logic_vector(unsigned(select_ln311_fu_1826_p3) + unsigned(ap_const_lv3_1));
    add_ln315_1_fu_1886_p2 <= std_logic_vector(unsigned(sub_ln315_fu_1876_p2) + unsigned(zext_ln315_3_fu_1882_p1));
    add_ln315_fu_1846_p2 <= std_logic_vector(unsigned(zext_ln311_fu_1792_p1) + unsigned(zext_ln315_fu_1842_p1));
    add_ln330_fu_699_p2 <= std_logic_vector(unsigned(i_reg_322) + unsigned(ap_const_lv31_1));
    add_ln332_1_fu_705_p2 <= std_logic_vector(unsigned(add_ln332_cast_reg_1940) + unsigned(i_cast_fu_690_p1));
    add_ln332_2_fu_734_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_714_p3) + unsigned(p_shl12_cast_fu_726_p3));
    add_ln332_3_fu_740_p2 <= std_logic_vector(unsigned(add_ln332_2_fu_734_p2) + unsigned(ap_const_lv15_63));
    add_ln332_4_fu_775_p2 <= std_logic_vector(unsigned(tmp_210_cast_fu_755_p3) + unsigned(tmp_211_cast_fu_767_p3));
    add_ln332_5_fu_781_p2 <= std_logic_vector(unsigned(add_ln332_4_fu_775_p2) + unsigned(ap_const_lv10_63));
    add_ln332_cast_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln332_fu_670_p2),32));
    add_ln332_fu_670_p2 <= std_logic_vector(unsigned(zext_ln332_1_fu_666_p1) + unsigned(zext_ln332_fu_656_p1));
    add_ln333_1_fu_802_p2 <= std_logic_vector(unsigned(add_ln332_4_reg_1973) + unsigned(ap_const_lv10_66));
    add_ln333_fu_792_p2 <= std_logic_vector(unsigned(add_ln332_2_reg_1963) + unsigned(ap_const_lv15_66));
    add_ln345_1_fu_847_p2 <= std_logic_vector(unsigned(indvar_flatten105_reg_333) + unsigned(ap_const_lv10_1));
    add_ln345_fu_859_p2 <= std_logic_vector(unsigned(ap_phi_mux_a_5_phi_fu_348_p4) + unsigned(ap_const_lv3_1));
    add_ln347_1_fu_1199_p2 <= std_logic_vector(unsigned(indvar_flatten81_reg_355) + unsigned(ap_const_lv8_1));
    add_ln347_fu_974_p2 <= std_logic_vector(unsigned(select_ln345_fu_871_p3) + unsigned(ap_const_lv2_1));
    add_ln349_1_fu_1185_p2 <= std_logic_vector(unsigned(indvar_flatten67_reg_377) + unsigned(ap_const_lv7_1));
    add_ln349_fu_1060_p2 <= std_logic_vector(unsigned(select_ln347_fu_986_p3) + unsigned(ap_const_lv5_1));
    add_ln351_fu_1179_p2 <= std_logic_vector(unsigned(select_ln349_fu_1078_p3) + unsigned(ap_const_lv2_1));
    add_ln353_1_fu_895_p2 <= std_logic_vector(unsigned(add_ln353_reg_2004) + unsigned(zext_ln353_3_fu_891_p1));
    add_ln353_2_fu_1010_p2 <= std_logic_vector(unsigned(sub_ln353_fu_916_p2) + unsigned(zext_ln353_8_fu_1006_p1));
    add_ln353_3_fu_1024_p2 <= std_logic_vector(signed(sext_ln347_fu_940_p1) + signed(zext_ln353_7_fu_1002_p1));
    add_ln353_4_fu_1098_p2 <= std_logic_vector(unsigned(tmp_219_cast_fu_1016_p3) + unsigned(zext_ln353_9_fu_1094_p1));
    add_ln353_5_fu_1126_p2 <= std_logic_vector(signed(sext_ln349_fu_1038_p1) + signed(zext_ln353_9_fu_1094_p1));
    add_ln353_6_fu_1162_p2 <= std_logic_vector(unsigned(sub_ln353_2_fu_1120_p2) + unsigned(zext_ln353_11_fu_1158_p1));
    add_ln353_7_fu_1168_p2 <= std_logic_vector(unsigned(sub_ln353_3_fu_1148_p2) + unsigned(zext_ln353_10_fu_1154_p1));
    add_ln353_fu_841_p2 <= std_logic_vector(unsigned(zext_ln353_1_fu_837_p1) + unsigned(zext_ln353_fu_827_p1));
    add_ln359_1_fu_1217_p2 <= std_logic_vector(unsigned(indvar_flatten127_reg_410) + unsigned(ap_const_lv7_1));
    add_ln359_fu_1229_p2 <= std_logic_vector(unsigned(ap_phi_mux_a_6_phi_fu_425_p4) + unsigned(ap_const_lv3_1));
    add_ln361_1_fu_1372_p2 <= std_logic_vector(unsigned(indvar_flatten113_reg_432) + unsigned(ap_const_lv6_1));
    add_ln361_fu_1287_p2 <= std_logic_vector(unsigned(select_ln359_fu_1241_p3) + unsigned(ap_const_lv3_1));
    add_ln363_fu_1366_p2 <= std_logic_vector(unsigned(select_ln361_fu_1299_p3) + unsigned(ap_const_lv3_1));
    add_ln365_1_fu_1409_p2 <= std_logic_vector(unsigned(zext_ln365_1_fu_1402_p1) + unsigned(zext_ln365_3_fu_1406_p1));
    add_ln365_2_fu_1319_p2 <= std_logic_vector(unsigned(zext_ln361_fu_1265_p1) + unsigned(zext_ln365_2_fu_1315_p1));
    add_ln365_3_fu_1448_p2 <= std_logic_vector(unsigned(sub_ln365_fu_1439_p2) + unsigned(zext_ln365_5_fu_1445_p1));
    add_ln365_4_fu_1355_p2 <= std_logic_vector(unsigned(sub_ln365_1_fu_1345_p2) + unsigned(zext_ln365_4_fu_1351_p1));
    add_ln365_fu_1389_p2 <= std_logic_vector(unsigned(add_ln353_reg_2004) + unsigned(zext_ln365_fu_1386_p1));
    add_ln373_fu_1459_p2 <= std_logic_vector(unsigned(n_patches_read) + unsigned(ap_const_lv32_1));
    and_ln295_1_fu_1555_p2 <= (xor_ln295_fu_1531_p2 and icmp_ln299_fu_1549_p2);
    and_ln295_fu_1543_p2 <= (xor_ln295_fu_1531_p2 and icmp_ln301_fu_1537_p2);
    and_ln297_fu_1623_p2 <= (or_ln297_1_fu_1617_p2 and and_ln295_fu_1543_p2);
    and_ln309_fu_1808_p2 <= (xor_ln309_fu_1796_p2 and icmp_ln313_fu_1802_p2);
    and_ln345_1_fu_968_p2 <= (xor_ln345_fu_944_p2 and icmp_ln349_fu_962_p2);
    and_ln345_fu_956_p2 <= (xor_ln345_fu_944_p2 and icmp_ln351_fu_950_p2);
    and_ln347_fu_1054_p2 <= (or_ln347_1_fu_1048_p2 and and_ln345_fu_956_p2);
    and_ln359_fu_1281_p2 <= (xor_ln359_fu_1269_p2 and icmp_ln363_fu_1275_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(12);
    ap_CS_fsm_state19 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln345_fu_853_p2)
    begin
        if ((icmp_ln345_fu_853_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state10_assign_proc : process(icmp_ln359_fu_1223_p2)
    begin
        if ((icmp_ln359_fu_1223_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state14_assign_proc : process(icmp_ln295_fu_1471_p2)
    begin
        if ((icmp_ln295_fu_1471_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state17_assign_proc : process(icmp_ln309_fu_1750_p2)
    begin
        if ((icmp_ln309_fu_1750_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_4_phi_fu_557_p4_assign_proc : process(a_4_reg_553, ap_CS_fsm_pp4_stage0, icmp_ln309_reg_2154, select_ln309_1_reg_2158, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln309_reg_2154 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            ap_phi_mux_a_4_phi_fu_557_p4 <= select_ln309_1_reg_2158;
        else 
            ap_phi_mux_a_4_phi_fu_557_p4 <= a_4_reg_553;
        end if; 
    end process;


    ap_phi_mux_a_5_phi_fu_348_p4_assign_proc : process(a_5_reg_344, ap_CS_fsm_pp1_stage0, icmp_ln345_reg_2015, select_ln345_1_reg_2019, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_a_5_phi_fu_348_p4 <= select_ln345_1_reg_2019;
        else 
            ap_phi_mux_a_5_phi_fu_348_p4 <= a_5_reg_344;
        end if; 
    end process;


    ap_phi_mux_a_6_phi_fu_425_p4_assign_proc : process(a_6_reg_421, ap_CS_fsm_pp2_stage0, icmp_ln359_reg_2064, select_ln359_1_reg_2068, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln359_reg_2064 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_a_6_phi_fu_425_p4 <= select_ln359_1_reg_2068;
        else 
            ap_phi_mux_a_6_phi_fu_425_p4 <= a_6_reg_421;
        end if; 
    end process;


    ap_phi_mux_a_phi_fu_480_p4_assign_proc : process(a_reg_476, ap_CS_fsm_pp3_stage0, icmp_ln295_reg_2105, select_ln295_1_reg_2109, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_a_phi_fu_480_p4 <= select_ln295_1_reg_2109;
        else 
            ap_phi_mux_a_phi_fu_480_p4 <= a_reg_476;
        end if; 
    end process;


    ap_phi_mux_b_6_phi_fu_579_p4_assign_proc : process(b_6_reg_575, ap_CS_fsm_pp4_stage0, icmp_ln309_reg_2154, select_ln311_1_reg_2163, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln309_reg_2154 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            ap_phi_mux_b_6_phi_fu_579_p4 <= select_ln311_1_reg_2163;
        else 
            ap_phi_mux_b_6_phi_fu_579_p4 <= b_6_reg_575;
        end if; 
    end process;


    ap_phi_mux_b_7_phi_fu_370_p4_assign_proc : process(b_7_reg_366, ap_CS_fsm_pp1_stage0, icmp_ln345_reg_2015, select_ln347_1_reg_2024, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_b_7_phi_fu_370_p4 <= select_ln347_1_reg_2024;
        else 
            ap_phi_mux_b_7_phi_fu_370_p4 <= b_7_reg_366;
        end if; 
    end process;


    ap_phi_mux_b_8_phi_fu_447_p4_assign_proc : process(b_8_reg_443, ap_CS_fsm_pp2_stage0, icmp_ln359_reg_2064, select_ln361_1_reg_2079, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln359_reg_2064 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_b_8_phi_fu_447_p4 <= select_ln361_1_reg_2079;
        else 
            ap_phi_mux_b_8_phi_fu_447_p4 <= b_8_reg_443;
        end if; 
    end process;


    ap_phi_mux_b_phi_fu_502_p4_assign_proc : process(b_reg_498, ap_CS_fsm_pp3_stage0, icmp_ln295_reg_2105, select_ln297_1_reg_2114, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_b_phi_fu_502_p4 <= select_ln297_1_reg_2114;
        else 
            ap_phi_mux_b_phi_fu_502_p4 <= b_reg_498;
        end if; 
    end process;


    ap_phi_mux_c_7_phi_fu_392_p4_assign_proc : process(c_7_reg_388, ap_CS_fsm_pp1_stage0, icmp_ln345_reg_2015, select_ln349_1_reg_2029, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_c_7_phi_fu_392_p4 <= select_ln349_1_reg_2029;
        else 
            ap_phi_mux_c_7_phi_fu_392_p4 <= c_7_reg_388;
        end if; 
    end process;


    ap_phi_mux_c_phi_fu_524_p4_assign_proc : process(c_reg_520, ap_CS_fsm_pp3_stage0, icmp_ln295_reg_2105, select_ln299_1_reg_2119, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_c_phi_fu_524_p4 <= select_ln299_1_reg_2119;
        else 
            ap_phi_mux_c_phi_fu_524_p4 <= c_reg_520;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_120_fu_639_p2 <= std_logic_vector(unsigned(tmp_s_fu_619_p3) - unsigned(tmp_203_cast_fu_635_p1));
    empty_121_fu_645_p2 <= std_logic_vector(unsigned(empty_120_fu_639_p2) + unsigned(ap_const_lv12_66));
    empty_122_fu_680_p1 <= patches_parameters_q0(32 - 1 downto 0);
    empty_fu_603_p1 <= n_patches_read(5 - 1 downto 0);
    grp_fu_597_p2 <= "1" when (patches_superpoints_q0 = wp_superpoints_q0) else "0";
    i_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_322),32));
    icmp_ln292_fu_607_p2 <= "1" when (n_patches_read = ap_const_lv32_0) else "0";
    icmp_ln295_fu_1471_p2 <= "1" when (indvar_flatten37_reg_465 = ap_const_lv10_2D0) else "0";
    icmp_ln297_fu_1483_p2 <= "1" when (indvar_flatten13_reg_487 = ap_const_lv8_90) else "0";
    icmp_ln299_fu_1549_p2 <= "1" when (indvar_flatten_reg_509 = ap_const_lv7_30) else "0";
    icmp_ln301_fu_1537_p2 <= "1" when (d_reg_531 = ap_const_lv2_3) else "0";
    icmp_ln309_fu_1750_p2 <= "1" when (indvar_flatten59_reg_542 = ap_const_lv7_78) else "0";
    icmp_ln311_fu_1762_p2 <= "1" when (indvar_flatten45_reg_564 = ap_const_lv6_18) else "0";
    icmp_ln313_fu_1802_p2 <= "1" when (c_6_reg_586 = ap_const_lv3_6) else "0";
    icmp_ln330_1_fu_694_p2 <= "1" when (signed(i_cast_fu_690_p1) < signed(empty_122_reg_1945)) else "0";
    icmp_ln330_fu_684_p2 <= "1" when (signed(empty_122_fu_680_p1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln343_fu_821_p2 <= "1" when (signed(tmp_109_fu_812_p4) < signed(ap_const_lv27_1)) else "0";
    icmp_ln345_fu_853_p2 <= "1" when (indvar_flatten105_reg_333 = ap_const_lv10_2D0) else "0";
    icmp_ln347_fu_865_p2 <= "1" when (indvar_flatten81_reg_355 = ap_const_lv8_90) else "0";
    icmp_ln349_fu_962_p2 <= "1" when (indvar_flatten67_reg_377 = ap_const_lv7_30) else "0";
    icmp_ln351_fu_950_p2 <= "1" when (d_4_reg_399 = ap_const_lv2_3) else "0";
    icmp_ln359_fu_1223_p2 <= "1" when (indvar_flatten127_reg_410 = ap_const_lv7_78) else "0";
    icmp_ln361_fu_1235_p2 <= "1" when (indvar_flatten113_reg_432 = ap_const_lv6_18) else "0";
    icmp_ln363_fu_1275_p2 <= "1" when (c_8_reg_454 = ap_const_lv3_6) else "0";

    n_patches_assign_proc : process(icmp_ln292_reg_1925, icmp_ln330_reg_1950, icmp_ln330_1_reg_1954, icmp_ln343_reg_2000, add_ln373_fu_1459_p2, ap_CS_fsm_state12, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            n_patches <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln343_reg_2000 = ap_const_lv1_1) and (icmp_ln330_1_reg_1954 = ap_const_lv1_1) and (icmp_ln330_reg_1950 = ap_const_lv1_1) and (icmp_ln292_reg_1925 = ap_const_lv1_0))) then 
            n_patches <= add_ln373_fu_1459_p2;
        else 
            n_patches <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    n_patches_ap_vld_assign_proc : process(icmp_ln292_reg_1925, icmp_ln330_reg_1950, icmp_ln330_1_reg_1954, icmp_ln343_reg_2000, ap_CS_fsm_state12, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln343_reg_2000 = ap_const_lv1_1) and (icmp_ln330_1_reg_1954 = ap_const_lv1_1) and (icmp_ln330_reg_1950 = ap_const_lv1_1) and (icmp_ln292_reg_1925 = ap_const_lv1_0)))) then 
            n_patches_ap_vld <= ap_const_logic_1;
        else 
            n_patches_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln297_1_fu_1617_p2 <= (xor_ln297_fu_1611_p2 or icmp_ln297_fu_1483_p2);
    or_ln297_fu_1567_p2 <= (icmp_ln297_fu_1483_p2 or and_ln295_1_fu_1555_p2);
    or_ln299_1_fu_1641_p2 <= (or_ln299_fu_1635_p2 or icmp_ln297_fu_1483_p2);
    or_ln299_fu_1635_p2 <= (and_ln297_fu_1623_p2 or and_ln295_1_fu_1555_p2);
    or_ln311_fu_1820_p2 <= (icmp_ln311_fu_1762_p2 or and_ln309_fu_1808_p2);
    or_ln347_1_fu_1048_p2 <= (xor_ln347_fu_1042_p2 or icmp_ln347_fu_865_p2);
    or_ln347_fu_980_p2 <= (icmp_ln347_fu_865_p2 or and_ln345_1_fu_968_p2);
    or_ln349_1_fu_1072_p2 <= (or_ln349_fu_1066_p2 or icmp_ln347_fu_865_p2);
    or_ln349_fu_1066_p2 <= (and_ln347_fu_1054_p2 or and_ln345_1_fu_968_p2);
    or_ln361_fu_1293_p2 <= (icmp_ln361_fu_1235_p2 or and_ln359_fu_1281_p2);
    p_cast_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_121_fu_645_p2),64));
    p_shl11_cast_fu_714_p3 <= (trunc_ln332_fu_710_p1 & ap_const_lv7_0);
    p_shl12_cast_fu_726_p3 <= (trunc_ln332_1_fu_722_p1 & ap_const_lv4_0);
    p_shl14_cast_fu_1140_p3 <= (trunc_ln353_3_fu_1136_p1 & ap_const_lv2_0);
    p_shl15_cast_fu_1112_p3 <= (trunc_ln353_1_fu_1108_p1 & ap_const_lv2_0);
    p_shl16_cast_fu_1419_p3 <= (trunc_ln365_fu_1415_p1 & ap_const_lv3_0);
    p_shl17_cast_fu_1431_p3 <= (trunc_ln365_1_fu_1427_p1 & ap_const_lv1_0);
    p_shl18_cast_fu_1329_p3 <= (trunc_ln365_2_fu_1325_p1 & ap_const_lv3_0);
    p_shl19_cast_fu_1337_p3 <= (add_ln365_2_fu_1319_p2 & ap_const_lv1_0);
    p_shl_cast_fu_1681_p3 <= (trunc_ln303_1_fu_1677_p1 & ap_const_lv2_0);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp4_stage0, zext_ln315_4_reg_2168, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter1, ap_block_pp2_stage0, ap_block_pp4_stage0, p_cast_fu_651_p1, zext_ln365_6_fu_1454_p1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            patches_parameters_address0 <= zext_ln315_4_reg_2168(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            patches_parameters_address0 <= zext_ln365_6_fu_1454_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            patches_parameters_address0 <= p_cast_fu_651_p1(12 - 1 downto 0);
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    patches_parameters_d0 <= wp_parameters_q0;

    patches_parameters_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln359_reg_2064, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln309_reg_2154, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln309_reg_2154 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln359_reg_2064 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            patches_parameters_we0 <= ap_const_logic_1;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, zext_ln303_5_reg_2124, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1, ap_block_pp1_stage0, ap_block_pp3_stage0, zext_ln332_2_fu_746_p1, zext_ln333_fu_797_p1, zext_ln353_12_fu_1213_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            patches_superpoints_address0 <= zext_ln303_5_reg_2124(15 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            patches_superpoints_address0 <= zext_ln353_12_fu_1213_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            patches_superpoints_address0 <= zext_ln333_fu_797_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            patches_superpoints_address0 <= zext_ln332_2_fu_746_p1(15 - 1 downto 0);
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            patches_superpoints_ce0 <= ap_const_logic_1;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    patches_superpoints_d0 <= wp_superpoints_q0;

    patches_superpoints_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln345_reg_2015, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, icmp_ln295_reg_2105, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln345_reg_2015 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            patches_superpoints_we0 <= ap_const_logic_1;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln295_1_fu_1497_p3 <= 
        add_ln295_fu_1477_p2 when (icmp_ln297_fu_1483_p2(0) = '1') else 
        ap_phi_mux_a_phi_fu_480_p4;
    select_ln295_fu_1489_p3 <= 
        ap_const_lv2_0 when (icmp_ln297_fu_1483_p2(0) = '1') else 
        ap_phi_mux_b_phi_fu_502_p4;
    select_ln297_1_fu_1581_p3 <= 
        add_ln297_fu_1561_p2 when (and_ln295_1_fu_1555_p2(0) = '1') else 
        select_ln295_fu_1489_p3;
    select_ln297_2_fu_1736_p3 <= 
        ap_const_lv8_1 when (icmp_ln297_fu_1483_p2(0) = '1') else 
        add_ln297_1_fu_1730_p2;
    select_ln297_fu_1573_p3 <= 
        ap_const_lv5_0 when (or_ln297_fu_1567_p2(0) = '1') else 
        ap_phi_mux_c_phi_fu_524_p4;
    select_ln299_1_fu_1655_p3 <= 
        add_ln299_fu_1629_p2 when (and_ln297_fu_1623_p2(0) = '1') else 
        select_ln297_fu_1573_p3;
    select_ln299_2_fu_1722_p3 <= 
        ap_const_lv7_1 when (or_ln297_fu_1567_p2(0) = '1') else 
        add_ln299_1_fu_1716_p2;
    select_ln299_fu_1647_p3 <= 
        ap_const_lv2_0 when (or_ln299_1_fu_1641_p2(0) = '1') else 
        d_reg_531;
    select_ln309_1_fu_1776_p3 <= 
        add_ln309_fu_1756_p2 when (icmp_ln311_fu_1762_p2(0) = '1') else 
        ap_phi_mux_a_4_phi_fu_557_p4;
    select_ln309_fu_1768_p3 <= 
        ap_const_lv3_0 when (icmp_ln311_fu_1762_p2(0) = '1') else 
        ap_phi_mux_b_6_phi_fu_579_p4;
    select_ln311_1_fu_1834_p3 <= 
        add_ln311_fu_1814_p2 when (and_ln309_fu_1808_p2(0) = '1') else 
        select_ln309_fu_1768_p3;
    select_ln311_2_fu_1909_p3 <= 
        ap_const_lv6_1 when (icmp_ln311_fu_1762_p2(0) = '1') else 
        add_ln311_1_fu_1903_p2;
    select_ln311_fu_1826_p3 <= 
        ap_const_lv3_0 when (or_ln311_fu_1820_p2(0) = '1') else 
        c_6_reg_586;
    select_ln345_1_fu_879_p3 <= 
        add_ln345_fu_859_p2 when (icmp_ln347_fu_865_p2(0) = '1') else 
        ap_phi_mux_a_5_phi_fu_348_p4;
    select_ln345_fu_871_p3 <= 
        ap_const_lv2_0 when (icmp_ln347_fu_865_p2(0) = '1') else 
        ap_phi_mux_b_7_phi_fu_370_p4;
    select_ln347_1_fu_994_p3 <= 
        add_ln347_fu_974_p2 when (and_ln345_1_fu_968_p2(0) = '1') else 
        select_ln345_fu_871_p3;
    select_ln347_2_fu_1205_p3 <= 
        ap_const_lv8_1 when (icmp_ln347_fu_865_p2(0) = '1') else 
        add_ln347_1_fu_1199_p2;
    select_ln347_fu_986_p3 <= 
        ap_const_lv5_0 when (or_ln347_fu_980_p2(0) = '1') else 
        ap_phi_mux_c_7_phi_fu_392_p4;
    select_ln349_1_fu_1086_p3 <= 
        add_ln349_fu_1060_p2 when (and_ln347_fu_1054_p2(0) = '1') else 
        select_ln347_fu_986_p3;
    select_ln349_2_fu_1191_p3 <= 
        ap_const_lv7_1 when (or_ln347_fu_980_p2(0) = '1') else 
        add_ln349_1_fu_1185_p2;
    select_ln349_fu_1078_p3 <= 
        ap_const_lv2_0 when (or_ln349_1_fu_1072_p2(0) = '1') else 
        d_4_reg_399;
    select_ln359_1_fu_1249_p3 <= 
        add_ln359_fu_1229_p2 when (icmp_ln361_fu_1235_p2(0) = '1') else 
        ap_phi_mux_a_6_phi_fu_425_p4;
    select_ln359_fu_1241_p3 <= 
        ap_const_lv3_0 when (icmp_ln361_fu_1235_p2(0) = '1') else 
        ap_phi_mux_b_8_phi_fu_447_p4;
    select_ln361_1_fu_1307_p3 <= 
        add_ln361_fu_1287_p2 when (and_ln359_fu_1281_p2(0) = '1') else 
        select_ln359_fu_1241_p3;
    select_ln361_2_fu_1378_p3 <= 
        ap_const_lv6_1 when (icmp_ln361_fu_1235_p2(0) = '1') else 
        add_ln361_1_fu_1372_p2;
    select_ln361_fu_1299_p3 <= 
        ap_const_lv3_0 when (or_ln361_fu_1293_p2(0) = '1') else 
        c_8_reg_454;
        sext_ln297_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln303_fu_1521_p2),7));

        sext_ln299_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_106_fu_1599_p3),62));

        sext_ln347_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln353_1_fu_934_p2),7));

        sext_ln349_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_111_fu_1030_p3),62));

    sub_fu_613_p2 <= std_logic_vector(unsigned(empty_fu_603_p1) + unsigned(ap_const_lv5_1F));
    sub_ln303_1_fu_1689_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1681_p3) - unsigned(trunc_ln303_fu_1673_p1));
    sub_ln303_fu_1521_p2 <= std_logic_vector(unsigned(zext_ln303_1_fu_1517_p1) - unsigned(zext_ln303_fu_1505_p1));
    sub_ln315_fu_1876_p2 <= std_logic_vector(unsigned(zext_ln315_1_fu_1860_p1) - unsigned(zext_ln315_2_fu_1872_p1));
    sub_ln353_1_fu_934_p2 <= std_logic_vector(unsigned(zext_ln353_6_fu_930_p1) - unsigned(zext_ln353_2_fu_887_p1));
    sub_ln353_2_fu_1120_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_1112_p3) - unsigned(trunc_ln353_fu_1104_p1));
    sub_ln353_3_fu_1148_p2 <= std_logic_vector(unsigned(p_shl14_cast_fu_1140_p3) - unsigned(trunc_ln353_2_fu_1132_p1));
    sub_ln353_fu_916_p2 <= std_logic_vector(unsigned(zext_ln353_5_fu_912_p1) - unsigned(zext_ln353_4_fu_900_p1));
    sub_ln365_1_fu_1345_p2 <= std_logic_vector(unsigned(p_shl18_cast_fu_1329_p3) - unsigned(p_shl19_cast_fu_1337_p3));
    sub_ln365_fu_1439_p2 <= std_logic_vector(unsigned(p_shl16_cast_fu_1419_p3) - unsigned(p_shl17_cast_fu_1431_p3));
    tmp_106_fu_1599_p3 <= (add_ln303_fu_1593_p2 & ap_const_lv4_0);
    tmp_107_fu_1852_p3 <= (add_ln315_fu_1846_p2 & ap_const_lv3_0);
    tmp_108_fu_1864_p3 <= (add_ln315_fu_1846_p2 & ap_const_lv1_0);
    tmp_109_fu_812_p4 <= n_patches_read(31 downto 5);
    tmp_110_fu_904_p3 <= (add_ln353_1_fu_895_p2 & ap_const_lv2_0);
    tmp_111_fu_1030_p3 <= (add_ln353_3_fu_1024_p2 & ap_const_lv4_0);
    tmp_112_fu_1394_p3 <= (add_ln365_fu_1389_p2 & ap_const_lv2_0);
    tmp_203_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_627_p3),12));
    tmp_210_cast_fu_755_p3 <= (trunc_ln332_2_fu_751_p1 & ap_const_lv7_0);
    tmp_211_cast_fu_767_p3 <= (trunc_ln332_3_fu_763_p1 & ap_const_lv4_0);
    tmp_219_cast_fu_1016_p3 <= (add_ln353_2_fu_1010_p2 & ap_const_lv4_0);
    tmp_68_fu_627_p3 <= (sub_fu_613_p2 & ap_const_lv3_0);
    tmp_69_fu_1509_p3 <= (select_ln295_1_fu_1497_p3 & ap_const_lv2_0);
    tmp_70_fu_1784_p3 <= (select_ln309_1_fu_1776_p3 & ap_const_lv2_0);
    tmp_71_fu_830_p3 <= (n_patches_read & ap_const_lv2_0);
    tmp_72_fu_922_p3 <= (select_ln345_1_fu_879_p3 & ap_const_lv2_0);
    tmp_73_fu_1257_p3 <= (select_ln359_1_fu_1249_p3 & ap_const_lv2_0);
    tmp_fu_659_p3 <= (sub_reg_1929 & ap_const_lv2_0);
    tmp_s_fu_619_p3 <= (sub_fu_613_p2 & ap_const_lv7_0);
    trunc_ln303_1_fu_1677_p1 <= add_ln303_1_fu_1667_p2(13 - 1 downto 0);
    trunc_ln303_fu_1673_p1 <= add_ln303_1_fu_1667_p2(15 - 1 downto 0);
    trunc_ln332_1_fu_722_p1 <= add_ln332_1_fu_705_p2(11 - 1 downto 0);
    trunc_ln332_2_fu_751_p1 <= i_reg_322(3 - 1 downto 0);
    trunc_ln332_3_fu_763_p1 <= i_reg_322(6 - 1 downto 0);
    trunc_ln332_fu_710_p1 <= add_ln332_1_fu_705_p2(8 - 1 downto 0);
    trunc_ln353_1_fu_1108_p1 <= add_ln353_4_fu_1098_p2(13 - 1 downto 0);
    trunc_ln353_2_fu_1132_p1 <= add_ln353_5_fu_1126_p2(10 - 1 downto 0);
    trunc_ln353_3_fu_1136_p1 <= add_ln353_5_fu_1126_p2(8 - 1 downto 0);
    trunc_ln353_fu_1104_p1 <= add_ln353_4_fu_1098_p2(15 - 1 downto 0);
    trunc_ln365_1_fu_1427_p1 <= add_ln365_1_fu_1409_p2(11 - 1 downto 0);
    trunc_ln365_2_fu_1325_p1 <= add_ln365_2_fu_1319_p2(4 - 1 downto 0);
    trunc_ln365_fu_1415_p1 <= add_ln365_1_fu_1409_p2(9 - 1 downto 0);

    wp_parameters_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, zext_ln315_4_fu_1892_p1, ap_block_pp2_stage0, ap_block_pp4_stage0, zext_ln365_7_fu_1361_p1)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            wp_parameters_address0 <= zext_ln315_4_fu_1892_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            wp_parameters_address0 <= zext_ln365_7_fu_1361_p1(7 - 1 downto 0);
        else 
            wp_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_block_pp4_stage0_11001)
    begin
        if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln303_5_fu_1705_p1, ap_block_pp1_stage0, ap_block_pp3_stage0, zext_ln332_3_fu_787_p1, zext_ln333_1_fu_807_p1, zext_ln353_13_fu_1174_p1)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            wp_superpoints_address0 <= zext_ln303_5_fu_1705_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            wp_superpoints_address0 <= zext_ln353_13_fu_1174_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wp_superpoints_address0 <= zext_ln333_1_fu_807_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wp_superpoints_address0 <= zext_ln332_3_fu_787_p1(10 - 1 downto 0);
        else 
            wp_superpoints_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    wp_superpoints_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            wp_superpoints_ce0 <= ap_const_logic_1;
        else 
            wp_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln295_fu_1531_p2 <= (icmp_ln297_fu_1483_p2 xor ap_const_lv1_1);
    xor_ln297_fu_1611_p2 <= (icmp_ln299_fu_1549_p2 xor ap_const_lv1_1);
    xor_ln309_fu_1796_p2 <= (icmp_ln311_fu_1762_p2 xor ap_const_lv1_1);
    xor_ln345_fu_944_p2 <= (icmp_ln347_fu_865_p2 xor ap_const_lv1_1);
    xor_ln347_fu_1042_p2 <= (icmp_ln349_fu_962_p2 xor ap_const_lv1_1);
    xor_ln359_fu_1269_p2 <= (icmp_ln361_fu_1235_p2 xor ap_const_lv1_1);
    zext_ln303_1_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_1509_p3),6));
    zext_ln303_2_fu_1589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln297_1_fu_1581_p3),7));
    zext_ln303_3_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln299_1_fu_1655_p3),62));
    zext_ln303_4_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln299_fu_1647_p3),15));
    zext_ln303_5_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln303_2_fu_1699_p2),64));
    zext_ln303_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln295_1_fu_1497_p3),6));
    zext_ln311_fu_1792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_1784_p3),6));
    zext_ln315_1_fu_1860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_fu_1852_p3),12));
    zext_ln315_2_fu_1872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_108_fu_1864_p3),12));
    zext_ln315_3_fu_1882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln311_fu_1826_p3),12));
    zext_ln315_4_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln315_1_fu_1886_p2),64));
    zext_ln315_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln311_1_fu_1834_p3),6));
    zext_ln332_1_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_659_p3),8));
    zext_ln332_2_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln332_3_fu_740_p2),64));
    zext_ln332_3_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln332_5_fu_781_p2),64));
    zext_ln332_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_reg_1929),8));
    zext_ln333_1_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln333_1_fu_802_p2),64));
    zext_ln333_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln333_fu_792_p2),64));
    zext_ln353_10_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln349_fu_1078_p3),10));
    zext_ln353_11_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln349_fu_1078_p3),15));
    zext_ln353_12_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln353_6_reg_2034),64));
    zext_ln353_13_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln353_7_fu_1168_p2),64));
    zext_ln353_1_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_830_p3),35));
    zext_ln353_2_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln345_1_fu_879_p3),6));
    zext_ln353_3_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln345_1_fu_879_p3),35));
    zext_ln353_4_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln353_1_fu_895_p2),58));
    zext_ln353_5_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_fu_904_p3),58));
    zext_ln353_6_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_922_p3),6));
    zext_ln353_7_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln347_1_fu_994_p3),7));
    zext_ln353_8_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln347_1_fu_994_p3),58));
    zext_ln353_9_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln349_1_fu_1086_p3),62));
    zext_ln353_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_patches_read),35));
    zext_ln361_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_1257_p3),6));
    zext_ln365_1_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_1394_p3),63));
    zext_ln365_2_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln361_1_fu_1307_p3),6));
    zext_ln365_3_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln361_1_reg_2079),63));
    zext_ln365_4_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln361_fu_1299_p3),7));
    zext_ln365_5_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln361_reg_2074),12));
    zext_ln365_6_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln365_3_fu_1448_p2),64));
    zext_ln365_7_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln365_4_fu_1355_p2),64));
    zext_ln365_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln359_1_reg_2068),35));
end behav;
