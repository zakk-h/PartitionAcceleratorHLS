-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_getShadows is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_superpoints_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    wp_superpoints_2_ce0 : OUT STD_LOGIC;
    wp_superpoints_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_superpoints_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    wp_superpoints_2_ce1 : OUT STD_LOGIC;
    wp_superpoints_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    wp_parameters_2_ce0 : OUT STD_LOGIC;
    wp_parameters_2_we0 : OUT STD_LOGIC;
    wp_parameters_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    wp_parameters_2_ce1 : OUT STD_LOGIC;
    wp_parameters_2_we1 : OUT STD_LOGIC;
    wp_parameters_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    wp_superpoints : IN STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters : IN STD_LOGIC_VECTOR (4 downto 0);
    zTopMin : IN STD_LOGIC_VECTOR (63 downto 0);
    zTopMax : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_getShadows is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_66 : STD_LOGIC_VECTOR (11 downto 0) := "000001100110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv12_1E : STD_LOGIC_VECTOR (11 downto 0) := "000000011110";
    constant ap_const_lv12_24 : STD_LOGIC_VECTOR (11 downto 0) := "000000100100";
    constant ap_const_lv12_2A : STD_LOGIC_VECTOR (11 downto 0) := "000000101010";
    constant ap_const_lv64_FFFFFFFFFD050F1C : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111101000001010000111100011100";
    constant ap_const_lv64_2FAF0E4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000010111110101111000011100100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_63 : STD_LOGIC_VECTOR (14 downto 0) := "000000001100011";
    constant ap_const_lv15_66 : STD_LOGIC_VECTOR (14 downto 0) := "000000001100110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_359_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_reg_939 : STD_LOGIC_VECTOR (11 downto 0);
    signal wp_parameters_2_addr_1_reg_952 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal wp_parameters_2_addr_2_reg_958 : STD_LOGIC_VECTOR (11 downto 0);
    signal wp_parameters_2_addr_3_reg_964 : STD_LOGIC_VECTOR (11 downto 0);
    signal wp_parameters_2_addr_4_reg_969 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln171_cast_fu_438_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln171_cast_reg_974 : STD_LOGIC_VECTOR (32 downto 0);
    signal zTop_min_fu_448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zTop_min_reg_979 : STD_LOGIC_VECTOR (63 downto 0);
    signal zTop_max_fu_462_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zTop_max_reg_985 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln168_fu_474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln168_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln170_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln170_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln170_reg_997_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln168_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1006_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln174_fu_552_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_reg_1020_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal z_j_min_reg_1024 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal z_j_max_reg_1030 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_1_load_reg_1036 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal topL_jR_3_load_reg_1042 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jL_3_load_reg_1048 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jR_3_load_reg_1054 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln189_fu_681_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln189_reg_1091 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln187_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln187_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_phi_fu_268_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_15_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg : STD_LOGIC := '0';
    signal p_cast_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_fu_391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln182_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln183_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln171_3_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_fu_547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_1_fu_90 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jR_3_fu_94 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jL_3_fu_98 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jR_3_fu_102 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_2_fu_106 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_4_fu_110 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_5_fu_114 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jR_3_1_fu_118 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jR_3_2_fu_122 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jR_3_3_fu_126 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jL_3_1_fu_130 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jL_3_2_fu_134 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jL_3_3_fu_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jR_3_1_fu_142 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jR_3_2_fu_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal topR_jR_3_3_fu_150 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_6_fu_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_3_8_fu_705_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln189_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal empty_101_fu_158 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_ln_fu_737_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln193_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_102_fu_162 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_ln1_fu_775_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln197_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_103_fu_166 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_ln2_fu_812_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln201_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_339_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_160_cast_fu_355_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_99_fu_365_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln180_fu_376_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln181_fu_386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln182_fu_396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln183_fu_406_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_fu_420_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln171_1_fu_428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln171_fu_416_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln171_fu_432_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln159_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_100_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln171_2_fu_491_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln171_1_fu_495_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln171_fu_500_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln171_1_fu_512_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_cast_fu_504_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl4_cast_fu_516_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln171_2_fu_524_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln171_3_fu_530_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln172_fu_541_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln189_1_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_2_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal topL_jL_3_fu_691_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (63 downto 0);
        z_j : IN STD_LOGIC_VECTOR (63 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_287 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => zTop_min_reg_979,
        z_j => z_j_min_reg_1024,
        i => ap_const_lv3_5,
        j => add_ln170_reg_997_pp0_iter1_reg,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_300 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => zTop_min_reg_979,
        z_j => z_j_max_reg_1030,
        i => ap_const_lv3_5,
        j => add_ln170_reg_997_pp0_iter1_reg,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_313 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => zTop_max_reg_985,
        z_j => z_j_min_reg_1024,
        i => ap_const_lv3_5,
        j => add_ln170_reg_997_pp0_iter1_reg,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_326 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => zTop_max_reg_985,
        z_j => z_j_max_reg_1030,
        i => ap_const_lv3_5,
        j => add_ln170_reg_997_pp0_iter1_reg,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return);

    mux_42_64_1_1_U134 : component makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => topL_jR_3_3_fu_126,
        din1 => topL_jR_3_1_fu_118,
        din2 => topL_jR_3_2_fu_122,
        din3 => topL_jR_3_3_fu_126,
        din4 => trunc_ln189_fu_681_p1,
        dout => phi_ln_fu_737_p6);

    mux_42_64_1_1_U135 : component makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => topR_jL_3_3_fu_138,
        din1 => topR_jL_3_1_fu_130,
        din2 => topR_jL_3_2_fu_134,
        din3 => topR_jL_3_3_fu_138,
        din4 => trunc_ln189_reg_1091,
        dout => phi_ln1_fu_775_p6);

    mux_42_64_1_1_U136 : component makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => topR_jR_3_3_fu_150,
        din1 => topR_jR_3_1_fu_142,
        din2 => topR_jR_3_2_fu_146,
        din3 => topR_jR_3_3_fu_150,
        din4 => trunc_ln189_reg_1091,
        dout => phi_ln2_fu_812_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_101_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                empty_101_fu_158 <= topL_jR_3_load_reg_1042;
            elsif (((icmp_ln193_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1))) then 
                empty_101_fu_158 <= phi_ln_fu_737_p6;
            end if; 
        end if;
    end process;

    empty_102_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                empty_102_fu_162 <= topR_jL_3_load_reg_1048;
            elsif (((icmp_ln197_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                empty_102_fu_162 <= phi_ln1_fu_775_p6;
            end if; 
        end if;
    end process;

    empty_103_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                empty_103_fu_166 <= topR_jR_3_load_reg_1054;
            elsif (((icmp_ln201_fu_826_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                empty_103_fu_166 <= phi_ln2_fu_812_p6;
            end if; 
        end if;
    end process;

    i_15_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_15_reg_275 <= add_ln187_fu_837_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_15_reg_275 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    i_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_264 <= add_ln170_reg_997;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_264 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    topL_jL_3_6_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                topL_jL_3_6_fu_154 <= topL_jL_3_1_load_reg_1036;
            elsif (((icmp_ln189_fu_714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1))) then 
                topL_jL_3_6_fu_154 <= topL_jL_3_8_fu_705_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln168_reg_991 <= add_ln168_fu_474_p2;
                    add_ln171_cast_reg_974(7 downto 0) <= add_ln171_cast_fu_438_p1(7 downto 0);
                    wp_parameters_2_addr_1_reg_952(11 downto 3) <= zext_ln180_fu_381_p1(12 - 1 downto 0)(11 downto 3);
                    wp_parameters_2_addr_2_reg_958(11 downto 3) <= zext_ln181_fu_391_p1(12 - 1 downto 0)(11 downto 3);
                    wp_parameters_2_addr_3_reg_964(11 downto 3) <= zext_ln182_fu_401_p1(12 - 1 downto 0)(11 downto 3);
                    wp_parameters_2_addr_4_reg_969(11 downto 3) <= zext_ln183_fu_411_p1(12 - 1 downto 0)(11 downto 3);
                zTop_max_reg_985 <= zTop_max_fu_462_p3;
                zTop_min_reg_979 <= zTop_min_fu_448_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln170_reg_997 <= add_ln170_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln170_reg_997_pp0_iter1_reg <= add_ln170_reg_997;
                icmp_ln168_reg_1006 <= icmp_ln168_fu_486_p2;
                icmp_ln168_reg_1006_pp0_iter1_reg <= icmp_ln168_reg_1006;
                trunc_ln174_reg_1020_pp0_iter1_reg <= trunc_ln174_reg_1020;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    empty_reg_939(11 downto 3) <= empty_fu_359_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln168_reg_1006_pp0_iter10_reg <= icmp_ln168_reg_1006_pp0_iter9_reg;
                icmp_ln168_reg_1006_pp0_iter11_reg <= icmp_ln168_reg_1006_pp0_iter10_reg;
                icmp_ln168_reg_1006_pp0_iter12_reg <= icmp_ln168_reg_1006_pp0_iter11_reg;
                icmp_ln168_reg_1006_pp0_iter2_reg <= icmp_ln168_reg_1006_pp0_iter1_reg;
                icmp_ln168_reg_1006_pp0_iter3_reg <= icmp_ln168_reg_1006_pp0_iter2_reg;
                icmp_ln168_reg_1006_pp0_iter4_reg <= icmp_ln168_reg_1006_pp0_iter3_reg;
                icmp_ln168_reg_1006_pp0_iter5_reg <= icmp_ln168_reg_1006_pp0_iter4_reg;
                icmp_ln168_reg_1006_pp0_iter6_reg <= icmp_ln168_reg_1006_pp0_iter5_reg;
                icmp_ln168_reg_1006_pp0_iter7_reg <= icmp_ln168_reg_1006_pp0_iter6_reg;
                icmp_ln168_reg_1006_pp0_iter8_reg <= icmp_ln168_reg_1006_pp0_iter7_reg;
                icmp_ln168_reg_1006_pp0_iter9_reg <= icmp_ln168_reg_1006_pp0_iter8_reg;
                trunc_ln174_reg_1020_pp0_iter10_reg <= trunc_ln174_reg_1020_pp0_iter9_reg;
                trunc_ln174_reg_1020_pp0_iter11_reg <= trunc_ln174_reg_1020_pp0_iter10_reg;
                trunc_ln174_reg_1020_pp0_iter12_reg <= trunc_ln174_reg_1020_pp0_iter11_reg;
                trunc_ln174_reg_1020_pp0_iter2_reg <= trunc_ln174_reg_1020_pp0_iter1_reg;
                trunc_ln174_reg_1020_pp0_iter3_reg <= trunc_ln174_reg_1020_pp0_iter2_reg;
                trunc_ln174_reg_1020_pp0_iter4_reg <= trunc_ln174_reg_1020_pp0_iter3_reg;
                trunc_ln174_reg_1020_pp0_iter5_reg <= trunc_ln174_reg_1020_pp0_iter4_reg;
                trunc_ln174_reg_1020_pp0_iter6_reg <= trunc_ln174_reg_1020_pp0_iter5_reg;
                trunc_ln174_reg_1020_pp0_iter7_reg <= trunc_ln174_reg_1020_pp0_iter6_reg;
                trunc_ln174_reg_1020_pp0_iter8_reg <= trunc_ln174_reg_1020_pp0_iter7_reg;
                trunc_ln174_reg_1020_pp0_iter9_reg <= trunc_ln174_reg_1020_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln174_reg_1020_pp0_iter12_reg = ap_const_lv2_0) and (icmp_ln168_reg_1006_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                topL_jL_3_1_fu_90 <= grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return;
                topL_jR_3_fu_94 <= grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return;
                topR_jL_3_fu_98 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
                topR_jR_3_fu_102 <= grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                topL_jL_3_1_load_reg_1036 <= topL_jL_3_1_fu_90;
                topL_jR_3_load_reg_1042 <= topL_jR_3_fu_94;
                topR_jL_3_load_reg_1048 <= topR_jL_3_fu_98;
                topR_jR_3_load_reg_1054 <= topR_jR_3_fu_102;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln174_reg_1020_pp0_iter12_reg = ap_const_lv2_1) and (icmp_ln168_reg_1006_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                topL_jL_3_2_fu_106 <= grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return;
                topL_jR_3_1_fu_118 <= grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return;
                topR_jL_3_1_fu_130 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
                topR_jR_3_1_fu_142 <= grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln174_reg_1020_pp0_iter12_reg = ap_const_lv2_2) and (icmp_ln168_reg_1006_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                topL_jL_3_4_fu_110 <= grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return;
                topL_jR_3_2_fu_122 <= grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return;
                topR_jL_3_2_fu_134 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
                topR_jR_3_2_fu_146 <= grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln174_reg_1020_pp0_iter12_reg = ap_const_lv2_3) and (icmp_ln168_reg_1006_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                topL_jL_3_5_fu_114 <= grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_return;
                topL_jR_3_3_fu_126 <= grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_return;
                topR_jL_3_3_fu_138 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
                topR_jR_3_3_fu_150 <= grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln168_fu_486_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln174_reg_1020 <= trunc_ln174_fu_552_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1))) then
                trunc_ln189_reg_1091 <= trunc_ln189_fu_681_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                z_j_max_reg_1030 <= wp_superpoints_2_q0;
                z_j_min_reg_1024 <= wp_superpoints_2_q1;
            end if;
        end if;
    end process;
    empty_reg_939(2 downto 0) <= "000";
    wp_parameters_2_addr_1_reg_952(2 downto 0) <= "000";
    wp_parameters_2_addr_2_reg_958(2 downto 0) <= "110";
    wp_parameters_2_addr_3_reg_964(2 downto 0) <= "100";
    wp_parameters_2_addr_4_reg_969(2 downto 0) <= "010";
    add_ln171_cast_reg_974(32 downto 8) <= "0000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter13, ap_CS_fsm_state19, icmp_ln187_fu_664_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln168_fu_474_p2 <= std_logic_vector(unsigned(empty_100_fu_470_p1) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln170_fu_480_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_268_p4) + unsigned(ap_const_lv32_1));
    add_ln171_1_fu_495_p2 <= std_logic_vector(unsigned(add_ln171_cast_reg_974) + unsigned(zext_ln171_2_fu_491_p1));
    add_ln171_2_fu_524_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_504_p3) + unsigned(p_shl4_cast_fu_516_p3));
    add_ln171_3_fu_530_p2 <= std_logic_vector(unsigned(add_ln171_2_fu_524_p2) + unsigned(ap_const_lv15_63));
    add_ln171_cast_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln171_fu_432_p2),33));
    add_ln171_fu_432_p2 <= std_logic_vector(unsigned(zext_ln171_1_fu_428_p1) + unsigned(zext_ln171_fu_416_p1));
    add_ln172_fu_541_p2 <= std_logic_vector(unsigned(add_ln171_2_fu_524_p2) + unsigned(ap_const_lv15_66));
    add_ln180_fu_376_p2 <= std_logic_vector(unsigned(empty_reg_939) + unsigned(ap_const_lv12_18));
    add_ln181_fu_386_p2 <= std_logic_vector(unsigned(empty_reg_939) + unsigned(ap_const_lv12_1E));
    add_ln182_fu_396_p2 <= std_logic_vector(unsigned(empty_reg_939) + unsigned(ap_const_lv12_24));
    add_ln183_fu_406_p2 <= std_logic_vector(unsigned(empty_reg_939) + unsigned(ap_const_lv12_2A));
    add_ln187_fu_837_p2 <= std_logic_vector(unsigned(i_15_reg_275) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(3);
    ap_CS_fsm_state18 <= ap_CS_fsm(4);
    ap_CS_fsm_state19 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(6);
    ap_CS_fsm_state21 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln168_fu_486_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln168_fu_486_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_268_p4_assign_proc : process(i_reg_264, add_ln170_reg_997, ap_CS_fsm_pp0_stage0, icmp_ln168_reg_1006, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln168_reg_1006 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_268_p4 <= add_ln170_reg_997;
        else 
            ap_phi_mux_i_phi_fu_268_p4 <= i_reg_264;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_100_fu_470_p1 <= wp_parameters_2_q0(32 - 1 downto 0);
    empty_99_fu_365_p2 <= std_logic_vector(unsigned(empty_fu_359_p2) + unsigned(ap_const_lv12_66));
    empty_fu_359_p2 <= std_logic_vector(unsigned(tmp_fu_339_p3) - unsigned(tmp_160_cast_fu_355_p1));
    grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_287_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_300_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_326_ap_start_reg;
    icmp_ln159_fu_442_p2 <= "1" when (signed(zTopMin) < signed(ap_const_lv64_FFFFFFFFFD050F1C)) else "0";
    icmp_ln160_fu_456_p2 <= "1" when (signed(zTopMax) < signed(ap_const_lv64_2FAF0E4)) else "0";
    icmp_ln168_fu_486_p2 <= "1" when (ap_phi_mux_i_phi_fu_268_p4 = add_ln168_reg_991) else "0";
    icmp_ln187_fu_664_p2 <= "1" when (unsigned(i_15_reg_275) < unsigned(add_ln168_reg_991)) else "0";
    icmp_ln189_1_fu_685_p2 <= "1" when (trunc_ln189_fu_681_p1 = ap_const_lv2_2) else "0";
    icmp_ln189_2_fu_699_p2 <= "1" when (trunc_ln189_fu_681_p1 = ap_const_lv2_1) else "0";
    icmp_ln189_fu_714_p2 <= "1" when (signed(topL_jL_3_8_fu_705_p3) > signed(topL_jL_3_6_fu_154)) else "0";
    icmp_ln193_fu_752_p2 <= "1" when (signed(phi_ln_fu_737_p6) < signed(empty_101_fu_158)) else "0";
    icmp_ln197_fu_789_p2 <= "1" when (signed(phi_ln1_fu_775_p6) > signed(empty_102_fu_162)) else "0";
    icmp_ln201_fu_826_p2 <= "1" when (signed(phi_ln2_fu_812_p6) < signed(empty_103_fu_166)) else "0";
    p_cast_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_99_fu_365_p2),64));
    p_shl3_cast_fu_504_p3 <= (trunc_ln171_fu_500_p1 & ap_const_lv7_0);
    p_shl4_cast_fu_516_p3 <= (trunc_ln171_1_fu_512_p1 & ap_const_lv4_0);
    tmp_160_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_347_p3),12));
    tmp_63_fu_420_p3 <= (wp_superpoints & ap_const_lv2_0);
    tmp_fu_339_p3 <= (wp_parameters & ap_const_lv7_0);
    tmp_s_fu_347_p3 <= (wp_parameters & ap_const_lv3_0);
    topL_jL_3_8_fu_705_p3 <= 
        topL_jL_3_2_fu_106 when (icmp_ln189_2_fu_699_p2(0) = '1') else 
        topL_jL_3_fu_691_p3;
    topL_jL_3_fu_691_p3 <= 
        topL_jL_3_4_fu_110 when (icmp_ln189_1_fu_685_p2(0) = '1') else 
        topL_jL_3_5_fu_114;
    trunc_ln171_1_fu_512_p1 <= add_ln171_1_fu_495_p2(11 - 1 downto 0);
    trunc_ln171_fu_500_p1 <= add_ln171_1_fu_495_p2(8 - 1 downto 0);
    trunc_ln174_fu_552_p1 <= ap_phi_mux_i_phi_fu_268_p4(2 - 1 downto 0);
    trunc_ln189_fu_681_p1 <= i_15_reg_275(2 - 1 downto 0);

    wp_parameters_2_address0_assign_proc : process(ap_CS_fsm_state1, wp_parameters_2_addr_1_reg_952, wp_parameters_2_addr_2_reg_958, wp_parameters_2_addr_3_reg_964, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, p_cast_fu_371_p1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_2_address0 <= wp_parameters_2_addr_1_reg_952;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            wp_parameters_2_address0 <= wp_parameters_2_addr_3_reg_964;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_2_address0 <= wp_parameters_2_addr_2_reg_958;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_parameters_2_address0 <= p_cast_fu_371_p1(12 - 1 downto 0);
        else 
            wp_parameters_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_2_address1_assign_proc : process(wp_parameters_2_addr_1_reg_952, wp_parameters_2_addr_2_reg_958, wp_parameters_2_addr_4_reg_969, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_2_address1 <= wp_parameters_2_addr_2_reg_958;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            wp_parameters_2_address1 <= wp_parameters_2_addr_4_reg_969;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_2_address1 <= wp_parameters_2_addr_1_reg_952;
        else 
            wp_parameters_2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_parameters_2_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_2_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            wp_parameters_2_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_2_d0_assign_proc : process(topL_jR_3_load_reg_1042, topR_jL_3_load_reg_1048, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, topL_jL_3_8_fu_705_p3, ap_CS_fsm_state17, phi_ln1_fu_775_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            wp_parameters_2_d0 <= phi_ln1_fu_775_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_2_d0 <= topL_jL_3_8_fu_705_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            wp_parameters_2_d0 <= topR_jL_3_load_reg_1048;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_2_d0 <= topL_jR_3_load_reg_1042;
        else 
            wp_parameters_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_2_d1_assign_proc : process(topL_jL_3_1_load_reg_1036, topR_jR_3_load_reg_1054, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state18, ap_CS_fsm_state17, phi_ln_fu_737_p6, phi_ln2_fu_812_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            wp_parameters_2_d1 <= phi_ln2_fu_812_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_2_d1 <= phi_ln_fu_737_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            wp_parameters_2_d1 <= topR_jR_3_load_reg_1054;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_2_d1 <= topL_jL_3_1_load_reg_1036;
        else 
            wp_parameters_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_2_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln187_fu_664_p2, ap_CS_fsm_state20, ap_CS_fsm_state18, icmp_ln189_fu_714_p2, ap_CS_fsm_state17, icmp_ln197_fu_789_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((icmp_ln197_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((icmp_ln189_fu_714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1)))) then 
            wp_parameters_2_we0 <= ap_const_logic_1;
        else 
            wp_parameters_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_2_we1_assign_proc : process(ap_CS_fsm_state19, icmp_ln187_fu_664_p2, ap_CS_fsm_state20, ap_CS_fsm_state18, ap_CS_fsm_state17, icmp_ln193_fu_752_p2, icmp_ln201_fu_826_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((icmp_ln201_fu_826_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((icmp_ln193_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln187_fu_664_p2 = ap_const_lv1_1)))) then 
            wp_parameters_2_we1 <= ap_const_logic_1;
        else 
            wp_parameters_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    wp_superpoints_2_address0 <= zext_ln172_fu_547_p1(15 - 1 downto 0);
    wp_superpoints_2_address1 <= zext_ln171_3_fu_536_p1(15 - 1 downto 0);

    wp_superpoints_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            wp_superpoints_2_ce0 <= ap_const_logic_1;
        else 
            wp_superpoints_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            wp_superpoints_2_ce1 <= ap_const_logic_1;
        else 
            wp_superpoints_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zTop_max_fu_462_p3 <= 
        zTopMax when (icmp_ln160_fu_456_p2(0) = '1') else 
        ap_const_lv64_2FAF0E4;
    zTop_min_fu_448_p3 <= 
        ap_const_lv64_FFFFFFFFFD050F1C when (icmp_ln159_fu_442_p2(0) = '1') else 
        zTopMin;
    zext_ln171_1_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_420_p3),8));
    zext_ln171_2_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_268_p4),33));
    zext_ln171_3_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln171_3_fu_530_p2),64));
    zext_ln171_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wp_superpoints),8));
    zext_ln172_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln172_fu_541_p2),64));
    zext_ln180_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln180_fu_376_p2),64));
    zext_ln181_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln181_fu_386_p2),64));
    zext_ln182_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln182_fu_396_p2),64));
    zext_ln183_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln183_fu_406_p2),64));
end behav;
