// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDarray_address0,
        GDarray_ce0,
        GDarray_q0,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1,
        ppl,
        nPatchesAtOriginal,
        previous_z_top_min_read,
        complementary_apexZ0,
        white_space_height_read,
        original_c,
        original_d,
        p_read12,
        p_read13,
        z_top_min_read,
        temp_address0,
        temp_ce0,
        temp_we0,
        temp_d0,
        temp_q0,
        temp_address1,
        temp_ce1,
        temp_q1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_602_p_idle,
        grp_fu_1575_p_din0,
        grp_fu_1575_p_dout0,
        grp_fu_1575_p_ce,
        grp_fu_1578_p_din0,
        grp_fu_1578_p_dout0,
        grp_fu_1578_p_ce,
        grp_fu_631_p_din0,
        grp_fu_631_p_din1,
        grp_fu_631_p_opcode,
        grp_fu_631_p_dout0,
        grp_fu_631_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce
);

parameter    ap_ST_fsm_state1 = 62'd1;
parameter    ap_ST_fsm_state2 = 62'd2;
parameter    ap_ST_fsm_state3 = 62'd4;
parameter    ap_ST_fsm_state4 = 62'd8;
parameter    ap_ST_fsm_state5 = 62'd16;
parameter    ap_ST_fsm_state6 = 62'd32;
parameter    ap_ST_fsm_state7 = 62'd64;
parameter    ap_ST_fsm_state8 = 62'd128;
parameter    ap_ST_fsm_state9 = 62'd256;
parameter    ap_ST_fsm_state10 = 62'd512;
parameter    ap_ST_fsm_state11 = 62'd1024;
parameter    ap_ST_fsm_state12 = 62'd2048;
parameter    ap_ST_fsm_state13 = 62'd4096;
parameter    ap_ST_fsm_state14 = 62'd8192;
parameter    ap_ST_fsm_state15 = 62'd16384;
parameter    ap_ST_fsm_state16 = 62'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 62'd65536;
parameter    ap_ST_fsm_state19 = 62'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 62'd262144;
parameter    ap_ST_fsm_state22 = 62'd524288;
parameter    ap_ST_fsm_pp2_stage0 = 62'd1048576;
parameter    ap_ST_fsm_state25 = 62'd2097152;
parameter    ap_ST_fsm_pp3_stage0 = 62'd4194304;
parameter    ap_ST_fsm_state34 = 62'd8388608;
parameter    ap_ST_fsm_pp4_stage0 = 62'd16777216;
parameter    ap_ST_fsm_state39 = 62'd33554432;
parameter    ap_ST_fsm_pp5_stage0 = 62'd67108864;
parameter    ap_ST_fsm_state44 = 62'd134217728;
parameter    ap_ST_fsm_pp6_stage0 = 62'd268435456;
parameter    ap_ST_fsm_state58 = 62'd536870912;
parameter    ap_ST_fsm_pp7_stage0 = 62'd1073741824;
parameter    ap_ST_fsm_state62 = 62'd2147483648;
parameter    ap_ST_fsm_state63 = 62'd4294967296;
parameter    ap_ST_fsm_state64 = 62'd8589934592;
parameter    ap_ST_fsm_state65 = 62'd17179869184;
parameter    ap_ST_fsm_state66 = 62'd34359738368;
parameter    ap_ST_fsm_state67 = 62'd68719476736;
parameter    ap_ST_fsm_state68 = 62'd137438953472;
parameter    ap_ST_fsm_state69 = 62'd274877906944;
parameter    ap_ST_fsm_state70 = 62'd549755813888;
parameter    ap_ST_fsm_state71 = 62'd1099511627776;
parameter    ap_ST_fsm_state72 = 62'd2199023255552;
parameter    ap_ST_fsm_state73 = 62'd4398046511104;
parameter    ap_ST_fsm_state74 = 62'd8796093022208;
parameter    ap_ST_fsm_state75 = 62'd17592186044416;
parameter    ap_ST_fsm_state76 = 62'd35184372088832;
parameter    ap_ST_fsm_state77 = 62'd70368744177664;
parameter    ap_ST_fsm_state78 = 62'd140737488355328;
parameter    ap_ST_fsm_state79 = 62'd281474976710656;
parameter    ap_ST_fsm_state80 = 62'd562949953421312;
parameter    ap_ST_fsm_state81 = 62'd1125899906842624;
parameter    ap_ST_fsm_state82 = 62'd2251799813685248;
parameter    ap_ST_fsm_state83 = 62'd4503599627370496;
parameter    ap_ST_fsm_state84 = 62'd9007199254740992;
parameter    ap_ST_fsm_state85 = 62'd18014398509481984;
parameter    ap_ST_fsm_state86 = 62'd36028797018963968;
parameter    ap_ST_fsm_state87 = 62'd72057594037927936;
parameter    ap_ST_fsm_state88 = 62'd144115188075855872;
parameter    ap_ST_fsm_state89 = 62'd288230376151711744;
parameter    ap_ST_fsm_state90 = 62'd576460752303423488;
parameter    ap_ST_fsm_state91 = 62'd1152921504606846976;
parameter    ap_ST_fsm_state92 = 62'd2305843009213693952;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] n_patches_i;
output  [31:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [10:0] GDarray_address0;
output   GDarray_ce0;
input  [191:0] GDarray_q0;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [14:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [14:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [63:0] patches_parameters_d0;
input  [63:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [63:0] patches_parameters_q1;
input  [31:0] ppl;
input  [31:0] nPatchesAtOriginal;
input  [63:0] previous_z_top_min_read;
input  [63:0] complementary_apexZ0;
input  [63:0] white_space_height_read;
input  [63:0] original_c;
input  [63:0] original_d;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [63:0] z_top_min_read;
output  [9:0] temp_address0;
output   temp_ce0;
output   temp_we0;
output  [63:0] temp_d0;
input  [63:0] temp_q0;
output  [9:0] temp_address1;
output   temp_ce1;
input  [63:0] temp_q1;
output  [63:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [63:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din1;
output  [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din3;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din5;
input  [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_602_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_602_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_602_p_idle;
output  [31:0] grp_fu_1575_p_din0;
input  [31:0] grp_fu_1575_p_dout0;
output   grp_fu_1575_p_ce;
output  [31:0] grp_fu_1578_p_din0;
input  [31:0] grp_fu_1578_p_dout0;
output   grp_fu_1578_p_ce;
output  [63:0] grp_fu_631_p_din0;
output  [63:0] grp_fu_631_p_din1;
output  [4:0] grp_fu_631_p_opcode;
input  [0:0] grp_fu_631_p_dout0;
output   grp_fu_631_p_ce;
output  [63:0] grp_fu_636_p_din0;
input  [63:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[10:0] GDarray_address0;
reg GDarray_ce0;
reg[2:0] GDn_points_address0;
reg GDn_points_ce0;
reg[14:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg[14:0] patches_superpoints_address1;
reg patches_superpoints_ce1;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[63:0] patches_parameters_d0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg temp_ce0;
reg temp_we0;
reg temp_ce1;
reg[63:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[63:0] ap_return_5;
reg[63:0] ap_return_6;
reg[63:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [61:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_1_reg_556;
reg   [2:0] i_3_reg_576;
reg   [2:0] i_2_reg_587;
reg   [2:0] i_4_reg_627;
reg   [2:0] i_5_reg_638;
reg   [2:0] i_6_reg_649;
reg   [2:0] i_7_reg_661;
reg   [2:0] i_8_reg_672;
reg   [63:0] layerSMin_reg_683;
reg   [31:0] layerWithSmallestShift_reg_695;
wire   [31:0] grp_fu_856_p1;
reg   [31:0] reg_905;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_state26_pp3_stage0_iter0;
wire    ap_block_state27_pp3_stage0_iter1;
wire    ap_block_state28_pp3_stage0_iter2;
wire    ap_block_state29_pp3_stage0_iter3;
wire    ap_block_state30_pp3_stage0_iter4;
wire    ap_block_state31_pp3_stage0_iter5;
wire    ap_block_state32_pp3_stage0_iter6;
wire    ap_block_state33_pp3_stage0_iter7;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln892_reg_2905;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter1_reg;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state35_pp4_stage0_iter0;
wire    ap_block_state36_pp4_stage0_iter1;
wire    ap_block_state37_pp4_stage0_iter2;
wire    ap_block_state38_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln897_reg_2944;
reg   [0:0] icmp_ln897_reg_2944_pp4_iter1_reg;
wire   [31:0] new_z_i_index_q1;
reg    ap_enable_reg_pp3_iter5;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter4_reg;
wire   [31:0] new_z_i_index_q0;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
reg   [31:0] reg_918;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state79;
wire   [31:0] grp_fu_899_p2;
reg   [31:0] reg_923;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_get_index_from_z_fu_797_ap_return;
reg   [31:0] tmp_reg_2766;
wire   [2:0] add_ln857_fu_928_p2;
reg   [2:0] add_ln857_reg_2772;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln855_fu_934_p1;
reg   [63:0] zext_ln855_reg_2778;
wire   [0:0] icmp_ln855_fu_938_p2;
wire   [0:0] icmp_ln860_fu_944_p2;
reg   [0:0] icmp_ln860_reg_2787;
wire   [31:0] add_ln862_fu_948_p2;
reg   [31:0] add_ln862_reg_2791;
wire   [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_return;
reg   [63:0] tmp_s_reg_2796;
wire    ap_CS_fsm_state15;
wire   [2:0] add_ln863_fu_953_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln863_fu_959_p2;
reg   [0:0] icmp_ln863_reg_2806;
wire   [63:0] i_1_cast_fu_965_p1;
reg   [63:0] i_1_cast_reg_2810;
wire   [0:0] tmp_16_fu_970_p3;
reg   [0:0] tmp_16_reg_2820;
wire    ap_CS_fsm_state19;
wire   [31:0] add_ln882_fu_977_p2;
reg   [31:0] add_ln882_reg_2824;
wire   [31:0] add_ln883_fu_982_p2;
reg   [31:0] add_ln883_reg_2829;
wire   [31:0] add_ln873_fu_988_p2;
reg   [31:0] add_ln873_reg_2834;
wire   [31:0] add_ln874_fu_993_p2;
reg   [31:0] add_ln874_reg_2839;
wire   [2:0] add_ln884_fu_999_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln884_fu_1005_p2;
reg   [0:0] icmp_ln884_reg_2849;
wire   [63:0] i_3_cast_fu_1011_p1;
reg   [63:0] i_3_cast_reg_2853;
wire    ap_CS_fsm_state22;
wire   [2:0] add_ln875_fu_1016_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state23_pp2_stage0_iter0;
wire    ap_block_state24_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln875_fu_1022_p2;
reg   [0:0] icmp_ln875_reg_2873;
wire   [63:0] i_2_cast_fu_1028_p1;
reg   [63:0] i_2_cast_reg_2877;
wire   [31:0] select_ln890_fu_1052_p3;
reg   [31:0] select_ln890_reg_2887;
wire    ap_CS_fsm_state25;
wire   [2:0] add_ln892_fu_1060_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln892_fu_1066_p2;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter2_reg;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter3_reg;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter5_reg;
reg   [0:0] icmp_ln892_reg_2905_pp3_iter6_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter1_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter2_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter3_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter4_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter5_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2909_pp3_iter6_reg;
reg    ap_enable_reg_pp3_iter1;
wire   [31:0] grp_fu_851_p2;
reg   [31:0] sub_reg_2925;
reg   [31:0] sub_reg_2925_pp3_iter6_reg;
wire   [31:0] grp_fu_860_p1;
reg   [31:0] conv_reg_2932;
wire   [2:0] add_ln897_fu_1307_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln897_fu_1313_p2;
reg   [0:0] icmp_ln897_reg_2944_pp4_iter2_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2948;
reg   [2:0] new_z_i_index_addr_4_reg_2948_pp4_iter1_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2948_pp4_iter2_reg;
wire   [2:0] add_ln903_fu_1511_p2;
reg   [2:0] add_ln903_reg_2954;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state40_pp5_stage0_iter0;
wire    ap_block_state41_pp5_stage0_iter1;
wire    ap_block_state42_pp5_stage0_iter2;
wire    ap_block_state43_pp5_stage0_iter3;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln903_fu_1517_p2;
reg   [0:0] icmp_ln903_reg_2959;
reg   [0:0] icmp_ln903_reg_2959_pp5_iter1_reg;
reg   [0:0] icmp_ln903_reg_2959_pp5_iter2_reg;
wire   [63:0] i_6_cast13_fu_1523_p1;
reg   [63:0] i_6_cast13_reg_2963;
reg   [63:0] i_6_cast13_reg_2963_pp5_iter1_reg;
reg   [63:0] i_6_cast13_reg_2963_pp5_iter2_reg;
wire   [37:0] add_ln54_fu_1598_p2;
reg   [37:0] add_ln54_reg_2973;
wire   [63:0] add_ln905_fu_1668_p2;
reg   [63:0] add_ln905_reg_2983;
wire   [0:0] icmp_ln909_fu_1696_p2;
reg   [0:0] icmp_ln909_reg_3018;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state45_pp6_stage0_iter0;
wire    ap_block_state46_pp6_stage0_iter1;
wire    ap_block_state47_pp6_stage0_iter2;
wire    ap_block_state48_pp6_stage0_iter3;
wire    ap_block_state49_pp6_stage0_iter4;
wire    ap_block_state50_pp6_stage0_iter5;
wire    ap_block_state51_pp6_stage0_iter6;
wire    ap_block_state52_pp6_stage0_iter7;
wire    ap_block_state53_pp6_stage0_iter8;
wire    ap_block_state54_pp6_stage0_iter9;
wire    ap_block_state55_pp6_stage0_iter10;
wire    ap_block_state56_pp6_stage0_iter11;
wire    ap_block_state57_pp6_stage0_iter12;
wire    ap_block_pp6_stage0_11001;
wire   [2:0] add_ln914_fu_1702_p2;
reg   [2:0] add_ln914_reg_3022;
reg    ap_enable_reg_pp6_iter0;
wire   [1:0] trunc_ln911_fu_1713_p1;
reg   [1:0] trunc_ln911_reg_3033;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter1_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter2_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter3_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter4_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter5_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter6_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter7_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter8_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter9_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter10_reg;
reg   [1:0] trunc_ln911_reg_3033_pp6_iter11_reg;
wire   [2:0] add_ln921_fu_1746_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state59_pp7_stage0_iter0;
wire    ap_block_state60_pp7_stage0_iter1;
wire    ap_block_state61_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln921_fu_1752_p2;
reg   [0:0] icmp_ln921_reg_3042;
reg   [0:0] icmp_ln921_reg_3042_pp7_iter1_reg;
wire   [1:0] trunc_ln923_fu_1758_p1;
reg   [1:0] trunc_ln923_reg_3046;
reg   [1:0] trunc_ln923_reg_3046_pp7_iter1_reg;
wire   [63:0] sub_ln923_fu_1776_p2;
reg   [10:0] tmp_46_reg_3056;
wire   [51:0] tmp_47_fu_1796_p1;
reg   [51:0] tmp_47_reg_3062;
wire   [31:0] layerWithSmallestShift_1_fu_1906_p3;
reg    ap_enable_reg_pp7_iter2;
wire   [63:0] layerSMin_1_fu_1914_p3;
wire   [63:0] tmp_11_fu_1926_p6;
reg   [63:0] tmp_11_reg_3077;
wire    ap_CS_fsm_state62;
wire   [63:0] sub_ln943_fu_1940_p2;
wire   [63:0] bitcast_ln521_fu_1958_p1;
wire    ap_CS_fsm_state63;
wire   [0:0] icmp_ln943_fu_1977_p2;
reg   [0:0] icmp_ln943_reg_3094;
wire   [0:0] icmp_ln943_1_fu_1983_p2;
reg   [0:0] icmp_ln943_1_reg_3099;
wire    ap_CS_fsm_state64;
wire   [0:0] and_ln943_fu_1993_p2;
wire   [63:0] add_ln945_fu_2098_p2;
reg   [63:0] add_ln945_reg_3112;
wire   [63:0] trunc_ln945_fu_2121_p1;
wire    ap_CS_fsm_state65;
wire   [63:0] sub_ln948_fu_2125_p2;
wire    ap_CS_fsm_state66;
wire   [63:0] bitcast_ln521_1_fu_2143_p1;
wire    ap_CS_fsm_state67;
wire   [0:0] icmp_ln948_fu_2162_p2;
reg   [0:0] icmp_ln948_reg_3132;
wire   [0:0] icmp_ln948_1_fu_2168_p2;
reg   [0:0] icmp_ln948_1_reg_3137;
wire    ap_CS_fsm_state68;
wire   [0:0] and_ln948_fu_2178_p2;
wire   [63:0] add_ln950_fu_2283_p2;
reg   [63:0] add_ln950_reg_3150;
wire   [63:0] trunc_ln950_fu_2306_p1;
wire    ap_CS_fsm_state69;
wire   [63:0] sub_ln953_fu_2310_p2;
wire    ap_CS_fsm_state70;
wire   [63:0] bitcast_ln521_2_fu_2328_p1;
wire    ap_CS_fsm_state71;
wire   [0:0] icmp_ln953_fu_2347_p2;
reg   [0:0] icmp_ln953_reg_3170;
wire   [0:0] icmp_ln953_1_fu_2353_p2;
reg   [0:0] icmp_ln953_1_reg_3175;
wire    ap_CS_fsm_state72;
wire   [0:0] and_ln953_fu_2363_p2;
wire   [63:0] add_ln955_fu_2468_p2;
reg   [63:0] add_ln955_reg_3188;
wire   [63:0] trunc_ln955_fu_2491_p1;
wire    ap_CS_fsm_state73;
wire   [63:0] select_ln958_fu_2516_p3;
reg   [63:0] select_ln958_reg_3198;
wire   [0:0] icmp_ln975_fu_2524_p2;
reg   [0:0] icmp_ln975_reg_3205;
wire   [31:0] grp_makePatch_alignedToLine_fu_772_ap_return;
reg   [31:0] ppl_assign2_reg_3209;
wire    ap_CS_fsm_state78;
wire   [4:0] trunc_ln1003_fu_2529_p1;
reg   [4:0] trunc_ln1003_reg_3214;
wire   [0:0] icmp_ln1028_fu_2601_p2;
reg   [0:0] icmp_ln1028_reg_3230;
wire   [4:0] add_ln1006_fu_2607_p2;
reg   [4:0] add_ln1006_reg_3234;
wire    ap_CS_fsm_state80;
wire   [63:0] select_ln1012_fu_2628_p3;
reg   [63:0] select_ln1012_reg_3239;
wire   [4:0] thirdLastPatchIdx_fu_2636_p2;
reg   [4:0] thirdLastPatchIdx_reg_3244;
wire   [0:0] icmp_ln1038_fu_2641_p2;
reg   [0:0] icmp_ln1038_reg_3249;
wire    ap_CS_fsm_state81;
wire   [2:0] add_ln1038_fu_2647_p2;
reg   [2:0] add_ln1038_reg_3253;
wire   [31:0] add_ln1058_fu_2698_p2;
wire    ap_CS_fsm_state92;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state20;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state23;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state26;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
wire    ap_CS_fsm_state34;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state35;
reg    ap_enable_reg_pp4_iter3;
wire    ap_CS_fsm_state39;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state40;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
wire    ap_CS_fsm_state44;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state45;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
reg    ap_enable_reg_pp6_iter9;
reg    ap_enable_reg_pp6_iter10;
reg    ap_enable_reg_pp6_iter11;
reg    ap_enable_reg_pp6_iter12;
wire    ap_CS_fsm_state58;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state59;
reg    ap_enable_reg_pp7_iter1;
reg   [2:0] current_z_i_index_address0;
reg    current_z_i_index_ce0;
reg    current_z_i_index_we0;
wire   [31:0] current_z_i_index_q0;
reg   [2:0] new_z_i_index_address0;
reg    new_z_i_index_ce0;
reg    new_z_i_index_we0;
reg   [31:0] new_z_i_index_d0;
reg   [2:0] new_z_i_index_address1;
reg    new_z_i_index_ce1;
reg    new_z_i_index_we1;
wire   [31:0] new_z_i_index_d1;
reg   [2:0] new_z_i_address0;
reg    new_z_i_ce0;
reg    new_z_i_we0;
wire   [63:0] new_z_i_d0;
wire   [63:0] new_z_i_q0;
wire    grp_makePatch_alignedToLine_fu_772_ap_start;
wire    grp_makePatch_alignedToLine_fu_772_ap_done;
wire    grp_makePatch_alignedToLine_fu_772_ap_idle;
wire    grp_makePatch_alignedToLine_fu_772_ap_ready;
wire   [31:0] grp_makePatch_alignedToLine_fu_772_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_772_n_patches_o_ap_vld;
wire   [10:0] grp_makePatch_alignedToLine_fu_772_GDarray_address0;
wire    grp_makePatch_alignedToLine_fu_772_GDarray_ce0;
wire   [2:0] grp_makePatch_alignedToLine_fu_772_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_772_GDn_points_ce0;
wire   [14:0] grp_makePatch_alignedToLine_fu_772_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_772_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_772_patches_superpoints_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_772_patches_superpoints_d0;
wire   [11:0] grp_makePatch_alignedToLine_fu_772_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_772_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_772_patches_parameters_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_772_patches_parameters_d0;
reg   [63:0] grp_makePatch_alignedToLine_fu_772_z_top;
reg   [31:0] grp_makePatch_alignedToLine_fu_772_p_read;
wire   [9:0] grp_makePatch_alignedToLine_fu_772_temp_address0;
wire    grp_makePatch_alignedToLine_fu_772_temp_ce0;
wire    grp_makePatch_alignedToLine_fu_772_temp_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_772_temp_d0;
wire   [9:0] grp_makePatch_alignedToLine_fu_772_temp_address1;
wire    grp_makePatch_alignedToLine_fu_772_temp_ce1;
wire    grp_get_index_from_z_fu_797_ap_start;
wire    grp_get_index_from_z_fu_797_ap_done;
wire    grp_get_index_from_z_fu_797_ap_idle;
wire    grp_get_index_from_z_fu_797_ap_ready;
wire   [10:0] grp_get_index_from_z_fu_797_GDarray_address0;
wire    grp_get_index_from_z_fu_797_GDarray_ce0;
wire   [2:0] grp_get_index_from_z_fu_797_GDn_points_address0;
wire    grp_get_index_from_z_fu_797_GDn_points_ce0;
reg   [2:0] grp_get_index_from_z_fu_797_layer;
reg   [63:0] grp_get_index_from_z_fu_797_z_value;
wire    grp_delete_patch_fu_811_ap_start;
wire    grp_delete_patch_fu_811_ap_done;
wire    grp_delete_patch_fu_811_ap_idle;
wire    grp_delete_patch_fu_811_ap_ready;
wire   [31:0] grp_delete_patch_fu_811_n_patches;
wire    grp_delete_patch_fu_811_n_patches_ap_vld;
wire   [14:0] grp_delete_patch_fu_811_patches_superpoints_address0;
wire    grp_delete_patch_fu_811_patches_superpoints_ce0;
wire    grp_delete_patch_fu_811_patches_superpoints_we0;
wire   [63:0] grp_delete_patch_fu_811_patches_superpoints_d0;
wire   [14:0] grp_delete_patch_fu_811_patches_superpoints_address1;
wire    grp_delete_patch_fu_811_patches_superpoints_ce1;
wire   [11:0] grp_delete_patch_fu_811_patches_parameters_address0;
wire    grp_delete_patch_fu_811_patches_parameters_ce0;
wire    grp_delete_patch_fu_811_patches_parameters_we0;
wire   [63:0] grp_delete_patch_fu_811_patches_parameters_d0;
wire   [11:0] grp_delete_patch_fu_811_patches_parameters_address1;
wire    grp_delete_patch_fu_811_patches_parameters_ce1;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_ce;
wire   [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_z_i;
reg   [63:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_823_k;
wire    grp_areWedgeSuperPointsEqual_fu_839_ap_start;
wire    grp_areWedgeSuperPointsEqual_fu_839_ap_done;
wire    grp_areWedgeSuperPointsEqual_fu_839_ap_idle;
wire    grp_areWedgeSuperPointsEqual_fu_839_ap_ready;
wire   [14:0] grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address0;
wire    grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce0;
wire   [14:0] grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address1;
wire    grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce1;
wire   [0:0] grp_areWedgeSuperPointsEqual_fu_839_ap_return;
reg   [2:0] i_reg_544;
wire    ap_CS_fsm_state16;
reg   [31:0] ap_phi_mux_empty_63_phi_fu_570_p4;
reg   [31:0] empty_63_reg_567;
reg   [31:0] counter_0_reg_598;
reg   [31:0] counterUpshift_0_reg_608;
reg   [31:0] empty_66_reg_618;
reg   [2:0] ap_phi_mux_i_6_phi_fu_653_p4;
wire    ap_block_pp5_stage0;
reg   [2:0] ap_phi_mux_i_7_phi_fu_665_p4;
wire    ap_block_pp6_stage0;
reg   [63:0] z_top_min_0_reg_707;
reg   [63:0] z_top_min_1_reg_717;
reg   [63:0] z_top_min_2_reg_728;
reg   [2:0] i_9_reg_738;
wire    ap_CS_fsm_state86;
reg   [31:0] ap_phi_mux_current_z_top_index_0_phi_fu_753_p6;
reg   [31:0] current_z_top_index_0_reg_750;
wire    ap_CS_fsm_state87;
reg   [63:0] ap_phi_mux_z_top_min_4_phi_fu_764_p6;
reg   [63:0] z_top_min_4_reg_761;
reg    grp_makePatch_alignedToLine_fu_772_ap_start_reg;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
reg    grp_get_index_from_z_fu_797_ap_start_reg;
reg    grp_delete_patch_fu_811_ap_start_reg;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state89;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg;
reg   [61:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
wire   [31:0] zext_ln911_fu_1717_p1;
reg    grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg;
wire    ap_NS_fsm_state82;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] i_4_cast_fu_1072_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] i_5_cast_fu_1319_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln905_3_fu_1627_p1;
wire   [63:0] trunc_ln914_cast_fu_1708_p1;
wire   [63:0] zext_ln945_3_fu_2057_p1;
wire   [63:0] zext_ln950_3_fu_2242_p1;
wire   [63:0] zext_ln955_3_fu_2427_p1;
wire   [63:0] zext_ln1006_fu_2575_p1;
wire   [63:0] zext_ln1007_fu_2586_p1;
reg   [63:0] new_z_i_atTop_3_fu_272;
reg   [63:0] new_z_i_atTop_3_1_fu_276;
wire    ap_block_pp7_stage0;
reg   [63:0] new_z_i_atTop_3_2_fu_280;
reg   [63:0] new_z_i_atTop_3_3_fu_284;
reg   [63:0] new_z_i_atTop_3_4_fu_288;
wire   [31:0] grp_fu_880_p2;
wire   [31:0] add_ln877_fu_1033_p2;
wire   [31:0] result_V_13_fu_1298_p3;
reg   [31:0] grp_fu_856_p0;
wire   [31:0] grp_fu_860_p0;
reg   [31:0] grp_fu_865_p0;
reg   [31:0] grp_fu_865_p1;
reg   [63:0] grp_fu_872_p0;
wire   [63:0] grp_fu_872_p1;
reg   [63:0] grp_fu_877_p0;
wire  signed [63:0] tmp_16_fu_970_p1;
wire   [31:0] add_ln890_fu_1040_p2;
wire   [0:0] icmp_ln890_fu_1046_p2;
wire   [31:0] bitcast_ln894_fu_1078_p1;
wire   [31:0] bitcast_ln894_1_fu_1095_p1;
wire   [7:0] tmp_9_fu_1081_p4;
wire   [22:0] trunc_ln894_fu_1091_p1;
wire   [0:0] icmp_ln894_1_fu_1118_p2;
wire   [0:0] icmp_ln894_fu_1112_p2;
wire   [7:0] tmp_2_fu_1098_p4;
wire   [22:0] trunc_ln894_1_fu_1108_p1;
wire   [0:0] icmp_ln894_3_fu_1136_p2;
wire   [0:0] icmp_ln894_2_fu_1130_p2;
wire   [0:0] or_ln894_fu_1124_p2;
wire   [0:0] or_ln894_1_fu_1142_p2;
wire   [0:0] and_ln894_fu_1148_p2;
wire   [0:0] grp_fu_865_p2;
wire   [0:0] and_ln894_1_fu_1154_p2;
wire   [31:0] dc_fu_1160_p3;
wire   [31:0] data_V_fu_1166_p1;
wire   [22:0] tmp_43_fu_1188_p1;
wire   [24:0] mantissa_fu_1192_p4;
wire   [7:0] tmp_42_fu_1178_p4;
wire   [8:0] zext_ln341_fu_1206_p1;
wire   [8:0] add_ln341_fu_1210_p2;
wire   [7:0] sub_ln1311_fu_1224_p2;
wire   [0:0] isNeg_fu_1216_p3;
wire  signed [8:0] sext_ln1311_fu_1230_p1;
wire   [8:0] ush_fu_1234_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1242_p1;
wire   [78:0] zext_ln15_fu_1202_p1;
wire   [78:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1246_p1;
wire   [78:0] r_V_fu_1250_p2;
wire   [0:0] tmp_26_fu_1262_p3;
wire   [78:0] r_V_4_fu_1256_p2;
wire   [31:0] zext_ln662_fu_1270_p1;
wire   [31:0] tmp_17_fu_1274_p4;
wire   [31:0] val_fu_1284_p3;
wire   [0:0] p_Result_s_fu_1170_p3;
wire   [31:0] result_V_9_fu_1292_p2;
wire   [31:0] bitcast_ln899_fu_1324_p1;
wire   [7:0] tmp_6_fu_1328_p4;
wire   [22:0] trunc_ln899_fu_1338_p1;
wire   [0:0] icmp_ln899_1_fu_1348_p2;
wire   [0:0] icmp_ln899_fu_1342_p2;
wire   [0:0] or_ln899_fu_1354_p2;
wire   [0:0] and_ln899_fu_1360_p2;
wire   [31:0] data_V_2_fu_1366_p3;
wire   [22:0] tmp_45_fu_1392_p1;
wire   [24:0] mantissa_2_fu_1396_p4;
wire   [7:0] tmp_44_fu_1382_p4;
wire   [8:0] zext_ln341_2_fu_1410_p1;
wire   [8:0] add_ln341_2_fu_1414_p2;
wire   [7:0] sub_ln1311_2_fu_1428_p2;
wire   [0:0] isNeg_2_fu_1420_p3;
wire  signed [8:0] sext_ln1311_2_fu_1434_p1;
wire   [8:0] ush_2_fu_1438_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i54_cast_cast_cast_fu_1446_p1;
wire   [78:0] zext_ln15_2_fu_1406_p1;
wire   [78:0] sh_prom_i_i_i_i_i54_cast_cast_cast_cast_fu_1450_p1;
wire   [78:0] r_V_5_fu_1454_p2;
wire   [0:0] tmp_31_fu_1466_p3;
wire   [78:0] r_V_6_fu_1460_p2;
wire   [31:0] zext_ln662_2_fu_1474_p1;
wire   [31:0] tmp_22_fu_1478_p4;
wire   [31:0] val_2_fu_1488_p3;
wire   [0:0] p_Result_2_fu_1374_p3;
wire   [31:0] result_V_10_fu_1496_p2;
wire   [15:0] shl_ln_fu_1528_p3;
wire   [13:0] shl_ln54_1_fu_1540_p3;
wire   [16:0] zext_ln54_fu_1536_p1;
wire   [16:0] zext_ln54_1_fu_1548_p1;
wire   [36:0] shl_ln54_2_fu_1558_p3;
wire   [34:0] shl_ln54_3_fu_1570_p3;
wire  signed [37:0] sext_ln54_fu_1566_p1;
wire  signed [37:0] sext_ln54_1_fu_1578_p1;
wire   [16:0] sub_ln54_fu_1552_p2;
wire   [16:0] or_ln54_fu_1588_p2;
wire   [37:0] sub_ln54_1_fu_1582_p2;
wire  signed [37:0] sext_ln54_2_fu_1594_p1;
wire  signed [63:0] sext_ln905_fu_1604_p1;
wire   [63:0] mul_ln905_fu_1611_p0;
wire   [65:0] mul_ln905_fu_1611_p1;
wire   [128:0] mul_ln905_fu_1611_p2;
wire   [59:0] tmp_32_fu_1617_p4;
wire   [58:0] tmp_23_fu_1632_p4;
wire   [62:0] shl_ln905_2_fu_1650_p3;
wire   [63:0] zext_ln905_1_fu_1658_p1;
wire   [63:0] shl_ln905_1_fu_1642_p3;
wire   [63:0] sub_ln905_fu_1662_p2;
wire   [66:0] shl_ln1_fu_1674_p3;
wire   [191:0] zext_ln905_2_fu_1681_p1;
wire   [191:0] lshr_ln905_fu_1685_p2;
wire   [1:0] tmp_15_fu_1762_p5;
wire   [63:0] tmp_15_fu_1762_p6;
wire   [63:0] grp_fu_877_p1;
wire   [63:0] data_V_3_fu_1782_p1;
wire   [53:0] mantissa_3_fu_1800_p4;
wire   [11:0] zext_ln510_fu_1813_p1;
wire   [11:0] add_ln510_fu_1816_p2;
wire   [10:0] sub_ln1311_3_fu_1830_p2;
wire   [0:0] isNeg_3_fu_1822_p3;
wire  signed [11:0] sext_ln1311_3_fu_1835_p1;
wire   [11:0] ush_3_fu_1839_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i91_cast_cast_cast_fu_1847_p1;
wire   [168:0] zext_ln15_3_fu_1809_p1;
wire   [168:0] sh_prom_i_i_i_i_i91_cast_cast_cast_cast_fu_1851_p1;
wire   [168:0] r_V_7_fu_1855_p2;
wire   [0:0] tmp_36_fu_1867_p3;
wire   [168:0] r_V_8_fu_1861_p2;
wire   [63:0] zext_ln662_3_fu_1875_p1;
wire   [63:0] tmp_28_fu_1879_p4;
wire   [63:0] val_3_fu_1889_p3;
wire   [0:0] icmp_ln923_fu_1897_p2;
wire   [31:0] zext_ln923_fu_1903_p1;
wire   [1:0] tmp_11_fu_1926_p5;
wire   [63:0] data_V_4_fu_1946_p1;
wire   [62:0] p_Result_3_fu_1950_p1;
wire   [63:0] zext_ln368_fu_1954_p1;
wire   [10:0] tmp_12_fu_1963_p4;
wire   [51:0] trunc_ln943_fu_1973_p1;
wire   [0:0] or_ln943_fu_1989_p2;
wire   [0:0] grp_fu_872_p2;
wire   [36:0] shl_ln54_4_fu_1999_p3;
wire   [34:0] shl_ln54_5_fu_2010_p3;
wire  signed [37:0] sext_ln54_3_fu_2006_p1;
wire  signed [37:0] sext_ln54_4_fu_2017_p1;
wire   [37:0] sub_ln54_2_fu_2021_p2;
wire   [37:0] add_ln54_1_fu_2027_p2;
wire  signed [63:0] sext_ln945_fu_2033_p1;
wire   [63:0] mul_ln945_fu_2041_p0;
wire   [65:0] mul_ln945_fu_2041_p1;
wire   [128:0] mul_ln945_fu_2041_p2;
wire   [59:0] tmp_37_fu_2047_p4;
wire   [58:0] tmp_29_fu_2062_p4;
wire   [62:0] shl_ln945_2_fu_2080_p3;
wire   [63:0] zext_ln945_1_fu_2088_p1;
wire   [63:0] shl_ln945_1_fu_2072_p3;
wire   [63:0] sub_ln945_fu_2092_p2;
wire   [66:0] shl_ln2_fu_2104_p3;
wire   [191:0] zext_ln945_2_fu_2111_p1;
wire   [191:0] lshr_ln945_fu_2115_p2;
wire   [63:0] data_V_5_fu_2131_p1;
wire   [62:0] p_Result_4_fu_2135_p1;
wire   [63:0] zext_ln368_1_fu_2139_p1;
wire   [10:0] tmp_18_fu_2148_p4;
wire   [51:0] trunc_ln948_fu_2158_p1;
wire   [0:0] or_ln948_fu_2174_p2;
wire   [36:0] shl_ln54_6_fu_2184_p3;
wire   [34:0] shl_ln54_7_fu_2195_p3;
wire  signed [37:0] sext_ln54_5_fu_2191_p1;
wire  signed [37:0] sext_ln54_6_fu_2202_p1;
wire   [37:0] sub_ln54_3_fu_2206_p2;
wire   [37:0] add_ln54_2_fu_2212_p2;
wire  signed [63:0] sext_ln950_fu_2218_p1;
wire   [63:0] mul_ln950_fu_2226_p0;
wire   [65:0] mul_ln950_fu_2226_p1;
wire   [128:0] mul_ln950_fu_2226_p2;
wire   [59:0] tmp_38_fu_2232_p4;
wire   [58:0] tmp_30_fu_2247_p4;
wire   [62:0] shl_ln950_2_fu_2265_p3;
wire   [63:0] zext_ln950_1_fu_2273_p1;
wire   [63:0] shl_ln950_1_fu_2257_p3;
wire   [63:0] sub_ln950_fu_2277_p2;
wire   [66:0] shl_ln3_fu_2289_p3;
wire   [191:0] zext_ln950_2_fu_2296_p1;
wire   [191:0] lshr_ln950_fu_2300_p2;
wire   [63:0] data_V_6_fu_2316_p1;
wire   [62:0] p_Result_5_fu_2320_p1;
wire   [63:0] zext_ln368_2_fu_2324_p1;
wire   [10:0] tmp_21_fu_2333_p4;
wire   [51:0] trunc_ln953_fu_2343_p1;
wire   [0:0] or_ln953_fu_2359_p2;
wire   [36:0] shl_ln54_8_fu_2369_p3;
wire   [34:0] shl_ln54_9_fu_2380_p3;
wire  signed [37:0] sext_ln54_7_fu_2376_p1;
wire  signed [37:0] sext_ln54_8_fu_2387_p1;
wire   [37:0] sub_ln54_4_fu_2391_p2;
wire   [37:0] add_ln54_3_fu_2397_p2;
wire  signed [63:0] sext_ln955_fu_2403_p1;
wire   [63:0] mul_ln955_fu_2411_p0;
wire   [65:0] mul_ln955_fu_2411_p1;
wire   [128:0] mul_ln955_fu_2411_p2;
wire   [59:0] tmp_39_fu_2417_p4;
wire   [58:0] tmp_33_fu_2432_p4;
wire   [62:0] shl_ln955_2_fu_2450_p3;
wire   [63:0] zext_ln955_1_fu_2458_p1;
wire   [63:0] shl_ln955_1_fu_2442_p3;
wire   [63:0] sub_ln955_fu_2462_p2;
wire   [66:0] shl_ln4_fu_2474_p3;
wire   [191:0] zext_ln955_2_fu_2481_p1;
wire   [191:0] lshr_ln955_fu_2485_p2;
wire  signed [63:0] mul_ln958_fu_2503_p0;
wire   [63:0] mul_ln958_fu_2503_p2;
wire   [0:0] tmp_40_fu_2508_p3;
wire   [4:0] trunc_ln1006_fu_2533_p1;
wire   [8:0] trunc_ln1006_1_fu_2545_p1;
wire   [11:0] tmp_47_cast_fu_2537_p3;
wire   [11:0] tmp_48_cast_fu_2549_p3;
wire   [11:0] sub_ln1006_fu_2557_p2;
wire   [11:0] add_ln1006_1_fu_2563_p2;
wire   [11:0] or_ln1006_fu_2569_p2;
wire   [11:0] add_ln1007_fu_2580_p2;
wire   [29:0] tmp_41_fu_2591_p4;
wire   [63:0] sub_ln1012_fu_2612_p2;
wire   [63:0] sub_ln1012_1_fu_2617_p2;
wire   [0:0] icmp_ln1012_fu_2622_p2;
wire    grp_fu_856_ce;
wire    grp_fu_860_ce;
wire    ap_block_pp3_stage0_00001;
wire    ap_block_pp4_stage0_00001;
wire    grp_fu_872_ce;
wire   [4:0] grp_fu_872_opcode;
wire    grp_fu_877_ce;
reg   [63:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [63:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [63:0] ap_return_7_preg;
reg    ap_block_state76_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire   [128:0] mul_ln905_fu_1611_p00;
wire   [128:0] mul_ln945_fu_2041_p00;
wire   [128:0] mul_ln950_fu_2226_p00;
wire   [128:0] mul_ln955_fu_2411_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 62'd1;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter10 = 1'b0;
#0 ap_enable_reg_pp6_iter11 = 1'b0;
#0 ap_enable_reg_pp6_iter12 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 grp_makePatch_alignedToLine_fu_772_ap_start_reg = 1'b0;
#0 grp_get_index_from_z_fu_797_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_811_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg = 1'b0;
#0 grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 64'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 64'd0;
end

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_current_z_i_index #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
current_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(current_z_i_index_address0),
    .ce0(current_z_i_index_ce0),
    .we0(current_z_i_index_we0),
    .d0(grp_get_index_from_z_fu_797_ap_return),
    .q0(current_z_i_index_q0)
);

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_new_z_i_index #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_index_address0),
    .ce0(new_z_i_index_ce0),
    .we0(new_z_i_index_we0),
    .d0(new_z_i_index_d0),
    .q0(new_z_i_index_q0),
    .address1(new_z_i_index_address1),
    .ce1(new_z_i_index_ce1),
    .we1(new_z_i_index_we1),
    .d1(new_z_i_index_d1),
    .q1(new_z_i_index_q1)
);

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_new_z_i #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_address0),
    .ce0(new_z_i_ce0),
    .we0(new_z_i_we0),
    .d0(new_z_i_d0),
    .q0(new_z_i_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_772(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_772_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_772_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_772_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_772_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_772_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_772_n_patches_o_ap_vld),
    .GDarray_address0(grp_makePatch_alignedToLine_fu_772_GDarray_address0),
    .GDarray_ce0(grp_makePatch_alignedToLine_fu_772_GDarray_ce0),
    .GDarray_q0(GDarray_q0),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_772_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_772_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_772_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_772_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_772_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_772_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_772_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_772_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_772_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_772_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .apexZ0(complementary_apexZ0),
    .z_top(grp_makePatch_alignedToLine_fu_772_z_top),
    .p_read(grp_makePatch_alignedToLine_fu_772_p_read),
    .leftRight(1'd1),
    .temp_address0(grp_makePatch_alignedToLine_fu_772_temp_address0),
    .temp_ce0(grp_makePatch_alignedToLine_fu_772_temp_ce0),
    .temp_we0(grp_makePatch_alignedToLine_fu_772_temp_we0),
    .temp_d0(grp_makePatch_alignedToLine_fu_772_temp_d0),
    .temp_q0(temp_q0),
    .temp_address1(grp_makePatch_alignedToLine_fu_772_temp_address1),
    .temp_ce1(grp_makePatch_alignedToLine_fu_772_temp_ce1),
    .temp_q1(temp_q1),
    .ap_return(grp_makePatch_alignedToLine_fu_772_ap_return)
);

makePatches_ShadowQuilt_fromEdges_get_index_from_z grp_get_index_from_z_fu_797(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_index_from_z_fu_797_ap_start),
    .ap_done(grp_get_index_from_z_fu_797_ap_done),
    .ap_idle(grp_get_index_from_z_fu_797_ap_idle),
    .ap_ready(grp_get_index_from_z_fu_797_ap_ready),
    .GDarray_address0(grp_get_index_from_z_fu_797_GDarray_address0),
    .GDarray_ce0(grp_get_index_from_z_fu_797_GDarray_ce0),
    .GDarray_q0(GDarray_q0),
    .GDn_points_address0(grp_get_index_from_z_fu_797_GDn_points_address0),
    .GDn_points_ce0(grp_get_index_from_z_fu_797_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .layer(grp_get_index_from_z_fu_797_layer),
    .z_value(grp_get_index_from_z_fu_797_z_value),
    .ap_return(grp_get_index_from_z_fu_797_ap_return)
);

makePatches_ShadowQuilt_fromEdges_delete_patch grp_delete_patch_fu_811(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_811_ap_start),
    .ap_done(grp_delete_patch_fu_811_ap_done),
    .ap_idle(grp_delete_patch_fu_811_ap_idle),
    .ap_ready(grp_delete_patch_fu_811_ap_ready),
    .n_patches(grp_delete_patch_fu_811_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_811_n_patches_ap_vld),
    .n_patches_read(reg_918),
    .patches_superpoints_address0(grp_delete_patch_fu_811_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_delete_patch_fu_811_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_delete_patch_fu_811_patches_superpoints_we0),
    .patches_superpoints_d0(grp_delete_patch_fu_811_patches_superpoints_d0),
    .patches_superpoints_address1(grp_delete_patch_fu_811_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_delete_patch_fu_811_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .patches_parameters_address0(grp_delete_patch_fu_811_patches_parameters_address0),
    .patches_parameters_ce0(grp_delete_patch_fu_811_patches_parameters_ce0),
    .patches_parameters_we0(grp_delete_patch_fu_811_patches_parameters_we0),
    .patches_parameters_d0(grp_delete_patch_fu_811_patches_parameters_d0),
    .patches_parameters_address1(grp_delete_patch_fu_811_patches_parameters_address1),
    .patches_parameters_ce1(grp_delete_patch_fu_811_patches_parameters_ce1),
    .patches_parameters_q1(patches_parameters_q1),
    .index(reg_923)
);

makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual grp_areWedgeSuperPointsEqual_fu_839(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_areWedgeSuperPointsEqual_fu_839_ap_start),
    .ap_done(grp_areWedgeSuperPointsEqual_fu_839_ap_done),
    .ap_idle(grp_areWedgeSuperPointsEqual_fu_839_ap_idle),
    .ap_ready(grp_areWedgeSuperPointsEqual_fu_839_ap_ready),
    .wsp1_2_address0(grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address0),
    .wsp1_2_ce0(grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce0),
    .wsp1_2_q0(patches_superpoints_q0),
    .wsp1_2_address1(grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address1),
    .wsp1_2_ce1(grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce1),
    .wsp1_2_q1(patches_superpoints_q1),
    .wsp1(add_ln1006_reg_3234),
    .wsp11(i_9_reg_738),
    .wsp2(thirdLastPatchIdx_reg_3244),
    .wsp25(i_9_reg_738),
    .ap_return(grp_areWedgeSuperPointsEqual_fu_839_ap_return)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_905),
    .din1(32'd3212836864),
    .ce(1'b1),
    .dout(grp_fu_851_p2)
);

makePatches_ShadowQuilt_fromEdges_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_865_p0),
    .din1(grp_fu_865_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_865_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U104(
    .din0(mul_ln905_fu_1611_p0),
    .din1(mul_ln905_fu_1611_p1),
    .dout(mul_ln905_fu_1611_p2)
);

makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U105(
    .din0(new_z_i_atTop_3_1_fu_276),
    .din1(new_z_i_atTop_3_2_fu_280),
    .din2(new_z_i_atTop_3_3_fu_284),
    .din3(new_z_i_atTop_3_4_fu_288),
    .din4(tmp_15_fu_1762_p5),
    .dout(tmp_15_fu_1762_p6)
);

makePatches_ShadowQuilt_fromEdges_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U106(
    .din0(new_z_i_atTop_3_1_fu_276),
    .din1(new_z_i_atTop_3_2_fu_280),
    .din2(new_z_i_atTop_3_3_fu_284),
    .din3(new_z_i_atTop_3_4_fu_288),
    .din4(tmp_11_fu_1926_p5),
    .dout(tmp_11_fu_1926_p6)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U107(
    .din0(mul_ln945_fu_2041_p0),
    .din1(mul_ln945_fu_2041_p1),
    .dout(mul_ln945_fu_2041_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U108(
    .din0(mul_ln950_fu_2226_p0),
    .din1(mul_ln950_fu_2226_p1),
    .dout(mul_ln950_fu_2226_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U109(
    .din0(mul_ln955_fu_2411_p0),
    .din1(mul_ln955_fu_2411_p1),
    .dout(mul_ln955_fu_2411_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64s_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_64s_64s_64_1_1_U110(
    .din0(mul_ln958_fu_2503_p0),
    .din1(white_space_height_read),
    .dout(mul_ln958_fu_2503_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln860_fu_944_p2 == 1'd1) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln860_fu_944_p2 == 1'd1) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_16_fu_970_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state20);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_16_fu_970_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((tmp_16_fu_970_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state23) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state23);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((tmp_16_fu_970_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state26)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp3_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state35)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state40) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state40)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state40);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp5_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state45) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state45)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state45);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter10 <= ap_enable_reg_pp6_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter11 <= ap_enable_reg_pp6_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter12 <= ap_enable_reg_pp6_iter11;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp6_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state59) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state59)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state59);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_0_preg <= white_space_height_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_1_preg <= reg_923;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_2_preg <= ap_phi_mux_current_z_top_index_0_phi_fu_753_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_3_preg <= counter_0_reg_598;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_4_preg <= counterUpshift_0_reg_608;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_5_preg <= z_top_min_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_6_preg <= select_ln1012_reg_3239;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_return_7_preg <= ap_phi_mux_z_top_min_4_phi_fu_764_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1038_fu_2641_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81) & (1'b1 == ap_NS_fsm_state82))) begin
            grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg <= 1'b1;
        end else if ((grp_areWedgeSuperPointsEqual_fu_839_ap_ready == 1'b1)) begin
            grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_811_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state75))) begin
            grp_delete_patch_fu_811_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_811_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_811_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_index_from_z_fu_797_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_get_index_from_z_fu_797_ap_start_reg <= 1'b1;
        end else if ((grp_get_index_from_z_fu_797_ap_ready == 1'b1)) begin
            grp_get_index_from_z_fu_797_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_772_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state77))) begin
            grp_makePatch_alignedToLine_fu_772_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_772_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_772_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln909_fu_1696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        if ((tmp_16_reg_2820 == 1'd1)) begin
            counterUpshift_0_reg_608 <= p_read13;
        end else if ((tmp_16_reg_2820 == 1'd0)) begin
            counterUpshift_0_reg_608 <= add_ln882_reg_2824;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        if ((tmp_16_reg_2820 == 1'd1)) begin
            counter_0_reg_598 <= add_ln873_reg_2834;
        end else if ((tmp_16_reg_2820 == 1'd0)) begin
            counter_0_reg_598 <= p_read12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1028_reg_3230 == 1'd0) & (1'b1 == ap_CS_fsm_state80)) | ((icmp_ln1038_reg_3249 == 1'd0) & (icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        current_z_top_index_0_reg_750 <= select_ln890_reg_2887;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        current_z_top_index_0_reg_750 <= add_ln1058_fu_2698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln860_reg_2787 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        empty_63_reg_567 <= add_ln862_reg_2791;
    end else if (((icmp_ln860_fu_944_p2 == 1'd0) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_63_reg_567 <= tmp_reg_2766;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        if ((tmp_16_reg_2820 == 1'd1)) begin
            empty_66_reg_618 <= add_ln874_reg_2839;
        end else if ((tmp_16_reg_2820 == 1'd0)) begin
            empty_66_reg_618 <= add_ln883_reg_2829;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln860_fu_944_p2 == 1'd1) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_556 <= 3'd0;
    end else if (((icmp_ln863_fu_959_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_reg_556 <= add_ln863_fu_953_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_970_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_2_reg_587 <= 3'd0;
    end else if (((icmp_ln875_fu_1022_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_2_reg_587 <= add_ln875_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_970_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        i_3_reg_576 <= 3'd0;
    end else if (((icmp_ln884_fu_1005_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_3_reg_576 <= add_ln884_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln892_fu_1066_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_4_reg_627 <= add_ln892_fu_1060_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_4_reg_627 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_5_reg_638 <= 3'd0;
    end else if (((icmp_ln897_fu_1313_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_5_reg_638 <= add_ln897_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_6_reg_649 <= 3'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln903_reg_2959 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_6_reg_649 <= add_ln903_reg_2954;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        i_7_reg_661 <= 3'd1;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln909_reg_3018 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i_7_reg_661 <= add_ln914_reg_3022;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        i_8_reg_672 <= 3'd0;
    end else if (((icmp_ln921_fu_1752_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        i_8_reg_672 <= add_ln921_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state86) & (grp_areWedgeSuperPointsEqual_fu_839_ap_return == 1'd1))) begin
        i_9_reg_738 <= add_ln1038_reg_3253;
    end else if (((icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_9_reg_738 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_get_index_from_z_fu_797_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            i_reg_544 <= 3'd0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            i_reg_544 <= add_ln857_reg_2772;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        layerSMin_reg_683 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln921_reg_3042_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        layerSMin_reg_683 <= layerSMin_1_fu_1914_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        layerWithSmallestShift_reg_695 <= 32'd0;
    end else if (((ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln921_reg_3042_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        layerWithSmallestShift_reg_695 <= layerWithSmallestShift_1_fu_1906_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) & (1'd0 == and_ln943_fu_1993_p2))) begin
        z_top_min_0_reg_707 <= tmp_11_reg_3077;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        z_top_min_0_reg_707 <= trunc_ln945_fu_2121_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & (1'd0 == and_ln948_fu_2178_p2))) begin
        z_top_min_1_reg_717 <= z_top_min_0_reg_707;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        z_top_min_1_reg_717 <= trunc_ln950_fu_2306_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (1'd0 == and_ln953_fu_2363_p2))) begin
        z_top_min_2_reg_728 <= z_top_min_1_reg_717;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        z_top_min_2_reg_728 <= trunc_ln955_fu_2491_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1028_reg_3230 == 1'd0) & (1'b1 == ap_CS_fsm_state80)) | ((icmp_ln1038_reg_3249 == 1'd0) & (icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state87)))) begin
        z_top_min_4_reg_761 <= select_ln958_reg_3198;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        z_top_min_4_reg_761 <= tmp_11_reg_3077;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln1006_reg_3234 <= add_ln1006_fu_2607_p2;
        select_ln1012_reg_3239 <= select_ln1012_fu_2628_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        add_ln1038_reg_3253 <= add_ln1038_fu_2647_p2;
        icmp_ln1038_reg_3249 <= icmp_ln1038_fu_2641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln903_reg_2959 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln54_reg_2973[37 : 3] <= add_ln54_fu_1598_p2[37 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln857_reg_2772 <= add_ln857_fu_928_p2;
        zext_ln855_reg_2778[2 : 0] <= zext_ln855_fu_934_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln860_fu_944_p2 == 1'd1) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln862_reg_2791 <= add_ln862_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_970_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        add_ln873_reg_2834 <= add_ln873_fu_988_p2;
        add_ln874_reg_2839 <= add_ln874_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_970_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        add_ln882_reg_2824 <= add_ln882_fu_977_p2;
        add_ln883_reg_2829 <= add_ln883_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln903_reg_2954 <= add_ln903_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln903_reg_2959_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln905_reg_2983[63 : 3] <= add_ln905_fu_1668_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln909_fu_1696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln914_reg_3022 <= add_ln914_fu_1702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln943_fu_1993_p2) & (1'b1 == ap_CS_fsm_state64))) begin
        add_ln945_reg_3112[63 : 3] <= add_ln945_fu_2098_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln948_fu_2178_p2) & (1'b1 == ap_CS_fsm_state68))) begin
        add_ln950_reg_3150[63 : 3] <= add_ln950_fu_2283_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln953_fu_2363_p2) & (1'b1 == ap_CS_fsm_state72))) begin
        add_ln955_reg_3188[63 : 3] <= add_ln955_fu_2468_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln892_reg_2905_pp3_iter5_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        conv_reg_2932 <= grp_fu_1578_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln863_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_cast_reg_2810[2 : 0] <= i_1_cast_fu_965_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln875_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_2_cast_reg_2877[2 : 0] <= i_2_cast_fu_1028_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln884_fu_1005_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_3_cast_reg_2853[2 : 0] <= i_3_cast_fu_1011_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln903_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_6_cast13_reg_2963[2 : 0] <= i_6_cast13_fu_1523_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_6_cast13_reg_2963_pp5_iter1_reg[2 : 0] <= i_6_cast13_reg_2963[2 : 0];
        icmp_ln903_reg_2959 <= icmp_ln903_fu_1517_p2;
        icmp_ln903_reg_2959_pp5_iter1_reg <= icmp_ln903_reg_2959;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        i_6_cast13_reg_2963_pp5_iter2_reg[2 : 0] <= i_6_cast13_reg_2963_pp5_iter1_reg[2 : 0];
        icmp_ln903_reg_2959_pp5_iter2_reg <= icmp_ln903_reg_2959_pp5_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        icmp_ln1028_reg_3230 <= icmp_ln1028_fu_2601_p2;
        trunc_ln1003_reg_3214 <= trunc_ln1003_fu_2529_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln860_reg_2787 <= icmp_ln860_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln863_reg_2806 <= icmp_ln863_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln875_reg_2873 <= icmp_ln875_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln884_reg_2849 <= icmp_ln884_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln892_reg_2905 <= icmp_ln892_fu_1066_p2;
        icmp_ln892_reg_2905_pp3_iter1_reg <= icmp_ln892_reg_2905;
        new_z_i_index_addr_3_reg_2909_pp3_iter1_reg <= new_z_i_index_addr_3_reg_2909;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln892_reg_2905_pp3_iter2_reg <= icmp_ln892_reg_2905_pp3_iter1_reg;
        icmp_ln892_reg_2905_pp3_iter3_reg <= icmp_ln892_reg_2905_pp3_iter2_reg;
        icmp_ln892_reg_2905_pp3_iter4_reg <= icmp_ln892_reg_2905_pp3_iter3_reg;
        icmp_ln892_reg_2905_pp3_iter5_reg <= icmp_ln892_reg_2905_pp3_iter4_reg;
        icmp_ln892_reg_2905_pp3_iter6_reg <= icmp_ln892_reg_2905_pp3_iter5_reg;
        new_z_i_index_addr_3_reg_2909_pp3_iter2_reg <= new_z_i_index_addr_3_reg_2909_pp3_iter1_reg;
        new_z_i_index_addr_3_reg_2909_pp3_iter3_reg <= new_z_i_index_addr_3_reg_2909_pp3_iter2_reg;
        new_z_i_index_addr_3_reg_2909_pp3_iter4_reg <= new_z_i_index_addr_3_reg_2909_pp3_iter3_reg;
        new_z_i_index_addr_3_reg_2909_pp3_iter5_reg <= new_z_i_index_addr_3_reg_2909_pp3_iter4_reg;
        new_z_i_index_addr_3_reg_2909_pp3_iter6_reg <= new_z_i_index_addr_3_reg_2909_pp3_iter5_reg;
        sub_reg_2925_pp3_iter6_reg <= sub_reg_2925;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln897_reg_2944 <= icmp_ln897_fu_1313_p2;
        icmp_ln897_reg_2944_pp4_iter1_reg <= icmp_ln897_reg_2944;
        new_z_i_index_addr_4_reg_2948_pp4_iter1_reg <= new_z_i_index_addr_4_reg_2948;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        icmp_ln897_reg_2944_pp4_iter2_reg <= icmp_ln897_reg_2944_pp4_iter1_reg;
        new_z_i_index_addr_4_reg_2948_pp4_iter2_reg <= new_z_i_index_addr_4_reg_2948_pp4_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln909_reg_3018 <= icmp_ln909_fu_1696_p2;
        trunc_ln911_reg_3033_pp6_iter1_reg <= trunc_ln911_reg_3033;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln921_reg_3042 <= icmp_ln921_fu_1752_p2;
        icmp_ln921_reg_3042_pp7_iter1_reg <= icmp_ln921_reg_3042;
        trunc_ln923_reg_3046_pp7_iter1_reg <= trunc_ln923_reg_3046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        icmp_ln943_1_reg_3099 <= icmp_ln943_1_fu_1983_p2;
        icmp_ln943_reg_3094 <= icmp_ln943_fu_1977_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        icmp_ln948_1_reg_3137 <= icmp_ln948_1_fu_2168_p2;
        icmp_ln948_reg_3132 <= icmp_ln948_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        icmp_ln953_1_reg_3175 <= icmp_ln953_1_fu_2353_p2;
        icmp_ln953_reg_3170 <= icmp_ln953_fu_2347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        icmp_ln975_reg_3205 <= icmp_ln975_fu_2524_p2;
        select_ln958_reg_3198 <= select_ln958_fu_2516_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (trunc_ln911_reg_3033_pp6_iter11_reg == 2'd1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_3_1_fu_276 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (trunc_ln911_reg_3033_pp6_iter11_reg == 2'd2) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_3_2_fu_280 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (trunc_ln911_reg_3033_pp6_iter11_reg == 2'd3) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_3_3_fu_284 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (trunc_ln911_reg_3033_pp6_iter11_reg == 2'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_3_4_fu_288 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
        new_z_i_atTop_3_fu_272 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln892_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        new_z_i_index_addr_3_reg_2909 <= i_4_cast_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln897_fu_1313_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        new_z_i_index_addr_4_reg_2948 <= i_5_cast_fu_1319_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ppl_assign2_reg_3209 <= grp_makePatch_alignedToLine_fu_772_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln897_reg_2944_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln892_reg_2905_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        reg_905 <= grp_fu_1575_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74))) begin
        reg_918 <= n_patches_i;
        reg_923 <= grp_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        select_ln890_reg_2887 <= select_ln890_fu_1052_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln892_reg_2905_pp3_iter4_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        sub_reg_2925 <= grp_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        thirdLastPatchIdx_reg_3244 <= thirdLastPatchIdx_fu_2636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        tmp_11_reg_3077 <= tmp_11_fu_1926_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_16_reg_2820 <= tmp_16_fu_970_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln921_reg_3042 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        tmp_46_reg_3056 <= {{data_V_3_fu_1782_p1[62:52]}};
        tmp_47_reg_3062 <= tmp_47_fu_1796_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_2766 <= grp_get_index_from_z_fu_797_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_s_reg_2796 <= grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln909_fu_1696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        trunc_ln911_reg_3033 <= trunc_ln911_fu_1713_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        trunc_ln911_reg_3033_pp6_iter10_reg <= trunc_ln911_reg_3033_pp6_iter9_reg;
        trunc_ln911_reg_3033_pp6_iter11_reg <= trunc_ln911_reg_3033_pp6_iter10_reg;
        trunc_ln911_reg_3033_pp6_iter2_reg <= trunc_ln911_reg_3033_pp6_iter1_reg;
        trunc_ln911_reg_3033_pp6_iter3_reg <= trunc_ln911_reg_3033_pp6_iter2_reg;
        trunc_ln911_reg_3033_pp6_iter4_reg <= trunc_ln911_reg_3033_pp6_iter3_reg;
        trunc_ln911_reg_3033_pp6_iter5_reg <= trunc_ln911_reg_3033_pp6_iter4_reg;
        trunc_ln911_reg_3033_pp6_iter6_reg <= trunc_ln911_reg_3033_pp6_iter5_reg;
        trunc_ln911_reg_3033_pp6_iter7_reg <= trunc_ln911_reg_3033_pp6_iter6_reg;
        trunc_ln911_reg_3033_pp6_iter8_reg <= trunc_ln911_reg_3033_pp6_iter7_reg;
        trunc_ln911_reg_3033_pp6_iter9_reg <= trunc_ln911_reg_3033_pp6_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln921_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        trunc_ln923_reg_3046 <= trunc_ln923_fu_1758_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        GDarray_address0 = zext_ln955_3_fu_2427_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        GDarray_address0 = zext_ln950_3_fu_2242_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        GDarray_address0 = zext_ln945_3_fu_2057_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        GDarray_address0 = zext_ln905_3_fu_1627_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16))) begin
        GDarray_address0 = grp_get_index_from_z_fu_797_GDarray_address0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        GDarray_address0 = grp_makePatch_alignedToLine_fu_772_GDarray_address0;
    end else begin
        GDarray_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        GDarray_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16))) begin
        GDarray_ce0 = grp_get_index_from_z_fu_797_GDarray_ce0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        GDarray_ce0 = grp_makePatch_alignedToLine_fu_772_GDarray_ce0;
    end else begin
        GDarray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        GDn_points_address0 = i_4_cast_fu_1072_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        GDn_points_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16))) begin
        GDn_points_address0 = grp_get_index_from_z_fu_797_GDn_points_address0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        GDn_points_address0 = grp_makePatch_alignedToLine_fu_772_GDn_points_address0;
    end else begin
        GDn_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        GDn_points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16))) begin
        GDn_points_ce0 = grp_get_index_from_z_fu_797_GDn_points_ce0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        GDn_points_ce0 = grp_makePatch_alignedToLine_fu_772_GDn_points_ce0;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln863_fu_959_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln884_fu_1005_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln875_fu_1022_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln892_fu_1066_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln897_fu_1313_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln903_fu_1517_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state40 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state40 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln909_fu_1696_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln921_fu_1752_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b0) & (ap_enable_reg_pp6_iter11 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b0) & (ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1038_reg_3249 == 1'd0) & (icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        ap_phi_mux_current_z_top_index_0_phi_fu_753_p6 = select_ln890_reg_2887;
    end else begin
        ap_phi_mux_current_z_top_index_0_phi_fu_753_p6 = current_z_top_index_0_reg_750;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_2787 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_phi_mux_empty_63_phi_fu_570_p4 = add_ln862_reg_2791;
    end else begin
        ap_phi_mux_empty_63_phi_fu_570_p4 = empty_63_reg_567;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln903_reg_2959 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_i_6_phi_fu_653_p4 = add_ln903_reg_2954;
    end else begin
        ap_phi_mux_i_6_phi_fu_653_p4 = i_6_reg_649;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln909_reg_3018 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_i_7_phi_fu_665_p4 = add_ln914_reg_3022;
    end else begin
        ap_phi_mux_i_7_phi_fu_665_p4 = i_7_reg_661;
    end
end

always @ (*) begin
    if (((icmp_ln1038_reg_3249 == 1'd0) & (icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        ap_phi_mux_z_top_min_4_phi_fu_764_p6 = select_ln958_reg_3198;
    end else begin
        ap_phi_mux_z_top_min_4_phi_fu_764_p6 = z_top_min_4_reg_761;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_0 = white_space_height_read;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_1 = reg_923;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_2 = ap_phi_mux_current_z_top_index_0_phi_fu_753_p6;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_3 = counter_0_reg_598;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_4 = counterUpshift_0_reg_608;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_5 = z_top_min_read;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_6 = select_ln1012_reg_3239;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        ap_return_7 = ap_phi_mux_z_top_min_4_phi_fu_764_p6;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        current_z_i_index_address0 = i_2_cast_fu_1028_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        current_z_i_index_address0 = i_3_cast_fu_1011_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        current_z_i_index_address0 = i_1_cast_fu_965_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        current_z_i_index_address0 = zext_ln855_reg_2778;
    end else begin
        current_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_state16) & (grp_get_index_from_z_fu_797_ap_done == 1'b1)))) begin
        current_z_i_index_ce0 = 1'b1;
    end else begin
        current_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_get_index_from_z_fu_797_ap_done == 1'b1))) begin
        current_z_i_index_we0 = 1'b1;
    end else begin
        current_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_856_p0 = new_z_i_index_q0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_856_p0 = GDn_points_q0;
    end else begin
        grp_fu_856_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_865_p0 = grp_fu_1575_p_dout0;
    end else if (((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_865_p0 = grp_fu_1578_p_dout0;
    end else begin
        grp_fu_865_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_865_p1 = 32'd0;
    end else if (((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_865_p1 = sub_reg_2925;
    end else begin
        grp_fu_865_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_872_p0 = bitcast_ln521_2_fu_2328_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_872_p0 = bitcast_ln521_1_fu_2143_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_872_p0 = bitcast_ln521_fu_1958_p1;
    end else begin
        grp_fu_872_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_877_p0 = sub_ln953_fu_2310_p2;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_877_p0 = sub_ln948_fu_2125_p2;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_877_p0 = sub_ln943_fu_1940_p2;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        grp_fu_877_p0 = sub_ln923_fu_1776_p2;
    end else begin
        grp_fu_877_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_get_index_from_z_fu_797_layer = i_reg_544;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_797_layer = 3'd4;
    end else begin
        grp_get_index_from_z_fu_797_layer = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_get_index_from_z_fu_797_z_value = tmp_s_reg_2796;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_797_z_value = z_top_min_read;
    end else begin
        grp_get_index_from_z_fu_797_z_value = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_makePatch_alignedToLine_fu_772_p_read = ppl_assign2_reg_3209;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_makePatch_alignedToLine_fu_772_p_read = ppl;
    end else begin
        grp_makePatch_alignedToLine_fu_772_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_makePatch_alignedToLine_fu_772_z_top = tmp_11_reg_3077;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_makePatch_alignedToLine_fu_772_z_top = select_ln958_reg_3198;
    end else begin
        grp_makePatch_alignedToLine_fu_772_z_top = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln909_reg_3018 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_j = zext_ln911_fu_1717_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_j = 32'd5;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_j = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln909_reg_3018 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_k = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_k = add_ln857_reg_2772;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_k = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln909_reg_3018 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_z_j = new_z_i_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_z_j = z_top_min_read;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_823_z_j = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state89) & (grp_delete_patch_fu_811_n_patches_ap_vld == 1'b1)) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76) & (grp_delete_patch_fu_811_n_patches_ap_vld == 1'b1)))) begin
        n_patches_o = grp_delete_patch_fu_811_n_patches;
    end else if ((((1'b1 == ap_CS_fsm_state78) & (grp_makePatch_alignedToLine_fu_772_n_patches_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state91) & (grp_makePatch_alignedToLine_fu_772_n_patches_o_ap_vld == 1'b1)))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_772_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_811_n_patches_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_772_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        new_z_i_address0 = trunc_ln914_cast_fu_1708_p1;
    end else if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_address0 = i_6_cast13_reg_2963_pp5_iter2_reg;
    end else begin
        new_z_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        new_z_i_ce0 = 1'b1;
    end else begin
        new_z_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        new_z_i_index_address0 = i_5_cast_fu_1319_p1;
    end else if (((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_address0 = new_z_i_index_addr_3_reg_2909_pp3_iter6_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        new_z_i_index_address0 = i_2_cast_reg_2877;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        new_z_i_index_address0 = i_3_cast_reg_2853;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        new_z_i_index_address0 = i_1_cast_reg_2810;
    end else begin
        new_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_index_address1 = i_6_cast13_fu_1523_p1;
    end else if (((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        new_z_i_index_address1 = new_z_i_index_addr_4_reg_2948_pp4_iter2_reg;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_address1 = new_z_i_index_addr_3_reg_2909_pp3_iter3_reg;
    end else begin
        new_z_i_index_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        new_z_i_index_ce0 = 1'b1;
    end else begin
        new_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        new_z_i_index_ce1 = 1'b1;
    end else begin
        new_z_i_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_d0 = result_V_13_fu_1298_p3;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        new_z_i_index_d0 = add_ln877_fu_1033_p2;
    end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        new_z_i_index_d0 = grp_fu_880_p2;
    end else begin
        new_z_i_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter7 == 1'b1) & (icmp_ln892_reg_2905_pp3_iter6_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln875_reg_2873 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln884_reg_2849 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln863_reg_2806 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        new_z_i_index_we0 = 1'b1;
    end else begin
        new_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln897_reg_2944_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        new_z_i_index_we1 = 1'b1;
    end else begin
        new_z_i_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (icmp_ln903_reg_2959_pp5_iter2_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_we0 = 1'b1;
    end else begin
        new_z_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        patches_parameters_address0 = zext_ln1007_fu_2586_p1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_address0 = grp_delete_patch_fu_811_patches_parameters_address0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_772_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        patches_parameters_address1 = zext_ln1006_fu_2575_p1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_address1 = grp_delete_patch_fu_811_patches_parameters_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        patches_parameters_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_811_patches_parameters_ce0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_772_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        patches_parameters_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_ce1 = grp_delete_patch_fu_811_patches_parameters_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_d0 = grp_delete_patch_fu_811_patches_parameters_d0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_parameters_d0 = grp_makePatch_alignedToLine_fu_772_patches_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_parameters_we0 = grp_delete_patch_fu_811_patches_parameters_we0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_772_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state83)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state82)))) begin
        patches_superpoints_address0 = grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_811_patches_superpoints_address0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_772_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state83)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state82)))) begin
        patches_superpoints_address1 = grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_address1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_address1 = grp_delete_patch_fu_811_patches_superpoints_address1;
    end else begin
        patches_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state83)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state82)))) begin
        patches_superpoints_ce0 = grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_811_patches_superpoints_ce0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_772_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state83)) | ((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state82)))) begin
        patches_superpoints_ce1 = grp_areWedgeSuperPointsEqual_fu_839_wsp1_2_ce1;
    end else if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_ce1 = grp_delete_patch_fu_811_patches_superpoints_ce1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_811_patches_superpoints_d0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_772_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((icmp_ln975_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_811_patches_superpoints_we0;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_772_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        temp_ce0 = grp_makePatch_alignedToLine_fu_772_temp_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        temp_ce1 = grp_makePatch_alignedToLine_fu_772_temp_ce1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state91))) begin
        temp_we0 = grp_makePatch_alignedToLine_fu_772_temp_we0;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_get_index_from_z_fu_797_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln860_fu_944_p2 == 1'd1) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln860_fu_944_p2 == 1'd0) & (icmp_ln855_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_get_index_from_z_fu_797_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln863_fu_959_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln863_fu_959_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((tmp_16_fu_970_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln884_fu_1005_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln884_fu_1005_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln875_fu_1022_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln875_fu_1022_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln892_fu_1066_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter7 == 1'b1) & (ap_enable_reg_pp3_iter6 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln892_fu_1066_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter7 == 1'b1) & (ap_enable_reg_pp3_iter6 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((icmp_ln897_fu_1313_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((icmp_ln897_fu_1313_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln903_fu_1517_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter3 == 1'b1) & (ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln903_fu_1517_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln909_fu_1696_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter12 == 1'b1) & (ap_enable_reg_pp6_iter11 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln909_fu_1696_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter12 == 1'b1) & (ap_enable_reg_pp6_iter11 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln921_fu_1752_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln921_fu_1752_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (1'd0 == and_ln943_fu_1993_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (1'd0 == and_ln948_fu_2178_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (1'd0 == and_ln953_fu_2363_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((icmp_ln975_fu_2524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (grp_makePatch_alignedToLine_fu_772_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((icmp_ln1028_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((icmp_ln1038_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_state86) & (grp_areWedgeSuperPointsEqual_fu_839_ap_return == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else if (((icmp_ln1038_reg_3249 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            if (((1'b1 == ap_CS_fsm_state89) & (grp_delete_patch_fu_811_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            if (((1'b1 == ap_CS_fsm_state91) & (grp_makePatch_alignedToLine_fu_772_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1006_1_fu_2563_p2 = (sub_ln1006_fu_2557_p2 + 12'd48);

assign add_ln1006_fu_2607_p2 = ($signed(trunc_ln1003_reg_3214) + $signed(5'd31));

assign add_ln1007_fu_2580_p2 = (sub_ln1006_fu_2557_p2 + 12'd55);

assign add_ln1038_fu_2647_p2 = (i_9_reg_738 + 3'd1);

assign add_ln1058_fu_2698_p2 = ($signed(select_ln890_reg_2887) + $signed(32'd4294967295));

assign add_ln341_2_fu_1414_p2 = ($signed(zext_ln341_2_fu_1410_p1) + $signed(9'd385));

assign add_ln341_fu_1210_p2 = ($signed(zext_ln341_fu_1206_p1) + $signed(9'd385));

assign add_ln510_fu_1816_p2 = ($signed(zext_ln510_fu_1813_p1) + $signed(12'd3073));

assign add_ln54_1_fu_2027_p2 = (sub_ln54_2_fu_2021_p2 + 38'd24592);

assign add_ln54_2_fu_2212_p2 = (sub_ln54_3_fu_2206_p2 + 38'd18448);

assign add_ln54_3_fu_2397_p2 = (sub_ln54_4_fu_2391_p2 + 38'd12304);

assign add_ln54_fu_1598_p2 = ($signed(sub_ln54_1_fu_1582_p2) + $signed(sext_ln54_2_fu_1594_p1));

assign add_ln857_fu_928_p2 = (i_reg_544 + 3'd1);

assign add_ln862_fu_948_p2 = (tmp_reg_2766 + 32'd1);

assign add_ln863_fu_953_p2 = (i_1_reg_556 + 3'd1);

assign add_ln873_fu_988_p2 = (p_read12 + 32'd1);

assign add_ln874_fu_993_p2 = ($signed(ap_phi_mux_empty_63_phi_fu_570_p4) + $signed(32'd4294967295));

assign add_ln875_fu_1016_p2 = (i_2_reg_587 + 3'd1);

assign add_ln877_fu_1033_p2 = ($signed(current_z_i_index_q0) + $signed(32'd4294967295));

assign add_ln882_fu_977_p2 = (p_read13 + 32'd1);

assign add_ln883_fu_982_p2 = (ap_phi_mux_empty_63_phi_fu_570_p4 + 32'd1);

assign add_ln884_fu_999_p2 = (i_3_reg_576 + 3'd1);

assign add_ln890_fu_1040_p2 = ($signed(GDn_points_q0) + $signed(32'd4294967295));

assign add_ln892_fu_1060_p2 = (i_4_reg_627 + 3'd1);

assign add_ln897_fu_1307_p2 = (i_5_reg_638 + 3'd1);

assign add_ln903_fu_1511_p2 = (ap_phi_mux_i_6_phi_fu_653_p4 + 3'd1);

assign add_ln905_fu_1668_p2 = ($signed(sext_ln905_fu_1604_p1) + $signed(sub_ln905_fu_1662_p2));

assign add_ln914_fu_1702_p2 = (ap_phi_mux_i_7_phi_fu_665_p4 + 3'd1);

assign add_ln921_fu_1746_p2 = (i_8_reg_672 + 3'd1);

assign add_ln945_fu_2098_p2 = ($signed(sub_ln945_fu_2092_p2) + $signed(sext_ln945_fu_2033_p1));

assign add_ln950_fu_2283_p2 = ($signed(sub_ln950_fu_2277_p2) + $signed(sext_ln950_fu_2218_p1));

assign add_ln955_fu_2468_p2 = ($signed(sub_ln955_fu_2462_p2) + $signed(sext_ln955_fu_2403_p1));

assign and_ln894_1_fu_1154_p2 = (grp_fu_865_p2 & and_ln894_fu_1148_p2);

assign and_ln894_fu_1148_p2 = (or_ln894_fu_1124_p2 & or_ln894_1_fu_1142_p2);

assign and_ln899_fu_1360_p2 = (or_ln899_fu_1354_p2 & grp_fu_865_p2);

assign and_ln943_fu_1993_p2 = (or_ln943_fu_1989_p2 & grp_fu_631_p_dout0);

assign and_ln948_fu_2178_p2 = (or_ln948_fu_2174_p2 & grp_fu_631_p_dout0);

assign and_ln953_fu_2363_p2 = (or_ln953_fu_2359_p2 & grp_fu_631_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd61];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign ap_NS_fsm_state82 = ap_NS_fsm[32'd51];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp6_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp6_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp6_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state76_on_subcall_done = ((icmp_ln975_reg_3205 == 1'd1) & (grp_delete_patch_fu_811_ap_done == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign bitcast_ln521_1_fu_2143_p1 = zext_ln368_1_fu_2139_p1;

assign bitcast_ln521_2_fu_2328_p1 = zext_ln368_2_fu_2324_p1;

assign bitcast_ln521_fu_1958_p1 = zext_ln368_fu_1954_p1;

assign bitcast_ln894_1_fu_1095_p1 = sub_reg_2925_pp3_iter6_reg;

assign bitcast_ln894_fu_1078_p1 = conv_reg_2932;

assign bitcast_ln899_fu_1324_p1 = reg_905;

assign data_V_2_fu_1366_p3 = ((and_ln899_fu_1360_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln899_fu_1324_p1);

assign data_V_3_fu_1782_p1 = grp_fu_636_p_dout0;

assign data_V_4_fu_1946_p1 = grp_fu_636_p_dout0;

assign data_V_5_fu_2131_p1 = grp_fu_636_p_dout0;

assign data_V_6_fu_2316_p1 = grp_fu_636_p_dout0;

assign data_V_fu_1166_p1 = dc_fu_1160_p3;

assign dc_fu_1160_p3 = ((and_ln894_1_fu_1154_p2[0:0] == 1'b1) ? conv_reg_2932 : sub_reg_2925_pp3_iter6_reg);

assign grp_areWedgeSuperPointsEqual_fu_839_ap_start = grp_areWedgeSuperPointsEqual_fu_839_ap_start_reg;

assign grp_delete_patch_fu_811_ap_start = grp_delete_patch_fu_811_ap_start_reg;

assign grp_fu_1575_p_ce = 1'b1;

assign grp_fu_1575_p_din0 = grp_fu_856_p0;

assign grp_fu_1578_p_ce = 1'b1;

assign grp_fu_1578_p_din0 = new_z_i_index_q1;

assign grp_fu_631_p_ce = 1'b1;

assign grp_fu_631_p_din0 = grp_fu_872_p0;

assign grp_fu_631_p_din1 = 64'd4607182418800017408;

assign grp_fu_631_p_opcode = 5'd4;

assign grp_fu_636_p_ce = 1'b1;

assign grp_fu_636_p_din0 = grp_fu_877_p0;

assign grp_fu_856_ce = 1'b1;

assign grp_fu_856_p1 = grp_fu_1575_p_dout0;

assign grp_fu_860_ce = 1'b1;

assign grp_fu_860_p0 = new_z_i_index_q1;

assign grp_fu_860_p1 = grp_fu_1578_p_dout0;

assign grp_fu_872_ce = 1'b1;

assign grp_fu_872_opcode = 5'd4;

assign grp_fu_872_p1 = 64'd4607182418800017408;

assign grp_fu_872_p2 = grp_fu_631_p_dout0;

assign grp_fu_877_ce = 1'b1;

assign grp_fu_877_p1 = grp_fu_636_p_dout0;

assign grp_fu_880_p2 = (current_z_i_index_q0 + 32'd1);

assign grp_fu_899_p2 = ($signed(n_patches_i) + $signed(32'd4294967295));

assign grp_get_index_from_z_fu_797_ap_start = grp_get_index_from_z_fu_797_ap_start_reg;

assign grp_makePatch_alignedToLine_fu_772_ap_start = grp_makePatch_alignedToLine_fu_772_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din1 = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_823_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din4 = grp_straightLineProjectorFromLayerIJtoK_fu_823_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_din5 = grp_straightLineProjectorFromLayerIJtoK_fu_823_k;

assign grp_straightLineProjectorFromLayerIJtoK_fu_602_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_602_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_602_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_602_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_602_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_823_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_823_z_i = complementary_apexZ0;

assign i_1_cast_fu_965_p1 = i_1_reg_556;

assign i_2_cast_fu_1028_p1 = i_2_reg_587;

assign i_3_cast_fu_1011_p1 = i_3_reg_576;

assign i_4_cast_fu_1072_p1 = i_4_reg_627;

assign i_5_cast_fu_1319_p1 = i_5_reg_638;

assign i_6_cast13_fu_1523_p1 = ap_phi_mux_i_6_phi_fu_653_p4;

assign icmp_ln1012_fu_2622_p2 = (($signed(sub_ln1012_fu_2612_p2) < $signed(sub_ln1012_1_fu_2617_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1028_fu_2601_p2 = (($signed(tmp_41_fu_2591_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1038_fu_2641_p2 = ((i_9_reg_738 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln855_fu_938_p2 = ((i_reg_544 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln860_fu_944_p2 = ((z_top_min_read == previous_z_top_min_read) ? 1'b1 : 1'b0);

assign icmp_ln863_fu_959_p2 = ((i_1_reg_556 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln875_fu_1022_p2 = ((i_2_reg_587 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln884_fu_1005_p2 = ((i_3_reg_576 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_1046_p2 = (($signed(empty_66_reg_618) < $signed(add_ln890_fu_1040_p2)) ? 1'b1 : 1'b0);

assign icmp_ln892_fu_1066_p2 = ((i_4_reg_627 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln894_1_fu_1118_p2 = ((trunc_ln894_fu_1091_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln894_2_fu_1130_p2 = ((tmp_2_fu_1098_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln894_3_fu_1136_p2 = ((trunc_ln894_1_fu_1108_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln894_fu_1112_p2 = ((tmp_9_fu_1081_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_1313_p2 = ((i_5_reg_638 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1348_p2 = ((trunc_ln899_fu_1338_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1342_p2 = ((tmp_6_fu_1328_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln903_fu_1517_p2 = ((ap_phi_mux_i_6_phi_fu_653_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln909_fu_1696_p2 = ((ap_phi_mux_i_7_phi_fu_665_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln921_fu_1752_p2 = ((i_8_reg_672 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln923_fu_1897_p2 = (($signed(val_3_fu_1889_p3) < $signed(layerSMin_reg_683)) ? 1'b1 : 1'b0);

assign icmp_ln943_1_fu_1983_p2 = ((trunc_ln943_fu_1973_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln943_fu_1977_p2 = ((tmp_12_fu_1963_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln948_1_fu_2168_p2 = ((trunc_ln948_fu_2158_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln948_fu_2162_p2 = ((tmp_18_fu_2148_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln953_1_fu_2353_p2 = ((trunc_ln953_fu_2343_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln953_fu_2347_p2 = ((tmp_21_fu_2333_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln975_fu_2524_p2 = (($signed(n_patches_i) > $signed(nPatchesAtOriginal)) ? 1'b1 : 1'b0);

assign isNeg_2_fu_1420_p3 = add_ln341_2_fu_1414_p2[32'd8];

assign isNeg_3_fu_1822_p3 = add_ln510_fu_1816_p2[32'd11];

assign isNeg_fu_1216_p3 = add_ln341_fu_1210_p2[32'd8];

assign layerSMin_1_fu_1914_p3 = ((icmp_ln923_fu_1897_p2[0:0] == 1'b1) ? val_3_fu_1889_p3 : layerSMin_reg_683);

assign layerWithSmallestShift_1_fu_1906_p3 = ((icmp_ln923_fu_1897_p2[0:0] == 1'b1) ? zext_ln923_fu_1903_p1 : layerWithSmallestShift_reg_695);

assign lshr_ln905_fu_1685_p2 = GDarray_q0 >> zext_ln905_2_fu_1681_p1;

assign lshr_ln945_fu_2115_p2 = GDarray_q0 >> zext_ln945_2_fu_2111_p1;

assign lshr_ln950_fu_2300_p2 = GDarray_q0 >> zext_ln950_2_fu_2296_p1;

assign lshr_ln955_fu_2485_p2 = GDarray_q0 >> zext_ln955_2_fu_2481_p1;

assign mantissa_2_fu_1396_p4 = {{{{1'd1}, {tmp_45_fu_1392_p1}}}, {1'd0}};

assign mantissa_3_fu_1800_p4 = {{{{1'd1}, {tmp_47_reg_3062}}}, {1'd0}};

assign mantissa_fu_1192_p4 = {{{{1'd1}, {tmp_43_fu_1188_p1}}}, {1'd0}};

assign mul_ln905_fu_1611_p0 = mul_ln905_fu_1611_p00;

assign mul_ln905_fu_1611_p00 = $unsigned(sext_ln905_fu_1604_p1);

assign mul_ln905_fu_1611_p1 = 129'd24595658764946068822;

assign mul_ln945_fu_2041_p0 = mul_ln945_fu_2041_p00;

assign mul_ln945_fu_2041_p00 = $unsigned(sext_ln945_fu_2033_p1);

assign mul_ln945_fu_2041_p1 = 129'd24595658764946068822;

assign mul_ln950_fu_2226_p0 = mul_ln950_fu_2226_p00;

assign mul_ln950_fu_2226_p00 = $unsigned(sext_ln950_fu_2218_p1);

assign mul_ln950_fu_2226_p1 = 129'd24595658764946068822;

assign mul_ln955_fu_2411_p0 = mul_ln955_fu_2411_p00;

assign mul_ln955_fu_2411_p00 = $unsigned(sext_ln955_fu_2403_p1);

assign mul_ln955_fu_2411_p1 = 129'd24595658764946068822;

assign mul_ln958_fu_2503_p0 = (z_top_min_2_reg_728 - z_top_min_read);

assign new_z_i_d0 = lshr_ln905_fu_1685_p2[63:0];

assign new_z_i_index_d1 = ((p_Result_2_fu_1374_p3[0:0] == 1'b1) ? result_V_10_fu_1496_p2 : val_2_fu_1488_p3);

assign or_ln1006_fu_2569_p2 = (12'd1 | add_ln1006_1_fu_2563_p2);

assign or_ln54_fu_1588_p2 = (sub_ln54_fu_1552_p2 | 17'd16);

assign or_ln894_1_fu_1142_p2 = (icmp_ln894_3_fu_1136_p2 | icmp_ln894_2_fu_1130_p2);

assign or_ln894_fu_1124_p2 = (icmp_ln894_fu_1112_p2 | icmp_ln894_1_fu_1118_p2);

assign or_ln899_fu_1354_p2 = (icmp_ln899_fu_1342_p2 | icmp_ln899_1_fu_1348_p2);

assign or_ln943_fu_1989_p2 = (icmp_ln943_reg_3094 | icmp_ln943_1_reg_3099);

assign or_ln948_fu_2174_p2 = (icmp_ln948_reg_3132 | icmp_ln948_1_reg_3137);

assign or_ln953_fu_2359_p2 = (icmp_ln953_reg_3170 | icmp_ln953_1_reg_3175);

assign p_Result_2_fu_1374_p3 = data_V_2_fu_1366_p3[32'd31];

assign p_Result_3_fu_1950_p1 = data_V_4_fu_1946_p1[62:0];

assign p_Result_4_fu_2135_p1 = data_V_5_fu_2131_p1[62:0];

assign p_Result_5_fu_2320_p1 = data_V_6_fu_2316_p1[62:0];

assign p_Result_s_fu_1170_p3 = data_V_fu_1166_p1[32'd31];

assign r_V_4_fu_1256_p2 = zext_ln15_fu_1202_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1246_p1;

assign r_V_5_fu_1454_p2 = zext_ln15_2_fu_1406_p1 >> sh_prom_i_i_i_i_i54_cast_cast_cast_cast_fu_1450_p1;

assign r_V_6_fu_1460_p2 = zext_ln15_2_fu_1406_p1 << sh_prom_i_i_i_i_i54_cast_cast_cast_cast_fu_1450_p1;

assign r_V_7_fu_1855_p2 = zext_ln15_3_fu_1809_p1 >> sh_prom_i_i_i_i_i91_cast_cast_cast_cast_fu_1851_p1;

assign r_V_8_fu_1861_p2 = zext_ln15_3_fu_1809_p1 << sh_prom_i_i_i_i_i91_cast_cast_cast_cast_fu_1851_p1;

assign r_V_fu_1250_p2 = zext_ln15_fu_1202_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1246_p1;

assign result_V_10_fu_1496_p2 = (32'd0 - val_2_fu_1488_p3);

assign result_V_13_fu_1298_p3 = ((p_Result_s_fu_1170_p3[0:0] == 1'b1) ? result_V_9_fu_1292_p2 : val_fu_1284_p3);

assign result_V_9_fu_1292_p2 = (32'd0 - val_fu_1284_p3);

assign select_ln1012_fu_2628_p3 = ((icmp_ln1012_fu_2622_p2[0:0] == 1'b1) ? sub_ln1012_1_fu_2617_p2 : sub_ln1012_fu_2612_p2);

assign select_ln890_fu_1052_p3 = ((icmp_ln890_fu_1046_p2[0:0] == 1'b1) ? empty_66_reg_618 : add_ln890_fu_1040_p2);

assign select_ln958_fu_2516_p3 = ((tmp_40_fu_2508_p3[0:0] == 1'b1) ? new_z_i_atTop_3_fu_272 : z_top_min_2_reg_728);

assign sext_ln1311_2_fu_1434_p1 = $signed(sub_ln1311_2_fu_1428_p2);

assign sext_ln1311_3_fu_1835_p1 = $signed(sub_ln1311_3_fu_1830_p2);

assign sext_ln1311_fu_1230_p1 = $signed(sub_ln1311_fu_1224_p2);

assign sext_ln54_1_fu_1578_p1 = $signed(shl_ln54_3_fu_1570_p3);

assign sext_ln54_2_fu_1594_p1 = $signed(or_ln54_fu_1588_p2);

assign sext_ln54_3_fu_2006_p1 = $signed(shl_ln54_4_fu_1999_p3);

assign sext_ln54_4_fu_2017_p1 = $signed(shl_ln54_5_fu_2010_p3);

assign sext_ln54_5_fu_2191_p1 = $signed(shl_ln54_6_fu_2184_p3);

assign sext_ln54_6_fu_2202_p1 = $signed(shl_ln54_7_fu_2195_p3);

assign sext_ln54_7_fu_2376_p1 = $signed(shl_ln54_8_fu_2369_p3);

assign sext_ln54_8_fu_2387_p1 = $signed(shl_ln54_9_fu_2380_p3);

assign sext_ln54_fu_1566_p1 = $signed(shl_ln54_2_fu_1558_p3);

assign sext_ln905_fu_1604_p1 = $signed(add_ln54_reg_2973);

assign sext_ln945_fu_2033_p1 = $signed(add_ln54_1_fu_2027_p2);

assign sext_ln950_fu_2218_p1 = $signed(add_ln54_2_fu_2212_p2);

assign sext_ln955_fu_2403_p1 = $signed(add_ln54_3_fu_2397_p2);

assign sh_prom_i_i_i_i_i54_cast_cast_cast_cast_fu_1450_p1 = $unsigned(sh_prom_i_i_i_i_i54_cast_cast_cast_fu_1446_p1);

assign sh_prom_i_i_i_i_i54_cast_cast_cast_fu_1446_p1 = $signed(ush_2_fu_1438_p3);

assign sh_prom_i_i_i_i_i91_cast_cast_cast_cast_fu_1851_p1 = $unsigned(sh_prom_i_i_i_i_i91_cast_cast_cast_fu_1847_p1);

assign sh_prom_i_i_i_i_i91_cast_cast_cast_fu_1847_p1 = $signed(ush_3_fu_1839_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1246_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1242_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1242_p1 = $signed(ush_fu_1234_p3);

assign shl_ln1_fu_1674_p3 = {{add_ln905_reg_2983}, {3'd0}};

assign shl_ln2_fu_2104_p3 = {{add_ln945_reg_3112}, {3'd0}};

assign shl_ln3_fu_2289_p3 = {{add_ln950_reg_3150}, {3'd0}};

assign shl_ln4_fu_2474_p3 = {{add_ln955_reg_3188}, {3'd0}};

assign shl_ln54_1_fu_1540_p3 = {{i_6_reg_649}, {11'd0}};

assign shl_ln54_2_fu_1558_p3 = {{new_z_i_index_q1}, {5'd0}};

assign shl_ln54_3_fu_1570_p3 = {{new_z_i_index_q1}, {3'd0}};

assign shl_ln54_4_fu_1999_p3 = {{select_ln890_reg_2887}, {5'd0}};

assign shl_ln54_5_fu_2010_p3 = {{select_ln890_reg_2887}, {3'd0}};

assign shl_ln54_6_fu_2184_p3 = {{select_ln890_reg_2887}, {5'd0}};

assign shl_ln54_7_fu_2195_p3 = {{select_ln890_reg_2887}, {3'd0}};

assign shl_ln54_8_fu_2369_p3 = {{select_ln890_reg_2887}, {5'd0}};

assign shl_ln54_9_fu_2380_p3 = {{select_ln890_reg_2887}, {3'd0}};

assign shl_ln905_1_fu_1642_p3 = {{tmp_23_fu_1632_p4}, {5'd0}};

assign shl_ln905_2_fu_1650_p3 = {{tmp_32_fu_1617_p4}, {3'd0}};

assign shl_ln945_1_fu_2072_p3 = {{tmp_29_fu_2062_p4}, {5'd0}};

assign shl_ln945_2_fu_2080_p3 = {{tmp_37_fu_2047_p4}, {3'd0}};

assign shl_ln950_1_fu_2257_p3 = {{tmp_30_fu_2247_p4}, {5'd0}};

assign shl_ln950_2_fu_2265_p3 = {{tmp_38_fu_2232_p4}, {3'd0}};

assign shl_ln955_1_fu_2442_p3 = {{tmp_33_fu_2432_p4}, {5'd0}};

assign shl_ln955_2_fu_2450_p3 = {{tmp_39_fu_2417_p4}, {3'd0}};

assign shl_ln_fu_1528_p3 = {{i_6_reg_649}, {13'd0}};

assign sub_ln1006_fu_2557_p2 = (tmp_47_cast_fu_2537_p3 - tmp_48_cast_fu_2549_p3);

assign sub_ln1012_1_fu_2617_p2 = (original_d - patches_parameters_q0);

assign sub_ln1012_fu_2612_p2 = (original_c - patches_parameters_q1);

assign sub_ln1311_2_fu_1428_p2 = (8'd127 - tmp_44_fu_1382_p4);

assign sub_ln1311_3_fu_1830_p2 = (11'd1023 - tmp_46_reg_3056);

assign sub_ln1311_fu_1224_p2 = (8'd127 - tmp_42_fu_1178_p4);

assign sub_ln54_1_fu_1582_p2 = ($signed(sext_ln54_fu_1566_p1) - $signed(sext_ln54_1_fu_1578_p1));

assign sub_ln54_2_fu_2021_p2 = ($signed(sext_ln54_3_fu_2006_p1) - $signed(sext_ln54_4_fu_2017_p1));

assign sub_ln54_3_fu_2206_p2 = ($signed(sext_ln54_5_fu_2191_p1) - $signed(sext_ln54_6_fu_2202_p1));

assign sub_ln54_4_fu_2391_p2 = ($signed(sext_ln54_7_fu_2376_p1) - $signed(sext_ln54_8_fu_2387_p1));

assign sub_ln54_fu_1552_p2 = (zext_ln54_fu_1536_p1 - zext_ln54_1_fu_1548_p1);

assign sub_ln905_fu_1662_p2 = (zext_ln905_1_fu_1658_p1 - shl_ln905_1_fu_1642_p3);

assign sub_ln923_fu_1776_p2 = (tmp_15_fu_1762_p6 - z_top_min_read);

assign sub_ln943_fu_1940_p2 = (tmp_11_fu_1926_p6 - z_top_min_read);

assign sub_ln945_fu_2092_p2 = (zext_ln945_1_fu_2088_p1 - shl_ln945_1_fu_2072_p3);

assign sub_ln948_fu_2125_p2 = (z_top_min_0_reg_707 - z_top_min_read);

assign sub_ln950_fu_2277_p2 = (zext_ln950_1_fu_2273_p1 - shl_ln950_1_fu_2257_p3);

assign sub_ln953_fu_2310_p2 = (z_top_min_1_reg_717 - z_top_min_read);

assign sub_ln955_fu_2462_p2 = (zext_ln955_1_fu_2458_p1 - shl_ln955_1_fu_2442_p3);

assign temp_address0 = grp_makePatch_alignedToLine_fu_772_temp_address0;

assign temp_address1 = grp_makePatch_alignedToLine_fu_772_temp_address1;

assign temp_d0 = grp_makePatch_alignedToLine_fu_772_temp_d0;

assign thirdLastPatchIdx_fu_2636_p2 = ($signed(trunc_ln1003_reg_3214) + $signed(5'd29));

assign tmp_11_fu_1926_p5 = layerWithSmallestShift_reg_695[1:0];

assign tmp_12_fu_1963_p4 = {{data_V_4_fu_1946_p1[62:52]}};

assign tmp_15_fu_1762_p5 = i_8_reg_672[1:0];

assign tmp_16_fu_970_p1 = white_space_height_read;

assign tmp_16_fu_970_p3 = tmp_16_fu_970_p1[32'd63];

assign tmp_17_fu_1274_p4 = {{r_V_4_fu_1256_p2[55:24]}};

assign tmp_18_fu_2148_p4 = {{data_V_5_fu_2131_p1[62:52]}};

assign tmp_21_fu_2333_p4 = {{data_V_6_fu_2316_p1[62:52]}};

assign tmp_22_fu_1478_p4 = {{r_V_6_fu_1460_p2[55:24]}};

assign tmp_23_fu_1632_p4 = {{mul_ln905_fu_1611_p2[127:69]}};

assign tmp_26_fu_1262_p3 = r_V_fu_1250_p2[32'd24];

assign tmp_28_fu_1879_p4 = {{r_V_8_fu_1861_p2[116:53]}};

assign tmp_29_fu_2062_p4 = {{mul_ln945_fu_2041_p2[127:69]}};

assign tmp_2_fu_1098_p4 = {{bitcast_ln894_1_fu_1095_p1[30:23]}};

assign tmp_30_fu_2247_p4 = {{mul_ln950_fu_2226_p2[127:69]}};

assign tmp_31_fu_1466_p3 = r_V_5_fu_1454_p2[32'd24];

assign tmp_32_fu_1617_p4 = {{mul_ln905_fu_1611_p2[128:69]}};

assign tmp_33_fu_2432_p4 = {{mul_ln955_fu_2411_p2[127:69]}};

assign tmp_36_fu_1867_p3 = r_V_7_fu_1855_p2[32'd53];

assign tmp_37_fu_2047_p4 = {{mul_ln945_fu_2041_p2[128:69]}};

assign tmp_38_fu_2232_p4 = {{mul_ln950_fu_2226_p2[128:69]}};

assign tmp_39_fu_2417_p4 = {{mul_ln955_fu_2411_p2[128:69]}};

assign tmp_40_fu_2508_p3 = mul_ln958_fu_2503_p2[32'd63];

assign tmp_41_fu_2591_p4 = {{n_patches_i[31:2]}};

assign tmp_42_fu_1178_p4 = {{data_V_fu_1166_p1[30:23]}};

assign tmp_43_fu_1188_p1 = data_V_fu_1166_p1[22:0];

assign tmp_44_fu_1382_p4 = {{data_V_2_fu_1366_p3[30:23]}};

assign tmp_45_fu_1392_p1 = data_V_2_fu_1366_p3[22:0];

assign tmp_47_cast_fu_2537_p3 = {{trunc_ln1006_fu_2533_p1}, {7'd0}};

assign tmp_47_fu_1796_p1 = data_V_3_fu_1782_p1[51:0];

assign tmp_48_cast_fu_2549_p3 = {{trunc_ln1006_1_fu_2545_p1}, {3'd0}};

assign tmp_6_fu_1328_p4 = {{bitcast_ln899_fu_1324_p1[30:23]}};

assign tmp_9_fu_1081_p4 = {{bitcast_ln894_fu_1078_p1[30:23]}};

assign trunc_ln1003_fu_2529_p1 = n_patches_i[4:0];

assign trunc_ln1006_1_fu_2545_p1 = grp_fu_899_p2[8:0];

assign trunc_ln1006_fu_2533_p1 = grp_fu_899_p2[4:0];

assign trunc_ln894_1_fu_1108_p1 = bitcast_ln894_1_fu_1095_p1[22:0];

assign trunc_ln894_fu_1091_p1 = bitcast_ln894_fu_1078_p1[22:0];

assign trunc_ln899_fu_1338_p1 = bitcast_ln899_fu_1324_p1[22:0];

assign trunc_ln911_fu_1713_p1 = ap_phi_mux_i_7_phi_fu_665_p4[1:0];

assign trunc_ln914_cast_fu_1708_p1 = ap_phi_mux_i_7_phi_fu_665_p4;

assign trunc_ln923_fu_1758_p1 = i_8_reg_672[1:0];

assign trunc_ln943_fu_1973_p1 = data_V_4_fu_1946_p1[51:0];

assign trunc_ln945_fu_2121_p1 = lshr_ln945_fu_2115_p2[63:0];

assign trunc_ln948_fu_2158_p1 = data_V_5_fu_2131_p1[51:0];

assign trunc_ln950_fu_2306_p1 = lshr_ln950_fu_2300_p2[63:0];

assign trunc_ln953_fu_2343_p1 = data_V_6_fu_2316_p1[51:0];

assign trunc_ln955_fu_2491_p1 = lshr_ln955_fu_2485_p2[63:0];

assign ush_2_fu_1438_p3 = ((isNeg_2_fu_1420_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_1434_p1 : add_ln341_2_fu_1414_p2);

assign ush_3_fu_1839_p3 = ((isNeg_3_fu_1822_p3[0:0] == 1'b1) ? sext_ln1311_3_fu_1835_p1 : add_ln510_fu_1816_p2);

assign ush_fu_1234_p3 = ((isNeg_fu_1216_p3[0:0] == 1'b1) ? sext_ln1311_fu_1230_p1 : add_ln341_fu_1210_p2);

assign val_2_fu_1488_p3 = ((isNeg_2_fu_1420_p3[0:0] == 1'b1) ? zext_ln662_2_fu_1474_p1 : tmp_22_fu_1478_p4);

assign val_3_fu_1889_p3 = ((isNeg_3_fu_1822_p3[0:0] == 1'b1) ? zext_ln662_3_fu_1875_p1 : tmp_28_fu_1879_p4);

assign val_fu_1284_p3 = ((isNeg_fu_1216_p3[0:0] == 1'b1) ? zext_ln662_fu_1270_p1 : tmp_17_fu_1274_p4);

assign zext_ln1006_fu_2575_p1 = or_ln1006_fu_2569_p2;

assign zext_ln1007_fu_2586_p1 = add_ln1007_fu_2580_p2;

assign zext_ln15_2_fu_1406_p1 = mantissa_2_fu_1396_p4;

assign zext_ln15_3_fu_1809_p1 = mantissa_3_fu_1800_p4;

assign zext_ln15_fu_1202_p1 = mantissa_fu_1192_p4;

assign zext_ln341_2_fu_1410_p1 = tmp_44_fu_1382_p4;

assign zext_ln341_fu_1206_p1 = tmp_42_fu_1178_p4;

assign zext_ln368_1_fu_2139_p1 = p_Result_4_fu_2135_p1;

assign zext_ln368_2_fu_2324_p1 = p_Result_5_fu_2320_p1;

assign zext_ln368_fu_1954_p1 = p_Result_3_fu_1950_p1;

assign zext_ln510_fu_1813_p1 = tmp_46_reg_3056;

assign zext_ln54_1_fu_1548_p1 = shl_ln54_1_fu_1540_p3;

assign zext_ln54_fu_1536_p1 = shl_ln_fu_1528_p3;

assign zext_ln662_2_fu_1474_p1 = tmp_31_fu_1466_p3;

assign zext_ln662_3_fu_1875_p1 = tmp_36_fu_1867_p3;

assign zext_ln662_fu_1270_p1 = tmp_26_fu_1262_p3;

assign zext_ln855_fu_934_p1 = i_reg_544;

assign zext_ln905_1_fu_1658_p1 = shl_ln905_2_fu_1650_p3;

assign zext_ln905_2_fu_1681_p1 = shl_ln1_fu_1674_p3;

assign zext_ln905_3_fu_1627_p1 = tmp_32_fu_1617_p4;

assign zext_ln911_fu_1717_p1 = add_ln914_reg_3022;

assign zext_ln923_fu_1903_p1 = trunc_ln923_reg_3046_pp7_iter1_reg;

assign zext_ln945_1_fu_2088_p1 = shl_ln945_2_fu_2080_p3;

assign zext_ln945_2_fu_2111_p1 = shl_ln2_fu_2104_p3;

assign zext_ln945_3_fu_2057_p1 = tmp_37_fu_2047_p4;

assign zext_ln950_1_fu_2273_p1 = shl_ln950_2_fu_2265_p3;

assign zext_ln950_2_fu_2296_p1 = shl_ln3_fu_2289_p3;

assign zext_ln950_3_fu_2242_p1 = tmp_38_fu_2232_p4;

assign zext_ln955_1_fu_2458_p1 = shl_ln955_2_fu_2450_p3;

assign zext_ln955_2_fu_2481_p1 = shl_ln4_fu_2474_p3;

assign zext_ln955_3_fu_2427_p1 = tmp_39_fu_2417_p4;

always @ (posedge ap_clk) begin
    zext_ln855_reg_2778[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_1_cast_reg_2810[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_3_cast_reg_2853[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_2877[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast13_reg_2963[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast13_reg_2963_pp5_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast13_reg_2963_pp5_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    add_ln54_reg_2973[2:0] <= 3'b000;
    add_ln905_reg_2983[2:0] <= 3'b000;
    add_ln945_reg_3112[2:0] <= 3'b000;
    add_ln950_reg_3150[2:0] <= 3'b000;
    add_ln955_reg_3188[2:0] <= 3'b000;
end

endmodule //makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch
