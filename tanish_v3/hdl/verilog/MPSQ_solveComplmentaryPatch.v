// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_solveComplmentaryPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        ppl,
        nPatchesAtOriginal,
        previous_z_top_min_read,
        complementary_apexZ0,
        white_space_height_read,
        original_c,
        original_d,
        p_read12,
        p_read13,
        z_top_min_read,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_568_p_idle,
        grp_fu_1460_p_din0,
        grp_fu_1460_p_din1,
        grp_fu_1460_p_dout0,
        grp_fu_1460_p_ce
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 59'd4096;
parameter    ap_ST_fsm_state15 = 59'd8192;
parameter    ap_ST_fsm_pp1_stage0 = 59'd16384;
parameter    ap_ST_fsm_state18 = 59'd32768;
parameter    ap_ST_fsm_pp2_stage0 = 59'd65536;
parameter    ap_ST_fsm_state21 = 59'd131072;
parameter    ap_ST_fsm_state22 = 59'd262144;
parameter    ap_ST_fsm_pp3_stage0 = 59'd524288;
parameter    ap_ST_fsm_state26 = 59'd1048576;
parameter    ap_ST_fsm_pp4_stage0 = 59'd2097152;
parameter    ap_ST_fsm_state32 = 59'd4194304;
parameter    ap_ST_fsm_pp5_stage0 = 59'd8388608;
parameter    ap_ST_fsm_state42 = 59'd16777216;
parameter    ap_ST_fsm_pp6_stage0 = 59'd33554432;
parameter    ap_ST_fsm_state46 = 59'd67108864;
parameter    ap_ST_fsm_state47 = 59'd134217728;
parameter    ap_ST_fsm_state48 = 59'd268435456;
parameter    ap_ST_fsm_state49 = 59'd536870912;
parameter    ap_ST_fsm_state50 = 59'd1073741824;
parameter    ap_ST_fsm_state51 = 59'd2147483648;
parameter    ap_ST_fsm_state52 = 59'd4294967296;
parameter    ap_ST_fsm_state53 = 59'd8589934592;
parameter    ap_ST_fsm_state54 = 59'd17179869184;
parameter    ap_ST_fsm_state55 = 59'd34359738368;
parameter    ap_ST_fsm_state56 = 59'd68719476736;
parameter    ap_ST_fsm_state57 = 59'd137438953472;
parameter    ap_ST_fsm_state58 = 59'd274877906944;
parameter    ap_ST_fsm_state59 = 59'd549755813888;
parameter    ap_ST_fsm_state60 = 59'd1099511627776;
parameter    ap_ST_fsm_state61 = 59'd2199023255552;
parameter    ap_ST_fsm_state62 = 59'd4398046511104;
parameter    ap_ST_fsm_state63 = 59'd8796093022208;
parameter    ap_ST_fsm_state64 = 59'd17592186044416;
parameter    ap_ST_fsm_state65 = 59'd35184372088832;
parameter    ap_ST_fsm_state66 = 59'd70368744177664;
parameter    ap_ST_fsm_state67 = 59'd140737488355328;
parameter    ap_ST_fsm_state68 = 59'd281474976710656;
parameter    ap_ST_fsm_state69 = 59'd562949953421312;
parameter    ap_ST_fsm_state70 = 59'd1125899906842624;
parameter    ap_ST_fsm_state71 = 59'd2251799813685248;
parameter    ap_ST_fsm_state72 = 59'd4503599627370496;
parameter    ap_ST_fsm_state73 = 59'd9007199254740992;
parameter    ap_ST_fsm_state74 = 59'd18014398509481984;
parameter    ap_ST_fsm_state75 = 59'd36028797018963968;
parameter    ap_ST_fsm_state76 = 59'd72057594037927936;
parameter    ap_ST_fsm_state77 = 59'd144115188075855872;
parameter    ap_ST_fsm_state78 = 59'd288230376151711744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [31:0] ppl;
input  [7:0] nPatchesAtOriginal;
input  [31:0] previous_z_top_min_read;
input  [31:0] complementary_apexZ0;
input  [63:0] white_space_height_read;
input  [31:0] original_c;
input  [31:0] original_d;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] z_top_min_read;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;
output  [63:0] ap_return_0;
output  [7:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [63:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_568_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_568_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_568_p_idle;
output  [32:0] grp_fu_1460_p_din0;
output  [63:0] grp_fu_1460_p_din1;
input  [63:0] grp_fu_1460_p_dout0;
output   grp_fu_1460_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[2:0] GDn_points_address0;
reg GDn_points_ce0;
reg[11:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg[11:0] patches_superpoints_address1;
reg patches_superpoints_ce1;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg[63:0] ap_return_0;
reg[7:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[63:0] ap_return_6;
reg[31:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_2_reg_474;
reg   [2:0] i_4_reg_494;
reg   [2:0] i_3_reg_505;
reg   [2:0] i_5_reg_546;
reg   [2:0] i_6_reg_557;
reg   [2:0] i_7_reg_569;
reg   [2:0] i_8_reg_580;
reg   [63:0] layerSMin_reg_591;
reg   [7:0] layerWithSmallestShift_reg_603;
reg   [31:0] reg_743;
reg    ap_enable_reg_pp4_iter3;
wire    ap_block_state27_pp4_stage0_iter0;
wire    ap_block_state28_pp4_stage0_iter1;
wire    ap_block_state29_pp4_stage0_iter2;
wire    ap_block_state30_pp4_stage0_iter3;
wire    ap_block_state31_pp4_stage0_iter4;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln1178_reg_1785;
reg   [0:0] icmp_ln1178_reg_1785_pp4_iter2_reg;
wire    ap_CS_fsm_state51;
reg   [7:0] reg_748;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln1120_fu_753_p1;
reg   [8:0] zext_ln1120_reg_1610;
wire   [2:0] add_ln1126_fu_757_p2;
reg   [2:0] add_ln1126_reg_1616;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln1124_fu_763_p1;
reg   [63:0] zext_ln1124_reg_1622;
wire   [0:0] icmp_ln1124_fu_767_p2;
wire   [0:0] icmp_ln870_fu_773_p2;
reg   [0:0] icmp_ln870_reg_1631;
wire   [8:0] add_ln1131_fu_777_p2;
reg   [8:0] add_ln1131_reg_1635;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_return;
reg   [31:0] agg_tmp7_reg_1640;
wire    ap_CS_fsm_state10;
wire   [2:0] add_ln1133_fu_782_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state13_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1133_fu_788_p2;
reg   [0:0] icmp_ln1133_reg_1650;
wire   [63:0] i_2_cast_fu_794_p1;
reg   [63:0] i_2_cast_reg_1654;
wire   [0:0] tmp_2_fu_799_p3;
reg   [0:0] tmp_2_reg_1664;
wire    ap_CS_fsm_state15;
wire   [31:0] add_ln1153_fu_806_p2;
reg   [31:0] add_ln1153_reg_1668;
wire   [9:0] zext_ln1156_fu_817_p1;
reg   [9:0] zext_ln1156_reg_1673;
wire   [31:0] add_ln1143_fu_821_p2;
reg   [31:0] add_ln1143_reg_1678;
wire  signed [9:0] sext_ln1146_fu_832_p1;
reg  signed [9:0] sext_ln1146_reg_1683;
wire   [2:0] add_ln1156_fu_836_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state16_pp1_stage0_iter0;
wire    ap_block_state17_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln1156_fu_842_p2;
reg   [0:0] icmp_ln1156_reg_1693;
wire   [63:0] i_4_cast_fu_848_p1;
reg   [63:0] i_4_cast_reg_1697;
wire    ap_CS_fsm_state18;
wire   [2:0] add_ln1146_fu_853_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln1146_fu_859_p2;
reg   [0:0] icmp_ln1146_reg_1717;
wire   [63:0] i_3_cast_fu_865_p1;
reg   [63:0] i_3_cast_reg_1721;
reg   [31:0] GDn_points_load_reg_1731;
wire    ap_CS_fsm_state21;
wire   [31:0] select_ln1162_fu_892_p3;
reg   [31:0] select_ln1162_reg_1736;
wire    ap_CS_fsm_state22;
wire   [2:0] add_ln1165_fu_900_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state23_pp3_stage0_iter0;
wire    ap_block_state24_pp3_stage0_iter1;
wire    ap_block_state25_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln1165_fu_906_p2;
reg   [0:0] icmp_ln1165_reg_1749;
reg   [0:0] icmp_ln1165_reg_1749_pp3_iter1_reg;
reg   [2:0] new_z_i_index_addr_3_reg_1753;
reg   [2:0] new_z_i_index_addr_3_reg_1753_pp3_iter1_reg;
wire   [7:0] new_z_i_index_q1;
reg   [7:0] new_z_i_index_load_reg_1764;
reg    ap_enable_reg_pp3_iter1;
wire   [7:0] trunc_ln1167_fu_918_p1;
reg   [7:0] trunc_ln1167_reg_1770;
wire   [31:0] add_ln1167_fu_922_p2;
reg   [31:0] add_ln1167_reg_1775;
wire   [2:0] add_ln1178_fu_949_p2;
reg   [2:0] add_ln1178_reg_1780;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln1178_fu_955_p2;
reg   [0:0] icmp_ln1178_reg_1785_pp4_iter1_reg;
reg   [0:0] icmp_ln1178_reg_1785_pp4_iter3_reg;
wire   [63:0] i_6_cast_fu_961_p1;
reg   [63:0] i_6_cast_reg_1789;
reg   [63:0] i_6_cast_reg_1789_pp4_iter1_reg;
reg   [63:0] i_6_cast_reg_1789_pp4_iter2_reg;
reg   [63:0] i_6_cast_reg_1789_pp4_iter3_reg;
wire   [11:0] tmp_fu_966_p4;
reg   [11:0] tmp_reg_1799;
wire   [0:0] icmp_ln1186_fu_990_p2;
reg   [0:0] icmp_ln1186_reg_1839;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state33_pp5_stage0_iter0;
wire    ap_block_state34_pp5_stage0_iter1;
wire    ap_block_state35_pp5_stage0_iter2;
wire    ap_block_state36_pp5_stage0_iter3;
wire    ap_block_state37_pp5_stage0_iter4;
wire    ap_block_state38_pp5_stage0_iter5;
wire    ap_block_state39_pp5_stage0_iter6;
wire    ap_block_state40_pp5_stage0_iter7;
wire    ap_block_state41_pp5_stage0_iter8;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln1186_reg_1839_pp5_iter1_reg;
wire   [2:0] add_ln1191_fu_996_p2;
reg   [2:0] add_ln1191_reg_1843;
reg    ap_enable_reg_pp5_iter0;
reg   [2:0] add_ln1191_reg_1843_pp5_iter1_reg;
wire   [1:0] trunc_ln1188_fu_1007_p1;
reg   [1:0] trunc_ln1188_reg_1854;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter1_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter2_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter3_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter4_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter5_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter6_reg;
reg   [1:0] trunc_ln1188_reg_1854_pp5_iter7_reg;
wire   [31:0] new_z_i_V_q0;
reg   [31:0] new_z_i_V_load_reg_1858;
reg    ap_enable_reg_pp5_iter1;
wire  signed [32:0] sext_ln1199_fu_1036_p1;
reg  signed [32:0] sext_ln1199_reg_1863;
wire    ap_CS_fsm_state42;
wire   [2:0] add_ln1199_fu_1039_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state43_pp6_stage0_iter0;
wire    ap_block_state44_pp6_stage0_iter1;
wire    ap_block_state45_pp6_stage0_iter2;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln1199_fu_1045_p2;
reg   [0:0] icmp_ln1199_reg_1877;
reg   [0:0] icmp_ln1199_reg_1877_pp6_iter1_reg;
wire   [1:0] trunc_ln534_fu_1051_p1;
reg   [1:0] trunc_ln534_reg_1881;
reg   [1:0] trunc_ln534_reg_1881_pp6_iter1_reg;
wire   [31:0] tmp_3_fu_1055_p6;
reg   [31:0] tmp_3_reg_1886;
wire   [32:0] select_ln180_1_fu_1091_p3;
reg   [32:0] select_ln180_1_reg_1891;
wire   [7:0] layerWithSmallestShift_1_fu_1111_p3;
reg    ap_enable_reg_pp6_iter2;
wire   [63:0] layerSMin_1_fu_1119_p3;
wire   [11:0] tmp_12_cast_fu_1130_p3;
reg   [11:0] tmp_12_cast_reg_1906;
wire    ap_CS_fsm_state46;
wire   [11:0] add_ln1223_fu_1138_p2;
reg   [11:0] add_ln1223_reg_1912;
wire  signed [31:0] lhs_fu_1148_p6;
reg  signed [31:0] lhs_reg_1917;
wire    ap_CS_fsm_state47;
wire   [32:0] ret_2_fu_1166_p2;
reg   [32:0] ret_2_reg_1924;
wire   [11:0] add_ln1228_fu_1200_p2;
reg   [11:0] add_ln1228_reg_1936;
wire    ap_CS_fsm_state48;
wire  signed [31:0] lhs_2_fu_1205_p3;
reg  signed [31:0] lhs_2_reg_1941;
wire    ap_CS_fsm_state49;
wire   [11:0] add_ln1233_fu_1216_p2;
reg   [11:0] add_ln1233_reg_1952;
wire   [32:0] ret_3_fu_1224_p2;
reg   [32:0] ret_3_reg_1957;
wire    ap_CS_fsm_state50;
wire  signed [31:0] lhs_3_fu_1258_p3;
reg  signed [31:0] lhs_3_reg_1969;
wire   [32:0] ret_4_fu_1268_p2;
reg   [32:0] ret_4_reg_1975;
wire   [32:0] sub_ln180_3_fu_1273_p2;
reg   [32:0] sub_ln180_3_reg_1981;
wire  signed [31:0] lhs_4_fu_1298_p3;
reg  signed [31:0] lhs_4_reg_1986;
wire    ap_CS_fsm_state52;
wire   [32:0] ret_fu_1309_p2;
reg   [32:0] ret_reg_1991;
wire  signed [63:0] sext_ln534_fu_1314_p1;
wire    ap_CS_fsm_state53;
reg   [0:0] tmp_8_reg_2001;
wire   [0:0] icmp_ln1253_fu_1330_p2;
reg   [0:0] icmp_ln1253_reg_2006;
wire   [31:0] select_ln1236_fu_1338_p3;
reg   [31:0] select_ln1236_reg_2010;
wire    ap_CS_fsm_state58;
wire   [8:0] zext_ln1272_fu_1350_p1;
reg   [8:0] zext_ln1272_reg_2017;
wire   [31:0] grp_makePatch_alignedToLine_fu_649_ap_return;
reg   [31:0] ppl_assign2_reg_2022;
wire    ap_CS_fsm_state61;
wire   [4:0] trunc_ln1281_fu_1355_p1;
reg   [4:0] trunc_ln1281_reg_2027;
wire   [7:0] lastPatchIdx_fu_1359_p2;
reg   [7:0] lastPatchIdx_reg_2033;
wire   [4:0] trunc_ln1284_fu_1365_p1;
reg   [4:0] trunc_ln1284_reg_2040;
wire   [0:0] icmp_ln1306_fu_1379_p2;
reg   [0:0] icmp_ln1306_reg_2045;
wire   [11:0] add_ln1284_1_fu_1409_p2;
reg   [11:0] add_ln1284_1_reg_2049;
wire    ap_CS_fsm_state63;
wire   [11:0] add_ln1285_fu_1415_p2;
reg   [11:0] add_ln1285_reg_2054;
wire    ap_CS_fsm_state64;
reg   [31:0] rhs_reg_2069;
wire    ap_CS_fsm_state65;
reg   [31:0] rhs_2_reg_2074;
wire   [4:0] add_ln1284_fu_1435_p2;
reg   [4:0] add_ln1284_reg_2079;
wire    ap_CS_fsm_state66;
wire  signed [63:0] sext_ln534_1_fu_1478_p1;
reg  signed [63:0] sext_ln534_1_reg_2084;
wire   [8:0] zext_ln1309_fu_1482_p1;
reg   [8:0] zext_ln1309_reg_2089;
wire   [4:0] thirdLastPatchIdx_fu_1485_p2;
reg   [4:0] thirdLastPatchIdx_reg_2094;
wire   [0:0] icmp_ln1316_fu_1490_p2;
reg   [0:0] icmp_ln1316_reg_2099;
wire    ap_CS_fsm_state67;
wire   [2:0] add_ln1316_fu_1496_p2;
reg   [2:0] add_ln1316_reg_2103;
wire   [31:0] add_ln1336_fu_1546_p2;
wire    ap_CS_fsm_state78;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state23;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state26;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state27;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter4;
wire    ap_CS_fsm_state32;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state33;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state43;
reg    ap_enable_reg_pp6_iter1;
reg   [2:0] current_z_i_index_address0;
reg    current_z_i_index_ce0;
reg    current_z_i_index_we0;
wire   [7:0] current_z_i_index_q0;
reg   [2:0] new_z_i_index_address0;
reg    new_z_i_index_ce0;
reg    new_z_i_index_we0;
reg   [7:0] new_z_i_index_d0;
reg   [2:0] new_z_i_index_address1;
reg    new_z_i_index_ce1;
reg   [2:0] new_z_i_V_address0;
reg    new_z_i_V_ce0;
reg    new_z_i_V_we0;
wire    grp_makePatch_alignedToLine_fu_649_ap_start;
wire    grp_makePatch_alignedToLine_fu_649_ap_done;
wire    grp_makePatch_alignedToLine_fu_649_ap_idle;
wire    grp_makePatch_alignedToLine_fu_649_ap_ready;
wire   [7:0] grp_makePatch_alignedToLine_fu_649_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_649_n_patches_o_ap_vld;
wire   [2:0] grp_makePatch_alignedToLine_fu_649_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_649_GDn_points_ce0;
reg   [31:0] grp_makePatch_alignedToLine_fu_649_z_top;
reg   [31:0] grp_makePatch_alignedToLine_fu_649_p_read;
wire   [11:0] grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_address0;
wire    grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_649_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_649_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_649_patches_superpoints_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_649_patches_superpoints_d0;
wire   [11:0] grp_makePatch_alignedToLine_fu_649_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_649_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_649_patches_parameters_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_649_patches_parameters_d0;
wire    grp_delete_patch_fu_672_ap_start;
wire    grp_delete_patch_fu_672_ap_done;
wire    grp_delete_patch_fu_672_ap_idle;
wire    grp_delete_patch_fu_672_ap_ready;
wire   [7:0] grp_delete_patch_fu_672_n_patches;
wire    grp_delete_patch_fu_672_n_patches_ap_vld;
reg   [8:0] grp_delete_patch_fu_672_index;
wire   [11:0] grp_delete_patch_fu_672_patches_superpoints_V_address0;
wire    grp_delete_patch_fu_672_patches_superpoints_V_ce0;
wire    grp_delete_patch_fu_672_patches_superpoints_V_we0;
wire   [63:0] grp_delete_patch_fu_672_patches_superpoints_V_d0;
wire   [11:0] grp_delete_patch_fu_672_patches_superpoints_V_address1;
wire    grp_delete_patch_fu_672_patches_superpoints_V_ce1;
wire   [11:0] grp_delete_patch_fu_672_patches_parameters_V_address0;
wire    grp_delete_patch_fu_672_patches_parameters_V_ce0;
wire    grp_delete_patch_fu_672_patches_parameters_V_we0;
wire   [31:0] grp_delete_patch_fu_672_patches_parameters_V_d0;
wire   [11:0] grp_delete_patch_fu_672_patches_parameters_V_address1;
wire    grp_delete_patch_fu_672_patches_parameters_V_ce1;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_ce;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_i;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_684_k;
wire    grp_get_index_from_z_fu_698_ap_start;
wire    grp_get_index_from_z_fu_698_ap_done;
wire    grp_get_index_from_z_fu_698_ap_idle;
wire    grp_get_index_from_z_fu_698_ap_ready;
wire   [2:0] grp_get_index_from_z_fu_698_GDn_points_address0;
wire    grp_get_index_from_z_fu_698_GDn_points_ce0;
reg   [2:0] grp_get_index_from_z_fu_698_layer;
reg   [31:0] grp_get_index_from_z_fu_698_z_value;
wire   [11:0] grp_get_index_from_z_fu_698_GDarrayDecoded_address0;
wire    grp_get_index_from_z_fu_698_GDarrayDecoded_ce0;
wire   [7:0] grp_get_index_from_z_fu_698_ap_return;
wire    grp_areWedgeSuperPointsEqual_fu_712_ap_start;
wire    grp_areWedgeSuperPointsEqual_fu_712_ap_done;
wire    grp_areWedgeSuperPointsEqual_fu_712_ap_idle;
wire    grp_areWedgeSuperPointsEqual_fu_712_ap_ready;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address0;
wire    grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce0;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address1;
wire    grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce1;
wire   [0:0] grp_areWedgeSuperPointsEqual_fu_712_ap_return;
reg   [2:0] i_reg_462;
wire    ap_CS_fsm_state12;
reg   [8:0] ap_phi_mux_empty_61_phi_fu_488_p4;
reg   [8:0] empty_61_reg_485;
reg   [31:0] counter_0_reg_516;
reg   [31:0] counterUpshift_0_reg_526;
reg   [9:0] empty_64_reg_536;
reg   [2:0] ap_phi_mux_i_6_phi_fu_561_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_i_7_phi_fu_573_p4;
wire    ap_block_pp5_stage0;
reg   [2:0] i_9_reg_615;
wire    ap_CS_fsm_state72;
reg   [31:0] ap_phi_mux_current_z_top_index_0_phi_fu_630_p6;
reg   [31:0] current_z_top_index_0_reg_627;
wire    ap_CS_fsm_state73;
reg   [31:0] ap_phi_mux_z_top_min_4_phi_fu_641_p6;
reg   [31:0] z_top_min_4_reg_638;
reg    grp_makePatch_alignedToLine_fu_649_ap_start_reg;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
reg    grp_delete_patch_fu_672_ap_start_reg;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state75;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg;
reg   [58:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
reg    grp_get_index_from_z_fu_698_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg;
wire    ap_NS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state68;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] i_5_cast_fu_912_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] tmp_4_fu_981_p3;
wire   [63:0] trunc_ln1191_cast_fu_1002_p1;
wire   [63:0] zext_ln1223_fu_1171_p1;
wire   [63:0] zext_ln1228_fu_1212_p1;
wire   [63:0] zext_ln1233_fu_1229_p1;
wire   [63:0] zext_ln1284_1_fu_1426_p1;
wire   [63:0] zext_ln1285_fu_1431_p1;
reg   [31:0] new_z_i_atTop_V_3_fu_196;
reg   [31:0] new_z_i_atTop_V_3_1_fu_200;
wire    ap_block_pp6_stage0;
reg   [31:0] new_z_i_atTop_V_3_2_fu_204;
reg   [31:0] new_z_i_atTop_V_3_3_fu_208;
reg   [31:0] new_z_i_atTop_V_3_4_fu_212;
wire   [7:0] grp_fu_724_p2;
wire   [7:0] add_ln1148_fu_870_p2;
wire   [7:0] select_ln1167_fu_941_p3;
wire  signed [31:0] icmp_ln870_fu_773_p0;
wire  signed [63:0] tmp_2_fu_799_p1;
wire   [8:0] add_ln1154_fu_811_p2;
wire   [8:0] add_ln1144_fu_826_p2;
wire  signed [31:0] sext_ln1162_fu_877_p1;
wire   [31:0] add_ln1162_fu_881_p2;
wire   [0:0] icmp_ln1162_fu_886_p2;
wire   [31:0] zext_ln1167_fu_928_p1;
wire   [0:0] icmp_ln1167_fu_931_p2;
wire   [7:0] add_ln1167_1_fu_936_p2;
wire   [11:0] or_ln1180_fu_976_p2;
wire  signed [31:0] sext_ln1199_fu_1036_p0;
wire   [1:0] tmp_3_fu_1055_p5;
wire  signed [32:0] sext_ln1201_fu_1069_p1;
wire   [32:0] sub_ln1201_fu_1072_p2;
wire   [0:0] tmp_9_fu_1083_p3;
wire   [32:0] sub_ln180_1_fu_1077_p2;
wire  signed [63:0] sext_ln1201_1_fu_1099_p1;
wire   [0:0] icmp_ln1201_fu_1102_p2;
wire   [7:0] zext_ln1201_fu_1108_p1;
wire   [10:0] trunc_ln1223_fu_1127_p1;
wire   [1:0] lhs_fu_1148_p5;
wire  signed [32:0] sext_ln215_fu_1162_p1;
wire   [0:0] tmp_5_fu_1180_p3;
wire   [32:0] sub_ln180_fu_1175_p2;
wire   [32:0] select_ln180_fu_1187_p3;
wire   [0:0] icmp_ln1221_fu_1194_p2;
wire  signed [32:0] sext_ln215_4_fu_1221_p1;
wire   [0:0] tmp_6_fu_1238_p3;
wire   [32:0] sub_ln180_2_fu_1233_p2;
wire   [32:0] select_ln180_2_fu_1245_p3;
wire   [0:0] icmp_ln1226_fu_1252_p2;
wire  signed [32:0] sext_ln215_5_fu_1265_p1;
wire   [0:0] tmp_7_fu_1279_p3;
wire   [32:0] select_ln180_3_fu_1286_p3;
wire   [0:0] icmp_ln1231_fu_1292_p2;
wire  signed [32:0] sext_ln215_6_fu_1305_p1;
wire  signed [32:0] grp_fu_1317_p0;
wire  signed [63:0] grp_fu_1317_p1;
wire   [63:0] grp_fu_1317_p2;
wire   [7:0] add_ln1252_fu_1344_p2;
wire   [5:0] tmp_11_fu_1369_p4;
wire   [10:0] tmp_10_fu_1392_p3;
wire   [11:0] tmp_13_cast_fu_1385_p3;
wire   [11:0] zext_ln1284_fu_1399_p1;
wire   [11:0] sub_ln1284_fu_1403_p2;
wire   [11:0] or_ln1284_fu_1421_p2;
wire  signed [32:0] sext_ln215_7_fu_1440_p1;
wire  signed [32:0] sext_ln215_8_fu_1443_p1;
wire  signed [32:0] sext_ln215_9_fu_1452_p1;
wire  signed [32:0] sext_ln215_10_fu_1455_p1;
wire   [32:0] ret_5_fu_1446_p2;
wire   [32:0] ret_6_fu_1458_p2;
wire   [0:0] icmp_ln878_fu_1464_p2;
wire   [32:0] select_ln1290_fu_1470_p3;
wire    grp_fu_1317_ce;
reg   [63:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg    ap_block_state59_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 grp_makePatch_alignedToLine_fu_649_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_672_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg = 1'b0;
#0 grp_get_index_from_z_fu_698_ap_start_reg = 1'b0;
#0 grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 32'd0;
end

MPSQ_solveComplmentaryPatch_current_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
current_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(current_z_i_index_address0),
    .ce0(current_z_i_index_ce0),
    .we0(current_z_i_index_we0),
    .d0(grp_get_index_from_z_fu_698_ap_return),
    .q0(current_z_i_index_q0)
);

MPSQ_solveComplmentaryPatch_new_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_index_address0),
    .ce0(new_z_i_index_ce0),
    .we0(new_z_i_index_we0),
    .d0(new_z_i_index_d0),
    .address1(new_z_i_index_address1),
    .ce1(new_z_i_index_ce1),
    .q1(new_z_i_index_q1)
);

MPSQ_solveComplmentaryPatch_new_z_i_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_V_address0),
    .ce0(new_z_i_V_ce0),
    .we0(new_z_i_V_we0),
    .d0(reg_743),
    .q0(new_z_i_V_q0)
);

MPSQ_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_649(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_649_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_649_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_649_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_649_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_649_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_649_n_patches_o_ap_vld),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_649_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_649_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .apexZ0(complementary_apexZ0),
    .z_top(grp_makePatch_alignedToLine_fu_649_z_top),
    .p_read(grp_makePatch_alignedToLine_fu_649_p_read),
    .leftRight(1'd1),
    .GDarrayDecoded_address0(grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_649_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_649_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_649_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_649_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_649_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_649_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_649_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_649_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .ap_return(grp_makePatch_alignedToLine_fu_649_ap_return)
);

MPSQ_delete_patch grp_delete_patch_fu_672(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_672_ap_start),
    .ap_done(grp_delete_patch_fu_672_ap_done),
    .ap_idle(grp_delete_patch_fu_672_ap_idle),
    .ap_ready(grp_delete_patch_fu_672_ap_ready),
    .n_patches(grp_delete_patch_fu_672_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_672_n_patches_ap_vld),
    .n_patches_read(reg_748),
    .index(grp_delete_patch_fu_672_index),
    .patches_superpoints_V_address0(grp_delete_patch_fu_672_patches_superpoints_V_address0),
    .patches_superpoints_V_ce0(grp_delete_patch_fu_672_patches_superpoints_V_ce0),
    .patches_superpoints_V_we0(grp_delete_patch_fu_672_patches_superpoints_V_we0),
    .patches_superpoints_V_d0(grp_delete_patch_fu_672_patches_superpoints_V_d0),
    .patches_superpoints_V_address1(grp_delete_patch_fu_672_patches_superpoints_V_address1),
    .patches_superpoints_V_ce1(grp_delete_patch_fu_672_patches_superpoints_V_ce1),
    .patches_superpoints_V_q1(patches_superpoints_q1),
    .patches_parameters_V_address0(grp_delete_patch_fu_672_patches_parameters_V_address0),
    .patches_parameters_V_ce0(grp_delete_patch_fu_672_patches_parameters_V_ce0),
    .patches_parameters_V_we0(grp_delete_patch_fu_672_patches_parameters_V_we0),
    .patches_parameters_V_d0(grp_delete_patch_fu_672_patches_parameters_V_d0),
    .patches_parameters_V_address1(grp_delete_patch_fu_672_patches_parameters_V_address1),
    .patches_parameters_V_ce1(grp_delete_patch_fu_672_patches_parameters_V_ce1),
    .patches_parameters_V_q1(patches_parameters_q1)
);

MPSQ_get_index_from_z grp_get_index_from_z_fu_698(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_index_from_z_fu_698_ap_start),
    .ap_done(grp_get_index_from_z_fu_698_ap_done),
    .ap_idle(grp_get_index_from_z_fu_698_ap_idle),
    .ap_ready(grp_get_index_from_z_fu_698_ap_ready),
    .GDn_points_address0(grp_get_index_from_z_fu_698_GDn_points_address0),
    .GDn_points_ce0(grp_get_index_from_z_fu_698_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .layer(grp_get_index_from_z_fu_698_layer),
    .z_value(grp_get_index_from_z_fu_698_z_value),
    .GDarrayDecoded_address0(grp_get_index_from_z_fu_698_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_get_index_from_z_fu_698_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .ap_return(grp_get_index_from_z_fu_698_ap_return)
);

MPSQ_areWedgeSuperPointsEqual grp_areWedgeSuperPointsEqual_fu_712(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_areWedgeSuperPointsEqual_fu_712_ap_start),
    .ap_done(grp_areWedgeSuperPointsEqual_fu_712_ap_done),
    .ap_idle(grp_areWedgeSuperPointsEqual_fu_712_ap_idle),
    .ap_ready(grp_areWedgeSuperPointsEqual_fu_712_ap_ready),
    .wsp2_V_address0(grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address0),
    .wsp2_V_ce0(grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce0),
    .wsp2_V_q0(patches_superpoints_q0),
    .wsp2_V_address1(grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address1),
    .wsp2_V_ce1(grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce1),
    .wsp2_V_q1(patches_superpoints_q1),
    .wsp1_V_offset(add_ln1284_reg_2079),
    .wsp1_V_offset1(i_9_reg_615),
    .wsp2_V_offset(thirdLastPatchIdx_reg_2094),
    .wsp2_V_offset3(i_9_reg_615),
    .ap_return(grp_areWedgeSuperPointsEqual_fu_712_ap_return)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U82(
    .din0(new_z_i_atTop_V_3_1_fu_200),
    .din1(new_z_i_atTop_V_3_2_fu_204),
    .din2(new_z_i_atTop_V_3_3_fu_208),
    .din3(new_z_i_atTop_V_3_4_fu_212),
    .din4(tmp_3_fu_1055_p5),
    .dout(tmp_3_fu_1055_p6)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U83(
    .din0(new_z_i_atTop_V_3_1_fu_200),
    .din1(new_z_i_atTop_V_3_2_fu_204),
    .din2(new_z_i_atTop_V_3_3_fu_208),
    .din3(new_z_i_atTop_V_3_4_fu_212),
    .din4(lhs_fu_1148_p5),
    .dout(lhs_fu_1148_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln870_fu_773_p2 == 1'd1) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln870_fu_773_p2 == 1'd1) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_2_fu_799_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_2_fu_799_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((tmp_2_fu_799_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((tmp_2_fu_799_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state23)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state27) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state27)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state27);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state33)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp5_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state43) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state43)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state43);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_0_preg <= white_space_height_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_1_preg <= lastPatchIdx_reg_2033;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_2_preg <= ap_phi_mux_current_z_top_index_0_phi_fu_630_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_3_preg <= counter_0_reg_516;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_4_preg <= counterUpshift_0_reg_526;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_5_preg <= z_top_min_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_6_preg <= sext_ln534_1_reg_2084;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_return_7_preg <= ap_phi_mux_z_top_min_4_phi_fu_641_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1316_fu_1490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state67) & (1'b1 == ap_NS_fsm_state68))) begin
            grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg <= 1'b1;
        end else if ((grp_areWedgeSuperPointsEqual_fu_712_ap_ready == 1'b1)) begin
            grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_672_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state74) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state58)))) begin
            grp_delete_patch_fu_672_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_672_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_672_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_index_from_z_fu_698_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_get_index_from_z_fu_698_ap_start_reg <= 1'b1;
        end else if ((grp_get_index_from_z_fu_698_ap_ready == 1'b1)) begin
            grp_get_index_from_z_fu_698_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_649_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state60))) begin
            grp_makePatch_alignedToLine_fu_649_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_649_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_649_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1186_reg_1839 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_2_reg_1664 == 1'd1)) begin
            counterUpshift_0_reg_526 <= p_read13;
        end else if ((tmp_2_reg_1664 == 1'd0)) begin
            counterUpshift_0_reg_526 <= add_ln1153_reg_1668;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_2_reg_1664 == 1'd1)) begin
            counter_0_reg_516 <= add_ln1143_reg_1678;
        end else if ((tmp_2_reg_1664 == 1'd0)) begin
            counter_0_reg_516 <= p_read12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1306_reg_2045 == 1'd1) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln1316_reg_2099 == 1'd1) & (icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state73)))) begin
        current_z_top_index_0_reg_627 <= select_ln1162_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        current_z_top_index_0_reg_627 <= add_ln1336_fu_1546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_1631 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        empty_61_reg_485 <= add_ln1131_reg_1635;
    end else if (((icmp_ln870_fu_773_p2 == 1'd0) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_61_reg_485 <= zext_ln1120_reg_1610;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_2_reg_1664 == 1'd1)) begin
            empty_64_reg_536 <= sext_ln1146_reg_1683;
        end else if ((tmp_2_reg_1664 == 1'd0)) begin
            empty_64_reg_536 <= zext_ln1156_reg_1673;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_773_p2 == 1'd1) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_474 <= 3'd0;
    end else if (((icmp_ln1133_fu_788_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_reg_474 <= add_ln1133_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_799_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_3_reg_505 <= 3'd0;
    end else if (((icmp_ln1146_fu_859_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_3_reg_505 <= add_ln1146_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_799_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_4_reg_494 <= 3'd0;
    end else if (((icmp_ln1156_fu_842_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_4_reg_494 <= add_ln1156_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1165_fu_906_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_5_reg_546 <= add_ln1165_fu_900_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_5_reg_546 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_6_reg_557 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln1178_reg_1785 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_6_reg_557 <= add_ln1178_reg_1780;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_7_reg_569 <= 3'd1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1186_reg_1839 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_7_reg_569 <= add_ln1191_reg_1843;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1199_fu_1045_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i_8_reg_580 <= add_ln1199_fu_1039_p2;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        i_8_reg_580 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_areWedgeSuperPointsEqual_fu_712_ap_return == 1'd1) & (icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        i_9_reg_615 <= add_ln1316_reg_2103;
    end else if (((icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        i_9_reg_615 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_get_index_from_z_fu_698_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            i_reg_462 <= add_ln1126_reg_1616;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            i_reg_462 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1199_reg_1877_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        layerSMin_reg_591 <= layerSMin_1_fu_1119_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        layerSMin_reg_591 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1199_reg_1877_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        layerWithSmallestShift_reg_603 <= layerWithSmallestShift_1_fu_1111_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        layerWithSmallestShift_reg_603 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1306_reg_2045 == 1'd1) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln1316_reg_2099 == 1'd1) & (icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state73)))) begin
        z_top_min_4_reg_638 <= select_ln1236_reg_2010;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        z_top_min_4_reg_638 <= lhs_reg_1917;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        GDn_points_load_reg_1731 <= GDn_points_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1126_reg_1616 <= add_ln1126_fu_757_p2;
        zext_ln1124_reg_1622[2 : 0] <= zext_ln1124_fu_763_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_773_p2 == 1'd1) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln1131_reg_1635 <= add_ln1131_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_799_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln1143_reg_1678 <= add_ln1143_fu_821_p2;
        sext_ln1146_reg_1683 <= sext_ln1146_fu_832_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_799_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln1153_reg_1668 <= add_ln1153_fu_806_p2;
        zext_ln1156_reg_1673[8 : 0] <= zext_ln1156_fu_817_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1165_reg_1749 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1167_reg_1775 <= add_ln1167_fu_922_p2;
        trunc_ln1167_reg_1770 <= trunc_ln1167_fu_918_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1178_reg_1780 <= add_ln1178_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln1186_fu_990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1191_reg_1843 <= add_ln1191_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1191_reg_1843_pp5_iter1_reg <= add_ln1191_reg_1843;
        icmp_ln1186_reg_1839 <= icmp_ln1186_fu_990_p2;
        icmp_ln1186_reg_1839_pp5_iter1_reg <= icmp_ln1186_reg_1839;
        trunc_ln1188_reg_1854_pp5_iter1_reg <= trunc_ln1188_reg_1854;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln1223_reg_1912[11 : 1] <= add_ln1223_fu_1138_p2[11 : 1];
        tmp_12_cast_reg_1906[11 : 1] <= tmp_12_cast_fu_1130_p3[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln1228_reg_1936[11 : 1] <= add_ln1228_fu_1200_p2[11 : 1];
        lhs_2_reg_1941 <= lhs_2_fu_1205_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln1233_reg_1952[11 : 1] <= add_ln1233_fu_1216_p2[11 : 1];
        ret_3_reg_1957 <= ret_3_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        add_ln1284_1_reg_2049[11 : 3] <= add_ln1284_1_fu_1409_p2[11 : 3];
        add_ln1285_reg_2054[11 : 3] <= add_ln1285_fu_1415_p2[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        add_ln1284_reg_2079 <= add_ln1284_fu_1435_p2;
        sext_ln534_1_reg_2084 <= sext_ln534_1_fu_1478_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        add_ln1316_reg_2103 <= add_ln1316_fu_1496_p2;
        icmp_ln1316_reg_2099 <= icmp_ln1316_fu_1490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        agg_tmp7_reg_1640 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1133_fu_788_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_cast_reg_1654[2 : 0] <= i_2_cast_fu_794_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1146_fu_859_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_3_cast_reg_1721[2 : 0] <= i_3_cast_fu_865_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1156_fu_842_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_4_cast_reg_1697[2 : 0] <= i_4_cast_fu_848_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1178_fu_955_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_6_cast_reg_1789[2 : 0] <= i_6_cast_fu_961_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_6_cast_reg_1789_pp4_iter1_reg[2 : 0] <= i_6_cast_reg_1789[2 : 0];
        icmp_ln1178_reg_1785 <= icmp_ln1178_fu_955_p2;
        icmp_ln1178_reg_1785_pp4_iter1_reg <= icmp_ln1178_reg_1785;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        i_6_cast_reg_1789_pp4_iter2_reg[2 : 0] <= i_6_cast_reg_1789_pp4_iter1_reg[2 : 0];
        i_6_cast_reg_1789_pp4_iter3_reg[2 : 0] <= i_6_cast_reg_1789_pp4_iter2_reg[2 : 0];
        icmp_ln1178_reg_1785_pp4_iter2_reg <= icmp_ln1178_reg_1785_pp4_iter1_reg;
        icmp_ln1178_reg_1785_pp4_iter3_reg <= icmp_ln1178_reg_1785_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1133_reg_1650 <= icmp_ln1133_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1146_reg_1717 <= icmp_ln1146_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1156_reg_1693 <= icmp_ln1156_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln1165_reg_1749 <= icmp_ln1165_fu_906_p2;
        icmp_ln1165_reg_1749_pp3_iter1_reg <= icmp_ln1165_reg_1749;
        new_z_i_index_addr_3_reg_1753_pp3_iter1_reg <= new_z_i_index_addr_3_reg_1753;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln1199_reg_1877 <= icmp_ln1199_fu_1045_p2;
        icmp_ln1199_reg_1877_pp6_iter1_reg <= icmp_ln1199_reg_1877;
        trunc_ln534_reg_1881_pp6_iter1_reg <= trunc_ln534_reg_1881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        icmp_ln1253_reg_2006 <= icmp_ln1253_fu_1330_p2;
        tmp_8_reg_2001 <= grp_fu_1460_p_dout0[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        icmp_ln1306_reg_2045 <= icmp_ln1306_fu_1379_p2;
        lastPatchIdx_reg_2033 <= lastPatchIdx_fu_1359_p2;
        trunc_ln1281_reg_2027 <= trunc_ln1281_fu_1355_p1;
        trunc_ln1284_reg_2040 <= trunc_ln1284_fu_1365_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln870_reg_1631 <= icmp_ln870_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        lhs_3_reg_1969 <= lhs_3_fu_1258_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        lhs_4_reg_1986 <= lhs_4_fu_1298_p3;
        ret_reg_1991 <= ret_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        lhs_reg_1917 <= lhs_fu_1148_p6;
        ret_2_reg_1924 <= ret_2_fu_1166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1186_reg_1839 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_V_load_reg_1858 <= new_z_i_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter8 == 1'b1) & (trunc_ln1188_reg_1854_pp5_iter7_reg == 2'd1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_atTop_V_3_1_fu_200 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter8 == 1'b1) & (trunc_ln1188_reg_1854_pp5_iter7_reg == 2'd2) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_atTop_V_3_2_fu_204 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter8 == 1'b1) & (trunc_ln1188_reg_1854_pp5_iter7_reg == 2'd3) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_atTop_V_3_3_fu_208 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter8 == 1'b1) & (trunc_ln1188_reg_1854_pp5_iter7_reg == 2'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_atTop_V_3_4_fu_212 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
        new_z_i_atTop_V_3_fu_196 <= grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1165_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        new_z_i_index_addr_3_reg_1753 <= i_5_cast_fu_912_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1165_reg_1749 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        new_z_i_index_load_reg_1764 <= new_z_i_index_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ppl_assign2_reg_2022 <= grp_makePatch_alignedToLine_fu_649_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | ((icmp_ln1178_reg_1785_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1)))) begin
        reg_743 <= GDarrayDecoded_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57))) begin
        reg_748 <= n_patches_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ret_4_reg_1975 <= ret_4_fu_1268_p2;
        sub_ln180_3_reg_1981 <= sub_ln180_3_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        rhs_2_reg_2074 <= patches_parameters_q0;
        rhs_reg_2069 <= patches_parameters_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        select_ln1162_reg_1736 <= select_ln1162_fu_892_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        select_ln1236_reg_2010 <= select_ln1236_fu_1338_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1199_reg_1877 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln180_1_reg_1891 <= select_ln180_1_fu_1091_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        sext_ln1199_reg_1863 <= sext_ln1199_fu_1036_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        thirdLastPatchIdx_reg_2094 <= thirdLastPatchIdx_fu_1485_p2;
        zext_ln1309_reg_2089[7 : 0] <= zext_ln1309_fu_1482_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_2_reg_1664 <= tmp_2_fu_799_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1199_fu_1045_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp_3_reg_1886 <= tmp_3_fu_1055_p6;
        trunc_ln534_reg_1881 <= trunc_ln534_fu_1051_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln1178_reg_1785 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        tmp_reg_1799[11 : 1] <= tmp_fu_966_p4[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1186_fu_990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        trunc_ln1188_reg_1854 <= trunc_ln1188_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        trunc_ln1188_reg_1854_pp5_iter2_reg <= trunc_ln1188_reg_1854_pp5_iter1_reg;
        trunc_ln1188_reg_1854_pp5_iter3_reg <= trunc_ln1188_reg_1854_pp5_iter2_reg;
        trunc_ln1188_reg_1854_pp5_iter4_reg <= trunc_ln1188_reg_1854_pp5_iter3_reg;
        trunc_ln1188_reg_1854_pp5_iter5_reg <= trunc_ln1188_reg_1854_pp5_iter4_reg;
        trunc_ln1188_reg_1854_pp5_iter6_reg <= trunc_ln1188_reg_1854_pp5_iter5_reg;
        trunc_ln1188_reg_1854_pp5_iter7_reg <= trunc_ln1188_reg_1854_pp5_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln1120_reg_1610[7 : 0] <= zext_ln1120_fu_753_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        zext_ln1272_reg_2017[7 : 0] <= zext_ln1272_fu_1350_p1[7 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        GDarrayDecoded_address0 = zext_ln1233_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        GDarrayDecoded_address0 = zext_ln1228_fu_1212_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        GDarrayDecoded_address0 = zext_ln1223_fu_1171_p1;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        GDarrayDecoded_address0 = tmp_4_fu_981_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2))) begin
        GDarrayDecoded_address0 = grp_get_index_from_z_fu_698_GDarrayDecoded_address0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        GDarrayDecoded_address0 = grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_address0;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2))) begin
        GDarrayDecoded_ce0 = grp_get_index_from_z_fu_698_GDarrayDecoded_ce0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        GDarrayDecoded_ce0 = grp_makePatch_alignedToLine_fu_649_GDarrayDecoded_ce0;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        GDn_points_address0 = i_5_cast_fu_912_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        GDn_points_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2))) begin
        GDn_points_address0 = grp_get_index_from_z_fu_698_GDn_points_address0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        GDn_points_address0 = grp_makePatch_alignedToLine_fu_649_GDn_points_address0;
    end else begin
        GDn_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        GDn_points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2))) begin
        GDn_points_ce0 = grp_get_index_from_z_fu_698_GDn_points_ce0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        GDn_points_ce0 = grp_makePatch_alignedToLine_fu_649_GDn_points_ce0;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1133_fu_788_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1156_fu_842_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1146_fu_859_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1165_fu_906_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1178_fu_955_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1186_fu_990_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1199_fu_1045_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state43 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state43 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1316_reg_2099 == 1'd1) & (icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        ap_phi_mux_current_z_top_index_0_phi_fu_630_p6 = select_ln1162_reg_1736;
    end else begin
        ap_phi_mux_current_z_top_index_0_phi_fu_630_p6 = current_z_top_index_0_reg_627;
    end
end

always @ (*) begin
    if (((icmp_ln870_reg_1631 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_phi_mux_empty_61_phi_fu_488_p4 = add_ln1131_reg_1635;
    end else begin
        ap_phi_mux_empty_61_phi_fu_488_p4 = empty_61_reg_485;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln1178_reg_1785 == 1'd0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_i_6_phi_fu_561_p4 = add_ln1178_reg_1780;
    end else begin
        ap_phi_mux_i_6_phi_fu_561_p4 = i_6_reg_557;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1186_reg_1839 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_i_7_phi_fu_573_p4 = add_ln1191_reg_1843;
    end else begin
        ap_phi_mux_i_7_phi_fu_573_p4 = i_7_reg_569;
    end
end

always @ (*) begin
    if (((icmp_ln1316_reg_2099 == 1'd1) & (icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        ap_phi_mux_z_top_min_4_phi_fu_641_p6 = select_ln1236_reg_2010;
    end else begin
        ap_phi_mux_z_top_min_4_phi_fu_641_p6 = z_top_min_4_reg_638;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_0 = white_space_height_read;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_1 = lastPatchIdx_reg_2033;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_2 = ap_phi_mux_current_z_top_index_0_phi_fu_630_p6;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_3 = counter_0_reg_516;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_4 = counterUpshift_0_reg_526;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_5 = z_top_min_read;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_6 = sext_ln534_1_reg_2084;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_return_7 = ap_phi_mux_z_top_min_4_phi_fu_641_p6;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        current_z_i_index_address0 = i_3_cast_fu_865_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        current_z_i_index_address0 = i_4_cast_fu_848_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        current_z_i_index_address0 = i_2_cast_fu_794_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        current_z_i_index_address0 = zext_ln1124_reg_1622;
    end else begin
        current_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_get_index_from_z_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        current_z_i_index_ce0 = 1'b1;
    end else begin
        current_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_get_index_from_z_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        current_z_i_index_we0 = 1'b1;
    end else begin
        current_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_delete_patch_fu_672_index = zext_ln1309_reg_2089;
    end else if (((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        grp_delete_patch_fu_672_index = zext_ln1272_reg_2017;
    end else begin
        grp_delete_patch_fu_672_index = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_get_index_from_z_fu_698_layer = i_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_698_layer = 3'd4;
    end else begin
        grp_get_index_from_z_fu_698_layer = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_get_index_from_z_fu_698_z_value = agg_tmp7_reg_1640;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_698_z_value = z_top_min_read;
    end else begin
        grp_get_index_from_z_fu_698_z_value = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_makePatch_alignedToLine_fu_649_p_read = ppl_assign2_reg_2022;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_makePatch_alignedToLine_fu_649_p_read = ppl;
    end else begin
        grp_makePatch_alignedToLine_fu_649_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_makePatch_alignedToLine_fu_649_z_top = lhs_reg_1917;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_makePatch_alignedToLine_fu_649_z_top = select_ln1236_reg_2010;
    end else begin
        grp_makePatch_alignedToLine_fu_649_z_top = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1186_reg_1839_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_j = add_ln1191_reg_1843_pp5_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_j = 3'd5;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_j = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1186_reg_1839_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_k = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_k = add_ln1126_reg_1616;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_k = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1186_reg_1839_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_z_j = new_z_i_V_load_reg_1858;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_z_j = z_top_min_read;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_684_z_j = 'bx;
    end
end

always @ (*) begin
    if ((((grp_delete_patch_fu_672_n_patches_ap_vld == 1'b1) & (icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((grp_delete_patch_fu_672_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state75)))) begin
        n_patches_o = grp_delete_patch_fu_672_n_patches;
    end else if ((((grp_makePatch_alignedToLine_fu_649_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((grp_makePatch_alignedToLine_fu_649_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state77)))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_649_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_672_n_patches_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_649_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_V_address0 = trunc_ln1191_cast_fu_1002_p1;
    end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        new_z_i_V_address0 = i_6_cast_reg_1789_pp4_iter3_reg;
    end else begin
        new_z_i_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        new_z_i_V_ce0 = 1'b1;
    end else begin
        new_z_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln1178_reg_1785_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        new_z_i_V_we0 = 1'b1;
    end else begin
        new_z_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_address0 = new_z_i_index_addr_3_reg_1753_pp3_iter1_reg;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        new_z_i_index_address0 = i_3_cast_reg_1721;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        new_z_i_index_address0 = i_4_cast_reg_1697;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        new_z_i_index_address0 = i_2_cast_reg_1654;
    end else begin
        new_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        new_z_i_index_address1 = i_6_cast_fu_961_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_address1 = i_5_cast_fu_912_p1;
    end else begin
        new_z_i_index_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        new_z_i_index_ce0 = 1'b1;
    end else begin
        new_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        new_z_i_index_ce1 = 1'b1;
    end else begin
        new_z_i_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        new_z_i_index_d0 = select_ln1167_fu_941_p3;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        new_z_i_index_d0 = add_ln1148_fu_870_p2;
    end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        new_z_i_index_d0 = grp_fu_724_p2;
    end else begin
        new_z_i_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln1165_reg_1749_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1146_reg_1717 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1156_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1133_reg_1650 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        new_z_i_index_we0 = 1'b1;
    end else begin
        new_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        patches_parameters_address0 = zext_ln1285_fu_1431_p1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_address0 = grp_delete_patch_fu_672_patches_parameters_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_649_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        patches_parameters_address1 = zext_ln1284_1_fu_1426_p1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_address1 = grp_delete_patch_fu_672_patches_parameters_V_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        patches_parameters_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_672_patches_parameters_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_649_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        patches_parameters_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_ce1 = grp_delete_patch_fu_672_patches_parameters_V_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_d0 = grp_delete_patch_fu_672_patches_parameters_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_parameters_d0 = grp_makePatch_alignedToLine_fu_649_patches_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_parameters_we0 = grp_delete_patch_fu_672_patches_parameters_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_649_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state71)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        patches_superpoints_address0 = grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_672_patches_superpoints_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_649_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state71)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        patches_superpoints_address1 = grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_address1 = grp_delete_patch_fu_672_patches_superpoints_V_address1;
    end else begin
        patches_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state71)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        patches_superpoints_ce0 = grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_672_patches_superpoints_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_649_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state71)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        patches_superpoints_ce1 = grp_areWedgeSuperPointsEqual_fu_712_wsp2_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_ce1 = grp_delete_patch_fu_672_patches_superpoints_V_ce1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_672_patches_superpoints_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_649_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((icmp_ln1253_reg_2006 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_672_patches_superpoints_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state77))) begin
        patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_649_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_get_index_from_z_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln870_fu_773_p2 == 1'd1) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln870_fu_773_p2 == 1'd0) & (icmp_ln1124_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_get_index_from_z_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln1133_fu_788_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln1133_fu_788_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((tmp_2_fu_799_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln1156_fu_842_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln1156_fu_842_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln1146_fu_859_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln1146_fu_859_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1165_fu_906_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1165_fu_906_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1178_fu_955_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1178_fu_955_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln1186_fu_990_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter8 == 1'b1) & (ap_enable_reg_pp5_iter7 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln1186_fu_990_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter8 == 1'b1) & (ap_enable_reg_pp5_iter7 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1199_fu_1045_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1199_fu_1045_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == ap_block_state59_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((grp_makePatch_alignedToLine_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((icmp_ln1306_reg_2045 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((grp_areWedgeSuperPointsEqual_fu_712_ap_return == 1'd1) & (icmp_ln1316_reg_2099 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if (((icmp_ln1316_reg_2099 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((grp_delete_patch_fu_672_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((grp_makePatch_alignedToLine_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1126_fu_757_p2 = (i_reg_462 + 3'd1);

assign add_ln1131_fu_777_p2 = (zext_ln1120_reg_1610 + 9'd1);

assign add_ln1133_fu_782_p2 = (i_2_reg_474 + 3'd1);

assign add_ln1143_fu_821_p2 = (p_read12 + 32'd1);

assign add_ln1144_fu_826_p2 = ($signed(ap_phi_mux_empty_61_phi_fu_488_p4) + $signed(9'd511));

assign add_ln1146_fu_853_p2 = (i_3_reg_505 + 3'd1);

assign add_ln1148_fu_870_p2 = ($signed(current_z_i_index_q0) + $signed(8'd255));

assign add_ln1153_fu_806_p2 = (p_read13 + 32'd1);

assign add_ln1154_fu_811_p2 = (ap_phi_mux_empty_61_phi_fu_488_p4 + 9'd1);

assign add_ln1156_fu_836_p2 = (i_4_reg_494 + 3'd1);

assign add_ln1162_fu_881_p2 = ($signed(GDn_points_load_reg_1731) + $signed(32'd4294967295));

assign add_ln1165_fu_900_p2 = (i_5_reg_546 + 3'd1);

assign add_ln1167_1_fu_936_p2 = ($signed(trunc_ln1167_reg_1770) + $signed(8'd255));

assign add_ln1167_fu_922_p2 = ($signed(GDn_points_q0) + $signed(32'd4294967295));

assign add_ln1178_fu_949_p2 = (ap_phi_mux_i_6_phi_fu_561_p4 + 3'd1);

assign add_ln1191_fu_996_p2 = (ap_phi_mux_i_7_phi_fu_573_p4 + 3'd1);

assign add_ln1199_fu_1039_p2 = (i_8_reg_580 + 3'd1);

assign add_ln1223_fu_1138_p2 = ($signed(tmp_12_cast_fu_1130_p3) + $signed(12'd2049));

assign add_ln1228_fu_1200_p2 = (tmp_12_cast_reg_1906 + 12'd1537);

assign add_ln1233_fu_1216_p2 = (tmp_12_cast_reg_1906 + 12'd1025);

assign add_ln1252_fu_1344_p2 = ($signed(reg_748) + $signed(8'd255));

assign add_ln1284_1_fu_1409_p2 = (sub_ln1284_fu_1403_p2 + 12'd48);

assign add_ln1284_fu_1435_p2 = ($signed(trunc_ln1281_reg_2027) + $signed(5'd31));

assign add_ln1285_fu_1415_p2 = (sub_ln1284_fu_1403_p2 + 12'd55);

assign add_ln1316_fu_1496_p2 = (i_9_reg_615 + 3'd1);

assign add_ln1336_fu_1546_p2 = ($signed(select_ln1162_reg_1736) + $signed(32'd4294967295));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd58];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign ap_NS_fsm_state68 = ap_NS_fsm[32'd48];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59_on_subcall_done = ((grp_delete_patch_fu_672_ap_done == 1'b0) & (icmp_ln1253_reg_2006 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign grp_areWedgeSuperPointsEqual_fu_712_ap_start = grp_areWedgeSuperPointsEqual_fu_712_ap_start_reg;

assign grp_delete_patch_fu_672_ap_start = grp_delete_patch_fu_672_ap_start_reg;

assign grp_fu_1317_ce = 1'b1;

assign grp_fu_1317_p0 = sext_ln534_fu_1314_p1;

assign grp_fu_1317_p1 = white_space_height_read;

assign grp_fu_1317_p2 = grp_fu_1460_p_dout0;

assign grp_fu_1460_p_ce = 1'b1;

assign grp_fu_1460_p_din0 = sext_ln534_fu_1314_p1;

assign grp_fu_1460_p_din1 = white_space_height_read;

assign grp_fu_724_p2 = (current_z_i_index_q0 + 8'd1);

assign grp_get_index_from_z_fu_698_ap_start = grp_get_index_from_z_fu_698_ap_start_reg;

assign grp_makePatch_alignedToLine_fu_649_ap_start = grp_makePatch_alignedToLine_fu_649_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din1 = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_684_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din4 = grp_straightLineProjectorFromLayerIJtoK_fu_684_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_din5 = grp_straightLineProjectorFromLayerIJtoK_fu_684_k;

assign grp_straightLineProjectorFromLayerIJtoK_fu_568_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_568_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_568_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_568_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_568_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_684_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_684_z_i = complementary_apexZ0;

assign i_2_cast_fu_794_p1 = i_2_reg_474;

assign i_3_cast_fu_865_p1 = i_3_reg_505;

assign i_4_cast_fu_848_p1 = i_4_reg_494;

assign i_5_cast_fu_912_p1 = i_5_reg_546;

assign i_6_cast_fu_961_p1 = ap_phi_mux_i_6_phi_fu_561_p4;

assign icmp_ln1124_fu_767_p2 = ((i_reg_462 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1133_fu_788_p2 = ((i_2_reg_474 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1146_fu_859_p2 = ((i_3_reg_505 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1156_fu_842_p2 = ((i_4_reg_494 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1162_fu_886_p2 = (($signed(sext_ln1162_fu_877_p1) < $signed(add_ln1162_fu_881_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1165_fu_906_p2 = ((i_5_reg_546 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1167_fu_931_p2 = (($signed(zext_ln1167_fu_928_p1) < $signed(add_ln1167_reg_1775)) ? 1'b1 : 1'b0);

assign icmp_ln1178_fu_955_p2 = ((ap_phi_mux_i_6_phi_fu_561_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1186_fu_990_p2 = ((ap_phi_mux_i_7_phi_fu_573_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1199_fu_1045_p2 = ((i_8_reg_580 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1201_fu_1102_p2 = (($signed(sext_ln1201_1_fu_1099_p1) < $signed(layerSMin_reg_591)) ? 1'b1 : 1'b0);

assign icmp_ln1221_fu_1194_p2 = (($signed(select_ln180_fu_1187_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1226_fu_1252_p2 = (($signed(select_ln180_2_fu_1245_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1231_fu_1292_p2 = (($signed(select_ln180_3_fu_1286_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1253_fu_1330_p2 = ((n_patches_i > nPatchesAtOriginal) ? 1'b1 : 1'b0);

assign icmp_ln1306_fu_1379_p2 = ((tmp_11_fu_1369_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln1316_fu_1490_p2 = ((i_9_reg_615 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_773_p0 = z_top_min_read;

assign icmp_ln870_fu_773_p2 = ((icmp_ln870_fu_773_p0 == previous_z_top_min_read) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1464_p2 = (($signed(ret_5_fu_1446_p2) < $signed(ret_6_fu_1458_p2)) ? 1'b1 : 1'b0);

assign lastPatchIdx_fu_1359_p2 = ($signed(n_patches_i) + $signed(8'd255));

assign layerSMin_1_fu_1119_p3 = ((icmp_ln1201_fu_1102_p2[0:0] == 1'b1) ? sext_ln1201_1_fu_1099_p1 : layerSMin_reg_591);

assign layerWithSmallestShift_1_fu_1111_p3 = ((icmp_ln1201_fu_1102_p2[0:0] == 1'b1) ? zext_ln1201_fu_1108_p1 : layerWithSmallestShift_reg_603);

assign lhs_2_fu_1205_p3 = ((icmp_ln1221_fu_1194_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_reg_1917);

assign lhs_3_fu_1258_p3 = ((icmp_ln1226_fu_1252_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_2_reg_1941);

assign lhs_4_fu_1298_p3 = ((icmp_ln1231_fu_1292_p2[0:0] == 1'b1) ? reg_743 : lhs_3_reg_1969);

assign lhs_fu_1148_p5 = layerWithSmallestShift_reg_603[1:0];

assign or_ln1180_fu_976_p2 = (tmp_reg_1799 | 12'd1);

assign or_ln1284_fu_1421_p2 = (12'd1 | add_ln1284_1_reg_2049);

assign ret_2_fu_1166_p2 = ($signed(sext_ln215_fu_1162_p1) - $signed(sext_ln1199_reg_1863));

assign ret_3_fu_1224_p2 = ($signed(sext_ln215_4_fu_1221_p1) - $signed(sext_ln1199_reg_1863));

assign ret_4_fu_1268_p2 = ($signed(sext_ln215_5_fu_1265_p1) - $signed(sext_ln1199_reg_1863));

assign ret_5_fu_1446_p2 = ($signed(sext_ln215_7_fu_1440_p1) - $signed(sext_ln215_8_fu_1443_p1));

assign ret_6_fu_1458_p2 = ($signed(sext_ln215_9_fu_1452_p1) - $signed(sext_ln215_10_fu_1455_p1));

assign ret_fu_1309_p2 = ($signed(sext_ln215_6_fu_1305_p1) - $signed(sext_ln1199_reg_1863));

assign select_ln1162_fu_892_p3 = ((icmp_ln1162_fu_886_p2[0:0] == 1'b1) ? sext_ln1162_fu_877_p1 : add_ln1162_fu_881_p2);

assign select_ln1167_fu_941_p3 = ((icmp_ln1167_fu_931_p2[0:0] == 1'b1) ? new_z_i_index_load_reg_1764 : add_ln1167_1_fu_936_p2);

assign select_ln1236_fu_1338_p3 = ((tmp_8_reg_2001[0:0] == 1'b1) ? new_z_i_atTop_V_3_fu_196 : lhs_4_reg_1986);

assign select_ln1290_fu_1470_p3 = ((icmp_ln878_fu_1464_p2[0:0] == 1'b1) ? ret_6_fu_1458_p2 : ret_5_fu_1446_p2);

assign select_ln180_1_fu_1091_p3 = ((tmp_9_fu_1083_p3[0:0] == 1'b1) ? sub_ln180_1_fu_1077_p2 : sub_ln1201_fu_1072_p2);

assign select_ln180_2_fu_1245_p3 = ((tmp_6_fu_1238_p3[0:0] == 1'b1) ? sub_ln180_2_fu_1233_p2 : ret_3_reg_1957);

assign select_ln180_3_fu_1286_p3 = ((tmp_7_fu_1279_p3[0:0] == 1'b1) ? sub_ln180_3_reg_1981 : ret_4_reg_1975);

assign select_ln180_fu_1187_p3 = ((tmp_5_fu_1180_p3[0:0] == 1'b1) ? sub_ln180_fu_1175_p2 : ret_2_reg_1924);

assign sext_ln1146_fu_832_p1 = $signed(add_ln1144_fu_826_p2);

assign sext_ln1162_fu_877_p1 = $signed(empty_64_reg_536);

assign sext_ln1199_fu_1036_p0 = z_top_min_read;

assign sext_ln1199_fu_1036_p1 = sext_ln1199_fu_1036_p0;

assign sext_ln1201_1_fu_1099_p1 = $signed(select_ln180_1_reg_1891);

assign sext_ln1201_fu_1069_p1 = $signed(tmp_3_reg_1886);

assign sext_ln215_10_fu_1455_p1 = $signed(rhs_2_reg_2074);

assign sext_ln215_4_fu_1221_p1 = lhs_2_reg_1941;

assign sext_ln215_5_fu_1265_p1 = lhs_3_reg_1969;

assign sext_ln215_6_fu_1305_p1 = lhs_4_fu_1298_p3;

assign sext_ln215_7_fu_1440_p1 = $signed(original_c);

assign sext_ln215_8_fu_1443_p1 = $signed(rhs_reg_2069);

assign sext_ln215_9_fu_1452_p1 = $signed(original_d);

assign sext_ln215_fu_1162_p1 = lhs_fu_1148_p6;

assign sext_ln534_1_fu_1478_p1 = $signed(select_ln1290_fu_1470_p3);

assign sext_ln534_fu_1314_p1 = $signed(ret_reg_1991);

assign sub_ln1201_fu_1072_p2 = ($signed(sext_ln1201_fu_1069_p1) - $signed(sext_ln1199_reg_1863));

assign sub_ln1284_fu_1403_p2 = (tmp_13_cast_fu_1385_p3 - zext_ln1284_fu_1399_p1);

assign sub_ln180_1_fu_1077_p2 = (33'd0 - sub_ln1201_fu_1072_p2);

assign sub_ln180_2_fu_1233_p2 = (33'd0 - ret_3_reg_1957);

assign sub_ln180_3_fu_1273_p2 = (33'd0 - ret_4_fu_1268_p2);

assign sub_ln180_fu_1175_p2 = (33'd0 - ret_2_reg_1924);

assign thirdLastPatchIdx_fu_1485_p2 = ($signed(trunc_ln1281_reg_2027) + $signed(5'd29));

assign tmp_10_fu_1392_p3 = {{lastPatchIdx_reg_2033}, {3'd0}};

assign tmp_11_fu_1369_p4 = {{n_patches_i[7:2]}};

assign tmp_12_cast_fu_1130_p3 = {{trunc_ln1223_fu_1127_p1}, {1'd0}};

assign tmp_13_cast_fu_1385_p3 = {{trunc_ln1284_reg_2040}, {7'd0}};

assign tmp_2_fu_799_p1 = white_space_height_read;

assign tmp_2_fu_799_p3 = tmp_2_fu_799_p1[32'd63];

assign tmp_3_fu_1055_p5 = i_8_reg_580[1:0];

assign tmp_4_fu_981_p3 = {{52'd0}, {or_ln1180_fu_976_p2}};

assign tmp_5_fu_1180_p3 = ret_2_reg_1924[32'd32];

assign tmp_6_fu_1238_p3 = ret_3_reg_1957[32'd32];

assign tmp_7_fu_1279_p3 = ret_4_reg_1975[32'd32];

assign tmp_9_fu_1083_p3 = sub_ln1201_fu_1072_p2[32'd32];

assign tmp_fu_966_p4 = {{{i_6_reg_557}, {new_z_i_index_q1}}, {1'd0}};

assign trunc_ln1167_fu_918_p1 = GDn_points_q0[7:0];

assign trunc_ln1188_fu_1007_p1 = ap_phi_mux_i_7_phi_fu_573_p4[1:0];

assign trunc_ln1191_cast_fu_1002_p1 = ap_phi_mux_i_7_phi_fu_573_p4;

assign trunc_ln1223_fu_1127_p1 = select_ln1162_reg_1736[10:0];

assign trunc_ln1281_fu_1355_p1 = n_patches_i[4:0];

assign trunc_ln1284_fu_1365_p1 = lastPatchIdx_fu_1359_p2[4:0];

assign trunc_ln534_fu_1051_p1 = i_8_reg_580[1:0];

assign zext_ln1120_fu_753_p1 = grp_get_index_from_z_fu_698_ap_return;

assign zext_ln1124_fu_763_p1 = i_reg_462;

assign zext_ln1156_fu_817_p1 = add_ln1154_fu_811_p2;

assign zext_ln1167_fu_928_p1 = new_z_i_index_load_reg_1764;

assign zext_ln1201_fu_1108_p1 = trunc_ln534_reg_1881_pp6_iter1_reg;

assign zext_ln1223_fu_1171_p1 = add_ln1223_reg_1912;

assign zext_ln1228_fu_1212_p1 = add_ln1228_reg_1936;

assign zext_ln1233_fu_1229_p1 = add_ln1233_reg_1952;

assign zext_ln1272_fu_1350_p1 = add_ln1252_fu_1344_p2;

assign zext_ln1284_1_fu_1426_p1 = or_ln1284_fu_1421_p2;

assign zext_ln1284_fu_1399_p1 = tmp_10_fu_1392_p3;

assign zext_ln1285_fu_1431_p1 = add_ln1285_reg_2054;

assign zext_ln1309_fu_1482_p1 = lastPatchIdx_reg_2033;

always @ (posedge ap_clk) begin
    zext_ln1120_reg_1610[8] <= 1'b0;
    zext_ln1124_reg_1622[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_1654[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln1156_reg_1673[9] <= 1'b0;
    i_4_cast_reg_1697[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_3_cast_reg_1721[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast_reg_1789[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast_reg_1789_pp4_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast_reg_1789_pp4_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_6_cast_reg_1789_pp4_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_reg_1799[0] <= 1'b0;
    tmp_12_cast_reg_1906[0] <= 1'b0;
    add_ln1223_reg_1912[0] <= 1'b1;
    add_ln1228_reg_1936[0] <= 1'b1;
    add_ln1233_reg_1952[0] <= 1'b1;
    zext_ln1272_reg_2017[8] <= 1'b0;
    add_ln1284_1_reg_2049[2:0] <= 3'b000;
    add_ln1285_reg_2054[2:0] <= 3'b111;
    zext_ln1309_reg_2089[8] <= 1'b0;
end

endmodule //MPSQ_solveComplmentaryPatch
