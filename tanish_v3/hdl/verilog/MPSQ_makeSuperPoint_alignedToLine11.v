// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_makeSuperPoint_alignedToLine11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4;
parameter    ap_ST_fsm_state7 = 14'd8;
parameter    ap_ST_fsm_state8 = 14'd16;
parameter    ap_ST_fsm_state9 = 14'd32;
parameter    ap_ST_fsm_state10 = 14'd64;
parameter    ap_ST_fsm_state11 = 14'd128;
parameter    ap_ST_fsm_state12 = 14'd256;
parameter    ap_ST_fsm_state13 = 14'd512;
parameter    ap_ST_fsm_state14 = 14'd1024;
parameter    ap_ST_fsm_state15 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state21 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [31:0] z_top;
input  [31:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight;
output  [7:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [31:0] init_patch_d0;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg[11:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    radiiDivisionList_ce0;
wire   [34:0] radiiDivisionList_q0;
reg   [30:0] row_list_size_reg_225;
reg   [30:0] row_list_size_reg_225_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [30:0] row_list_size_reg_225_pp0_iter2_reg;
reg   [5:0] indvar_flatten_reg_249;
reg   [4:0] j_1_reg_260;
reg   [1:0] z_reg_271;
reg   [31:0] reg_300;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln1469_1_reg_815;
reg   [0:0] icmp_ln1469_1_reg_815_pp0_iter1_reg;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_state16_pp1_stage0_iter0;
wire    ap_block_state17_pp1_stage0_iter1;
wire    ap_block_state18_pp1_stage0_iter2;
wire    ap_block_state19_pp1_stage0_iter3;
wire    ap_block_state20_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln1614_reg_913;
reg   [0:0] icmp_ln1614_reg_913_pp1_iter2_reg;
wire   [0:0] leftRight_read_read_fu_130_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] empty_fu_311_p1;
reg   [10:0] empty_reg_775;
reg   [5:0] radiiDivisionList_addr_reg_780;
wire   [7:0] zext_ln1471_fu_357_p1;
reg   [7:0] zext_ln1471_reg_785;
wire   [10:0] tmp_21_fu_361_p3;
reg   [10:0] tmp_21_reg_790;
reg   [31:0] GDn_points_load_reg_796;
wire   [0:0] icmp_ln1469_fu_368_p2;
reg   [0:0] icmp_ln1469_reg_801;
wire   [30:0] trunc_ln1469_fu_374_p1;
reg   [30:0] trunc_ln1469_reg_805;
wire   [30:0] add_ln1471_fu_378_p2;
reg   [30:0] add_ln1471_reg_810;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1469_1_fu_384_p2;
reg   [0:0] icmp_ln1469_1_reg_815_pp0_iter2_reg;
wire   [10:0] add_ln1471_1_fu_393_p2;
reg   [10:0] add_ln1471_1_reg_819;
wire   [32:0] ret_14_fu_427_p2;
reg  signed [32:0] ret_14_reg_829;
wire    ap_CS_fsm_state8;
reg   [34:0] rhs_reg_834;
wire    ap_CS_fsm_state9;
reg   [35:0] trunc_ln_reg_849;
wire    ap_CS_fsm_state11;
wire   [36:0] projectionToRow_fu_461_p2;
reg   [36:0] projectionToRow_reg_854;
wire    ap_CS_fsm_state12;
reg   [31:0] start_index_reg_859;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln1502_1_fu_476_p2;
reg   [0:0] icmp_ln1502_1_reg_867;
wire   [0:0] icmp_ln1553_fu_488_p2;
reg   [0:0] icmp_ln1553_reg_872;
wire   [0:0] icmp_ln1558_fu_494_p2;
reg   [0:0] icmp_ln1558_reg_877;
wire   [31:0] start_index_2_fu_500_p2;
reg   [31:0] start_index_2_reg_882;
wire   [31:0] select_ln1502_fu_521_p3;
reg   [31:0] select_ln1502_reg_887;
wire    ap_CS_fsm_state14;
wire   [10:0] trunc_ln1568_fu_543_p1;
reg   [10:0] trunc_ln1568_reg_893;
wire   [31:0] add_ln1568_fu_547_p2;
reg   [31:0] add_ln1568_reg_898;
wire   [10:0] temp_start_fu_625_p3;
reg   [10:0] temp_start_reg_903;
wire    ap_CS_fsm_state15;
wire   [5:0] add_ln1614_2_fu_632_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln1614_fu_638_p2;
reg   [0:0] icmp_ln1614_reg_913_pp1_iter1_reg;
reg   [0:0] icmp_ln1614_reg_913_pp1_iter3_reg;
wire   [1:0] select_ln1614_fu_656_p3;
reg   [1:0] select_ln1614_reg_917;
wire   [4:0] select_ln1614_1_fu_664_p3;
reg   [4:0] select_ln1614_1_reg_923;
wire   [1:0] add_ln1620_fu_672_p2;
wire   [7:0] add_ln1625_2_fu_719_p2;
reg   [7:0] add_ln1625_2_reg_935;
reg   [7:0] add_ln1625_2_reg_935_pp1_iter2_reg;
reg   [7:0] add_ln1625_2_reg_935_pp1_iter3_reg;
wire   [11:0] add_ln1625_3_fu_725_p2;
reg   [11:0] add_ln1625_3_reg_940;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire    grp_mSP_findLRBounds_fu_282_ap_ready;
wire    grp_mSP_findLRBounds_fu_282_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg   [7:0] row_list_V_address0;
reg    row_list_V_ce0;
reg    row_list_V_we0;
wire   [31:0] row_list_V_q0;
wire    grp_mSP_findLRBounds_fu_282_ap_start;
wire    grp_mSP_findLRBounds_fu_282_ap_idle;
wire   [7:0] grp_mSP_findLRBounds_fu_282_row_list_address0;
wire    grp_mSP_findLRBounds_fu_282_row_list_ce0;
wire   [31:0] grp_mSP_findLRBounds_fu_282_ap_return_0;
wire   [31:0] grp_mSP_findLRBounds_fu_282_ap_return_1;
wire    grp_mSP_findStartIndex_fu_292_ap_start;
wire    grp_mSP_findStartIndex_fu_292_ap_done;
wire    grp_mSP_findStartIndex_fu_292_ap_idle;
wire    grp_mSP_findStartIndex_fu_292_ap_ready;
wire   [7:0] grp_mSP_findStartIndex_fu_292_row_list_address0;
wire    grp_mSP_findStartIndex_fu_292_row_list_ce0;
wire   [31:0] grp_mSP_findStartIndex_fu_292_ap_return_0;
wire   [63:0] grp_mSP_findStartIndex_fu_292_ap_return_1;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_229_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_0_lcssa_reg_237;
wire    ap_CS_fsm_state7;
reg   [4:0] ap_phi_mux_j_1_phi_fu_264_p4;
wire    ap_block_pp1_stage0;
reg    grp_mSP_findLRBounds_fu_282_ap_start_reg;
reg    grp_mSP_findStartIndex_fu_292_ap_start_reg;
wire   [63:0] idxprom_fu_306_p1;
wire   [63:0] zext_ln1474_1_fu_345_p1;
wire   [63:0] zext_ln1471_1_fu_411_p1;
wire   [63:0] row_list_size_cast_fu_416_p1;
wire   [63:0] zext_ln1625_4_fu_731_p1;
wire   [63:0] zext_ln1625_3_fu_735_p1;
wire   [3:0] tmp_s_fu_322_p3;
wire   [5:0] tmp_fu_315_p3;
wire   [5:0] zext_ln1474_fu_329_p1;
wire   [5:0] sub_ln1474_fu_333_p2;
wire   [5:0] add_ln1474_fu_339_p2;
wire   [6:0] tmp_20_fu_350_p3;
wire   [10:0] trunc_ln1471_fu_389_p1;
wire   [11:0] tmp_28_cast_fu_398_p3;
wire   [11:0] or_ln1471_fu_405_p2;
wire  signed [31:0] sext_ln215_24_fu_424_p0;
wire  signed [32:0] sext_ln215_fu_421_p1;
wire  signed [32:0] sext_ln215_24_fu_424_p1;
wire   [34:0] grp_fu_439_p0;
wire   [67:0] grp_fu_439_p2;
wire  signed [31:0] sext_ln534_2_fu_458_p0;
wire  signed [36:0] sext_ln534_fu_455_p1;
wire  signed [36:0] sext_ln534_2_fu_458_p1;
wire   [31:0] add_ln1553_fu_482_p2;
wire   [0:0] icmp_ln1502_fu_506_p2;
wire   [0:0] and_ln1502_fu_511_p2;
wire   [31:0] start_index_1_fu_516_p2;
wire   [0:0] and_ln1553_fu_528_p2;
wire   [31:0] select_ln1553_fu_532_p3;
wire   [31:0] sub_ln1568_fu_538_p2;
wire   [10:0] trunc_ln1507_1_fu_568_p1;
wire   [31:0] add_ln1507_fu_564_p2;
wire   [31:0] add_ln1507_1_fu_572_p2;
wire   [10:0] add_ln1507_2_fu_578_p2;
wire   [0:0] icmp_ln1507_fu_584_p2;
wire   [10:0] sub_ln1526_fu_590_p2;
wire   [10:0] trunc_ln1507_fu_561_p1;
wire   [0:0] icmp_ln1568_fu_603_p2;
wire   [10:0] trunc_ln1589_fu_608_p1;
wire   [10:0] add_ln1589_fu_612_p2;
wire   [10:0] select_ln1507_fu_595_p3;
wire   [10:0] select_ln1589_fu_617_p3;
wire   [0:0] icmp_ln1620_fu_650_p2;
wire   [4:0] add_ln1614_fu_644_p2;
wire   [7:0] zext_ln1625_fu_678_p1;
wire   [7:0] add_ln1625_fu_681_p2;
wire   [10:0] zext_ln1614_fu_692_p1;
wire   [10:0] add_ln1614_1_fu_695_p2;
wire   [10:0] add_ln1625_1_fu_700_p2;
wire   [7:0] shl_ln1614_fu_686_p2;
wire   [7:0] zext_ln1625_2_fu_716_p1;
wire   [11:0] tmp_32_cast_fu_705_p3;
wire   [11:0] zext_ln1625_1_fu_713_p1;
wire    ap_CS_fsm_state21;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [67:0] grp_fu_439_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 grp_mSP_findLRBounds_fu_282_ap_start_reg = 1'b0;
#0 grp_mSP_findStartIndex_fu_292_ap_start_reg = 1'b0;
end

MPSQ_straightLineProjectorFromLayerIJtoK_radiiDivisionList #(
    .DataWidth( 35 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
radiiDivisionList_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radiiDivisionList_addr_reg_780),
    .ce0(radiiDivisionList_ce0),
    .q0(radiiDivisionList_q0)
);

MPSQ_makeSuperPoint_alignedToLine11_row_list_V #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
row_list_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_V_address0),
    .ce0(row_list_V_ce0),
    .we0(row_list_V_we0),
    .d0(reg_300),
    .q0(row_list_V_q0)
);

MPSQ_mSP_findLRBounds grp_mSP_findLRBounds_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findLRBounds_fu_282_ap_start),
    .ap_done(grp_mSP_findLRBounds_fu_282_ap_done),
    .ap_idle(grp_mSP_findLRBounds_fu_282_ap_idle),
    .ap_ready(grp_mSP_findLRBounds_fu_282_ap_ready),
    .i(i),
    .row_list_address0(grp_mSP_findLRBounds_fu_282_row_list_address0),
    .row_list_ce0(grp_mSP_findLRBounds_fu_282_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_237),
    .ap_return_0(grp_mSP_findLRBounds_fu_282_ap_return_0),
    .ap_return_1(grp_mSP_findLRBounds_fu_282_ap_return_1)
);

MPSQ_mSP_findStartIndex grp_mSP_findStartIndex_fu_292(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findStartIndex_fu_292_ap_start),
    .ap_done(grp_mSP_findStartIndex_fu_292_ap_done),
    .ap_idle(grp_mSP_findStartIndex_fu_292_ap_idle),
    .ap_ready(grp_mSP_findStartIndex_fu_292_ap_ready),
    .row_list_address0(grp_mSP_findStartIndex_fu_292_row_list_address0),
    .row_list_ce0(grp_mSP_findStartIndex_fu_292_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_237),
    .projectionToRow(projectionToRow_reg_854),
    .ap_return_0(grp_mSP_findStartIndex_fu_292_ap_return_0),
    .ap_return_1(grp_mSP_findStartIndex_fu_292_ap_return_1)
);

MPSQ_mul_35ns_33s_68_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 68 ))
mul_35ns_33s_68_3_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_439_p0),
    .din1(ret_14_reg_829),
    .ce(1'b1),
    .dout(grp_fu_439_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state16)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state16);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findLRBounds_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_mSP_findLRBounds_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findLRBounds_fu_282_ap_ready == 1'b1)) begin
            grp_mSP_findLRBounds_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findStartIndex_fu_292_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_mSP_findStartIndex_fu_292_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findStartIndex_fu_292_ap_ready == 1'b1)) begin
            grp_mSP_findStartIndex_fu_292_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln1614_fu_638_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_249 <= add_ln1614_2_fu_632_p2;
    end else if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        indvar_flatten_reg_249 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1614_reg_913 == 1'd0))) begin
        j_1_reg_260 <= select_ln1614_1_reg_923;
    end else if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        j_1_reg_260 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1469_reg_801 == 1'd1))) begin
        row_list_size_0_lcssa_reg_237 <= GDn_points_load_reg_796;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd0))) begin
        row_list_size_0_lcssa_reg_237 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd1))) begin
        row_list_size_reg_225 <= 31'd0;
    end else if (((icmp_ln1469_1_reg_815 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_list_size_reg_225 <= add_ln1471_reg_810;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln1614_fu_638_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        z_reg_271 <= add_ln1620_fu_672_p2;
    end else if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        z_reg_271 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_796 <= GDn_points_q0;
        empty_reg_775 <= empty_fu_311_p1;
        icmp_ln1469_reg_801 <= icmp_ln1469_fu_368_p2;
        radiiDivisionList_addr_reg_780[5 : 1] <= zext_ln1474_1_fu_345_p1[5 : 1];
        tmp_21_reg_790[10 : 8] <= tmp_21_fu_361_p3[10 : 8];
        zext_ln1471_reg_785[6 : 4] <= zext_ln1471_fu_357_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1469_1_fu_384_p2 == 1'd0))) begin
        add_ln1471_1_reg_819 <= add_ln1471_1_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln1471_reg_810 <= add_ln1471_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (leftRight_read_read_fu_130_p2 == 1'd0))) begin
        add_ln1568_reg_898 <= add_ln1568_fu_547_p2;
        trunc_ln1568_reg_893 <= trunc_ln1568_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1614_reg_913 == 1'd0))) begin
        add_ln1625_2_reg_935 <= add_ln1625_2_fu_719_p2;
        add_ln1625_3_reg_940 <= add_ln1625_3_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln1625_2_reg_935_pp1_iter2_reg <= add_ln1625_2_reg_935;
        add_ln1625_2_reg_935_pp1_iter3_reg <= add_ln1625_2_reg_935_pp1_iter2_reg;
        icmp_ln1614_reg_913_pp1_iter2_reg <= icmp_ln1614_reg_913_pp1_iter1_reg;
        icmp_ln1614_reg_913_pp1_iter3_reg <= icmp_ln1614_reg_913_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1469_1_reg_815 <= icmp_ln1469_1_fu_384_p2;
        icmp_ln1469_1_reg_815_pp0_iter1_reg <= icmp_ln1469_1_reg_815;
        row_list_size_reg_225_pp0_iter1_reg <= row_list_size_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1469_1_reg_815_pp0_iter2_reg <= icmp_ln1469_1_reg_815_pp0_iter1_reg;
        row_list_size_reg_225_pp0_iter2_reg <= row_list_size_reg_225_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (leftRight_read_read_fu_130_p2 == 1'd1))) begin
        icmp_ln1502_1_reg_867 <= icmp_ln1502_1_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (leftRight_read_read_fu_130_p2 == 1'd0))) begin
        icmp_ln1553_reg_872 <= icmp_ln1553_fu_488_p2;
        icmp_ln1558_reg_877 <= icmp_ln1558_fu_494_p2;
        start_index_2_reg_882 <= start_index_2_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln1614_reg_913 <= icmp_ln1614_fu_638_p2;
        icmp_ln1614_reg_913_pp1_iter1_reg <= icmp_ln1614_reg_913;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        projectionToRow_reg_854 <= projectionToRow_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1469_1_reg_815_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln1614_reg_913_pp1_iter2_reg == 1'd0)))) begin
        reg_300 <= GDarrayDecoded_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ret_14_reg_829 <= ret_14_fu_427_p2;
        rhs_reg_834 <= radiiDivisionList_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (leftRight_read_read_fu_130_p2 == 1'd1))) begin
        select_ln1502_reg_887 <= select_ln1502_fu_521_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln1614_fu_638_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln1614_1_reg_923 <= select_ln1614_1_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln1614_fu_638_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln1614_reg_917 <= select_ln1614_fu_656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        start_index_reg_859 <= grp_mSP_findStartIndex_fu_292_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_start_reg_903 <= temp_start_fu_625_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd1))) begin
        trunc_ln1469_reg_805 <= trunc_ln1469_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln_reg_849 <= {{grp_fu_439_p2[67:32]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1625_4_fu_731_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1471_1_fu_411_p1;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1469_1_fu_384_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1614_fu_638_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1614_reg_913 == 1'd0))) begin
        ap_phi_mux_j_1_phi_fu_264_p4 = select_ln1614_1_reg_923;
    end else begin
        ap_phi_mux_j_1_phi_fu_264_p4 = j_1_reg_260;
    end
end

always @ (*) begin
    if (((icmp_ln1469_1_reg_815 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_229_p4 = add_ln1471_reg_810;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_229_p4 = row_list_size_reg_225;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln1614_reg_913_pp1_iter3_reg == 1'd0))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        radiiDivisionList_ce0 = 1'b1;
    end else begin
        radiiDivisionList_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        row_list_V_address0 = row_list_size_cast_fu_416_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_list_V_address0 = grp_mSP_findStartIndex_fu_292_row_list_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        row_list_V_address0 = grp_mSP_findLRBounds_fu_282_row_list_address0;
    end else begin
        row_list_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        row_list_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_list_V_ce0 = grp_mSP_findStartIndex_fu_292_row_list_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        row_list_V_ce0 = grp_mSP_findLRBounds_fu_282_row_list_ce0;
    end else begin
        row_list_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1469_1_reg_815_pp0_iter2_reg == 1'd0))) begin
        row_list_V_we0 = 1'b1;
    end else begin
        row_list_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1469_fu_368_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1469_1_fu_384_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1469_1_fu_384_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_mSP_findStartIndex_fu_292_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_mSP_findLRBounds_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1614_fu_638_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1614_fu_638_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = idxprom_fu_306_p1;

assign add_ln1471_1_fu_393_p2 = (tmp_21_reg_790 + trunc_ln1471_fu_389_p1);

assign add_ln1471_fu_378_p2 = (ap_phi_mux_row_list_size_phi_fu_229_p4 + 31'd1);

assign add_ln1474_fu_339_p2 = (sub_ln1474_fu_333_p2 + 6'd4);

assign add_ln1507_1_fu_572_p2 = (grp_mSP_findLRBounds_fu_282_ap_return_1 + 32'd1);

assign add_ln1507_2_fu_578_p2 = (trunc_ln1507_1_fu_568_p1 + 11'd1);

assign add_ln1507_fu_564_p2 = (select_ln1502_reg_887 + original_ppl);

assign add_ln1553_fu_482_p2 = ($signed(row_list_size_0_lcssa_reg_237) + $signed(32'd4294967295));

assign add_ln1568_fu_547_p2 = (sub_ln1568_fu_538_p2 + 32'd1);

assign add_ln1589_fu_612_p2 = (trunc_ln1568_reg_893 + 11'd1);

assign add_ln1614_1_fu_695_p2 = (zext_ln1614_fu_692_p1 + temp_start_reg_903);

assign add_ln1614_2_fu_632_p2 = (indvar_flatten_reg_249 + 6'd1);

assign add_ln1614_fu_644_p2 = (ap_phi_mux_j_1_phi_fu_264_p4 + 5'd1);

assign add_ln1620_fu_672_p2 = (select_ln1614_fu_656_p3 + 2'd1);

assign add_ln1625_1_fu_700_p2 = (tmp_21_reg_790 + add_ln1614_1_fu_695_p2);

assign add_ln1625_2_fu_719_p2 = (shl_ln1614_fu_686_p2 + zext_ln1625_2_fu_716_p1);

assign add_ln1625_3_fu_725_p2 = (tmp_32_cast_fu_705_p3 + zext_ln1625_1_fu_713_p1);

assign add_ln1625_fu_681_p2 = (zext_ln1471_reg_785 + zext_ln1625_fu_678_p1);

assign and_ln1502_fu_511_p2 = (icmp_ln1502_fu_506_p2 & icmp_ln1502_1_reg_867);

assign and_ln1553_fu_528_p2 = (icmp_ln1558_reg_877 & icmp_ln1553_reg_872);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_return = original_ppl;

assign empty_fu_311_p1 = original_ppl[10:0];

assign grp_fu_439_p0 = grp_fu_439_p00;

assign grp_fu_439_p00 = rhs_reg_834;

assign grp_mSP_findLRBounds_fu_282_ap_start = grp_mSP_findLRBounds_fu_282_ap_start_reg;

assign grp_mSP_findStartIndex_fu_292_ap_start = grp_mSP_findStartIndex_fu_292_ap_start_reg;

assign icmp_ln1469_1_fu_384_p2 = ((ap_phi_mux_row_list_size_phi_fu_229_p4 == trunc_ln1469_reg_805) ? 1'b1 : 1'b0);

assign icmp_ln1469_fu_368_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1502_1_fu_476_p2 = (($signed(grp_mSP_findStartIndex_fu_292_ap_return_1) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1502_fu_506_p2 = ((start_index_reg_859 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1507_fu_584_p2 = (($signed(add_ln1507_fu_564_p2) > $signed(add_ln1507_1_fu_572_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1553_fu_488_p2 = ((grp_mSP_findStartIndex_fu_292_ap_return_0 != add_ln1553_fu_482_p2) ? 1'b1 : 1'b0);

assign icmp_ln1558_fu_494_p2 = (($signed(grp_mSP_findStartIndex_fu_292_ap_return_1) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1568_fu_603_p2 = (($signed(add_ln1568_reg_898) < $signed(grp_mSP_findLRBounds_fu_282_ap_return_0)) ? 1'b1 : 1'b0);

assign icmp_ln1614_fu_638_p2 = ((indvar_flatten_reg_249 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln1620_fu_650_p2 = ((z_reg_271 == 2'd2) ? 1'b1 : 1'b0);

assign idxprom_fu_306_p1 = i;

assign init_patch_address0 = zext_ln1625_3_fu_735_p1;

assign init_patch_d0 = reg_300;

assign leftRight_read_read_fu_130_p2 = leftRight;

assign or_ln1471_fu_405_p2 = (tmp_28_cast_fu_398_p3 | 12'd1);

assign projectionToRow_fu_461_p2 = ($signed(sext_ln534_fu_455_p1) + $signed(sext_ln534_2_fu_458_p1));

assign ret_14_fu_427_p2 = ($signed(sext_ln215_fu_421_p1) - $signed(sext_ln215_24_fu_424_p1));

assign row_list_size_cast_fu_416_p1 = row_list_size_reg_225_pp0_iter2_reg;

assign select_ln1502_fu_521_p3 = ((and_ln1502_fu_511_p2[0:0] == 1'b1) ? start_index_1_fu_516_p2 : start_index_reg_859);

assign select_ln1507_fu_595_p3 = ((icmp_ln1507_fu_584_p2[0:0] == 1'b1) ? sub_ln1526_fu_590_p2 : trunc_ln1507_fu_561_p1);

assign select_ln1553_fu_532_p3 = ((and_ln1553_fu_528_p2[0:0] == 1'b1) ? start_index_2_reg_882 : start_index_reg_859);

assign select_ln1589_fu_617_p3 = ((icmp_ln1568_fu_603_p2[0:0] == 1'b1) ? trunc_ln1589_fu_608_p1 : add_ln1589_fu_612_p2);

assign select_ln1614_1_fu_664_p3 = ((icmp_ln1620_fu_650_p2[0:0] == 1'b1) ? add_ln1614_fu_644_p2 : ap_phi_mux_j_1_phi_fu_264_p4);

assign select_ln1614_fu_656_p3 = ((icmp_ln1620_fu_650_p2[0:0] == 1'b1) ? 2'd0 : z_reg_271);

assign sext_ln215_24_fu_424_p0 = apexZ0;

assign sext_ln215_24_fu_424_p1 = sext_ln215_24_fu_424_p0;

assign sext_ln215_fu_421_p1 = $signed(z_top);

assign sext_ln534_2_fu_458_p0 = apexZ0;

assign sext_ln534_2_fu_458_p1 = sext_ln534_2_fu_458_p0;

assign sext_ln534_fu_455_p1 = $signed(trunc_ln_reg_849);

assign shl_ln1614_fu_686_p2 = add_ln1625_fu_681_p2 << 8'd1;

assign start_index_1_fu_516_p2 = ($signed(start_index_reg_859) + $signed(32'd4294967295));

assign start_index_2_fu_500_p2 = (grp_mSP_findStartIndex_fu_292_ap_return_0 + 32'd1);

assign sub_ln1474_fu_333_p2 = (tmp_fu_315_p3 - zext_ln1474_fu_329_p1);

assign sub_ln1526_fu_590_p2 = (add_ln1507_2_fu_578_p2 - empty_reg_775);

assign sub_ln1568_fu_538_p2 = (select_ln1553_fu_532_p3 - original_ppl);

assign temp_start_fu_625_p3 = ((leftRight[0:0] == 1'b1) ? select_ln1507_fu_595_p3 : select_ln1589_fu_617_p3);

assign tmp_20_fu_350_p3 = {{i}, {4'd0}};

assign tmp_21_fu_361_p3 = {{i}, {8'd0}};

assign tmp_28_cast_fu_398_p3 = {{add_ln1471_1_reg_819}, {1'd0}};

assign tmp_32_cast_fu_705_p3 = {{add_ln1625_1_fu_700_p2}, {1'd0}};

assign tmp_fu_315_p3 = {{i}, {3'd0}};

assign tmp_s_fu_322_p3 = {{i}, {1'd0}};

assign trunc_ln1469_fu_374_p1 = GDn_points_q0[30:0];

assign trunc_ln1471_fu_389_p1 = ap_phi_mux_row_list_size_phi_fu_229_p4[10:0];

assign trunc_ln1507_1_fu_568_p1 = grp_mSP_findLRBounds_fu_282_ap_return_1[10:0];

assign trunc_ln1507_fu_561_p1 = select_ln1502_reg_887[10:0];

assign trunc_ln1568_fu_543_p1 = sub_ln1568_fu_538_p2[10:0];

assign trunc_ln1589_fu_608_p1 = grp_mSP_findLRBounds_fu_282_ap_return_0[10:0];

assign zext_ln1471_1_fu_411_p1 = or_ln1471_fu_405_p2;

assign zext_ln1471_fu_357_p1 = tmp_20_fu_350_p3;

assign zext_ln1474_1_fu_345_p1 = add_ln1474_fu_339_p2;

assign zext_ln1474_fu_329_p1 = tmp_s_fu_322_p3;

assign zext_ln1614_fu_692_p1 = select_ln1614_1_reg_923;

assign zext_ln1625_1_fu_713_p1 = select_ln1614_reg_917;

assign zext_ln1625_2_fu_716_p1 = select_ln1614_reg_917;

assign zext_ln1625_3_fu_735_p1 = add_ln1625_2_reg_935_pp1_iter3_reg;

assign zext_ln1625_4_fu_731_p1 = add_ln1625_3_reg_940;

assign zext_ln1625_fu_678_p1 = select_ln1614_1_reg_923;

always @ (posedge ap_clk) begin
    radiiDivisionList_addr_reg_780[0] <= 1'b0;
    zext_ln1471_reg_785[3:0] <= 4'b0000;
    zext_ln1471_reg_785[7] <= 1'b0;
    tmp_21_reg_790[7:0] <= 8'b00000000;
end

endmodule //MPSQ_makeSuperPoint_alignedToLine11
