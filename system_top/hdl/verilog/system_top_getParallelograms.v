// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_getParallelograms (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        superpoints_V_address0,
        superpoints_V_ce0,
        superpoints_V_q0,
        superpoints_V_address1,
        superpoints_V_ce1,
        superpoints_V_q1,
        superpoints_V_offset,
        pSlope_V_address0,
        pSlope_V_ce0,
        pSlope_V_we0,
        pSlope_V_d0,
        pSlope_V_offset,
        shadow_bottomL_jR_V_address0,
        shadow_bottomL_jR_V_ce0,
        shadow_bottomL_jR_V_we0,
        shadow_bottomL_jR_V_d0,
        shadow_bottomL_jR_V_offset,
        shadow_bottomR_jR_V_address0,
        shadow_bottomR_jR_V_ce0,
        shadow_bottomR_jR_V_we0,
        shadow_bottomR_jR_V_d0,
        shadow_bottomR_jR_V_offset,
        shadow_bottomL_jL_V_address0,
        shadow_bottomL_jL_V_ce0,
        shadow_bottomL_jL_V_we0,
        shadow_bottomL_jL_V_d0,
        shadow_bottomL_jL_V_offset,
        shadow_bottomR_jL_V_address0,
        shadow_bottomR_jL_V_ce0,
        shadow_bottomR_jL_V_we0,
        shadow_bottomR_jL_V_d0,
        shadow_bottomR_jL_V_offset,
        z1_min_V_address0,
        z1_min_V_ce0,
        z1_min_V_we0,
        z1_min_V_d0,
        z1_min_V_offset,
        z1_max_V_address0,
        z1_max_V_ce0,
        z1_max_V_we0,
        z1_max_V_d0,
        z1_max_V_offset
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_pp0_stage0 = 14'd32;
parameter    ap_ST_fsm_pp0_stage1 = 14'd64;
parameter    ap_ST_fsm_pp0_stage2 = 14'd128;
parameter    ap_ST_fsm_pp0_stage3 = 14'd256;
parameter    ap_ST_fsm_pp0_stage4 = 14'd512;
parameter    ap_ST_fsm_pp0_stage5 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage6 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage7 = 14'd4096;
parameter    ap_ST_fsm_state72 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] superpoints_V_address0;
output   superpoints_V_ce0;
input  [31:0] superpoints_V_q0;
output  [7:0] superpoints_V_address1;
output   superpoints_V_ce1;
input  [31:0] superpoints_V_q1;
input  [1:0] superpoints_V_offset;
output  [3:0] pSlope_V_address0;
output   pSlope_V_ce0;
output   pSlope_V_we0;
output  [31:0] pSlope_V_d0;
input  [1:0] pSlope_V_offset;
output  [3:0] shadow_bottomL_jR_V_address0;
output   shadow_bottomL_jR_V_ce0;
output   shadow_bottomL_jR_V_we0;
output  [31:0] shadow_bottomL_jR_V_d0;
input  [1:0] shadow_bottomL_jR_V_offset;
output  [3:0] shadow_bottomR_jR_V_address0;
output   shadow_bottomR_jR_V_ce0;
output   shadow_bottomR_jR_V_we0;
output  [31:0] shadow_bottomR_jR_V_d0;
input  [1:0] shadow_bottomR_jR_V_offset;
output  [3:0] shadow_bottomL_jL_V_address0;
output   shadow_bottomL_jL_V_ce0;
output   shadow_bottomL_jL_V_we0;
output  [31:0] shadow_bottomL_jL_V_d0;
input  [1:0] shadow_bottomL_jL_V_offset;
output  [3:0] shadow_bottomR_jL_V_address0;
output   shadow_bottomR_jL_V_ce0;
output   shadow_bottomR_jL_V_we0;
output  [31:0] shadow_bottomR_jL_V_d0;
input  [1:0] shadow_bottomR_jL_V_offset;
output  [3:0] z1_min_V_address0;
output   z1_min_V_ce0;
output   z1_min_V_we0;
output  [31:0] z1_min_V_d0;
input  [1:0] z1_min_V_offset;
output  [3:0] z1_max_V_address0;
output   z1_max_V_ce0;
output   z1_max_V_we0;
output  [31:0] z1_max_V_d0;
input  [1:0] z1_max_V_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] superpoints_V_address0;
reg superpoints_V_ce0;
reg[7:0] superpoints_V_address1;
reg superpoints_V_ce1;
reg pSlope_V_ce0;
reg pSlope_V_we0;
reg shadow_bottomL_jR_V_ce0;
reg shadow_bottomL_jR_V_we0;
reg shadow_bottomR_jR_V_ce0;
reg shadow_bottomR_jR_V_we0;
reg shadow_bottomL_jL_V_ce0;
reg shadow_bottomL_jL_V_we0;
reg shadow_bottomR_jL_V_ce0;
reg shadow_bottomR_jL_V_we0;
reg z1_min_V_ce0;
reg z1_min_V_we0;
reg z1_max_V_ce0;
reg z1_max_V_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] get_parallelogram_slopesparallelogram_slopes_address0;
reg    get_parallelogram_slopesparallelogram_slopes_ce0;
wire   [31:0] get_parallelogram_slopesparallelogram_slopes_q0;
reg   [2:0] i_2_reg_529;
reg   [31:0] reg_562;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_state23_pp0_stage1_iter2;
wire    ap_block_state31_pp0_stage1_iter3;
wire    ap_block_state39_pp0_stage1_iter4;
wire    ap_block_state47_pp0_stage1_iter5;
wire    ap_block_state55_pp0_stage1_iter6;
wire    ap_block_state63_pp0_stage1_iter7;
wire    ap_block_state71_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln124_reg_2000;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state8_pp0_stage2_iter0;
wire    ap_block_state16_pp0_stage2_iter1;
wire    ap_block_state24_pp0_stage2_iter2;
wire    ap_block_state32_pp0_stage2_iter3;
wire    ap_block_state40_pp0_stage2_iter4;
wire    ap_block_state48_pp0_stage2_iter5;
wire    ap_block_state56_pp0_stage2_iter6;
wire    ap_block_state64_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state9_pp0_stage3_iter0;
wire    ap_block_state17_pp0_stage3_iter1;
wire    ap_block_state25_pp0_stage3_iter2;
wire    ap_block_state33_pp0_stage3_iter3;
wire    ap_block_state41_pp0_stage3_iter4;
wire    ap_block_state49_pp0_stage3_iter5;
wire    ap_block_state57_pp0_stage3_iter6;
wire    ap_block_state65_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state10_pp0_stage4_iter0;
wire    ap_block_state18_pp0_stage4_iter1;
wire    ap_block_state26_pp0_stage4_iter2;
wire    ap_block_state34_pp0_stage4_iter3;
wire    ap_block_state42_pp0_stage4_iter4;
wire    ap_block_state50_pp0_stage4_iter5;
wire    ap_block_state58_pp0_stage4_iter6;
wire    ap_block_state66_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state11_pp0_stage5_iter0;
wire    ap_block_state19_pp0_stage5_iter1;
wire    ap_block_state27_pp0_stage5_iter2;
wire    ap_block_state35_pp0_stage5_iter3;
wire    ap_block_state43_pp0_stage5_iter4;
wire    ap_block_state51_pp0_stage5_iter5;
wire    ap_block_state59_pp0_stage5_iter6;
wire    ap_block_state67_pp0_stage5_iter7;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state12_pp0_stage6_iter0;
wire    ap_block_state20_pp0_stage6_iter1;
wire    ap_block_state28_pp0_stage6_iter2;
wire    ap_block_state36_pp0_stage6_iter3;
wire    ap_block_state44_pp0_stage6_iter4;
wire    ap_block_state52_pp0_stage6_iter5;
wire    ap_block_state60_pp0_stage6_iter6;
wire    ap_block_state68_pp0_stage6_iter7;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state13_pp0_stage7_iter0;
wire    ap_block_state21_pp0_stage7_iter1;
wire    ap_block_state29_pp0_stage7_iter2;
wire    ap_block_state37_pp0_stage7_iter3;
wire    ap_block_state45_pp0_stage7_iter4;
wire    ap_block_state53_pp0_stage7_iter5;
wire    ap_block_state61_pp0_stage7_iter6;
wire    ap_block_state69_pp0_stage7_iter7;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state22_pp0_stage0_iter2;
wire    ap_block_state30_pp0_stage0_iter3;
wire    ap_block_state38_pp0_stage0_iter4;
wire    ap_block_state46_pp0_stage0_iter5;
wire    ap_block_state54_pp0_stage0_iter6;
wire    ap_block_state62_pp0_stage0_iter7;
wire    ap_block_state70_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] add_ln137_fu_579_p2;
reg   [3:0] add_ln137_reg_1905;
wire   [3:0] add_ln136_fu_597_p2;
reg   [3:0] add_ln136_reg_1910;
wire   [3:0] add_ln142_fu_615_p2;
reg   [3:0] add_ln142_reg_1915;
wire   [3:0] add_ln141_fu_633_p2;
reg   [3:0] add_ln141_reg_1920;
wire   [3:0] add_ln140_fu_651_p2;
reg   [3:0] add_ln140_reg_1925;
wire   [3:0] add_ln139_fu_669_p2;
reg   [3:0] add_ln139_reg_1930;
wire   [3:0] add_ln134_fu_687_p2;
reg   [3:0] add_ln134_reg_1935;
wire   [4:0] add_ln52_fu_709_p2;
reg   [4:0] add_ln52_reg_1940;
wire   [7:0] add_ln52_2_fu_735_p2;
reg   [7:0] add_ln52_2_reg_1945;
wire   [4:0] add_ln51_fu_741_p2;
reg   [4:0] add_ln51_reg_1951;
wire    ap_CS_fsm_state2;
wire   [31:0] superpoint_0_min_z_fu_773_p3;
wire    ap_CS_fsm_state3;
wire   [4:0] add_ln65_fu_781_p2;
reg   [4:0] add_ln65_reg_1969;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln65_fu_801_p2;
wire  signed [31:0] sext_ln97_fu_857_p1;
reg  signed [31:0] sext_ln97_reg_1983;
wire  signed [31:0] sext_ln97_1_fu_869_p1;
reg  signed [31:0] sext_ln97_1_reg_1989;
wire   [31:0] superpoint_0_max_z_fu_879_p3;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln124_fu_887_p2;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter1_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter2_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter3_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter4_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter5_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter6_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter7_reg;
reg   [0:0] icmp_ln124_reg_2000_pp0_iter8_reg;
wire   [7:0] tmp_24_cast_fu_924_p3;
reg   [7:0] tmp_24_cast_reg_2004;
wire   [3:0] zext_ln134_1_fu_953_p1;
reg   [3:0] zext_ln134_1_reg_2037;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter1_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter2_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter3_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter4_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter5_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter6_reg;
reg   [3:0] zext_ln134_1_reg_2037_pp0_iter7_reg;
wire   [31:0] select_ln53_fu_1017_p3;
reg   [31:0] select_ln53_reg_2056;
wire   [30:0] select_ln67_16_fu_1031_p3;
reg   [30:0] select_ln67_16_reg_2062;
reg   [31:0] get_parallelogram_slopesparallelogram_slopes_load_reg_2067;
wire   [2:0] j_fu_1039_p2;
reg   [2:0] j_reg_2073;
reg   [2:0] j_reg_2073_pp0_iter1_reg;
wire   [31:0] select_ln53_17_fu_1083_p3;
reg   [31:0] select_ln53_17_reg_2090;
wire   [31:0] select_ln67_18_fu_1114_p3;
reg   [31:0] select_ln67_18_reg_2096;
reg   [0:0] p_Result_s_reg_2102;
wire   [51:0] trunc_ln565_fu_1152_p1;
reg   [51:0] trunc_ln565_reg_2107;
wire   [0:0] icmp_ln571_fu_1156_p2;
reg   [0:0] icmp_ln571_reg_2112;
wire   [11:0] F2_fu_1162_p2;
reg   [11:0] F2_reg_2118;
wire   [31:0] select_ln53_19_fu_1206_p3;
reg   [31:0] select_ln53_19_reg_2136;
wire   [31:0] select_ln67_20_fu_1232_p3;
reg   [31:0] select_ln67_20_reg_2142;
wire   [0:0] icmp_ln124_1_fu_1240_p2;
reg   [0:0] icmp_ln124_1_reg_2148;
wire  signed [11:0] sh_amt_fu_1284_p3;
reg  signed [11:0] sh_amt_reg_2153;
wire   [31:0] trunc_ln583_fu_1297_p1;
reg   [31:0] trunc_ln583_reg_2158;
wire   [0:0] and_ln582_fu_1365_p2;
reg   [0:0] and_ln582_reg_2164;
wire   [0:0] and_ln581_fu_1383_p2;
reg   [0:0] and_ln581_reg_2170;
wire   [0:0] and_ln571_fu_1425_p2;
reg   [0:0] and_ln571_reg_2175;
wire   [0:0] or_ln571_1_fu_1430_p2;
reg   [0:0] or_ln571_1_reg_2180;
wire   [31:0] select_ln571_1_fu_1436_p3;
reg   [31:0] select_ln571_1_reg_2186;
wire   [31:0] select_ln53_21_fu_1482_p3;
reg   [31:0] select_ln53_21_reg_2201;
wire   [31:0] select_ln67_22_fu_1508_p3;
reg   [31:0] select_ln67_22_reg_2207;
wire   [31:0] select_ln53_23_fu_1615_p3;
reg   [31:0] select_ln53_23_reg_2223;
wire   [31:0] select_ln67_24_fu_1641_p3;
reg   [31:0] select_ln67_24_reg_2229;
wire   [31:0] select_ln53_25_fu_1687_p3;
reg   [31:0] select_ln53_25_reg_2245;
wire   [31:0] select_ln67_26_fu_1713_p3;
reg   [31:0] select_ln67_26_reg_2251;
wire   [31:0] select_ln53_27_fu_1759_p3;
reg   [31:0] select_ln53_27_reg_2267;
wire   [31:0] select_ln67_28_fu_1785_p3;
reg   [31:0] select_ln67_28_reg_2273;
wire   [31:0] select_ln53_29_fu_1811_p3;
reg   [31:0] select_ln53_29_reg_2279;
wire   [31:0] select_ln67_30_fu_1837_p3;
reg   [31:0] select_ln67_30_reg_2285;
wire   [31:0] select_ln53_30_fu_1850_p3;
reg   [31:0] select_ln53_30_reg_2291;
wire   [31:0] select_ln67_31_fu_1863_p3;
reg   [31:0] select_ln67_31_reg_2296;
wire   [3:0] add_ln140_1_fu_1897_p2;
reg   [3:0] add_ln140_1_reg_2301;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_j;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;
reg   [4:0] i_reg_483;
reg   [31:0] p_012_i_reg_494;
reg   [4:0] i_1_reg_506;
wire   [0:0] icmp_ln51_fu_761_p2;
reg   [31:0] p_012_i230_reg_517;
reg   [2:0] ap_phi_mux_i_2_phi_fu_533_p4;
wire    ap_block_pp0_stage0;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln52_22_fu_756_p1;
wire   [63:0] zext_ln66_1_fu_796_p1;
wire   [63:0] zext_ln52_24_fu_919_p1;
wire   [63:0] zext_ln52_25_fu_938_p1;
wire   [63:0] trunc_ln104_cast_fu_893_p1;
wire   [63:0] zext_ln136_1_fu_962_p1;
wire   [63:0] zext_ln137_1_fu_972_p1;
wire   [63:0] zext_ln52_26_fu_982_p1;
wire   [63:0] zext_ln52_27_fu_992_p1;
wire   [63:0] zext_ln52_28_fu_1050_p1;
wire   [63:0] zext_ln52_29_fu_1060_p1;
wire   [63:0] zext_ln52_30_fu_1173_p1;
wire   [63:0] zext_ln52_31_fu_1183_p1;
wire   [63:0] zext_ln52_32_fu_1449_p1;
wire   [63:0] zext_ln52_33_fu_1459_p1;
wire   [63:0] zext_ln134_2_fu_1572_p1;
wire   [63:0] zext_ln52_34_fu_1582_p1;
wire   [63:0] zext_ln52_35_fu_1592_p1;
wire   [63:0] zext_ln52_36_fu_1654_p1;
wire   [63:0] zext_ln52_37_fu_1664_p1;
wire   [63:0] zext_ln52_38_fu_1726_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln52_39_fu_1736_p1;
wire   [63:0] zext_ln141_1_fu_1874_p1;
wire   [63:0] zext_ln142_1_fu_1883_p1;
wire   [63:0] zext_ln139_1_fu_1892_p1;
wire   [63:0] zext_ln140_1_fu_1901_p1;
wire   [3:0] tmp_fu_571_p3;
wire   [3:0] zext_ln137_fu_567_p1;
wire   [3:0] tmp_s_fu_589_p3;
wire   [3:0] zext_ln136_fu_585_p1;
wire   [3:0] tmp_1_fu_607_p3;
wire   [3:0] zext_ln142_fu_603_p1;
wire   [3:0] tmp_2_fu_625_p3;
wire   [3:0] zext_ln141_fu_621_p1;
wire   [3:0] tmp_3_fu_643_p3;
wire   [3:0] zext_ln140_fu_639_p1;
wire   [3:0] tmp_4_fu_661_p3;
wire   [3:0] zext_ln139_fu_657_p1;
wire   [3:0] tmp_5_fu_679_p3;
wire   [3:0] zext_ln134_fu_675_p1;
wire   [3:0] tmp_6_fu_697_p3;
wire   [4:0] zext_ln52_19_fu_705_p1;
wire   [4:0] zext_ln52_fu_693_p1;
wire   [5:0] tmp_8_fu_723_p3;
wire   [7:0] tmp_7_fu_715_p3;
wire   [7:0] zext_ln52_20_fu_731_p1;
wire   [7:0] zext_ln52_21_fu_747_p1;
wire   [7:0] add_ln52_3_fu_751_p2;
wire   [0:0] icmp_ln1495_fu_767_p2;
wire   [7:0] zext_ln66_fu_787_p1;
wire   [7:0] add_ln66_fu_791_p2;
wire   [0:0] icmp_ln1494_fu_807_p2;
wire   [31:0] z1_min_tmp_V_fu_813_p3;
wire   [0:0] icmp_ln1495_9_fu_825_p2;
wire   [31:0] z1_max_tmp_V_fu_831_p3;
wire   [0:0] icmp_ln1494_6_fu_843_p2;
wire   [25:0] trunc_ln95_fu_839_p1;
wire   [25:0] z1_max_tmp_V_1_fu_849_p3;
wire   [25:0] trunc_ln94_fu_821_p1;
wire   [25:0] z1_min_tmp_V_1_fu_861_p3;
wire   [0:0] icmp_ln1494_7_fu_873_p2;
wire   [4:0] zext_ln52_23_fu_898_p1;
wire   [4:0] add_ln52_4_fu_902_p2;
wire   [8:0] tmp_11_fu_911_p3;
wire   [3:0] trunc_ln52_fu_907_p1;
wire   [7:0] or_ln52_fu_932_p2;
wire   [1:0] trunc_ln133_fu_943_p1;
wire   [1:0] parallelogram_index_fu_947_p2;
wire   [3:0] add_ln136_1_fu_957_p2;
wire   [3:0] add_ln137_1_fu_967_p2;
wire   [7:0] or_ln52_15_fu_977_p2;
wire   [7:0] or_ln52_16_fu_987_p2;
wire   [1:0] tmp_12_fu_1001_p4;
wire   [0:0] icmp_ln1495_20_fu_1011_p2;
wire   [0:0] icmp_ln1494_21_fu_1025_p2;
wire   [30:0] trunc_ln1495_fu_997_p1;
wire   [7:0] or_ln52_17_fu_1045_p2;
wire   [7:0] or_ln52_18_fu_1055_p2;
wire   [0:0] icmp_ln1495_21_fu_1065_p2;
wire   [31:0] select_ln53_16_fu_1070_p3;
wire   [0:0] icmp_ln1495_22_fu_1077_p2;
wire   [31:0] select_ln67_16_cast_fu_1091_p1;
wire   [0:0] icmp_ln1494_22_fu_1094_p2;
wire   [31:0] select_ln67_17_fu_1100_p3;
wire   [0:0] icmp_ln1494_23_fu_1108_p2;
wire   [63:0] grp_fu_558_p1;
wire   [63:0] ireg_fu_1122_p1;
wire   [10:0] exp_tmp_fu_1138_p4;
wire   [62:0] trunc_ln555_fu_1126_p1;
wire   [11:0] zext_ln455_fu_1148_p1;
wire   [7:0] or_ln52_19_fu_1168_p2;
wire   [7:0] or_ln52_20_fu_1178_p2;
wire   [0:0] icmp_ln1495_23_fu_1188_p2;
wire   [31:0] select_ln53_18_fu_1193_p3;
wire   [0:0] icmp_ln1495_24_fu_1200_p2;
wire   [0:0] icmp_ln1494_24_fu_1214_p2;
wire   [31:0] select_ln67_19_fu_1219_p3;
wire   [0:0] icmp_ln1494_25_fu_1226_p2;
wire   [52:0] p_Result_1_fu_1245_p3;
wire   [53:0] zext_ln569_fu_1252_p1;
wire   [53:0] man_V_1_fu_1256_p2;
wire   [0:0] icmp_ln581_fu_1269_p2;
wire   [11:0] add_ln581_fu_1274_p2;
wire   [11:0] sub_ln581_fu_1279_p2;
wire   [53:0] man_V_2_fu_1262_p3;
wire   [6:0] tmp_14_fu_1301_p4;
wire   [5:0] trunc_ln586_fu_1317_p1;
wire   [53:0] zext_ln586_fu_1321_p1;
wire   [53:0] ashr_ln586_fu_1325_p2;
wire   [31:0] bitcast_ln702_fu_1335_p1;
wire   [0:0] tmp_15_fu_1338_p3;
wire   [0:0] or_ln571_fu_1354_p2;
wire   [0:0] icmp_ln582_fu_1292_p2;
wire   [0:0] xor_ln571_fu_1359_p2;
wire   [0:0] or_ln582_fu_1371_p2;
wire   [0:0] xor_ln582_fu_1377_p2;
wire   [0:0] icmp_ln585_fu_1389_p2;
wire   [0:0] or_ln581_fu_1401_p2;
wire   [0:0] icmp_ln603_fu_1311_p2;
wire   [0:0] xor_ln581_fu_1407_p2;
wire   [0:0] xor_ln124_fu_1419_p2;
wire   [0:0] and_ln603_fu_1413_p2;
wire   [0:0] and_ln585_fu_1395_p2;
wire   [31:0] select_ln588_fu_1346_p3;
wire   [31:0] trunc_ln586_1_fu_1331_p1;
wire   [7:0] or_ln52_21_fu_1444_p2;
wire   [7:0] or_ln52_22_fu_1454_p2;
wire   [0:0] icmp_ln1495_25_fu_1464_p2;
wire   [31:0] select_ln53_20_fu_1469_p3;
wire   [0:0] icmp_ln1495_26_fu_1476_p2;
wire   [0:0] icmp_ln1494_26_fu_1490_p2;
wire   [31:0] select_ln67_21_fu_1495_p3;
wire   [0:0] icmp_ln1494_27_fu_1502_p2;
wire  signed [31:0] sext_ln581_fu_1516_p1;
wire   [31:0] shl_ln604_fu_1519_p2;
wire   [31:0] select_ln571_fu_1524_p3;
wire   [0:0] or_ln571_2_fu_1537_p2;
wire   [31:0] select_ln571_2_fu_1531_p3;
wire   [0:0] or_ln571_3_fu_1547_p2;
wire   [31:0] select_ln571_3_fu_1541_p3;
wire   [31:0] select_ln571_4_fu_1551_p3;
wire   [3:0] add_ln134_1_fu_1568_p2;
wire   [7:0] or_ln52_23_fu_1577_p2;
wire   [7:0] or_ln52_24_fu_1587_p2;
wire   [0:0] icmp_ln1495_27_fu_1597_p2;
wire   [31:0] select_ln53_22_fu_1602_p3;
wire   [0:0] icmp_ln1495_28_fu_1609_p2;
wire   [0:0] icmp_ln1494_28_fu_1623_p2;
wire   [31:0] select_ln67_23_fu_1628_p3;
wire   [0:0] icmp_ln1494_29_fu_1635_p2;
wire   [7:0] or_ln52_25_fu_1649_p2;
wire   [7:0] or_ln52_26_fu_1659_p2;
wire   [0:0] icmp_ln1495_29_fu_1669_p2;
wire   [31:0] select_ln53_24_fu_1674_p3;
wire   [0:0] icmp_ln1495_30_fu_1681_p2;
wire   [0:0] icmp_ln1494_30_fu_1695_p2;
wire   [31:0] select_ln67_25_fu_1700_p3;
wire   [0:0] icmp_ln1494_31_fu_1707_p2;
wire   [7:0] or_ln52_27_fu_1721_p2;
wire   [7:0] or_ln52_28_fu_1731_p2;
wire   [0:0] icmp_ln1495_31_fu_1741_p2;
wire   [31:0] select_ln53_26_fu_1746_p3;
wire   [0:0] icmp_ln1495_32_fu_1753_p2;
wire   [0:0] icmp_ln1494_32_fu_1767_p2;
wire   [31:0] select_ln67_27_fu_1772_p3;
wire   [0:0] icmp_ln1494_33_fu_1779_p2;
wire   [0:0] icmp_ln1495_33_fu_1793_p2;
wire   [31:0] select_ln53_28_fu_1798_p3;
wire   [0:0] icmp_ln1495_34_fu_1805_p2;
wire   [0:0] icmp_ln1494_34_fu_1819_p2;
wire   [31:0] select_ln67_29_fu_1824_p3;
wire   [0:0] icmp_ln1494_35_fu_1831_p2;
wire   [0:0] icmp_ln1495_35_fu_1845_p2;
wire   [0:0] icmp_ln1494_36_fu_1858_p2;
wire   [3:0] add_ln141_1_fu_1870_p2;
wire   [3:0] add_ln142_1_fu_1879_p2;
wire   [3:0] add_ln139_1_fu_1888_p2;
wire    ap_CS_fsm_state72;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg = 1'b0;
end

system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
get_parallelogram_slopesparallelogram_slopes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(get_parallelogram_slopesparallelogram_slopes_address0),
    .ce0(get_parallelogram_slopesparallelogram_slopes_ce0),
    .q0(get_parallelogram_slopesparallelogram_slopes_q0)
);

system_top_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_541(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready),
    .ap_ce(1'b1),
    .z_i(grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i),
    .z_j(grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j),
    .i(3'd1),
    .j(grp_straightLineProjectorFromLayerIJtoK_fu_541_j),
    .k(3'd5),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return)
);

system_top_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(get_parallelogram_slopesparallelogram_slopes_q0),
    .ce(1'b1),
    .dout(grp_fu_558_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln65_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone)))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((icmp_ln65_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_761_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_506 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_506 <= add_ln65_reg_1969;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_reg_529 <= j_reg_2073;
    end else if (((icmp_ln65_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_2_reg_529 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_483 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_483 <= add_ln51_reg_1951;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_761_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_012_i230_reg_517 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_012_i230_reg_517 <= superpoint_0_max_z_fu_879_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_012_i_reg_494 <= 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        p_012_i_reg_494 <= superpoint_0_min_z_fu_773_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_562 <= superpoints_V_q1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        reg_562 <= superpoints_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        F2_reg_2118 <= F2_fu_1162_p2;
        icmp_ln571_reg_2112 <= icmp_ln571_fu_1156_p2;
        p_Result_s_reg_2102 <= ireg_fu_1122_p1[32'd63];
        select_ln53_17_reg_2090 <= select_ln53_17_fu_1083_p3;
        select_ln67_18_reg_2096 <= select_ln67_18_fu_1114_p3;
        trunc_ln565_reg_2107 <= trunc_ln565_fu_1152_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln134_reg_1935 <= add_ln134_fu_687_p2;
        add_ln136_reg_1910 <= add_ln136_fu_597_p2;
        add_ln137_reg_1905 <= add_ln137_fu_579_p2;
        add_ln139_reg_1930 <= add_ln139_fu_669_p2;
        add_ln140_reg_1925 <= add_ln140_fu_651_p2;
        add_ln141_reg_1920 <= add_ln141_fu_633_p2;
        add_ln142_reg_1915 <= add_ln142_fu_615_p2;
        add_ln52_2_reg_1945[7 : 4] <= add_ln52_2_fu_735_p2[7 : 4];
        add_ln52_reg_1940 <= add_ln52_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_2000_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln140_1_reg_2301 <= add_ln140_1_fu_1897_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln51_reg_1951 <= add_ln51_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln65_reg_1969 <= add_ln65_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln571_reg_2175 <= and_ln571_fu_1425_p2;
        and_ln581_reg_2170 <= and_ln581_fu_1383_p2;
        and_ln582_reg_2164 <= and_ln582_fu_1365_p2;
        icmp_ln124_1_reg_2148 <= icmp_ln124_1_fu_1240_p2;
        or_ln571_1_reg_2180 <= or_ln571_1_fu_1430_p2;
        select_ln53_19_reg_2136 <= select_ln53_19_fu_1206_p3;
        select_ln571_1_reg_2186 <= select_ln571_1_fu_1436_p3;
        select_ln67_20_reg_2142 <= select_ln67_20_fu_1232_p3;
        sh_amt_reg_2153 <= sh_amt_fu_1284_p3;
        trunc_ln583_reg_2158 <= trunc_ln583_fu_1297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        get_parallelogram_slopesparallelogram_slopes_load_reg_2067 <= get_parallelogram_slopesparallelogram_slopes_q0;
        select_ln53_reg_2056 <= select_ln53_fu_1017_p3;
        select_ln67_16_reg_2062 <= select_ln67_16_fu_1031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln124_reg_2000 <= icmp_ln124_fu_887_p2;
        icmp_ln124_reg_2000_pp0_iter1_reg <= icmp_ln124_reg_2000;
        icmp_ln124_reg_2000_pp0_iter2_reg <= icmp_ln124_reg_2000_pp0_iter1_reg;
        icmp_ln124_reg_2000_pp0_iter3_reg <= icmp_ln124_reg_2000_pp0_iter2_reg;
        icmp_ln124_reg_2000_pp0_iter4_reg <= icmp_ln124_reg_2000_pp0_iter3_reg;
        icmp_ln124_reg_2000_pp0_iter5_reg <= icmp_ln124_reg_2000_pp0_iter4_reg;
        icmp_ln124_reg_2000_pp0_iter6_reg <= icmp_ln124_reg_2000_pp0_iter5_reg;
        icmp_ln124_reg_2000_pp0_iter7_reg <= icmp_ln124_reg_2000_pp0_iter6_reg;
        icmp_ln124_reg_2000_pp0_iter8_reg <= icmp_ln124_reg_2000_pp0_iter7_reg;
        zext_ln134_1_reg_2037_pp0_iter1_reg[1 : 0] <= zext_ln134_1_reg_2037[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter2_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter1_reg[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter3_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter2_reg[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter4_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter3_reg[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter5_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter4_reg[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter6_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter5_reg[1 : 0];
        zext_ln134_1_reg_2037_pp0_iter7_reg[1 : 0] <= zext_ln134_1_reg_2037_pp0_iter6_reg[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_2073 <= j_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        j_reg_2073_pp0_iter1_reg <= j_reg_2073;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln53_21_reg_2201 <= select_ln53_21_fu_1482_p3;
        select_ln67_22_reg_2207 <= select_ln67_22_fu_1508_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        select_ln53_23_reg_2223 <= select_ln53_23_fu_1615_p3;
        select_ln67_24_reg_2229 <= select_ln67_24_fu_1641_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        select_ln53_25_reg_2245 <= select_ln53_25_fu_1687_p3;
        select_ln67_26_reg_2251 <= select_ln67_26_fu_1713_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        select_ln53_27_reg_2267 <= select_ln53_27_fu_1759_p3;
        select_ln67_28_reg_2273 <= select_ln67_28_fu_1785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln53_29_reg_2279 <= select_ln53_29_fu_1811_p3;
        select_ln67_30_reg_2285 <= select_ln67_30_fu_1837_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln53_30_reg_2291 <= select_ln53_30_fu_1850_p3;
        select_ln67_31_reg_2296 <= select_ln67_31_fu_1863_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        sext_ln97_1_reg_1989 <= sext_ln97_1_fu_869_p1;
        sext_ln97_reg_1983 <= sext_ln97_fu_857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_24_cast_reg_2004[7 : 4] <= tmp_24_cast_fu_924_p3[7 : 4];
        zext_ln134_1_reg_2037[1 : 0] <= zext_ln134_1_fu_953_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln124_fu_887_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_2_phi_fu_533_p4 = j_reg_2073;
    end else begin
        ap_phi_mux_i_2_phi_fu_533_p4 = i_2_reg_529;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b1;
    end else begin
        get_parallelogram_slopesparallelogram_slopes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_j = j_reg_2073_pp0_iter1_reg;
    end else if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_j = j_reg_2073;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_j = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = sext_ln97_reg_1983;
    end else if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = sext_ln97_1_reg_1989;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln67_31_reg_2296;
    end else if (((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln53_30_reg_2291;
    end else if (((icmp_ln124_reg_2000_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = select_ln53_30_fu_1850_p3;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        pSlope_V_ce0 = 1'b1;
    end else begin
        pSlope_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln124_reg_2000 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        pSlope_V_we0 = 1'b1;
    end else begin
        pSlope_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        shadow_bottomL_jL_V_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jL_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln124_reg_2000_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        shadow_bottomL_jL_V_we0 = 1'b1;
    end else begin
        shadow_bottomL_jL_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shadow_bottomL_jR_V_ce0 = 1'b1;
    end else begin
        shadow_bottomL_jR_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln124_reg_2000_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shadow_bottomL_jR_V_we0 = 1'b1;
    end else begin
        shadow_bottomL_jR_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        shadow_bottomR_jL_V_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jL_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln124_reg_2000_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        shadow_bottomR_jL_V_we0 = 1'b1;
    end else begin
        shadow_bottomR_jL_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shadow_bottomR_jR_V_ce0 = 1'b1;
    end else begin
        shadow_bottomR_jR_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln124_reg_2000_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shadow_bottomR_jR_V_we0 = 1'b1;
    end else begin
        shadow_bottomR_jR_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_38_fu_1726_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_36_fu_1654_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_34_fu_1582_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_32_fu_1449_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_30_fu_1173_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_28_fu_1050_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_26_fu_982_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        superpoints_V_address0 = zext_ln52_25_fu_938_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        superpoints_V_address0 = zext_ln66_1_fu_796_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        superpoints_V_address0 = zext_ln52_22_fu_756_p1;
    end else begin
        superpoints_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            superpoints_V_address1 = zext_ln52_39_fu_1736_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            superpoints_V_address1 = zext_ln52_37_fu_1664_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            superpoints_V_address1 = zext_ln52_35_fu_1592_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            superpoints_V_address1 = zext_ln52_33_fu_1459_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            superpoints_V_address1 = zext_ln52_31_fu_1183_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            superpoints_V_address1 = zext_ln52_29_fu_1060_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            superpoints_V_address1 = zext_ln52_27_fu_992_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            superpoints_V_address1 = zext_ln52_24_fu_919_p1;
        end else begin
            superpoints_V_address1 = 'bx;
        end
    end else begin
        superpoints_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        superpoints_V_ce0 = 1'b1;
    end else begin
        superpoints_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        superpoints_V_ce1 = 1'b1;
    end else begin
        superpoints_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_max_V_ce0 = 1'b1;
    end else begin
        z1_max_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_max_V_we0 = 1'b1;
    end else begin
        z1_max_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_min_V_ce0 = 1'b1;
    end else begin
        z1_min_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z1_min_V_we0 = 1'b1;
    end else begin
        z1_min_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln51_fu_761_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln65_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln124_fu_887_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln124_fu_887_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1162_p2 = (12'd1075 - zext_ln455_fu_1148_p1);

assign add_ln134_1_fu_1568_p2 = (add_ln134_reg_1935 + zext_ln134_1_reg_2037);

assign add_ln134_fu_687_p2 = (tmp_5_fu_679_p3 + zext_ln134_fu_675_p1);

assign add_ln136_1_fu_957_p2 = (add_ln136_reg_1910 + zext_ln134_1_fu_953_p1);

assign add_ln136_fu_597_p2 = (tmp_s_fu_589_p3 + zext_ln136_fu_585_p1);

assign add_ln137_1_fu_967_p2 = (add_ln137_reg_1905 + zext_ln134_1_fu_953_p1);

assign add_ln137_fu_579_p2 = (tmp_fu_571_p3 + zext_ln137_fu_567_p1);

assign add_ln139_1_fu_1888_p2 = (add_ln139_reg_1930 + zext_ln134_1_reg_2037_pp0_iter7_reg);

assign add_ln139_fu_669_p2 = (tmp_4_fu_661_p3 + zext_ln139_fu_657_p1);

assign add_ln140_1_fu_1897_p2 = (add_ln140_reg_1925 + zext_ln134_1_reg_2037_pp0_iter7_reg);

assign add_ln140_fu_651_p2 = (tmp_3_fu_643_p3 + zext_ln140_fu_639_p1);

assign add_ln141_1_fu_1870_p2 = (add_ln141_reg_1920 + zext_ln134_1_reg_2037_pp0_iter7_reg);

assign add_ln141_fu_633_p2 = (tmp_2_fu_625_p3 + zext_ln141_fu_621_p1);

assign add_ln142_1_fu_1879_p2 = (add_ln142_reg_1915 + zext_ln134_1_reg_2037_pp0_iter7_reg);

assign add_ln142_fu_615_p2 = (tmp_1_fu_607_p3 + zext_ln142_fu_603_p1);

assign add_ln51_fu_741_p2 = (i_reg_483 + 5'd1);

assign add_ln52_2_fu_735_p2 = (tmp_7_fu_715_p3 + zext_ln52_20_fu_731_p1);

assign add_ln52_3_fu_751_p2 = (add_ln52_2_reg_1945 + zext_ln52_21_fu_747_p1);

assign add_ln52_4_fu_902_p2 = (add_ln52_reg_1940 + zext_ln52_23_fu_898_p1);

assign add_ln52_fu_709_p2 = (zext_ln52_19_fu_705_p1 + zext_ln52_fu_693_p1);

assign add_ln581_fu_1274_p2 = ($signed(F2_reg_2118) + $signed(12'd4076));

assign add_ln65_fu_781_p2 = (i_1_reg_506 + 5'd1);

assign add_ln66_fu_791_p2 = (add_ln52_2_reg_1945 + zext_ln66_fu_787_p1);

assign and_ln571_fu_1425_p2 = (xor_ln124_fu_1419_p2 & icmp_ln571_reg_2112);

assign and_ln581_fu_1383_p2 = (xor_ln582_fu_1377_p2 & icmp_ln581_fu_1269_p2);

assign and_ln582_fu_1365_p2 = (xor_ln571_fu_1359_p2 & icmp_ln582_fu_1292_p2);

assign and_ln585_fu_1395_p2 = (icmp_ln585_fu_1389_p2 & and_ln581_fu_1383_p2);

assign and_ln603_fu_1413_p2 = (xor_ln581_fu_1407_p2 & icmp_ln603_fu_1311_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln586_fu_1325_p2 = $signed(man_V_2_fu_1262_p3) >>> zext_ln586_fu_1321_p1;

assign bitcast_ln702_fu_1335_p1 = get_parallelogram_slopesparallelogram_slopes_load_reg_2067;

assign exp_tmp_fu_1138_p4 = {{ireg_fu_1122_p1[62:52]}};

assign get_parallelogram_slopesparallelogram_slopes_address0 = trunc_ln104_cast_fu_893_p1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;

assign icmp_ln124_1_fu_1240_p2 = ((j_reg_2073 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_887_p2 = ((ap_phi_mux_i_2_phi_fu_533_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1494_21_fu_1025_p2 = (($signed(superpoints_V_q1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_22_fu_1094_p2 = (($signed(reg_562) > $signed(select_ln67_16_cast_fu_1091_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_23_fu_1108_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_17_fu_1100_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_24_fu_1214_p2 = (($signed(reg_562) > $signed(select_ln67_18_reg_2096)) ? 1'b1 : 1'b0);

assign icmp_ln1494_25_fu_1226_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_19_fu_1219_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_26_fu_1490_p2 = (($signed(reg_562) > $signed(select_ln67_20_reg_2142)) ? 1'b1 : 1'b0);

assign icmp_ln1494_27_fu_1502_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_21_fu_1495_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_28_fu_1623_p2 = (($signed(reg_562) > $signed(select_ln67_22_reg_2207)) ? 1'b1 : 1'b0);

assign icmp_ln1494_29_fu_1635_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_23_fu_1628_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_30_fu_1695_p2 = (($signed(reg_562) > $signed(select_ln67_24_reg_2229)) ? 1'b1 : 1'b0);

assign icmp_ln1494_31_fu_1707_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_25_fu_1700_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_32_fu_1767_p2 = (($signed(reg_562) > $signed(select_ln67_26_reg_2251)) ? 1'b1 : 1'b0);

assign icmp_ln1494_33_fu_1779_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_27_fu_1772_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_34_fu_1819_p2 = (($signed(reg_562) > $signed(select_ln67_28_reg_2273)) ? 1'b1 : 1'b0);

assign icmp_ln1494_35_fu_1831_p2 = (($signed(superpoints_V_q0) > $signed(select_ln67_29_fu_1824_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_36_fu_1858_p2 = (($signed(reg_562) > $signed(select_ln67_30_reg_2285)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_843_p2 = (($signed(z1_min_tmp_V_fu_813_p3) > $signed(z1_max_tmp_V_fu_831_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_873_p2 = (($signed(superpoints_V_q0) > $signed(p_012_i230_reg_517)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_807_p2 = (($signed(p_012_i_reg_494) > $signed(32'd4271898520)) ? 1'b1 : 1'b0);

assign icmp_ln1495_20_fu_1011_p2 = ((tmp_12_fu_1001_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1495_21_fu_1065_p2 = (($signed(reg_562) < $signed(select_ln53_reg_2056)) ? 1'b1 : 1'b0);

assign icmp_ln1495_22_fu_1077_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_16_fu_1070_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_23_fu_1188_p2 = (($signed(reg_562) < $signed(select_ln53_17_reg_2090)) ? 1'b1 : 1'b0);

assign icmp_ln1495_24_fu_1200_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_18_fu_1193_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_25_fu_1464_p2 = (($signed(reg_562) < $signed(select_ln53_19_reg_2136)) ? 1'b1 : 1'b0);

assign icmp_ln1495_26_fu_1476_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_20_fu_1469_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_27_fu_1597_p2 = (($signed(reg_562) < $signed(select_ln53_21_reg_2201)) ? 1'b1 : 1'b0);

assign icmp_ln1495_28_fu_1609_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_22_fu_1602_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_29_fu_1669_p2 = (($signed(reg_562) < $signed(select_ln53_23_reg_2223)) ? 1'b1 : 1'b0);

assign icmp_ln1495_30_fu_1681_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_24_fu_1674_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_31_fu_1741_p2 = (($signed(reg_562) < $signed(select_ln53_25_reg_2245)) ? 1'b1 : 1'b0);

assign icmp_ln1495_32_fu_1753_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_26_fu_1746_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_33_fu_1793_p2 = (($signed(reg_562) < $signed(select_ln53_27_reg_2267)) ? 1'b1 : 1'b0);

assign icmp_ln1495_34_fu_1805_p2 = (($signed(superpoints_V_q0) < $signed(select_ln53_28_fu_1798_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1495_35_fu_1845_p2 = (($signed(reg_562) < $signed(select_ln53_29_reg_2279)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_825_p2 = (($signed(p_012_i230_reg_517) < $signed(32'd23068776)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_767_p2 = (($signed(superpoints_V_q0) < $signed(p_012_i_reg_494)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_761_p2 = ((i_reg_483 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1156_p2 = ((trunc_ln555_fu_1126_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1269_p2 = (($signed(F2_reg_2118) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1292_p2 = ((F2_reg_2118 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1389_p2 = ((sh_amt_fu_1284_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1311_p2 = ((tmp_14_fu_1301_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_801_p2 = ((i_1_reg_506 == 5'd16) ? 1'b1 : 1'b0);

assign ireg_fu_1122_p1 = grp_fu_558_p1;

assign j_fu_1039_p2 = (i_2_reg_529 + 3'd1);

assign man_V_1_fu_1256_p2 = (54'd0 - zext_ln569_fu_1252_p1);

assign man_V_2_fu_1262_p3 = ((p_Result_s_reg_2102[0:0] == 1'b1) ? man_V_1_fu_1256_p2 : zext_ln569_fu_1252_p1);

assign or_ln52_15_fu_977_p2 = (tmp_24_cast_reg_2004 | 8'd2);

assign or_ln52_16_fu_987_p2 = (tmp_24_cast_reg_2004 | 8'd3);

assign or_ln52_17_fu_1045_p2 = (tmp_24_cast_reg_2004 | 8'd4);

assign or_ln52_18_fu_1055_p2 = (tmp_24_cast_reg_2004 | 8'd5);

assign or_ln52_19_fu_1168_p2 = (tmp_24_cast_reg_2004 | 8'd6);

assign or_ln52_20_fu_1178_p2 = (tmp_24_cast_reg_2004 | 8'd7);

assign or_ln52_21_fu_1444_p2 = (tmp_24_cast_reg_2004 | 8'd8);

assign or_ln52_22_fu_1454_p2 = (tmp_24_cast_reg_2004 | 8'd9);

assign or_ln52_23_fu_1577_p2 = (tmp_24_cast_reg_2004 | 8'd10);

assign or_ln52_24_fu_1587_p2 = (tmp_24_cast_reg_2004 | 8'd11);

assign or_ln52_25_fu_1649_p2 = (tmp_24_cast_reg_2004 | 8'd12);

assign or_ln52_26_fu_1659_p2 = (tmp_24_cast_reg_2004 | 8'd13);

assign or_ln52_27_fu_1721_p2 = (tmp_24_cast_reg_2004 | 8'd14);

assign or_ln52_28_fu_1731_p2 = (tmp_24_cast_reg_2004 | 8'd15);

assign or_ln52_fu_932_p2 = (tmp_24_cast_fu_924_p3 | 8'd1);

assign or_ln571_1_fu_1430_p2 = (and_ln603_fu_1413_p2 | and_ln571_fu_1425_p2);

assign or_ln571_2_fu_1537_p2 = (icmp_ln124_1_reg_2148 | and_ln582_reg_2164);

assign or_ln571_3_fu_1547_p2 = (or_ln571_1_reg_2180 | and_ln581_reg_2170);

assign or_ln571_fu_1354_p2 = (icmp_ln571_reg_2112 | icmp_ln124_1_fu_1240_p2);

assign or_ln581_fu_1401_p2 = (or_ln582_fu_1371_p2 | icmp_ln581_fu_1269_p2);

assign or_ln582_fu_1371_p2 = (or_ln571_fu_1354_p2 | icmp_ln582_fu_1292_p2);

assign pSlope_V_address0 = zext_ln134_2_fu_1572_p1;

assign pSlope_V_d0 = ((or_ln571_3_fu_1547_p2[0:0] == 1'b1) ? select_ln571_3_fu_1541_p3 : select_ln571_4_fu_1551_p3);

assign p_Result_1_fu_1245_p3 = {{1'd1}, {trunc_ln565_reg_2107}};

assign parallelogram_index_fu_947_p2 = ($signed(trunc_ln133_fu_943_p1) + $signed(2'd3));

assign select_ln53_16_fu_1070_p3 = ((icmp_ln1495_21_fu_1065_p2[0:0] == 1'b1) ? reg_562 : select_ln53_reg_2056);

assign select_ln53_17_fu_1083_p3 = ((icmp_ln1495_22_fu_1077_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_16_fu_1070_p3);

assign select_ln53_18_fu_1193_p3 = ((icmp_ln1495_23_fu_1188_p2[0:0] == 1'b1) ? reg_562 : select_ln53_17_reg_2090);

assign select_ln53_19_fu_1206_p3 = ((icmp_ln1495_24_fu_1200_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_18_fu_1193_p3);

assign select_ln53_20_fu_1469_p3 = ((icmp_ln1495_25_fu_1464_p2[0:0] == 1'b1) ? reg_562 : select_ln53_19_reg_2136);

assign select_ln53_21_fu_1482_p3 = ((icmp_ln1495_26_fu_1476_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_20_fu_1469_p3);

assign select_ln53_22_fu_1602_p3 = ((icmp_ln1495_27_fu_1597_p2[0:0] == 1'b1) ? reg_562 : select_ln53_21_reg_2201);

assign select_ln53_23_fu_1615_p3 = ((icmp_ln1495_28_fu_1609_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_22_fu_1602_p3);

assign select_ln53_24_fu_1674_p3 = ((icmp_ln1495_29_fu_1669_p2[0:0] == 1'b1) ? reg_562 : select_ln53_23_reg_2223);

assign select_ln53_25_fu_1687_p3 = ((icmp_ln1495_30_fu_1681_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_24_fu_1674_p3);

assign select_ln53_26_fu_1746_p3 = ((icmp_ln1495_31_fu_1741_p2[0:0] == 1'b1) ? reg_562 : select_ln53_25_reg_2245);

assign select_ln53_27_fu_1759_p3 = ((icmp_ln1495_32_fu_1753_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_26_fu_1746_p3);

assign select_ln53_28_fu_1798_p3 = ((icmp_ln1495_33_fu_1793_p2[0:0] == 1'b1) ? reg_562 : select_ln53_27_reg_2267);

assign select_ln53_29_fu_1811_p3 = ((icmp_ln1495_34_fu_1805_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln53_28_fu_1798_p3);

assign select_ln53_30_fu_1850_p3 = ((icmp_ln1495_35_fu_1845_p2[0:0] == 1'b1) ? reg_562 : select_ln53_29_reg_2279);

assign select_ln53_fu_1017_p3 = ((icmp_ln1495_20_fu_1011_p2[0:0] == 1'b1) ? superpoints_V_q1 : 32'd1073741824);

assign select_ln571_1_fu_1436_p3 = ((and_ln585_fu_1395_p2[0:0] == 1'b1) ? select_ln588_fu_1346_p3 : trunc_ln586_1_fu_1331_p1);

assign select_ln571_2_fu_1531_p3 = ((and_ln582_reg_2164[0:0] == 1'b1) ? trunc_ln583_reg_2158 : 32'd1073741824);

assign select_ln571_3_fu_1541_p3 = ((or_ln571_1_reg_2180[0:0] == 1'b1) ? select_ln571_fu_1524_p3 : select_ln571_1_reg_2186);

assign select_ln571_4_fu_1551_p3 = ((or_ln571_2_fu_1537_p2[0:0] == 1'b1) ? select_ln571_2_fu_1531_p3 : 32'd0);

assign select_ln571_fu_1524_p3 = ((and_ln571_reg_2175[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_1519_p2);

assign select_ln588_fu_1346_p3 = ((tmp_15_fu_1338_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln67_16_cast_fu_1091_p1 = select_ln67_16_reg_2062;

assign select_ln67_16_fu_1031_p3 = ((icmp_ln1494_21_fu_1025_p2[0:0] == 1'b1) ? trunc_ln1495_fu_997_p1 : 31'd0);

assign select_ln67_17_fu_1100_p3 = ((icmp_ln1494_22_fu_1094_p2[0:0] == 1'b1) ? reg_562 : select_ln67_16_cast_fu_1091_p1);

assign select_ln67_18_fu_1114_p3 = ((icmp_ln1494_23_fu_1108_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_17_fu_1100_p3);

assign select_ln67_19_fu_1219_p3 = ((icmp_ln1494_24_fu_1214_p2[0:0] == 1'b1) ? reg_562 : select_ln67_18_reg_2096);

assign select_ln67_20_fu_1232_p3 = ((icmp_ln1494_25_fu_1226_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_19_fu_1219_p3);

assign select_ln67_21_fu_1495_p3 = ((icmp_ln1494_26_fu_1490_p2[0:0] == 1'b1) ? reg_562 : select_ln67_20_reg_2142);

assign select_ln67_22_fu_1508_p3 = ((icmp_ln1494_27_fu_1502_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_21_fu_1495_p3);

assign select_ln67_23_fu_1628_p3 = ((icmp_ln1494_28_fu_1623_p2[0:0] == 1'b1) ? reg_562 : select_ln67_22_reg_2207);

assign select_ln67_24_fu_1641_p3 = ((icmp_ln1494_29_fu_1635_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_23_fu_1628_p3);

assign select_ln67_25_fu_1700_p3 = ((icmp_ln1494_30_fu_1695_p2[0:0] == 1'b1) ? reg_562 : select_ln67_24_reg_2229);

assign select_ln67_26_fu_1713_p3 = ((icmp_ln1494_31_fu_1707_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_25_fu_1700_p3);

assign select_ln67_27_fu_1772_p3 = ((icmp_ln1494_32_fu_1767_p2[0:0] == 1'b1) ? reg_562 : select_ln67_26_reg_2251);

assign select_ln67_28_fu_1785_p3 = ((icmp_ln1494_33_fu_1779_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_27_fu_1772_p3);

assign select_ln67_29_fu_1824_p3 = ((icmp_ln1494_34_fu_1819_p2[0:0] == 1'b1) ? reg_562 : select_ln67_28_reg_2273);

assign select_ln67_30_fu_1837_p3 = ((icmp_ln1494_35_fu_1831_p2[0:0] == 1'b1) ? superpoints_V_q0 : select_ln67_29_fu_1824_p3);

assign select_ln67_31_fu_1863_p3 = ((icmp_ln1494_36_fu_1858_p2[0:0] == 1'b1) ? reg_562 : select_ln67_30_reg_2285);

assign sext_ln581_fu_1516_p1 = sh_amt_reg_2153;

assign sext_ln97_1_fu_869_p1 = $signed(z1_min_tmp_V_1_fu_861_p3);

assign sext_ln97_fu_857_p1 = $signed(z1_max_tmp_V_1_fu_849_p3);

assign sh_amt_fu_1284_p3 = ((icmp_ln581_fu_1269_p2[0:0] == 1'b1) ? add_ln581_fu_1274_p2 : sub_ln581_fu_1279_p2);

assign shadow_bottomL_jL_V_address0 = zext_ln141_1_fu_1874_p1;

assign shadow_bottomL_jL_V_d0 = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

assign shadow_bottomL_jR_V_address0 = zext_ln139_1_fu_1892_p1;

assign shadow_bottomL_jR_V_d0 = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

assign shadow_bottomR_jL_V_address0 = zext_ln142_1_fu_1883_p1;

assign shadow_bottomR_jL_V_d0 = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

assign shadow_bottomR_jR_V_address0 = zext_ln140_1_fu_1901_p1;

assign shadow_bottomR_jR_V_d0 = grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

assign shl_ln604_fu_1519_p2 = trunc_ln583_reg_2158 << sext_ln581_fu_1516_p1;

assign sub_ln581_fu_1279_p2 = (12'd20 - F2_reg_2118);

assign superpoint_0_max_z_fu_879_p3 = ((icmp_ln1494_7_fu_873_p2[0:0] == 1'b1) ? superpoints_V_q0 : p_012_i230_reg_517);

assign superpoint_0_min_z_fu_773_p3 = ((icmp_ln1495_fu_767_p2[0:0] == 1'b1) ? superpoints_V_q0 : p_012_i_reg_494);

assign tmp_11_fu_911_p3 = {{add_ln52_4_fu_902_p2}, {4'd0}};

assign tmp_12_fu_1001_p4 = {{superpoints_V_q1[31:30]}};

assign tmp_14_fu_1301_p4 = {{sh_amt_fu_1284_p3[11:5]}};

assign tmp_15_fu_1338_p3 = bitcast_ln702_fu_1335_p1[32'd31];

assign tmp_1_fu_607_p3 = {{shadow_bottomR_jL_V_offset}, {2'd0}};

assign tmp_24_cast_fu_924_p3 = {{trunc_ln52_fu_907_p1}, {4'd0}};

assign tmp_2_fu_625_p3 = {{shadow_bottomL_jL_V_offset}, {2'd0}};

assign tmp_3_fu_643_p3 = {{shadow_bottomR_jR_V_offset}, {2'd0}};

assign tmp_4_fu_661_p3 = {{shadow_bottomL_jR_V_offset}, {2'd0}};

assign tmp_5_fu_679_p3 = {{pSlope_V_offset}, {2'd0}};

assign tmp_6_fu_697_p3 = {{superpoints_V_offset}, {2'd0}};

assign tmp_7_fu_715_p3 = {{superpoints_V_offset}, {6'd0}};

assign tmp_8_fu_723_p3 = {{superpoints_V_offset}, {4'd0}};

assign tmp_fu_571_p3 = {{z1_max_V_offset}, {2'd0}};

assign tmp_s_fu_589_p3 = {{z1_min_V_offset}, {2'd0}};

assign trunc_ln104_cast_fu_893_p1 = ap_phi_mux_i_2_phi_fu_533_p4;

assign trunc_ln133_fu_943_p1 = ap_phi_mux_i_2_phi_fu_533_p4[1:0];

assign trunc_ln1495_fu_997_p1 = superpoints_V_q1[30:0];

assign trunc_ln52_fu_907_p1 = add_ln52_4_fu_902_p2[3:0];

assign trunc_ln555_fu_1126_p1 = ireg_fu_1122_p1[62:0];

assign trunc_ln565_fu_1152_p1 = ireg_fu_1122_p1[51:0];

assign trunc_ln583_fu_1297_p1 = man_V_2_fu_1262_p3[31:0];

assign trunc_ln586_1_fu_1331_p1 = ashr_ln586_fu_1325_p2[31:0];

assign trunc_ln586_fu_1317_p1 = sh_amt_fu_1284_p3[5:0];

assign trunc_ln94_fu_821_p1 = z1_min_tmp_V_fu_813_p3[25:0];

assign trunc_ln95_fu_839_p1 = z1_max_tmp_V_fu_831_p3[25:0];

assign xor_ln124_fu_1419_p2 = (icmp_ln124_1_fu_1240_p2 ^ 1'd1);

assign xor_ln571_fu_1359_p2 = (or_ln571_fu_1354_p2 ^ 1'd1);

assign xor_ln581_fu_1407_p2 = (or_ln581_fu_1401_p2 ^ 1'd1);

assign xor_ln582_fu_1377_p2 = (or_ln582_fu_1371_p2 ^ 1'd1);

assign z1_max_V_address0 = zext_ln137_1_fu_972_p1;

assign z1_max_V_d0 = sext_ln97_reg_1983;

assign z1_max_tmp_V_1_fu_849_p3 = ((icmp_ln1494_6_fu_843_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln95_fu_839_p1);

assign z1_max_tmp_V_fu_831_p3 = ((icmp_ln1495_9_fu_825_p2[0:0] == 1'b1) ? p_012_i230_reg_517 : 32'd23068776);

assign z1_min_V_address0 = zext_ln136_1_fu_962_p1;

assign z1_min_V_d0 = sext_ln97_1_reg_1989;

assign z1_min_tmp_V_1_fu_861_p3 = ((icmp_ln1494_6_fu_843_p2[0:0] == 1'b1) ? 26'd24117352 : trunc_ln94_fu_821_p1);

assign z1_min_tmp_V_fu_813_p3 = ((icmp_ln1494_fu_807_p2[0:0] == 1'b1) ? p_012_i_reg_494 : 32'd4271898520);

assign zext_ln134_1_fu_953_p1 = parallelogram_index_fu_947_p2;

assign zext_ln134_2_fu_1572_p1 = add_ln134_1_fu_1568_p2;

assign zext_ln134_fu_675_p1 = pSlope_V_offset;

assign zext_ln136_1_fu_962_p1 = add_ln136_1_fu_957_p2;

assign zext_ln136_fu_585_p1 = z1_min_V_offset;

assign zext_ln137_1_fu_972_p1 = add_ln137_1_fu_967_p2;

assign zext_ln137_fu_567_p1 = z1_max_V_offset;

assign zext_ln139_1_fu_1892_p1 = add_ln139_1_fu_1888_p2;

assign zext_ln139_fu_657_p1 = shadow_bottomL_jR_V_offset;

assign zext_ln140_1_fu_1901_p1 = add_ln140_1_reg_2301;

assign zext_ln140_fu_639_p1 = shadow_bottomR_jR_V_offset;

assign zext_ln141_1_fu_1874_p1 = add_ln141_1_fu_1870_p2;

assign zext_ln141_fu_621_p1 = shadow_bottomL_jL_V_offset;

assign zext_ln142_1_fu_1883_p1 = add_ln142_1_fu_1879_p2;

assign zext_ln142_fu_603_p1 = shadow_bottomR_jL_V_offset;

assign zext_ln455_fu_1148_p1 = exp_tmp_fu_1138_p4;

assign zext_ln52_19_fu_705_p1 = tmp_6_fu_697_p3;

assign zext_ln52_20_fu_731_p1 = tmp_8_fu_723_p3;

assign zext_ln52_21_fu_747_p1 = i_reg_483;

assign zext_ln52_22_fu_756_p1 = add_ln52_3_fu_751_p2;

assign zext_ln52_23_fu_898_p1 = ap_phi_mux_i_2_phi_fu_533_p4;

assign zext_ln52_24_fu_919_p1 = tmp_11_fu_911_p3;

assign zext_ln52_25_fu_938_p1 = or_ln52_fu_932_p2;

assign zext_ln52_26_fu_982_p1 = or_ln52_15_fu_977_p2;

assign zext_ln52_27_fu_992_p1 = or_ln52_16_fu_987_p2;

assign zext_ln52_28_fu_1050_p1 = or_ln52_17_fu_1045_p2;

assign zext_ln52_29_fu_1060_p1 = or_ln52_18_fu_1055_p2;

assign zext_ln52_30_fu_1173_p1 = or_ln52_19_fu_1168_p2;

assign zext_ln52_31_fu_1183_p1 = or_ln52_20_fu_1178_p2;

assign zext_ln52_32_fu_1449_p1 = or_ln52_21_fu_1444_p2;

assign zext_ln52_33_fu_1459_p1 = or_ln52_22_fu_1454_p2;

assign zext_ln52_34_fu_1582_p1 = or_ln52_23_fu_1577_p2;

assign zext_ln52_35_fu_1592_p1 = or_ln52_24_fu_1587_p2;

assign zext_ln52_36_fu_1654_p1 = or_ln52_25_fu_1649_p2;

assign zext_ln52_37_fu_1664_p1 = or_ln52_26_fu_1659_p2;

assign zext_ln52_38_fu_1726_p1 = or_ln52_27_fu_1721_p2;

assign zext_ln52_39_fu_1736_p1 = or_ln52_28_fu_1731_p2;

assign zext_ln52_fu_693_p1 = superpoints_V_offset;

assign zext_ln569_fu_1252_p1 = p_Result_1_fu_1245_p3;

assign zext_ln586_fu_1321_p1 = trunc_ln586_fu_1317_p1;

assign zext_ln66_1_fu_796_p1 = add_ln66_fu_791_p2;

assign zext_ln66_fu_787_p1 = i_1_reg_506;

always @ (posedge ap_clk) begin
    add_ln52_2_reg_1945[3:0] <= 4'b0000;
    tmp_24_cast_reg_2004[3:0] <= 4'b0000;
    zext_ln134_1_reg_2037[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter1_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter2_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter3_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter4_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter5_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter6_reg[3:2] <= 2'b00;
    zext_ln134_1_reg_2037_pp0_iter7_reg[3:2] <= 2'b00;
end

endmodule //system_top_getParallelograms
