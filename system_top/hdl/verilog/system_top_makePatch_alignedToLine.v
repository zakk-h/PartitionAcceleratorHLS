// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_makePatch_alignedToLine (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        points_address0,
        points_ce0,
        points_q0,
        points_address1,
        points_ce1,
        points_q1,
        num_points_address0,
        num_points_ce0,
        num_points_q0,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        patch_stream_V_din,
        patch_stream_V_full_n,
        patch_stream_V_write,
        p_read,
        z_top,
        leftRight,
        patch_buffer_address0,
        patch_buffer_ce0,
        patch_buffer_we0,
        patch_buffer_d0,
        patch_buffer_address1,
        patch_buffer_ce1,
        patch_buffer_we1,
        patch_buffer_d1,
        patch_buffer_is_empty_address0,
        patch_buffer_is_empty_ce0,
        patch_buffer_is_empty_we0,
        patch_buffer_is_empty_d0,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4096;
parameter    ap_ST_fsm_state15 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] points_address0;
output   points_ce0;
input  [127:0] points_q0;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
output  [2:0] num_points_address0;
output   num_points_ce0;
input  [31:0] num_points_q0;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [95:0] patch_stream_V_din;
input   patch_stream_V_full_n;
output   patch_stream_V_write;
input  [31:0] p_read;
input  [31:0] z_top;
input  [0:0] leftRight;
output  [7:0] patch_buffer_address0;
output   patch_buffer_ce0;
output   patch_buffer_we0;
output  [31:0] patch_buffer_d0;
output  [7:0] patch_buffer_address1;
output   patch_buffer_ce1;
output   patch_buffer_we1;
output  [31:0] patch_buffer_d1;
output  [1:0] patch_buffer_is_empty_address0;
output   patch_buffer_is_empty_ce0;
output   patch_buffer_is_empty_we0;
output  [0:0] patch_buffer_is_empty_d0;
input  [31:0] p_read1;
input  [31:0] p_read2;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg points_ce0;
reg points_ce1;
reg num_points_ce0;
reg num_points_ce1;
reg patch_stream_V_write;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    patch_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln79_reg_329;
reg   [6:0] indvar_flatten_reg_150;
reg   [2:0] layer_reg_161;
reg   [4:0] point_reg_172;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_patch_buffer_add_patch7_fu_213_ap_return_0;
wire   [31:0] grp_patch_buffer_add_patch7_fu_213_ap_return_1;
reg   [31:0] call_ret1_reg_320_0;
reg   [31:0] call_ret1_reg_320_1;
wire    ap_CS_fsm_state12;
wire   [6:0] add_ln79_1_fu_226_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state13_pp0_stage0_iter0;
reg    ap_block_state14_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_232_p2;
wire   [2:0] select_ln79_1_fu_258_p3;
reg   [2:0] select_ln79_1_reg_333;
wire   [4:0] add_ln81_fu_289_p2;
wire    grp_patch_buffer_add_patch7_fu_213_ap_ready;
wire    grp_patch_buffer_add_patch7_fu_213_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
reg   [6:0] init_patch_V_address0;
reg    init_patch_V_ce0;
reg    init_patch_V_we0;
wire   [95:0] init_patch_V_q0;
reg   [6:0] init_patch_V_address1;
reg    init_patch_V_ce1;
reg    init_patch_V_we1;
wire   [95:0] init_patch_V_q1;
wire    grp_alignedtoline_per_layer_loop8_fu_183_ap_start;
wire    grp_alignedtoline_per_layer_loop8_fu_183_ap_done;
wire    grp_alignedtoline_per_layer_loop8_fu_183_ap_idle;
wire    grp_alignedtoline_per_layer_loop8_fu_183_ap_ready;
wire   [11:0] grp_alignedtoline_per_layer_loop8_fu_183_points_address0;
wire    grp_alignedtoline_per_layer_loop8_fu_183_points_ce0;
wire   [11:0] grp_alignedtoline_per_layer_loop8_fu_183_points_address1;
wire    grp_alignedtoline_per_layer_loop8_fu_183_points_ce1;
wire   [2:0] grp_alignedtoline_per_layer_loop8_fu_183_num_points_address0;
wire    grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce0;
wire   [2:0] grp_alignedtoline_per_layer_loop8_fu_183_num_points_address1;
wire    grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce1;
wire   [6:0] grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address0;
wire    grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce0;
wire    grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we0;
wire   [95:0] grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d0;
wire   [6:0] grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address1;
wire    grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce1;
wire    grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we1;
wire   [95:0] grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d1;
reg   [2:0] grp_alignedtoline_per_layer_loop8_fu_183_i_offset;
wire    grp_patch_buffer_add_patch7_fu_213_ap_start;
wire    grp_patch_buffer_add_patch7_fu_213_ap_idle;
wire   [6:0] grp_patch_buffer_add_patch7_fu_213_new_patch_address0;
wire    grp_patch_buffer_add_patch7_fu_213_new_patch_ce0;
wire   [6:0] grp_patch_buffer_add_patch7_fu_213_new_patch_address1;
wire    grp_patch_buffer_add_patch7_fu_213_new_patch_ce1;
wire   [7:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_address0;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce0;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_we0;
wire   [31:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_d0;
wire   [7:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_address1;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce1;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_we1;
wire   [31:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_d1;
wire   [1:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_address0;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_ce0;
wire    grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_we0;
wire   [0:0] grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_d0;
reg   [2:0] ap_phi_mux_layer_phi_fu_165_p4;
reg    grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg    grp_patch_buffer_add_patch7_fu_213_ap_start_reg;
wire   [63:0] zext_ln82_1_fu_284_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln81_fu_244_p2;
wire   [2:0] add_ln79_fu_238_p2;
wire   [4:0] select_ln79_fu_250_p3;
wire   [6:0] tmp_fu_266_p3;
wire   [6:0] zext_ln82_fu_274_p1;
wire   [6:0] add_ln82_fu_278_p2;
wire    ap_CS_fsm_state15;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg = 1'b0;
#0 grp_patch_buffer_add_patch7_fu_213_ap_start_reg = 1'b0;
end

system_top_makePatch_alignedToLine_init_patch_V #(
    .DataWidth( 96 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
init_patch_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_address0),
    .ce0(init_patch_V_ce0),
    .we0(init_patch_V_we0),
    .d0(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d0),
    .q0(init_patch_V_q0),
    .address1(init_patch_V_address1),
    .ce1(init_patch_V_ce1),
    .we1(init_patch_V_we1),
    .d1(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d1),
    .q1(init_patch_V_q1)
);

system_top_alignedtoline_per_layer_loop8 grp_alignedtoline_per_layer_loop8_fu_183(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_alignedtoline_per_layer_loop8_fu_183_ap_start),
    .ap_done(grp_alignedtoline_per_layer_loop8_fu_183_ap_done),
    .ap_idle(grp_alignedtoline_per_layer_loop8_fu_183_ap_idle),
    .ap_ready(grp_alignedtoline_per_layer_loop8_fu_183_ap_ready),
    .points_address0(grp_alignedtoline_per_layer_loop8_fu_183_points_address0),
    .points_ce0(grp_alignedtoline_per_layer_loop8_fu_183_points_ce0),
    .points_q0(points_q0),
    .points_address1(grp_alignedtoline_per_layer_loop8_fu_183_points_address1),
    .points_ce1(grp_alignedtoline_per_layer_loop8_fu_183_points_ce1),
    .points_q1(points_q1),
    .num_points_address0(grp_alignedtoline_per_layer_loop8_fu_183_num_points_address0),
    .num_points_ce0(grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce0),
    .num_points_q0(num_points_q0),
    .num_points_address1(grp_alignedtoline_per_layer_loop8_fu_183_num_points_address1),
    .num_points_ce1(grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce1),
    .num_points_q1(num_points_q1),
    .p_read(p_read),
    .z_top(z_top),
    .leftRight(leftRight),
    .init_patch_address0(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address0),
    .init_patch_ce0(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce0),
    .init_patch_we0(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we0),
    .init_patch_d0(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d0),
    .init_patch_address1(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address1),
    .init_patch_ce1(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce1),
    .init_patch_we1(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we1),
    .init_patch_d1(grp_alignedtoline_per_layer_loop8_fu_183_init_patch_d1),
    .i_offset(grp_alignedtoline_per_layer_loop8_fu_183_i_offset)
);

system_top_patch_buffer_add_patch7 grp_patch_buffer_add_patch7_fu_213(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_patch_buffer_add_patch7_fu_213_ap_start),
    .ap_done(grp_patch_buffer_add_patch7_fu_213_ap_done),
    .ap_idle(grp_patch_buffer_add_patch7_fu_213_ap_idle),
    .ap_ready(grp_patch_buffer_add_patch7_fu_213_ap_ready),
    .new_patch_address0(grp_patch_buffer_add_patch7_fu_213_new_patch_address0),
    .new_patch_ce0(grp_patch_buffer_add_patch7_fu_213_new_patch_ce0),
    .new_patch_q0(init_patch_V_q0),
    .new_patch_address1(grp_patch_buffer_add_patch7_fu_213_new_patch_address1),
    .new_patch_ce1(grp_patch_buffer_add_patch7_fu_213_new_patch_ce1),
    .new_patch_q1(init_patch_V_q1),
    .patch_buffer_address0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_address0),
    .patch_buffer_ce0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce0),
    .patch_buffer_we0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_we0),
    .patch_buffer_d0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_d0),
    .patch_buffer_address1(grp_patch_buffer_add_patch7_fu_213_patch_buffer_address1),
    .patch_buffer_ce1(grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce1),
    .patch_buffer_we1(grp_patch_buffer_add_patch7_fu_213_patch_buffer_we1),
    .patch_buffer_d1(grp_patch_buffer_add_patch7_fu_213_patch_buffer_d1),
    .patch_buffer_is_empty_address0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_address0),
    .patch_buffer_is_empty_ce0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_ce0),
    .patch_buffer_is_empty_we0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_we0),
    .patch_buffer_is_empty_d0(grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_d0),
    .latest_patch_index_read(p_read1),
    .num_patches_read(p_read2),
    .ap_return_0(grp_patch_buffer_add_patch7_fu_213_ap_return_0),
    .ap_return_1(grp_patch_buffer_add_patch7_fu_213_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg <= 1'b1;
        end else if ((grp_alignedtoline_per_layer_loop8_fu_183_ap_ready == 1'b1)) begin
            grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_patch_buffer_add_patch7_fu_213_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_patch_buffer_add_patch7_fu_213_ap_start_reg <= 1'b1;
        end else if ((grp_patch_buffer_add_patch7_fu_213_ap_ready == 1'b1)) begin
            grp_patch_buffer_add_patch7_fu_213_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_232_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_150 <= add_ln79_1_fu_226_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
        indvar_flatten_reg_150 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_329 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_reg_161 <= select_ln79_1_reg_333;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
        layer_reg_161 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_232_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        point_reg_172 <= add_ln81_fu_289_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
        point_reg_172 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        call_ret1_reg_320_0 <= grp_patch_buffer_add_patch7_fu_213_ap_return_0;
        call_ret1_reg_320_1 <= grp_patch_buffer_add_patch7_fu_213_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_329 <= icmp_ln79_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_232_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln79_1_reg_333 <= select_ln79_1_fu_258_p3;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_232_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_329 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_layer_phi_fu_165_p4 = select_ln79_1_reg_333;
    end else begin
        ap_phi_mux_layer_phi_fu_165_p4 = layer_reg_161;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 3'd0;
    end else begin
        grp_alignedtoline_per_layer_loop8_fu_183_i_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        init_patch_V_address0 = zext_ln82_1_fu_284_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_address0 = grp_patch_buffer_add_patch7_fu_213_new_patch_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_address0 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address0;
    end else begin
        init_patch_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_address1 = grp_patch_buffer_add_patch7_fu_213_new_patch_address1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_address1 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_address1;
    end else begin
        init_patch_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        init_patch_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_ce0 = grp_patch_buffer_add_patch7_fu_213_new_patch_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_ce0 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce0;
    end else begin
        init_patch_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        init_patch_V_ce1 = grp_patch_buffer_add_patch7_fu_213_new_patch_ce1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_ce1 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_ce1;
    end else begin
        init_patch_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_we0 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we0;
    end else begin
        init_patch_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        init_patch_V_we1 = grp_alignedtoline_per_layer_loop8_fu_183_init_patch_we1;
    end else begin
        init_patch_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce0 = grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce0;
    end else begin
        num_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        num_points_ce1 = grp_alignedtoline_per_layer_loop8_fu_183_num_points_ce1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_329 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        patch_stream_V_blk_n = patch_stream_V_full_n;
    end else begin
        patch_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_329 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        patch_stream_V_write = 1'b1;
    end else begin
        patch_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce0 = grp_alignedtoline_per_layer_loop8_fu_183_points_ce0;
    end else begin
        points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        points_ce1 = grp_alignedtoline_per_layer_loop8_fu_183_points_ce1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_alignedtoline_per_layer_loop8_fu_183_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_alignedtoline_per_layer_loop8_fu_183_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_alignedtoline_per_layer_loop8_fu_183_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_alignedtoline_per_layer_loop8_fu_183_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_alignedtoline_per_layer_loop8_fu_183_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_patch_buffer_add_patch7_fu_213_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln79_fu_232_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln79_fu_232_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln79_1_fu_226_p2 = (indvar_flatten_reg_150 + 7'd1);

assign add_ln79_fu_238_p2 = (ap_phi_mux_layer_phi_fu_165_p4 + 3'd1);

assign add_ln81_fu_289_p2 = (select_ln79_fu_250_p3 + 5'd1);

assign add_ln82_fu_278_p2 = (tmp_fu_266_p3 + zext_ln82_fu_274_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln79_reg_329 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln79_reg_329 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln79_reg_329 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (patch_stream_V_full_n == 1'b0));
end

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter1 = ((icmp_ln79_reg_329 == 1'd0) & (patch_stream_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = call_ret1_reg_320_0;

assign ap_return_1 = call_ret1_reg_320_1;

assign grp_alignedtoline_per_layer_loop8_fu_183_ap_start = grp_alignedtoline_per_layer_loop8_fu_183_ap_start_reg;

assign grp_patch_buffer_add_patch7_fu_213_ap_start = grp_patch_buffer_add_patch7_fu_213_ap_start_reg;

assign icmp_ln79_fu_232_p2 = ((indvar_flatten_reg_150 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_244_p2 = ((point_reg_172 == 5'd16) ? 1'b1 : 1'b0);

assign num_points_address0 = grp_alignedtoline_per_layer_loop8_fu_183_num_points_address0;

assign num_points_address1 = grp_alignedtoline_per_layer_loop8_fu_183_num_points_address1;

assign patch_buffer_address0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_address0;

assign patch_buffer_address1 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_address1;

assign patch_buffer_ce0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce0;

assign patch_buffer_ce1 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_ce1;

assign patch_buffer_d0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_d0;

assign patch_buffer_d1 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_d1;

assign patch_buffer_is_empty_address0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_address0;

assign patch_buffer_is_empty_ce0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_ce0;

assign patch_buffer_is_empty_d0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_d0;

assign patch_buffer_is_empty_we0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_is_empty_we0;

assign patch_buffer_we0 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_we0;

assign patch_buffer_we1 = grp_patch_buffer_add_patch7_fu_213_patch_buffer_we1;

assign patch_stream_V_din = init_patch_V_q0;

assign points_address0 = grp_alignedtoline_per_layer_loop8_fu_183_points_address0;

assign points_address1 = grp_alignedtoline_per_layer_loop8_fu_183_points_address1;

assign select_ln79_1_fu_258_p3 = ((icmp_ln81_fu_244_p2[0:0] == 1'b1) ? add_ln79_fu_238_p2 : ap_phi_mux_layer_phi_fu_165_p4);

assign select_ln79_fu_250_p3 = ((icmp_ln81_fu_244_p2[0:0] == 1'b1) ? 5'd0 : point_reg_172);

assign tmp_fu_266_p3 = {{select_ln79_1_fu_258_p3}, {4'd0}};

assign zext_ln82_1_fu_284_p1 = add_ln82_fu_278_p2;

assign zext_ln82_fu_274_p1 = select_ln79_fu_250_p3;

endmodule //system_top_makePatch_alignedToLine
