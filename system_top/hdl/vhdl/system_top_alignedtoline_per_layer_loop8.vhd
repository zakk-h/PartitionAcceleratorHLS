-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_alignedtoline_per_layer_loop8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce1 : OUT STD_LOGIC;
    points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce1 : OUT STD_LOGIC;
    num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
    init_patch_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    init_patch_ce0 : OUT STD_LOGIC;
    init_patch_we0 : OUT STD_LOGIC;
    init_patch_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    init_patch_ce1 : OUT STD_LOGIC;
    init_patch_we1 : OUT STD_LOGIC;
    init_patch_d1 : OUT STD_LOGIC_VECTOR (95 downto 0);
    i_offset : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of system_top_alignedtoline_per_layer_loop8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (44 downto 0) := "000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (44 downto 0) := "000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (44 downto 0) := "000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (44 downto 0) := "000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (44 downto 0) := "000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (44 downto 0) := "000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (44 downto 0) := "000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (44 downto 0) := "000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (44 downto 0) := "000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (44 downto 0) := "001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (44 downto 0) := "010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (44 downto 0) := "100000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv64_BEE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "1011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv25_1B00000 : STD_LOGIC_VECTOR (24 downto 0) := "1101100000000000000000000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv185_lc_2 : STD_LOGIC_VECTOR (184 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100111";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv185_lc_1 : STD_LOGIC_VECTOR (184 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv57_0 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv33_1FFFFFFF1 : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111110001";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv9_1F1 : STD_LOGIC_VECTOR (8 downto 0) := "111110001";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv9_1F2 : STD_LOGIC_VECTOR (8 downto 0) := "111110010";
    constant ap_const_lv12_FF3 : STD_LOGIC_VECTOR (11 downto 0) := "111111110011";
    constant ap_const_lv9_1F3 : STD_LOGIC_VECTOR (8 downto 0) := "111110011";
    constant ap_const_lv12_FF4 : STD_LOGIC_VECTOR (11 downto 0) := "111111110100";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv12_FF5 : STD_LOGIC_VECTOR (11 downto 0) := "111111110101";
    constant ap_const_lv9_1F5 : STD_LOGIC_VECTOR (8 downto 0) := "111110101";
    constant ap_const_lv12_FF6 : STD_LOGIC_VECTOR (11 downto 0) := "111111110110";
    constant ap_const_lv9_1F6 : STD_LOGIC_VECTOR (8 downto 0) := "111110110";
    constant ap_const_lv12_FF7 : STD_LOGIC_VECTOR (11 downto 0) := "111111110111";
    constant ap_const_lv9_1F7 : STD_LOGIC_VECTOR (8 downto 0) := "111110111";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv9_1F8 : STD_LOGIC_VECTOR (8 downto 0) := "111111000";
    constant ap_const_lv12_FF9 : STD_LOGIC_VECTOR (11 downto 0) := "111111111001";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv12_FFB : STD_LOGIC_VECTOR (11 downto 0) := "111111111011";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1FB : STD_LOGIC_VECTOR (8 downto 0) := "111111011";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv33_10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_radiiradii_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce0 : STD_LOGIC;
    signal get_radiiradii_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lbVal_constprop : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal rbVal_constprop : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal grp_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal leftRight_read_read_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln874_1_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_979_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1047 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal zext_ln112_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_reg_4558 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ret_V_7_fu_1120_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_7_reg_4573 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_6_fu_1126_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_6_reg_4578 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_fu_1138_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_2_reg_4583 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_25_reg_4588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_1163_p2 : STD_LOGIC_VECTOR (184 downto 0);
    signal mul_ln1148_reg_4599 : STD_LOGIC_VECTOR (184 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_27_reg_4604 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln1148_fu_1179_p2 : STD_LOGIC_VECTOR (184 downto 0);
    signal sub_ln1148_reg_4610 : STD_LOGIC_VECTOR (184 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal projectionToRow_V_reg_4615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal init_patch_addr_reg_4625 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_1_reg_4630 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_2_reg_4635 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_3_reg_4640 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_4_reg_4645 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_5_reg_4650 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_6_reg_4655 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_7_reg_4660 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_8_reg_4665 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_9_reg_4670 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_10_reg_4675 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_11_reg_4680 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_12_reg_4685 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_13_reg_4690 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_14_reg_4695 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_15_reg_4700 : STD_LOGIC_VECTOR (6 downto 0);
    signal start_index_V_1_load_reg_4705 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_reg_4727 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_1_reg_4732 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_4736 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_reg_4740 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_1_reg_4745 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_2_fu_1564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_2_reg_4750 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_1_fu_1572_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_1_reg_4755 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_13_reg_4760 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal select_ln893_1_fu_1634_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln893_1_reg_4765 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1506_1_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_1_reg_4770 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln734_1_fu_1690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln1506_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_4780 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_reg_4785 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal start_index_V_2_fu_1761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_V_2_reg_4794 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_51_fu_1789_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_51_reg_4799 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln878_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_4817 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1461_fu_1812_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1461_reg_4821 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln3_fu_1822_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln3_reg_4839 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal lshr_ln475_8_reg_4897 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_9_reg_4902 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_s_reg_4907 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_10_reg_4912 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_11_reg_4917 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_12_reg_4922 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_13_reg_4927 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln475_14_reg_4932 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln908_reg_4977 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_fu_2697_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_reg_4982 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_fu_2705_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_4987 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_11_reg_4992 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal select_ln893_fu_2767_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln893_reg_4997 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1505_1_fu_2785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1505_1_reg_5002 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln734_fu_2823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln1505_fu_2828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1505_reg_5012 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_index_V_fu_2844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal and_ln1505_fu_2838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1346_fu_2858_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1346_reg_5025 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ret_19_fu_2875_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_19_reg_5043 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2_fu_2891_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2_reg_5064 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln886_fu_2885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_fu_2922_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln436_reg_5082 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_fu_2988_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_reg_5110 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_2998_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_reg_5128 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal lshr_ln436_8_reg_5186 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_9_reg_5191 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_s_reg_5196 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_10_reg_5201 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_11_reg_5206 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_12_reg_5211 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_13_reg_5216 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln436_14_reg_5221 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal lshr_ln428_8_reg_5296 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_9_reg_5301 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_s_reg_5306 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_10_reg_5311 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_11_reg_5316 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_12_reg_5321 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_13_reg_5326 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln428_14_reg_5331 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_idle : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_continue : STD_LOGIC;
    signal ap_phi_mux_lhs_5_phi_fu_899_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_5_reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready : STD_LOGIC;
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done : STD_LOGIC;
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done : STD_LOGIC := '0';
    signal left_bound_V_fu_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_bound_V_fu_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_V_3_fu_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_value_V_fu_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln436_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1253_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1268_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1283_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1298_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1313_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1328_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1343_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1358_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1373_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1388_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1403_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1418_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1433_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1463_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln453_fu_1756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_fu_1867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_1_fu_1916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_2_fu_1972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_3_fu_2018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_4_fu_2074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_5_fu_2120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_6_fu_2176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_7_fu_2222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_8_fu_2467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_9_fu_2484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_10_fu_2511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_11_fu_2528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_12_fu_2555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_13_fu_2572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_14_fu_2599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln475_15_fu_2610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_1_fu_2934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_2_fu_2983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_fu_3043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_1_fu_3092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_3_fu_3148_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_4_fu_3194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_5_fu_3250_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_6_fu_3296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_7_fu_3352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_8_fu_3398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_9_fu_3649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_10_fu_3666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_11_fu_3693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_12_fu_3710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_13_fu_3737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_14_fu_3754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_15_fu_3781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_16_fu_3798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_2_fu_3864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_3_fu_3910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_4_fu_3966_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_5_fu_4012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_6_fu_4068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_7_fu_4114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_8_fu_4359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_9_fu_4376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_10_fu_4403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_11_fu_4420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_12_fu_4447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_13_fu_4464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_14_fu_4491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_15_fu_4502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_value_V_1_fu_1775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln475_fu_1921_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_1_fu_1926_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_2_fu_2023_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_3_fu_2028_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_4_fu_2125_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_5_fu_2130_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_6_fu_2445_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_7_fu_2450_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_8_fu_2489_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_9_fu_2494_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_10_fu_2533_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_11_fu_2538_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_12_fu_2577_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_13_fu_2582_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal trunc_ln475_14_fu_2615_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln475_15_fu_2620_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_1_fu_3097_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_2_fu_3102_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_3_fu_3199_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_4_fu_3204_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_5_fu_3301_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_6_fu_3306_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_7_fu_3627_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_8_fu_3632_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_9_fu_3671_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_10_fu_3676_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_11_fu_3715_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_12_fu_3720_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_13_fu_3759_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_14_fu_3764_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal trunc_ln436_15_fu_3803_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln436_16_fu_3808_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_fu_3813_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_1_fu_3818_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_2_fu_3915_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_3_fu_3920_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_4_fu_4017_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_5_fu_4022_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_6_fu_4337_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_7_fu_4342_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_8_fu_4381_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_9_fu_4386_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_10_fu_4425_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_11_fu_4430_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_12_fu_4469_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_13_fu_4474_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal trunc_ln428_14_fu_4507_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln428_15_fu_4512_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_942_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1017_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln731_fu_1100_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln703_2_fu_1116_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln703_fu_1112_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_2_fu_1116_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal y_V_fu_1104_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_fu_1138_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_24_fu_1152_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal grp_fu_1163_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_26_fu_1184_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal select_ln1148_fu_1193_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln1148_1_fu_1199_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1148_1_fu_1205_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_fu_1211_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_fu_1218_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_fu_1235_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln436_fu_1247_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln436_1_fu_1262_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln436_2_fu_1277_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln436_3_fu_1292_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_fu_1307_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_1_fu_1322_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_2_fu_1337_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_3_fu_1352_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_4_fu_1367_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_5_fu_1382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_6_fu_1397_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_7_fu_1412_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_8_fu_1427_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_9_fu_1442_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln428_10_fu_1457_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln446_fu_1481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln897_1_fu_1492_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_1_fu_1496_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_1_fu_1502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln897_1_fu_1506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln899_1_fu_1512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_fu_1518_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln899_2_fu_1524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1033_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_1_fu_1544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln896_1_fu_1556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_3_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln909_3_fu_1576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln909_1_fu_1580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1057_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_1_fu_1590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln908_1_fu_1594_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln909_1_fu_1584_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_fu_1600_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_1_fu_1607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_8_fu_1610_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_1626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_fu_1642_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln915_1_fu_1661_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_1_fu_1666_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln912_1_fu_1658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1671_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_17_fu_1678_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1506_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln453_fu_1718_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln453_1_fu_1721_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1711_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln453_fu_1729_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_1735_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln453_1_fu_1745_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_1748_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_1771_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_2_fu_1785_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_36_fu_1793_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln878_fu_1802_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1461_fu_1816_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_1_fu_1829_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_fu_1837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln3_fu_1843_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_16_fu_1853_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_fu_1859_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_37_fu_1872_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_2_fu_1878_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_1_fu_1886_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_1_fu_1892_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_17_fu_1902_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_fu_1908_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_38_fu_1931_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_3_fu_1936_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_2_fu_1944_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_2_fu_1949_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_18_fu_1959_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_1964_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_39_fu_1977_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_4_fu_1982_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_3_fu_1990_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_3_fu_1995_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_19_fu_2005_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_68_fu_2010_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_40_fu_2033_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_5_fu_2038_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_4_fu_2046_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_4_fu_2051_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_20_fu_2061_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_69_fu_2066_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_41_fu_2079_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_6_fu_2084_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_5_fu_2092_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_5_fu_2097_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_21_fu_2107_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_70_fu_2112_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_42_fu_2135_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_7_fu_2140_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_6_fu_2148_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_6_fu_2153_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_22_fu_2163_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_71_fu_2168_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_43_fu_2181_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_8_fu_2186_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_7_fu_2194_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln475_7_fu_2199_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln475_23_fu_2209_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_fu_2214_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_44_fu_2227_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_9_fu_2232_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_8_fu_2240_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_45_fu_2255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_s_fu_2260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_9_fu_2268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_46_fu_2283_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_10_fu_2288_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_10_fu_2296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_47_fu_2311_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_11_fu_2316_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_11_fu_2324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_48_fu_2339_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_12_fu_2344_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_12_fu_2352_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_49_fu_2367_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_13_fu_2372_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_13_fu_2380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_50_fu_2395_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln475_14_fu_2400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_14_fu_2408_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln475_15_fu_2423_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_15_fu_2430_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln475_24_fu_2455_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_73_fu_2460_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_25_fu_2472_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_fu_2477_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_26_fu_2499_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_fu_2504_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_27_fu_2516_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_76_fu_2521_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_28_fu_2543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_77_fu_2548_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_29_fu_2560_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_fu_2565_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln475_30_fu_2587_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_79_fu_2592_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_80_fu_2604_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln897_fu_2625_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_fu_2629_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_fu_2635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln897_fu_2639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln899_fu_2645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_2_fu_2651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln899_fu_2657_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_2669_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_2677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_2663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln896_fu_2689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_1_fu_2683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln909_2_fu_2709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln909_fu_2713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_fu_2723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln908_fu_2727_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln909_fu_2717_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_2733_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_fu_2740_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_3_fu_2743_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_2759_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_2775_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln915_fu_2794_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_2799_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln912_fu_2791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_2804_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_13_fu_2811_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1505_fu_2834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_2854_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_1_fu_2871_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_19_fu_2875_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_1_fu_2871_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_2862_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_1_fu_2879_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal shl_ln436_1_fu_2898_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_fu_2906_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln2_fu_2912_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_49_fu_2926_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_21_fu_2939_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_2_fu_2945_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_1_fu_2953_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_1_fu_2959_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_16_fu_2969_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_2975_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_2988_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_7_fu_2992_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_1_fu_3005_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_fu_3013_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1_fu_3019_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_16_fu_3029_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_3035_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_5_fu_3048_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_2_fu_3054_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_1_fu_3062_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_1_fu_3068_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_17_fu_3078_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_3084_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_22_fu_3107_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_3_fu_3112_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_2_fu_3120_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_2_fu_3125_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_17_fu_3135_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_3140_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_23_fu_3153_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_4_fu_3158_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_3_fu_3166_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_3_fu_3171_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_18_fu_3181_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_52_fu_3186_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_24_fu_3209_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_5_fu_3214_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_4_fu_3222_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_4_fu_3227_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_19_fu_3237_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_fu_3242_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_25_fu_3255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_6_fu_3260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_5_fu_3268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_5_fu_3273_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_20_fu_3283_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_3288_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_26_fu_3311_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_7_fu_3316_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_6_fu_3324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_6_fu_3329_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_21_fu_3339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_fu_3344_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_27_fu_3357_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_8_fu_3362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_7_fu_3370_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln436_7_fu_3375_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln436_22_fu_3385_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_56_fu_3390_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_28_fu_3403_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_9_fu_3408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_8_fu_3416_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_29_fu_3431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_s_fu_3436_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_9_fu_3444_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_30_fu_3459_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_10_fu_3464_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_10_fu_3472_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_31_fu_3487_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_11_fu_3492_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_11_fu_3500_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_32_fu_3515_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_12_fu_3520_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_12_fu_3528_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_33_fu_3543_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_13_fu_3548_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_13_fu_3556_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_34_fu_3571_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_14_fu_3576_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_14_fu_3584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_35_fu_3599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln436_15_fu_3604_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_15_fu_3612_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln436_23_fu_3637_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_57_fu_3642_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_24_fu_3654_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_fu_3659_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_25_fu_3681_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_59_fu_3686_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_26_fu_3698_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_fu_3703_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_27_fu_3725_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_fu_3730_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_28_fu_3742_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_fu_3747_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_29_fu_3769_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_63_fu_3774_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln436_30_fu_3786_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_fu_3791_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_6_fu_3823_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_3_fu_3828_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_2_fu_3836_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_2_fu_3841_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_18_fu_3851_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_35_fu_3856_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_7_fu_3869_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_4_fu_3874_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_3_fu_3882_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_3_fu_3887_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_19_fu_3897_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_fu_3902_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_8_fu_3925_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_5_fu_3930_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_4_fu_3938_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_4_fu_3943_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_20_fu_3953_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_37_fu_3958_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_9_fu_3971_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_6_fu_3976_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_5_fu_3984_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_5_fu_3989_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_21_fu_3999_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_fu_4004_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_10_fu_4027_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_7_fu_4032_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_6_fu_4040_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_6_fu_4045_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_22_fu_4055_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_4060_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_11_fu_4073_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_8_fu_4078_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_7_fu_4086_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln428_7_fu_4091_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln428_23_fu_4101_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_4106_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_12_fu_4119_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_9_fu_4124_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_8_fu_4132_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_13_fu_4147_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_s_fu_4152_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_9_fu_4160_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_14_fu_4175_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_10_fu_4180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_10_fu_4188_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_15_fu_4203_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_11_fu_4208_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_11_fu_4216_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_16_fu_4231_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_12_fu_4236_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_12_fu_4244_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_17_fu_4259_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_13_fu_4264_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_13_fu_4272_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_18_fu_4287_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln428_14_fu_4292_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_14_fu_4300_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln428_15_fu_4315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_15_fu_4322_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln428_24_fu_4347_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_4352_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_25_fu_4364_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_fu_4369_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_26_fu_4391_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_fu_4396_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_27_fu_4408_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_fu_4413_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_28_fu_4435_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_45_fu_4440_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_29_fu_4452_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_4457_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln428_30_fu_4479_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_fu_4484_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_48_fu_4496_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_942_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_2_fu_1138_p10 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component system_top_p_find_boundaries_and_starting_index_and_value9 IS
    port (
        num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce0 : OUT STD_LOGIC;
        num_points_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we0 : OUT STD_LOGIC;
        num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce1 : OUT STD_LOGIC;
        num_points_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we1 : OUT STD_LOGIC;
        points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce0 : OUT STD_LOGIC;
        points_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we0 : OUT STD_LOGIC;
        points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce1 : OUT STD_LOGIC;
        points_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we1 : OUT STD_LOGIC;
        left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
        right_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
        projectionToRow : IN STD_LOGIC_VECTOR (31 downto 0);
        start_index : OUT STD_LOGIC_VECTOR (31 downto 0);
        start_value_i : IN STD_LOGIC_VECTOR (31 downto 0);
        start_value_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        projectionToRow_ap_vld : IN STD_LOGIC;
        i_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        left_bound_ap_vld : OUT STD_LOGIC;
        right_bound_ap_vld : OUT STD_LOGIC;
        lbVal_constprop_i_ap_vld : IN STD_LOGIC;
        lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        rbVal_constprop_i_ap_vld : IN STD_LOGIC;
        rbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        start_index_ap_vld : OUT STD_LOGIC;
        start_value_i_ap_vld : IN STD_LOGIC;
        start_value_o_ap_vld : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component system_top_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_mul_33s_25ns_58_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component system_top_mul_78s_108ns_185_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (77 downto 0);
        din1 : IN STD_LOGIC_VECTOR (107 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (184 downto 0) );
    end component;


    component system_top_alignedtoline_per_layer_loop8_get_radiiradii IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_radiiradii_U : component system_top_alignedtoline_per_layer_loop8_get_radiiradii
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_radiiradii_address0,
        ce0 => get_radiiradii_ce0,
        q0 => get_radiiradii_q0);

    grp_p_find_boundaries_and_starting_index_and_value9_fu_922 : component system_top_p_find_boundaries_and_starting_index_and_value9
    port map (
        num_points_address0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address0,
        num_points_ce0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce0,
        num_points_d0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_d0,
        num_points_q0 => num_points_q0,
        num_points_we0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_we0,
        num_points_address1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address1,
        num_points_ce1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce1,
        num_points_d1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_d1,
        num_points_q1 => num_points_q1,
        num_points_we1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_we1,
        points_address0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address0,
        points_ce0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce0,
        points_d0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_d0,
        points_q0 => points_q0,
        points_we0 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_we0,
        points_address1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address1,
        points_ce1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce1,
        points_d1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_d1,
        points_q1 => points_q1,
        points_we1 => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_we1,
        left_bound => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound,
        right_bound => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound,
        projectionToRow => projectionToRow_V_reg_4615,
        start_index => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index,
        start_value_i => start_value_V_fu_312,
        start_value_o => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o,
        i => i_offset,
        lbVal_constprop_i => lbVal_constprop,
        lbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o,
        rbVal_constprop_i => rbVal_constprop,
        rbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        projectionToRow_ap_vld => ap_const_logic_1,
        i_ap_vld => ap_const_logic_1,
        ap_start => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start,
        left_bound_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound_ap_vld,
        right_bound_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound_ap_vld,
        lbVal_constprop_i_ap_vld => ap_const_logic_1,
        lbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o_ap_vld,
        rbVal_constprop_i_ap_vld => ap_const_logic_1,
        rbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o_ap_vld,
        ap_done => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done,
        start_index_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index_ap_vld,
        start_value_i_ap_vld => ap_const_logic_1,
        start_value_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o_ap_vld,
        ap_ready => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready,
        ap_idle => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_idle,
        ap_continue => grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_continue);

    dcmp_64ns_64ns_1_2_no_dsp_1_U42 : component system_top_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_942_p0,
        din1 => grp_fu_942_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_942_opcode,
        dout => grp_fu_942_p2);

    mul_33s_25ns_58_1_1_U43 : component system_top_mul_33s_25ns_58_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 25,
        dout_WIDTH => 58)
    port map (
        din0 => ret_V_7_reg_4573,
        din1 => r_V_2_fu_1138_p1,
        dout => r_V_2_fu_1138_p2);

    mul_78s_108ns_185_3_1_U44 : component system_top_mul_78s_108ns_185_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 78,
        din1_WIDTH => 108,
        dout_WIDTH => 185)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_24_fu_1152_p3,
        din1 => grp_fu_1163_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1163_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
                    grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready = ap_const_logic_1)) then 
                    grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    lbVal_constprop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                lbVal_constprop <= ap_const_lv32_40000000;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                lbVal_constprop <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_lbVal_constprop_o;
            end if; 
        end if;
    end process;

    left_bound_V_fu_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                left_bound_V_fu_316 <= ap_const_lv32_0;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                left_bound_V_fu_316 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_left_bound;
            end if; 
        end if;
    end process;

    lhs_5_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_0 = and_ln1506_fu_1705_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_0) and (grp_fu_951_p2 = ap_const_lv1_1)))) then 
                lhs_5_reg_896 <= start_index_V_1_load_reg_4705;
            elsif (((icmp_ln885_1_reg_4736 = ap_const_lv1_0) and (icmp_ln874_1_reg_4732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = and_ln1506_reg_4785))) then 
                lhs_5_reg_896 <= start_index_V_2_reg_4794;
            end if; 
        end if;
    end process;

    lhs_reg_909_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = and_ln1505_fu_2838_p2))) then 
                lhs_reg_909 <= start_index_V_1_load_reg_4705;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln874_fu_1475_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_951_p2 = ap_const_lv1_1) and (icmp_ln874_fu_1475_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1)))) then 
                lhs_reg_909 <= start_index_V_3_fu_308;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = and_ln1505_fu_2838_p2))) then 
                lhs_reg_909 <= start_index_V_fu_2844_p2;
            end if; 
        end if;
    end process;

    rbVal_constprop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rbVal_constprop <= ap_const_lv32_40000000;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                rbVal_constprop <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_rbVal_constprop_o;
            end if; 
        end if;
    end process;

    right_bound_V_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                right_bound_V_fu_320 <= ap_const_lv32_0;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                right_bound_V_fu_320 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_right_bound;
            end if; 
        end if;
    end process;

    start_index_V_3_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_index_V_3_fu_308 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln1506_fu_1705_p2))) then 
                start_index_V_3_fu_308 <= start_index_V_2_fu_1761_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = and_ln1505_fu_2838_p2))) then 
                start_index_V_3_fu_308 <= start_index_V_fu_2844_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                start_index_V_3_fu_308 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_index;
            end if; 
        end if;
    end process;

    start_value_V_fu_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_value_V_fu_312 <= ap_const_lv32_40000000;
            elsif (((icmp_ln885_1_reg_4736 = ap_const_lv1_0) and (icmp_ln874_1_reg_4732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = and_ln1506_reg_4785))) then 
                start_value_V_fu_312 <= start_value_V_1_fu_1775_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                start_value_V_fu_312 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_start_value_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                and_ln1506_reg_4785 <= and_ln1506_fu_1705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                empty_reg_5110 <= empty_fu_2988_p1;
                    shl_ln1_reg_5128(15 downto 13) <= shl_ln1_fu_2998_p3(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                icmp_ln1505_1_reg_5002 <= icmp_ln1505_1_fu_2785_p2;
                m_11_reg_4992 <= m_3_fu_2743_p2(63 downto 1);
                    select_ln893_reg_4997(0) <= select_ln893_fu_2767_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                icmp_ln1505_reg_5012 <= icmp_ln1505_fu_2828_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln1506_1_reg_4770 <= icmp_ln1506_1_fu_1652_p2;
                m_13_reg_4760 <= m_8_fu_1610_p2(63 downto 1);
                    select_ln893_1_reg_4765(0) <= select_ln893_1_fu_1634_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                icmp_ln1506_reg_4780 <= icmp_ln1506_fu_1695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln874_1_reg_4732 <= icmp_ln874_1_fu_1487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln878_reg_4817 <= icmp_ln878_fu_1806_p2;
                ret_51_reg_4799 <= ret_51_fu_1789_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_0))) then
                icmp_ln885_1_reg_4736 <= grp_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln908_1_reg_4745 <= grp_fu_1041_p2;
                select_ln908_2_reg_4750 <= select_ln908_2_fu_1564_p3;
                trunc_ln893_1_reg_4755 <= trunc_ln893_1_fu_1572_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                icmp_ln908_reg_4977 <= grp_fu_1041_p2;
                select_ln908_reg_4982 <= select_ln908_fu_2697_p3;
                trunc_ln893_reg_4987 <= trunc_ln893_fu_2705_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    init_patch_addr_10_reg_4675(6 downto 4) <= tmp_17_fu_1388_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_11_reg_4680(6 downto 4) <= tmp_18_fu_1403_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_12_reg_4685(6 downto 4) <= tmp_19_fu_1418_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_13_reg_4690(6 downto 4) <= tmp_20_fu_1433_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_14_reg_4695(6 downto 4) <= tmp_21_fu_1448_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_15_reg_4700(6 downto 4) <= tmp_22_fu_1463_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_1_reg_4630(6 downto 4) <= tmp_s_fu_1253_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_2_reg_4635(6 downto 4) <= tmp_9_fu_1268_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_3_reg_4640(6 downto 4) <= tmp_10_fu_1283_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_4_reg_4645(6 downto 4) <= tmp_11_fu_1298_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_5_reg_4650(6 downto 4) <= tmp_12_fu_1313_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_6_reg_4655(6 downto 4) <= tmp_13_fu_1328_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_7_reg_4660(6 downto 4) <= tmp_14_fu_1343_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_8_reg_4665(6 downto 4) <= tmp_15_fu_1358_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_9_reg_4670(6 downto 4) <= tmp_16_fu_1373_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_reg_4625(6 downto 4) <= zext_ln436_fu_1242_p1(7 - 1 downto 0)(6 downto 4);
                start_index_V_1_load_reg_4705 <= start_index_V_3_fu_308;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                lshr_ln428_10_reg_5311 <= add_ln428_11_fu_4216_p2(15 downto 13);
                lshr_ln428_11_reg_5316 <= add_ln428_12_fu_4244_p2(15 downto 13);
                lshr_ln428_12_reg_5321 <= add_ln428_13_fu_4272_p2(15 downto 13);
                lshr_ln428_13_reg_5326 <= add_ln428_14_fu_4300_p2(15 downto 13);
                lshr_ln428_14_reg_5331 <= add_ln428_15_fu_4322_p2(15 downto 13);
                lshr_ln428_8_reg_5296 <= add_ln428_8_fu_4132_p2(15 downto 13);
                lshr_ln428_9_reg_5301 <= add_ln428_9_fu_4160_p2(15 downto 13);
                lshr_ln428_s_reg_5306 <= add_ln428_10_fu_4188_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                lshr_ln436_10_reg_5201 <= add_ln436_11_fu_3500_p2(15 downto 13);
                lshr_ln436_11_reg_5206 <= add_ln436_12_fu_3528_p2(15 downto 13);
                lshr_ln436_12_reg_5211 <= add_ln436_13_fu_3556_p2(15 downto 13);
                lshr_ln436_13_reg_5216 <= add_ln436_14_fu_3584_p2(15 downto 13);
                lshr_ln436_14_reg_5221 <= add_ln436_15_fu_3612_p2(15 downto 13);
                lshr_ln436_8_reg_5186 <= add_ln436_8_fu_3416_p2(15 downto 13);
                lshr_ln436_9_reg_5191 <= add_ln436_9_fu_3444_p2(15 downto 13);
                lshr_ln436_s_reg_5196 <= add_ln436_10_fu_3472_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                lshr_ln475_10_reg_4912 <= add_ln475_11_fu_2324_p2(15 downto 13);
                lshr_ln475_11_reg_4917 <= add_ln475_12_fu_2352_p2(15 downto 13);
                lshr_ln475_12_reg_4922 <= add_ln475_13_fu_2380_p2(15 downto 13);
                lshr_ln475_13_reg_4927 <= add_ln475_14_fu_2408_p2(15 downto 13);
                lshr_ln475_14_reg_4932 <= add_ln475_15_fu_2430_p2(15 downto 13);
                lshr_ln475_8_reg_4897 <= add_ln475_8_fu_2240_p2(15 downto 13);
                lshr_ln475_9_reg_4902 <= add_ln475_9_fu_2268_p2(15 downto 13);
                lshr_ln475_s_reg_4907 <= add_ln475_10_fu_2296_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                mul_ln1148_reg_4599 <= grp_fu_1163_p2;
                tmp_27_reg_4604 <= grp_fu_1163_p2(182 downto 131);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_951_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1475_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1))) then
                p_Result_10_reg_4727 <= start_value_V_fu_312(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_0) and (grp_fu_951_p2 = ap_const_lv1_0))) then
                p_Result_14_reg_4740 <= start_value_V_fu_312(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                projectionToRow_V_reg_4615 <= ret_V_fu_1218_p2(51 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                r_V_2_reg_4583 <= r_V_2_fu_1138_p2;
                tmp_25_reg_4588 <= r_V_2_fu_1138_p2(57 downto 57);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_1047 <= grp_fu_1005_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_0) and (grp_fu_951_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_951_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1475_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1)))) then
                reg_989 <= grp_fu_971_p3;
                reg_993 <= grp_fu_979_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                ret_19_reg_5043 <= ret_19_fu_2875_p1;
                trunc_ln1346_reg_5025 <= trunc_ln1346_fu_2858_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    ret_V_6_reg_4578(24 downto 20) <= ret_V_6_fu_1126_p2(24 downto 20);
                ret_V_7_reg_4573 <= ret_V_7_fu_1120_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_2885_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    shl_ln2_reg_5064(15 downto 13) <= shl_ln2_fu_2891_p3(15 downto 13);
                trunc_ln436_reg_5082 <= trunc_ln436_fu_2922_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_1806_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    shl_ln3_reg_4839(15 downto 13) <= shl_ln3_fu_1822_p3(15 downto 13);
                trunc_ln1461_reg_4821 <= trunc_ln1461_fu_1812_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln1506_fu_1705_p2))) then
                start_index_V_2_reg_4794 <= start_index_V_2_fu_1761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_25_reg_4588 = ap_const_lv1_1))) then
                sub_ln1148_reg_4610 <= sub_ln1148_fu_1179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    zext_ln112_reg_4558(2 downto 0) <= zext_ln112_fu_1063_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln112_reg_4558(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    ret_V_6_reg_4578(19 downto 0) <= "00000000000000000000";
    init_patch_addr_reg_4625(3 downto 0) <= "0000";
    init_patch_addr_1_reg_4630(3 downto 0) <= "0001";
    init_patch_addr_2_reg_4635(3 downto 0) <= "0010";
    init_patch_addr_3_reg_4640(3 downto 0) <= "0011";
    init_patch_addr_4_reg_4645(3 downto 0) <= "0100";
    init_patch_addr_5_reg_4650(3 downto 0) <= "0101";
    init_patch_addr_6_reg_4655(3 downto 0) <= "0110";
    init_patch_addr_7_reg_4660(3 downto 0) <= "0111";
    init_patch_addr_8_reg_4665(3 downto 0) <= "1000";
    init_patch_addr_9_reg_4670(3 downto 0) <= "1001";
    init_patch_addr_10_reg_4675(3 downto 0) <= "1010";
    init_patch_addr_11_reg_4680(3 downto 0) <= "1011";
    init_patch_addr_12_reg_4685(3 downto 0) <= "1100";
    init_patch_addr_13_reg_4690(3 downto 0) <= "1101";
    init_patch_addr_14_reg_4695(3 downto 0) <= "1110";
    init_patch_addr_15_reg_4700(3 downto 0) <= "1111";
    select_ln893_1_reg_4765(10 downto 1) <= "0111111111";
    shl_ln3_reg_4839(12 downto 0) <= "0000000000000";
    select_ln893_reg_4997(10 downto 1) <= "0111111111";
    shl_ln2_reg_5064(12 downto 0) <= "0000000000000";
    shl_ln1_reg_5128(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state10, leftRight_read_read_fu_342_p2, icmp_ln874_fu_1475_p2, grp_fu_951_p2, ap_CS_fsm_state11, icmp_ln874_1_fu_1487_p2, ap_CS_fsm_state16, icmp_ln878_fu_1806_p2, ap_CS_fsm_state29, icmp_ln886_fu_2885_p2, ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_951_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1475_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (((icmp_ln874_fu_1475_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1)) or ((grp_fu_951_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_1_fu_1487_p2 = ap_const_lv1_0) and (grp_fu_951_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln878_fu_1806_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1461_fu_1816_p2 <= std_logic_vector(unsigned(ret_51_fu_1789_p1) + unsigned(ap_const_lv12_FF1));
    add_ln428_10_fu_4188_p2 <= std_logic_vector(unsigned(shl_ln428_10_fu_4180_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_11_fu_4216_p2 <= std_logic_vector(unsigned(shl_ln428_11_fu_4208_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_12_fu_4244_p2 <= std_logic_vector(unsigned(shl_ln428_12_fu_4236_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_13_fu_4272_p2 <= std_logic_vector(unsigned(shl_ln428_13_fu_4264_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_14_fu_4300_p2 <= std_logic_vector(unsigned(shl_ln428_14_fu_4292_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_15_fu_4322_p2 <= std_logic_vector(unsigned(shl_ln428_15_fu_4315_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_16_fu_3029_p2 <= std_logic_vector(unsigned(empty_fu_2988_p1) + unsigned(ap_const_lv9_1F1));
    add_ln428_17_fu_3078_p2 <= std_logic_vector(unsigned(empty_fu_2988_p1) + unsigned(ap_const_lv9_1F2));
    add_ln428_18_fu_3851_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F3));
    add_ln428_19_fu_3897_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F4));
    add_ln428_1_fu_3062_p2 <= std_logic_vector(unsigned(shl_ln428_2_fu_3054_p3) + unsigned(shl_ln1_fu_2998_p3));
    add_ln428_20_fu_3953_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F5));
    add_ln428_21_fu_3999_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F6));
    add_ln428_22_fu_4055_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F7));
    add_ln428_23_fu_4101_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F8));
    add_ln428_24_fu_4347_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1F9));
    add_ln428_25_fu_4364_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FA));
    add_ln428_26_fu_4391_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FB));
    add_ln428_27_fu_4408_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FC));
    add_ln428_28_fu_4435_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FD));
    add_ln428_29_fu_4452_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FE));
    add_ln428_2_fu_3836_p2 <= std_logic_vector(unsigned(shl_ln428_3_fu_3828_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_30_fu_4479_p2 <= std_logic_vector(unsigned(empty_reg_5110) + unsigned(ap_const_lv9_1FF));
    add_ln428_3_fu_3882_p2 <= std_logic_vector(unsigned(shl_ln428_4_fu_3874_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_4_fu_3938_p2 <= std_logic_vector(unsigned(shl_ln428_5_fu_3930_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_5_fu_3984_p2 <= std_logic_vector(unsigned(shl_ln428_6_fu_3976_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_6_fu_4040_p2 <= std_logic_vector(unsigned(shl_ln428_7_fu_4032_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_7_fu_4086_p2 <= std_logic_vector(unsigned(shl_ln428_8_fu_4078_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_8_fu_4132_p2 <= std_logic_vector(unsigned(shl_ln428_9_fu_4124_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_9_fu_4160_p2 <= std_logic_vector(unsigned(shl_ln428_s_fu_4152_p3) + unsigned(shl_ln1_reg_5128));
    add_ln428_fu_3013_p2 <= std_logic_vector(unsigned(shl_ln428_1_fu_3005_p3) + unsigned(shl_ln1_fu_2998_p3));
    add_ln436_10_fu_3472_p2 <= std_logic_vector(unsigned(shl_ln436_10_fu_3464_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_11_fu_3500_p2 <= std_logic_vector(unsigned(shl_ln436_11_fu_3492_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_12_fu_3528_p2 <= std_logic_vector(unsigned(shl_ln436_12_fu_3520_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_13_fu_3556_p2 <= std_logic_vector(unsigned(shl_ln436_13_fu_3548_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_14_fu_3584_p2 <= std_logic_vector(unsigned(shl_ln436_14_fu_3576_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_15_fu_3612_p2 <= std_logic_vector(unsigned(shl_ln436_15_fu_3604_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_16_fu_2969_p2 <= std_logic_vector(unsigned(trunc_ln436_fu_2922_p1) + unsigned(ap_const_lv9_1));
    add_ln436_17_fu_3135_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_2));
    add_ln436_18_fu_3181_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_3));
    add_ln436_19_fu_3237_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_4));
    add_ln436_1_fu_2953_p2 <= std_logic_vector(unsigned(shl_ln436_2_fu_2945_p3) + unsigned(shl_ln2_fu_2891_p3));
    add_ln436_20_fu_3283_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_5));
    add_ln436_21_fu_3339_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_6));
    add_ln436_22_fu_3385_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_7));
    add_ln436_23_fu_3637_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_8));
    add_ln436_24_fu_3654_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_9));
    add_ln436_25_fu_3681_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_A));
    add_ln436_26_fu_3698_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_B));
    add_ln436_27_fu_3725_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_C));
    add_ln436_28_fu_3742_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_D));
    add_ln436_29_fu_3769_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_E));
    add_ln436_2_fu_3120_p2 <= std_logic_vector(unsigned(shl_ln436_3_fu_3112_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_30_fu_3786_p2 <= std_logic_vector(unsigned(trunc_ln436_reg_5082) + unsigned(ap_const_lv9_F));
    add_ln436_3_fu_3166_p2 <= std_logic_vector(unsigned(shl_ln436_4_fu_3158_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_4_fu_3222_p2 <= std_logic_vector(unsigned(shl_ln436_5_fu_3214_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_5_fu_3268_p2 <= std_logic_vector(unsigned(shl_ln436_6_fu_3260_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_6_fu_3324_p2 <= std_logic_vector(unsigned(shl_ln436_7_fu_3316_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_7_fu_3370_p2 <= std_logic_vector(unsigned(shl_ln436_8_fu_3362_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_8_fu_3416_p2 <= std_logic_vector(unsigned(shl_ln436_9_fu_3408_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_9_fu_3444_p2 <= std_logic_vector(unsigned(shl_ln436_s_fu_3436_p3) + unsigned(shl_ln2_reg_5064));
    add_ln436_fu_2906_p2 <= std_logic_vector(unsigned(shl_ln436_1_fu_2898_p3) + unsigned(shl_ln2_fu_2891_p3));
    add_ln446_fu_1481_p2 <= std_logic_vector(unsigned(num_points_q0) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln453_fu_1729_p2 <= std_logic_vector(unsigned(shl_ln453_1_fu_1721_p3) + unsigned(shl_ln_fu_1711_p3));
    add_ln475_10_fu_2296_p2 <= std_logic_vector(unsigned(shl_ln475_10_fu_2288_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_11_fu_2324_p2 <= std_logic_vector(unsigned(shl_ln475_11_fu_2316_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_12_fu_2352_p2 <= std_logic_vector(unsigned(shl_ln475_12_fu_2344_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_13_fu_2380_p2 <= std_logic_vector(unsigned(shl_ln475_13_fu_2372_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_14_fu_2408_p2 <= std_logic_vector(unsigned(shl_ln475_14_fu_2400_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_15_fu_2430_p2 <= std_logic_vector(unsigned(shl_ln475_15_fu_2423_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_16_fu_1853_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1812_p1) + unsigned(ap_const_lv9_1F1));
    add_ln475_17_fu_1902_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1812_p1) + unsigned(ap_const_lv9_1F2));
    add_ln475_18_fu_1959_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F3));
    add_ln475_19_fu_2005_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F4));
    add_ln475_1_fu_1886_p2 <= std_logic_vector(unsigned(shl_ln475_2_fu_1878_p3) + unsigned(shl_ln3_fu_1822_p3));
    add_ln475_20_fu_2061_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F5));
    add_ln475_21_fu_2107_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F6));
    add_ln475_22_fu_2163_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F7));
    add_ln475_23_fu_2209_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F8));
    add_ln475_24_fu_2455_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1F9));
    add_ln475_25_fu_2472_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FA));
    add_ln475_26_fu_2499_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FB));
    add_ln475_27_fu_2516_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FC));
    add_ln475_28_fu_2543_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FD));
    add_ln475_29_fu_2560_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FE));
    add_ln475_2_fu_1944_p2 <= std_logic_vector(unsigned(shl_ln475_3_fu_1936_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_30_fu_2587_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4821) + unsigned(ap_const_lv9_1FF));
    add_ln475_3_fu_1990_p2 <= std_logic_vector(unsigned(shl_ln475_4_fu_1982_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_4_fu_2046_p2 <= std_logic_vector(unsigned(shl_ln475_5_fu_2038_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_5_fu_2092_p2 <= std_logic_vector(unsigned(shl_ln475_6_fu_2084_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_6_fu_2148_p2 <= std_logic_vector(unsigned(shl_ln475_7_fu_2140_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_7_fu_2194_p2 <= std_logic_vector(unsigned(shl_ln475_8_fu_2186_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_8_fu_2240_p2 <= std_logic_vector(unsigned(shl_ln475_9_fu_2232_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_9_fu_2268_p2 <= std_logic_vector(unsigned(shl_ln475_s_fu_2260_p3) + unsigned(shl_ln3_reg_4839));
    add_ln475_fu_1837_p2 <= std_logic_vector(unsigned(shl_ln475_1_fu_1829_p3) + unsigned(shl_ln3_fu_1822_p3));
    add_ln915_1_fu_1666_p2 <= std_logic_vector(unsigned(sub_ln915_1_fu_1661_p2) + unsigned(select_ln893_1_reg_4765));
    add_ln915_fu_2799_p2 <= std_logic_vector(unsigned(sub_ln915_fu_2794_p2) + unsigned(select_ln893_reg_4997));
    and_ln1505_fu_2838_p2 <= (or_ln1505_fu_2834_p2 and grp_fu_942_p2);
    and_ln1506_fu_1705_p2 <= (or_ln1506_fu_1701_p2 and grp_fu_942_p2);
    and_ln899_1_fu_2683_p2 <= (xor_ln899_fu_2677_p2 and grp_fu_1033_p3);
    and_ln899_2_fu_1524_p2 <= (reg_989 and or_ln899_fu_1518_p2);
    and_ln899_3_fu_1550_p2 <= (xor_ln899_1_fu_1544_p2 and grp_fu_1033_p3);
    and_ln899_fu_2657_p2 <= (reg_989 and or_ln899_2_fu_2651_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state9_on_subcall_done_assign_proc : process(ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready, ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready and ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_lhs_5_phi_fu_899_p8_assign_proc : process(icmp_ln874_1_reg_4732, icmp_ln885_1_reg_4736, and_ln1506_reg_4785, start_index_V_2_reg_4794, ap_CS_fsm_state16, lhs_5_reg_896)
    begin
        if (((icmp_ln885_1_reg_4736 = ap_const_lv1_0) and (icmp_ln874_1_reg_4732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = and_ln1506_reg_4785))) then 
            ap_phi_mux_lhs_5_phi_fu_899_p8 <= start_index_V_2_reg_4794;
        else 
            ap_phi_mux_lhs_5_phi_fu_899_p8 <= lhs_5_reg_896;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done <= (grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_done);
    ap_sync_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready <= (grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_ready);
    bitcast_ln734_1_fu_1690_p1 <= p_Result_17_fu_1678_p5;
    bitcast_ln734_fu_2823_p1 <= p_Result_13_fu_2811_p5;
    empty_fu_2988_p0 <= right_bound_V_fu_320;
    empty_fu_2988_p1 <= empty_fu_2988_p0(9 - 1 downto 0);
    get_radiiradii_address0 <= zext_ln112_fu_1063_p1(3 - 1 downto 0);

    get_radiiradii_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_radiiradii_ce0 <= ap_const_logic_1;
        else 
            get_radiiradii_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1005_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(grp_fu_997_p3));
    grp_fu_1011_p2 <= std_logic_vector(unsigned(grp_fu_1005_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    grp_fu_1017_p4 <= grp_fu_1011_p2(31 downto 1);
    grp_fu_1027_p2 <= "1" when (signed(grp_fu_1017_p4) > signed(ap_const_lv31_0)) else "0";
    grp_fu_1033_p3 <= reg_989(to_integer(unsigned(grp_fu_1011_p2)) downto to_integer(unsigned(grp_fu_1011_p2))) when (to_integer(unsigned(grp_fu_1011_p2))>= 0 and to_integer(unsigned(grp_fu_1011_p2))<=31) else "-";
    grp_fu_1041_p2 <= "1" when (signed(grp_fu_1011_p2) > signed(ap_const_lv32_0)) else "0";
    grp_fu_1051_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(reg_1047));
    grp_fu_1057_p2 <= std_logic_vector(unsigned(reg_1047) + unsigned(ap_const_lv32_FFFFFFCA));
    grp_fu_1163_p1 <= ap_const_lv185_lc_2(108 - 1 downto 0);

    grp_fu_942_opcode_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_942_opcode <= ap_const_lv5_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_942_opcode <= ap_const_lv5_4;
        else 
            grp_fu_942_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_942_p0_assign_proc : process(bitcast_ln734_1_fu_1690_p1, ap_CS_fsm_state14, bitcast_ln734_fu_2823_p1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_942_p0 <= bitcast_ln734_fu_2823_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_942_p0 <= bitcast_ln734_1_fu_1690_p1;
        else 
            grp_fu_942_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_942_p1_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_942_p1 <= ap_const_lv64_3EE4F8B588E368F1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_942_p1 <= ap_const_lv64_BEE4F8B588E368F1;
        else 
            grp_fu_942_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_951_p2 <= "1" when (start_value_V_fu_312 = ap_const_lv32_0) else "0";
    grp_fu_957_p3 <= start_value_V_fu_312(31 downto 31);
    grp_fu_965_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(start_value_V_fu_312));
    grp_fu_971_p3 <= 
        grp_fu_965_p2 when (grp_fu_957_p3(0) = '1') else 
        start_value_V_fu_312;
    
    grp_fu_979_p4_proc : process(grp_fu_971_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable grp_fu_979_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := grp_fu_971_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for grp_fu_979_p4_i in 0 to 32-1 loop
                v0_cpy(grp_fu_979_p4_i) := grp_fu_971_p3(32-1-grp_fu_979_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_979_p4 <= resvalue(32-1 downto 0);
    end process;

    
    grp_fu_997_p3_proc : process(reg_993)
    begin
        grp_fu_997_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if reg_993(i) = '1' then
                grp_fu_997_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;


    grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_continue_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_continue <= ap_const_logic_1;
        else 
            grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_ap_start_reg;
    icmp_ln1505_1_fu_2785_p2 <= "1" when (trunc_ln_fu_2775_p4 = ap_const_lv52_0) else "0";
    icmp_ln1505_fu_2828_p2 <= "0" when (add_ln915_fu_2799_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln1506_1_fu_1652_p2 <= "1" when (trunc_ln1_fu_1642_p4 = ap_const_lv52_0) else "0";
    icmp_ln1506_fu_1695_p2 <= "0" when (add_ln915_1_fu_1666_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln874_1_fu_1487_p2 <= "1" when (start_index_V_3_fu_308 = add_ln446_fu_1481_p2) else "0";
    icmp_ln874_fu_1475_p2 <= "1" when (start_index_V_3_fu_308 = ap_const_lv32_0) else "0";
    icmp_ln878_fu_1806_p2 <= "1" when (signed(ret_36_fu_1793_p2) < signed(sext_ln878_fu_1802_p1)) else "0";
    icmp_ln886_fu_2885_p2 <= "1" when (signed(ret_fu_2862_p2) > signed(ret_1_fu_2879_p2)) else "0";
    icmp_ln899_1_fu_1530_p2 <= "0" when (and_ln899_2_fu_1524_p2 = ap_const_lv32_0) else "1";
    icmp_ln899_fu_2663_p2 <= "0" when (and_ln899_fu_2657_p2 = ap_const_lv32_0) else "1";

    init_patch_address0_assign_proc : process(init_patch_addr_1_reg_4630, init_patch_addr_3_reg_4640, init_patch_addr_5_reg_4650, init_patch_addr_7_reg_4660, init_patch_addr_9_reg_4670, init_patch_addr_11_reg_4680, init_patch_addr_13_reg_4690, init_patch_addr_15_reg_4700, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            init_patch_address0 <= init_patch_addr_15_reg_4700;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_address0 <= init_patch_addr_13_reg_4690;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_address0 <= init_patch_addr_11_reg_4680;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_address0 <= init_patch_addr_9_reg_4670;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_address0 <= init_patch_addr_7_reg_4660;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_address0 <= init_patch_addr_5_reg_4650;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_address0 <= init_patch_addr_3_reg_4640;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_address0 <= init_patch_addr_1_reg_4630;
        else 
            init_patch_address0 <= "XXXXXXX";
        end if; 
    end process;


    init_patch_address1_assign_proc : process(init_patch_addr_reg_4625, init_patch_addr_2_reg_4635, init_patch_addr_4_reg_4645, init_patch_addr_6_reg_4655, init_patch_addr_8_reg_4665, init_patch_addr_10_reg_4675, init_patch_addr_12_reg_4685, init_patch_addr_14_reg_4695, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            init_patch_address1 <= init_patch_addr_14_reg_4695;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_address1 <= init_patch_addr_12_reg_4685;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_address1 <= init_patch_addr_10_reg_4675;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_address1 <= init_patch_addr_8_reg_4665;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_address1 <= init_patch_addr_6_reg_4655;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_address1 <= init_patch_addr_4_reg_4645;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_address1 <= init_patch_addr_2_reg_4635;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_address1 <= init_patch_addr_reg_4625;
        else 
            init_patch_address1 <= "XXXXXXX";
        end if; 
    end process;


    init_patch_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_ce0 <= ap_const_logic_1;
        else 
            init_patch_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_ce1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_ce1 <= ap_const_logic_1;
        else 
            init_patch_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, trunc_ln475_1_fu_1926_p1, trunc_ln475_3_fu_2028_p1, trunc_ln475_5_fu_2130_p1, trunc_ln475_7_fu_2450_p1, trunc_ln475_9_fu_2494_p1, trunc_ln475_11_fu_2538_p1, trunc_ln475_13_fu_2582_p1, ap_CS_fsm_state24, trunc_ln475_15_fu_2620_p1, trunc_ln436_2_fu_3102_p1, trunc_ln436_4_fu_3204_p1, trunc_ln436_6_fu_3306_p1, trunc_ln436_8_fu_3632_p1, trunc_ln436_10_fu_3676_p1, trunc_ln436_12_fu_3720_p1, trunc_ln436_14_fu_3764_p1, ap_CS_fsm_state37, trunc_ln436_16_fu_3808_p1, trunc_ln428_1_fu_3818_p1, trunc_ln428_3_fu_3920_p1, trunc_ln428_5_fu_4022_p1, trunc_ln428_7_fu_4342_p1, trunc_ln428_9_fu_4386_p1, trunc_ln428_11_fu_4430_p1, trunc_ln428_13_fu_4474_p1, ap_CS_fsm_state45, trunc_ln428_15_fu_4512_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_d0 <= trunc_ln428_15_fu_4512_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_d0 <= trunc_ln428_13_fu_4474_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_d0 <= trunc_ln428_11_fu_4430_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_d0 <= trunc_ln428_9_fu_4386_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_d0 <= trunc_ln428_7_fu_4342_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            init_patch_d0 <= trunc_ln428_5_fu_4022_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            init_patch_d0 <= trunc_ln428_3_fu_3920_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            init_patch_d0 <= trunc_ln428_1_fu_3818_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_d0 <= trunc_ln436_16_fu_3808_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_d0 <= trunc_ln436_14_fu_3764_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_d0 <= trunc_ln436_12_fu_3720_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_d0 <= trunc_ln436_10_fu_3676_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_d0 <= trunc_ln436_8_fu_3632_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            init_patch_d0 <= trunc_ln436_6_fu_3306_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            init_patch_d0 <= trunc_ln436_4_fu_3204_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            init_patch_d0 <= trunc_ln436_2_fu_3102_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_d0 <= trunc_ln475_15_fu_2620_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_d0 <= trunc_ln475_13_fu_2582_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_d0 <= trunc_ln475_11_fu_2538_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_d0 <= trunc_ln475_9_fu_2494_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_d0 <= trunc_ln475_7_fu_2450_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_d0 <= trunc_ln475_5_fu_2130_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_d0 <= trunc_ln475_3_fu_2028_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_d0 <= trunc_ln475_1_fu_1926_p1;
        else 
            init_patch_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_d1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, trunc_ln475_fu_1921_p1, trunc_ln475_2_fu_2023_p1, trunc_ln475_4_fu_2125_p1, trunc_ln475_6_fu_2445_p1, trunc_ln475_8_fu_2489_p1, trunc_ln475_10_fu_2533_p1, trunc_ln475_12_fu_2577_p1, ap_CS_fsm_state24, trunc_ln475_14_fu_2615_p1, trunc_ln436_1_fu_3097_p1, trunc_ln436_3_fu_3199_p1, trunc_ln436_5_fu_3301_p1, trunc_ln436_7_fu_3627_p1, trunc_ln436_9_fu_3671_p1, trunc_ln436_11_fu_3715_p1, trunc_ln436_13_fu_3759_p1, ap_CS_fsm_state37, trunc_ln436_15_fu_3803_p1, trunc_ln428_fu_3813_p1, trunc_ln428_2_fu_3915_p1, trunc_ln428_4_fu_4017_p1, trunc_ln428_6_fu_4337_p1, trunc_ln428_8_fu_4381_p1, trunc_ln428_10_fu_4425_p1, trunc_ln428_12_fu_4469_p1, ap_CS_fsm_state45, trunc_ln428_14_fu_4507_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_d1 <= trunc_ln428_14_fu_4507_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_d1 <= trunc_ln428_12_fu_4469_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_d1 <= trunc_ln428_10_fu_4425_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_d1 <= trunc_ln428_8_fu_4381_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_d1 <= trunc_ln428_6_fu_4337_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            init_patch_d1 <= trunc_ln428_4_fu_4017_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            init_patch_d1 <= trunc_ln428_2_fu_3915_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            init_patch_d1 <= trunc_ln428_fu_3813_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_d1 <= trunc_ln436_15_fu_3803_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_d1 <= trunc_ln436_13_fu_3759_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_d1 <= trunc_ln436_11_fu_3715_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_d1 <= trunc_ln436_9_fu_3671_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_d1 <= trunc_ln436_7_fu_3627_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            init_patch_d1 <= trunc_ln436_5_fu_3301_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            init_patch_d1 <= trunc_ln436_3_fu_3199_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            init_patch_d1 <= trunc_ln436_1_fu_3097_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_d1 <= trunc_ln475_14_fu_2615_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_d1 <= trunc_ln475_12_fu_2577_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_d1 <= trunc_ln475_10_fu_2533_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_d1 <= trunc_ln475_8_fu_2489_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_d1 <= trunc_ln475_6_fu_2445_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_d1 <= trunc_ln475_4_fu_2125_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_d1 <= trunc_ln475_2_fu_2023_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_d1 <= trunc_ln475_fu_1921_p1;
        else 
            init_patch_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_we0_assign_proc : process(leftRight_read_read_fu_342_p2, icmp_ln878_reg_4817, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln878_reg_4817 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_0)))) then 
            init_patch_we0 <= ap_const_logic_1;
        else 
            init_patch_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_we1_assign_proc : process(leftRight_read_read_fu_342_p2, icmp_ln878_reg_4817, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln878_reg_4817 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (leftRight_read_read_fu_342_p2 = ap_const_lv1_0)))) then 
            init_patch_we1 <= ap_const_logic_1;
        else 
            init_patch_we1 <= ap_const_logic_0;
        end if; 
    end process;

    leftRight_read_read_fu_342_p2 <= leftRight;
    lhs_7_fu_2992_p2 <= std_logic_vector(unsigned(ret_19_fu_2875_p1) + unsigned(ap_const_lv12_FF1));
    lshr_ln1_fu_3019_p4 <= add_ln428_fu_3013_p2(15 downto 13);
    lshr_ln2_fu_2912_p4 <= add_ln436_fu_2906_p2(15 downto 13);
    lshr_ln3_fu_1843_p4 <= add_ln475_fu_1837_p2(15 downto 13);
    lshr_ln428_1_fu_3068_p4 <= add_ln428_1_fu_3062_p2(15 downto 13);
    lshr_ln428_2_fu_3841_p4 <= add_ln428_2_fu_3836_p2(15 downto 13);
    lshr_ln428_3_fu_3887_p4 <= add_ln428_3_fu_3882_p2(15 downto 13);
    lshr_ln428_4_fu_3943_p4 <= add_ln428_4_fu_3938_p2(15 downto 13);
    lshr_ln428_5_fu_3989_p4 <= add_ln428_5_fu_3984_p2(15 downto 13);
    lshr_ln428_6_fu_4045_p4 <= add_ln428_6_fu_4040_p2(15 downto 13);
    lshr_ln428_7_fu_4091_p4 <= add_ln428_7_fu_4086_p2(15 downto 13);
    lshr_ln436_1_fu_2959_p4 <= add_ln436_1_fu_2953_p2(15 downto 13);
    lshr_ln436_2_fu_3125_p4 <= add_ln436_2_fu_3120_p2(15 downto 13);
    lshr_ln436_3_fu_3171_p4 <= add_ln436_3_fu_3166_p2(15 downto 13);
    lshr_ln436_4_fu_3227_p4 <= add_ln436_4_fu_3222_p2(15 downto 13);
    lshr_ln436_5_fu_3273_p4 <= add_ln436_5_fu_3268_p2(15 downto 13);
    lshr_ln436_6_fu_3329_p4 <= add_ln436_6_fu_3324_p2(15 downto 13);
    lshr_ln436_7_fu_3375_p4 <= add_ln436_7_fu_3370_p2(15 downto 13);
    lshr_ln475_1_fu_1892_p4 <= add_ln475_1_fu_1886_p2(15 downto 13);
    lshr_ln475_2_fu_1949_p4 <= add_ln475_2_fu_1944_p2(15 downto 13);
    lshr_ln475_3_fu_1995_p4 <= add_ln475_3_fu_1990_p2(15 downto 13);
    lshr_ln475_4_fu_2051_p4 <= add_ln475_4_fu_2046_p2(15 downto 13);
    lshr_ln475_5_fu_2097_p4 <= add_ln475_5_fu_2092_p2(15 downto 13);
    lshr_ln475_6_fu_2153_p4 <= add_ln475_6_fu_2148_p2(15 downto 13);
    lshr_ln475_7_fu_2199_p4 <= add_ln475_7_fu_2194_p2(15 downto 13);
    lshr_ln897_1_fu_1506_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln897_1_fu_1502_p1(31-1 downto 0)))));
    lshr_ln897_fu_2639_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln897_fu_2635_p1(31-1 downto 0)))));
    lshr_ln908_1_fu_1594_p2 <= std_logic_vector(shift_right(unsigned(zext_ln909_3_fu_1576_p1),to_integer(unsigned('0' & zext_ln908_1_fu_1590_p1(31-1 downto 0)))));
    lshr_ln908_fu_2727_p2 <= std_logic_vector(shift_right(unsigned(zext_ln909_2_fu_2709_p1),to_integer(unsigned('0' & zext_ln908_fu_2723_p1(31-1 downto 0)))));
    lshr_ln_fu_1735_p4 <= add_ln453_fu_1729_p2(15 downto 13);
    m_3_fu_2743_p2 <= std_logic_vector(unsigned(m_fu_2733_p3) + unsigned(zext_ln911_fu_2740_p1));
    m_7_fu_1600_p3 <= 
        lshr_ln908_1_fu_1594_p2 when (icmp_ln908_1_reg_4745(0) = '1') else 
        shl_ln909_1_fu_1584_p2;
    m_8_fu_1610_p2 <= std_logic_vector(unsigned(m_7_fu_1600_p3) + unsigned(zext_ln911_1_fu_1607_p1));
    m_fu_2733_p3 <= 
        lshr_ln908_fu_2727_p2 when (icmp_ln908_reg_4977(0) = '1') else 
        shl_ln909_fu_2717_p2;

    num_points_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln112_reg_4558, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            num_points_address0 <= zext_ln112_reg_4558(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_address0 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address0;
        else 
            num_points_address0 <= "XXX";
        end if; 
    end process;

    num_points_address1 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_address1;

    num_points_ce0_assign_proc : process(ap_CS_fsm_state10, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            num_points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce0;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    num_points_ce1_assign_proc : process(grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_num_points_ce1;
        else 
            num_points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1505_fu_2834_p2 <= (icmp_ln1505_reg_5012 or icmp_ln1505_1_reg_5002);
    or_ln1506_fu_1701_p2 <= (icmp_ln1506_reg_4780 or icmp_ln1506_1_reg_4770);
    or_ln428_10_fu_1457_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_F);
    or_ln428_1_fu_1322_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_6);
    or_ln428_2_fu_1337_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_7);
    or_ln428_3_fu_1352_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_8);
    or_ln428_4_fu_1367_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_9);
    or_ln428_5_fu_1382_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_A);
    or_ln428_6_fu_1397_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_B);
    or_ln428_7_fu_1412_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_C);
    or_ln428_8_fu_1427_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_D);
    or_ln428_9_fu_1442_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_E);
    or_ln428_fu_1307_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_5);
    or_ln436_1_fu_1262_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_2);
    or_ln436_2_fu_1277_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_3);
    or_ln436_3_fu_1292_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_4);
    or_ln436_fu_1247_p2 <= (tmp_fu_1235_p3 or ap_const_lv7_1);
    or_ln899_2_fu_2651_p2 <= (shl_ln899_fu_2645_p2 or lshr_ln897_fu_2639_p2);
    or_ln899_fu_1518_p2 <= (shl_ln899_1_fu_1512_p2 or lshr_ln897_1_fu_1506_p2);
    p_Result_13_fu_2811_p5 <= (tmp_3_fu_2804_p3 & zext_ln912_fu_2791_p1(51 downto 0));
    p_Result_17_fu_1678_p5 <= (tmp_4_fu_1671_p3 & zext_ln912_1_fu_1658_p1(51 downto 0));
    p_Result_6_fu_1626_p3 <= m_8_fu_1610_p2(54 downto 54);
    p_Result_s_fu_2759_p3 <= m_3_fu_2743_p2(54 downto 54);

    points_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2885_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address0, ap_CS_fsm_state9, zext_ln453_fu_1756_p1, zext_ln475_1_fu_1916_p1, zext_ln475_2_fu_1972_p1, zext_ln475_4_fu_2074_p1, zext_ln475_6_fu_2176_p1, zext_ln475_8_fu_2467_p1, zext_ln475_10_fu_2511_p1, zext_ln475_12_fu_2555_p1, zext_ln475_14_fu_2599_p1, zext_ln436_1_fu_2934_p1, zext_ln428_fu_3043_p1, zext_ln436_3_fu_3148_p1, zext_ln436_5_fu_3250_p1, zext_ln436_7_fu_3352_p1, zext_ln436_9_fu_3649_p1, zext_ln436_11_fu_3693_p1, zext_ln436_13_fu_3737_p1, zext_ln436_15_fu_3781_p1, zext_ln428_2_fu_3864_p1, zext_ln428_4_fu_3966_p1, zext_ln428_6_fu_4068_p1, zext_ln428_8_fu_4359_p1, zext_ln428_10_fu_4403_p1, zext_ln428_12_fu_4447_p1, zext_ln428_14_fu_4491_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            points_address0 <= zext_ln428_14_fu_4491_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            points_address0 <= zext_ln428_12_fu_4447_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            points_address0 <= zext_ln428_10_fu_4403_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            points_address0 <= zext_ln428_8_fu_4359_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            points_address0 <= zext_ln428_6_fu_4068_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            points_address0 <= zext_ln428_4_fu_3966_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            points_address0 <= zext_ln428_2_fu_3864_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            points_address0 <= zext_ln436_15_fu_3781_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            points_address0 <= zext_ln436_13_fu_3737_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            points_address0 <= zext_ln436_11_fu_3693_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            points_address0 <= zext_ln436_9_fu_3649_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            points_address0 <= zext_ln436_7_fu_3352_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            points_address0 <= zext_ln436_5_fu_3250_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            points_address0 <= zext_ln436_3_fu_3148_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address0 <= zext_ln428_fu_3043_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2885_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address0 <= zext_ln436_1_fu_2934_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            points_address0 <= zext_ln475_14_fu_2599_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            points_address0 <= zext_ln475_12_fu_2555_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            points_address0 <= zext_ln475_10_fu_2511_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            points_address0 <= zext_ln475_8_fu_2467_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            points_address0 <= zext_ln475_6_fu_2176_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            points_address0 <= zext_ln475_4_fu_2074_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            points_address0 <= zext_ln475_2_fu_1972_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address0 <= zext_ln475_1_fu_1916_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            points_address0 <= zext_ln453_fu_1756_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address0 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address0;
        else 
            points_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_address1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2885_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address1, ap_CS_fsm_state9, zext_ln475_fu_1867_p1, zext_ln475_3_fu_2018_p1, zext_ln475_5_fu_2120_p1, zext_ln475_7_fu_2222_p1, zext_ln475_9_fu_2484_p1, zext_ln475_11_fu_2528_p1, zext_ln475_13_fu_2572_p1, zext_ln475_15_fu_2610_p1, zext_ln436_2_fu_2983_p1, zext_ln428_1_fu_3092_p1, zext_ln436_4_fu_3194_p1, zext_ln436_6_fu_3296_p1, zext_ln436_8_fu_3398_p1, zext_ln436_10_fu_3666_p1, zext_ln436_12_fu_3710_p1, zext_ln436_14_fu_3754_p1, zext_ln436_16_fu_3798_p1, zext_ln428_3_fu_3910_p1, zext_ln428_5_fu_4012_p1, zext_ln428_7_fu_4114_p1, zext_ln428_9_fu_4376_p1, zext_ln428_11_fu_4420_p1, zext_ln428_13_fu_4464_p1, zext_ln428_15_fu_4502_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            points_address1 <= zext_ln428_15_fu_4502_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            points_address1 <= zext_ln428_13_fu_4464_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            points_address1 <= zext_ln428_11_fu_4420_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            points_address1 <= zext_ln428_9_fu_4376_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            points_address1 <= zext_ln428_7_fu_4114_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            points_address1 <= zext_ln428_5_fu_4012_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            points_address1 <= zext_ln428_3_fu_3910_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            points_address1 <= zext_ln436_16_fu_3798_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            points_address1 <= zext_ln436_14_fu_3754_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            points_address1 <= zext_ln436_12_fu_3710_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            points_address1 <= zext_ln436_10_fu_3666_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            points_address1 <= zext_ln436_8_fu_3398_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            points_address1 <= zext_ln436_6_fu_3296_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            points_address1 <= zext_ln436_4_fu_3194_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address1 <= zext_ln428_1_fu_3092_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2885_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address1 <= zext_ln436_2_fu_2983_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            points_address1 <= zext_ln475_15_fu_2610_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            points_address1 <= zext_ln475_13_fu_2572_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            points_address1 <= zext_ln475_11_fu_2528_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            points_address1 <= zext_ln475_9_fu_2484_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            points_address1 <= zext_ln475_7_fu_2222_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            points_address1 <= zext_ln475_5_fu_2120_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            points_address1 <= zext_ln475_3_fu_2018_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address1 <= zext_ln475_fu_1867_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address1 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_address1;
        else 
            points_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2885_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln886_fu_2885_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce0;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_ce1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2885_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln886_fu_2885_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln886_fu_2885_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            points_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value9_fu_922_points_ce1;
        else 
            points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_fu_1138_p1 <= r_V_2_fu_1138_p10(25 - 1 downto 0);
    r_V_2_fu_1138_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_reg_4578),58));
    ret_10_fu_4027_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF7));
    ret_11_fu_4073_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF8));
    ret_12_fu_4119_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF9));
    ret_13_fu_4147_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFA));
    ret_14_fu_4175_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFB));
    ret_15_fu_4203_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFC));
    ret_16_fu_4231_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFD));
    ret_17_fu_4259_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFE));
    ret_18_fu_4287_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FFF));
    ret_19_fu_2875_p0 <= right_bound_V_fu_320;
    ret_19_fu_2875_p1 <= ret_19_fu_2875_p0(12 - 1 downto 0);
    ret_1_fu_2879_p2 <= std_logic_vector(signed(sext_ln215_1_fu_2871_p1) + signed(ap_const_lv33_1));
    ret_21_fu_2939_p2 <= std_logic_vector(unsigned(trunc_ln1346_fu_2858_p1) + unsigned(ap_const_lv12_1));
    ret_22_fu_3107_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_2));
    ret_23_fu_3153_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_3));
    ret_24_fu_3209_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_4));
    ret_25_fu_3255_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_5));
    ret_26_fu_3311_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_6));
    ret_27_fu_3357_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_7));
    ret_28_fu_3403_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_8));
    ret_29_fu_3431_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_9));
    ret_30_fu_3459_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_A));
    ret_31_fu_3487_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_B));
    ret_32_fu_3515_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_C));
    ret_33_fu_3543_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_D));
    ret_34_fu_3571_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_E));
    ret_35_fu_3599_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5025) + unsigned(ap_const_lv12_F));
    ret_36_fu_1793_p2 <= std_logic_vector(signed(sext_ln215_2_fu_1785_p1) + signed(ap_const_lv33_1FFFFFFF1));
    ret_37_fu_1872_p2 <= std_logic_vector(unsigned(ret_51_fu_1789_p1) + unsigned(ap_const_lv12_FF2));
    ret_38_fu_1931_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF3));
    ret_39_fu_1977_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF4));
    ret_40_fu_2033_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF5));
    ret_41_fu_2079_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF6));
    ret_42_fu_2135_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF7));
    ret_43_fu_2181_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF8));
    ret_44_fu_2227_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FF9));
    ret_45_fu_2255_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFA));
    ret_46_fu_2283_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFB));
    ret_47_fu_2311_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFC));
    ret_48_fu_2339_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFD));
    ret_49_fu_2367_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFE));
    ret_50_fu_2395_p2 <= std_logic_vector(unsigned(ret_51_reg_4799) + unsigned(ap_const_lv12_FFF));
    ret_51_fu_1789_p1 <= ap_phi_mux_lhs_5_phi_fu_899_p8(12 - 1 downto 0);
    ret_5_fu_3048_p2 <= std_logic_vector(unsigned(ret_19_fu_2875_p1) + unsigned(ap_const_lv12_FF2));
    ret_6_fu_3823_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF3));
    ret_7_fu_3869_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF4));
    ret_8_fu_3925_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF5));
    ret_9_fu_3971_p2 <= std_logic_vector(unsigned(ret_19_reg_5043) + unsigned(ap_const_lv12_FF6));
    ret_V_6_fu_1126_p2 <= std_logic_vector(unsigned(y_V_fu_1104_p3) + unsigned(ap_const_lv25_1B00000));
    ret_V_7_fu_1120_p2 <= std_logic_vector(signed(sext_ln703_fu_1112_p1) - signed(sext_ln703_2_fu_1116_p1));
    ret_V_fu_1218_p2 <= std_logic_vector(unsigned(select_ln1148_1_fu_1205_p3) + unsigned(rhs_fu_1211_p3));
    ret_fu_2862_p2 <= std_logic_vector(signed(sext_ln215_fu_2854_p1) + signed(ap_const_lv33_10));
    rhs_fu_1211_p1 <= p_read;
    rhs_fu_1211_p3 <= (rhs_fu_1211_p1 & ap_const_lv20_0);
    select_ln1148_1_fu_1205_p3 <= 
        sub_ln1148_1_fu_1199_p2 when (tmp_25_reg_4588(0) = '1') else 
        tmp_27_reg_4604;
    select_ln1148_fu_1193_p3 <= 
        tmp_26_fu_1184_p4 when (tmp_25_reg_4588(0) = '1') else 
        tmp_27_reg_4604;
    select_ln893_1_fu_1634_p3 <= 
        ap_const_lv11_3FF when (p_Result_6_fu_1626_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln893_fu_2767_p3 <= 
        ap_const_lv11_3FF when (p_Result_s_fu_2759_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln896_1_fu_1556_p3 <= 
        icmp_ln899_1_fu_1530_p2 when (grp_fu_1027_p2(0) = '1') else 
        grp_fu_1033_p3;
    select_ln896_fu_2689_p3 <= 
        icmp_ln899_fu_2663_p2 when (grp_fu_1027_p2(0) = '1') else 
        grp_fu_1033_p3;
    select_ln908_2_fu_1564_p3 <= 
        select_ln896_1_fu_1556_p3 when (grp_fu_1041_p2(0) = '1') else 
        and_ln899_3_fu_1550_p2;
    select_ln908_fu_2697_p3 <= 
        select_ln896_fu_2689_p3 when (grp_fu_1041_p2(0) = '1') else 
        and_ln899_1_fu_2683_p2;
    sext_ln215_1_fu_2871_p0 <= right_bound_V_fu_320;
        sext_ln215_1_fu_2871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_1_fu_2871_p0),33));

        sext_ln215_2_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_lhs_5_phi_fu_899_p8),33));

        sext_ln215_fu_2854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_reg_909),33));

    sext_ln703_2_fu_1116_p0 <= p_read;
        sext_ln703_2_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_2_fu_1116_p0),33));

        sext_ln703_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_top),33));

        sext_ln878_fu_1802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(left_bound_V_fu_316),33));

    shl_ln1_fu_2998_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln2_fu_2891_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln3_fu_1822_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln428_10_fu_4180_p3 <= (ret_14_fu_4175_p2 & ap_const_lv4_0);
    shl_ln428_11_fu_4208_p3 <= (ret_15_fu_4203_p2 & ap_const_lv4_0);
    shl_ln428_12_fu_4236_p3 <= (ret_16_fu_4231_p2 & ap_const_lv4_0);
    shl_ln428_13_fu_4264_p3 <= (ret_17_fu_4259_p2 & ap_const_lv4_0);
    shl_ln428_14_fu_4292_p3 <= (ret_18_fu_4287_p2 & ap_const_lv4_0);
    shl_ln428_15_fu_4315_p3 <= (ret_19_reg_5043 & ap_const_lv4_0);
    shl_ln428_1_fu_3005_p3 <= (lhs_7_fu_2992_p2 & ap_const_lv4_0);
    shl_ln428_2_fu_3054_p3 <= (ret_5_fu_3048_p2 & ap_const_lv4_0);
    shl_ln428_3_fu_3828_p3 <= (ret_6_fu_3823_p2 & ap_const_lv4_0);
    shl_ln428_4_fu_3874_p3 <= (ret_7_fu_3869_p2 & ap_const_lv4_0);
    shl_ln428_5_fu_3930_p3 <= (ret_8_fu_3925_p2 & ap_const_lv4_0);
    shl_ln428_6_fu_3976_p3 <= (ret_9_fu_3971_p2 & ap_const_lv4_0);
    shl_ln428_7_fu_4032_p3 <= (ret_10_fu_4027_p2 & ap_const_lv4_0);
    shl_ln428_8_fu_4078_p3 <= (ret_11_fu_4073_p2 & ap_const_lv4_0);
    shl_ln428_9_fu_4124_p3 <= (ret_12_fu_4119_p2 & ap_const_lv4_0);
    shl_ln428_s_fu_4152_p3 <= (ret_13_fu_4147_p2 & ap_const_lv4_0);
    shl_ln436_10_fu_3464_p3 <= (ret_30_fu_3459_p2 & ap_const_lv4_0);
    shl_ln436_11_fu_3492_p3 <= (ret_31_fu_3487_p2 & ap_const_lv4_0);
    shl_ln436_12_fu_3520_p3 <= (ret_32_fu_3515_p2 & ap_const_lv4_0);
    shl_ln436_13_fu_3548_p3 <= (ret_33_fu_3543_p2 & ap_const_lv4_0);
    shl_ln436_14_fu_3576_p3 <= (ret_34_fu_3571_p2 & ap_const_lv4_0);
    shl_ln436_15_fu_3604_p3 <= (ret_35_fu_3599_p2 & ap_const_lv4_0);
    shl_ln436_1_fu_2898_p3 <= (trunc_ln1346_fu_2858_p1 & ap_const_lv4_0);
    shl_ln436_2_fu_2945_p3 <= (ret_21_fu_2939_p2 & ap_const_lv4_0);
    shl_ln436_3_fu_3112_p3 <= (ret_22_fu_3107_p2 & ap_const_lv4_0);
    shl_ln436_4_fu_3158_p3 <= (ret_23_fu_3153_p2 & ap_const_lv4_0);
    shl_ln436_5_fu_3214_p3 <= (ret_24_fu_3209_p2 & ap_const_lv4_0);
    shl_ln436_6_fu_3260_p3 <= (ret_25_fu_3255_p2 & ap_const_lv4_0);
    shl_ln436_7_fu_3316_p3 <= (ret_26_fu_3311_p2 & ap_const_lv4_0);
    shl_ln436_8_fu_3362_p3 <= (ret_27_fu_3357_p2 & ap_const_lv4_0);
    shl_ln436_9_fu_3408_p3 <= (ret_28_fu_3403_p2 & ap_const_lv4_0);
    shl_ln436_s_fu_3436_p3 <= (ret_29_fu_3431_p2 & ap_const_lv4_0);
    shl_ln453_1_fu_1721_p3 <= (trunc_ln453_fu_1718_p1 & ap_const_lv4_0);
    shl_ln475_10_fu_2288_p3 <= (ret_46_fu_2283_p2 & ap_const_lv4_0);
    shl_ln475_11_fu_2316_p3 <= (ret_47_fu_2311_p2 & ap_const_lv4_0);
    shl_ln475_12_fu_2344_p3 <= (ret_48_fu_2339_p2 & ap_const_lv4_0);
    shl_ln475_13_fu_2372_p3 <= (ret_49_fu_2367_p2 & ap_const_lv4_0);
    shl_ln475_14_fu_2400_p3 <= (ret_50_fu_2395_p2 & ap_const_lv4_0);
    shl_ln475_15_fu_2423_p3 <= (ret_51_reg_4799 & ap_const_lv4_0);
    shl_ln475_1_fu_1829_p3 <= (add_ln1461_fu_1816_p2 & ap_const_lv4_0);
    shl_ln475_2_fu_1878_p3 <= (ret_37_fu_1872_p2 & ap_const_lv4_0);
    shl_ln475_3_fu_1936_p3 <= (ret_38_fu_1931_p2 & ap_const_lv4_0);
    shl_ln475_4_fu_1982_p3 <= (ret_39_fu_1977_p2 & ap_const_lv4_0);
    shl_ln475_5_fu_2038_p3 <= (ret_40_fu_2033_p2 & ap_const_lv4_0);
    shl_ln475_6_fu_2084_p3 <= (ret_41_fu_2079_p2 & ap_const_lv4_0);
    shl_ln475_7_fu_2140_p3 <= (ret_42_fu_2135_p2 & ap_const_lv4_0);
    shl_ln475_8_fu_2186_p3 <= (ret_43_fu_2181_p2 & ap_const_lv4_0);
    shl_ln475_9_fu_2232_p3 <= (ret_44_fu_2227_p2 & ap_const_lv4_0);
    shl_ln475_s_fu_2260_p3 <= (ret_45_fu_2255_p2 & ap_const_lv4_0);
    shl_ln899_1_fu_1512_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_1011_p2(31-1 downto 0)))));
    shl_ln899_fu_2645_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_1011_p2(31-1 downto 0)))));
    shl_ln909_1_fu_1584_p2 <= std_logic_vector(shift_left(unsigned(zext_ln909_3_fu_1576_p1),to_integer(unsigned('0' & zext_ln909_1_fu_1580_p1(31-1 downto 0)))));
    shl_ln909_fu_2717_p2 <= std_logic_vector(shift_left(unsigned(zext_ln909_2_fu_2709_p1),to_integer(unsigned('0' & zext_ln909_fu_2713_p1(31-1 downto 0)))));
    shl_ln_fu_1711_p3 <= (i_offset & ap_const_lv13_0);
    start_index_V_2_fu_1761_p2 <= std_logic_vector(unsigned(start_index_V_3_fu_308) + unsigned(ap_const_lv32_1));
    start_index_V_fu_2844_p2 <= std_logic_vector(unsigned(start_index_V_1_load_reg_4705) + unsigned(ap_const_lv32_FFFFFFFF));
    start_value_V_1_fu_1775_p2 <= std_logic_vector(unsigned(z_bits_fu_1771_p1) - unsigned(projectionToRow_V_reg_4615));
    sub_ln1148_1_fu_1199_p2 <= std_logic_vector(unsigned(ap_const_lv52_0) - unsigned(select_ln1148_fu_1193_p3));
    sub_ln1148_fu_1179_p2 <= std_logic_vector(unsigned(ap_const_lv185_lc_1) - unsigned(mul_ln1148_reg_4599));
    sub_ln897_1_fu_1496_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln897_1_fu_1492_p1));
    sub_ln897_fu_2629_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln897_fu_2625_p1));
    sub_ln915_1_fu_1661_p2 <= std_logic_vector(unsigned(ap_const_lv11_C) - unsigned(trunc_ln893_1_reg_4755));
    sub_ln915_fu_2794_p2 <= std_logic_vector(unsigned(ap_const_lv11_C) - unsigned(trunc_ln893_reg_4987));
    tmp_10_fu_1283_p3 <= (ap_const_lv57_0 & or_ln436_2_fu_1277_p2);
    tmp_11_fu_1298_p3 <= (ap_const_lv57_0 & or_ln436_3_fu_1292_p2);
    tmp_12_fu_1313_p3 <= (ap_const_lv57_0 & or_ln428_fu_1307_p2);
    tmp_13_fu_1328_p3 <= (ap_const_lv57_0 & or_ln428_1_fu_1322_p2);
    tmp_14_fu_1343_p3 <= (ap_const_lv57_0 & or_ln428_2_fu_1337_p2);
    tmp_15_fu_1358_p3 <= (ap_const_lv57_0 & or_ln428_3_fu_1352_p2);
    tmp_16_fu_1373_p3 <= (ap_const_lv57_0 & or_ln428_4_fu_1367_p2);
    tmp_17_fu_1388_p3 <= (ap_const_lv57_0 & or_ln428_5_fu_1382_p2);
    tmp_18_fu_1403_p3 <= (ap_const_lv57_0 & or_ln428_6_fu_1397_p2);
    tmp_19_fu_1418_p3 <= (ap_const_lv57_0 & or_ln428_7_fu_1412_p2);
    tmp_20_fu_1433_p3 <= (ap_const_lv57_0 & or_ln428_8_fu_1427_p2);
    tmp_21_fu_1448_p3 <= (ap_const_lv57_0 & or_ln428_9_fu_1442_p2);
    tmp_22_fu_1463_p3 <= (ap_const_lv57_0 & or_ln428_10_fu_1457_p2);
    tmp_24_fu_1152_p3 <= (r_V_2_reg_4583 & ap_const_lv20_0);
    tmp_26_fu_1184_p4 <= sub_ln1148_reg_4610(182 downto 131);
    tmp_28_fu_1748_p3 <= (lshr_ln_fu_1735_p4 & trunc_ln453_1_fu_1745_p1);
    tmp_30_fu_2669_p3 <= grp_fu_1011_p2(31 downto 31);
    tmp_31_fu_3035_p3 <= (lshr_ln1_fu_3019_p4 & add_ln428_16_fu_3029_p2);
    tmp_32_fu_3084_p3 <= (lshr_ln428_1_fu_3068_p4 & add_ln428_17_fu_3078_p2);
    tmp_34_fu_1536_p3 <= grp_fu_1011_p2(31 downto 31);
    tmp_35_fu_3856_p3 <= (lshr_ln428_2_fu_3841_p4 & add_ln428_18_fu_3851_p2);
    tmp_36_fu_3902_p3 <= (lshr_ln428_3_fu_3887_p4 & add_ln428_19_fu_3897_p2);
    tmp_37_fu_3958_p3 <= (lshr_ln428_4_fu_3943_p4 & add_ln428_20_fu_3953_p2);
    tmp_38_fu_4004_p3 <= (lshr_ln428_5_fu_3989_p4 & add_ln428_21_fu_3999_p2);
    tmp_39_fu_4060_p3 <= (lshr_ln428_6_fu_4045_p4 & add_ln428_22_fu_4055_p2);
    tmp_3_fu_2804_p3 <= (p_Result_10_reg_4727 & add_ln915_fu_2799_p2);
    tmp_40_fu_4106_p3 <= (lshr_ln428_7_fu_4091_p4 & add_ln428_23_fu_4101_p2);
    tmp_41_fu_4352_p3 <= (lshr_ln428_8_reg_5296 & add_ln428_24_fu_4347_p2);
    tmp_42_fu_4369_p3 <= (lshr_ln428_9_reg_5301 & add_ln428_25_fu_4364_p2);
    tmp_43_fu_4396_p3 <= (lshr_ln428_s_reg_5306 & add_ln428_26_fu_4391_p2);
    tmp_44_fu_4413_p3 <= (lshr_ln428_10_reg_5311 & add_ln428_27_fu_4408_p2);
    tmp_45_fu_4440_p3 <= (lshr_ln428_11_reg_5316 & add_ln428_28_fu_4435_p2);
    tmp_46_fu_4457_p3 <= (lshr_ln428_12_reg_5321 & add_ln428_29_fu_4452_p2);
    tmp_47_fu_4484_p3 <= (lshr_ln428_13_reg_5326 & add_ln428_30_fu_4479_p2);
    tmp_48_fu_4496_p3 <= (lshr_ln428_14_reg_5331 & empty_reg_5110);
    tmp_49_fu_2926_p3 <= (lshr_ln2_fu_2912_p4 & trunc_ln436_fu_2922_p1);
    tmp_4_fu_1671_p3 <= (p_Result_14_reg_4740 & add_ln915_1_fu_1666_p2);
    tmp_50_fu_2975_p3 <= (lshr_ln436_1_fu_2959_p4 & add_ln436_16_fu_2969_p2);
    tmp_51_fu_3140_p3 <= (lshr_ln436_2_fu_3125_p4 & add_ln436_17_fu_3135_p2);
    tmp_52_fu_3186_p3 <= (lshr_ln436_3_fu_3171_p4 & add_ln436_18_fu_3181_p2);
    tmp_53_fu_3242_p3 <= (lshr_ln436_4_fu_3227_p4 & add_ln436_19_fu_3237_p2);
    tmp_54_fu_3288_p3 <= (lshr_ln436_5_fu_3273_p4 & add_ln436_20_fu_3283_p2);
    tmp_55_fu_3344_p3 <= (lshr_ln436_6_fu_3329_p4 & add_ln436_21_fu_3339_p2);
    tmp_56_fu_3390_p3 <= (lshr_ln436_7_fu_3375_p4 & add_ln436_22_fu_3385_p2);
    tmp_57_fu_3642_p3 <= (lshr_ln436_8_reg_5186 & add_ln436_23_fu_3637_p2);
    tmp_58_fu_3659_p3 <= (lshr_ln436_9_reg_5191 & add_ln436_24_fu_3654_p2);
    tmp_59_fu_3686_p3 <= (lshr_ln436_s_reg_5196 & add_ln436_25_fu_3681_p2);
    tmp_60_fu_3703_p3 <= (lshr_ln436_10_reg_5201 & add_ln436_26_fu_3698_p2);
    tmp_61_fu_3730_p3 <= (lshr_ln436_11_reg_5206 & add_ln436_27_fu_3725_p2);
    tmp_62_fu_3747_p3 <= (lshr_ln436_12_reg_5211 & add_ln436_28_fu_3742_p2);
    tmp_63_fu_3774_p3 <= (lshr_ln436_13_reg_5216 & add_ln436_29_fu_3769_p2);
    tmp_64_fu_3791_p3 <= (lshr_ln436_14_reg_5221 & add_ln436_30_fu_3786_p2);
    tmp_65_fu_1859_p3 <= (lshr_ln3_fu_1843_p4 & add_ln475_16_fu_1853_p2);
    tmp_66_fu_1908_p3 <= (lshr_ln475_1_fu_1892_p4 & add_ln475_17_fu_1902_p2);
    tmp_67_fu_1964_p3 <= (lshr_ln475_2_fu_1949_p4 & add_ln475_18_fu_1959_p2);
    tmp_68_fu_2010_p3 <= (lshr_ln475_3_fu_1995_p4 & add_ln475_19_fu_2005_p2);
    tmp_69_fu_2066_p3 <= (lshr_ln475_4_fu_2051_p4 & add_ln475_20_fu_2061_p2);
    tmp_70_fu_2112_p3 <= (lshr_ln475_5_fu_2097_p4 & add_ln475_21_fu_2107_p2);
    tmp_71_fu_2168_p3 <= (lshr_ln475_6_fu_2153_p4 & add_ln475_22_fu_2163_p2);
    tmp_72_fu_2214_p3 <= (lshr_ln475_7_fu_2199_p4 & add_ln475_23_fu_2209_p2);
    tmp_73_fu_2460_p3 <= (lshr_ln475_8_reg_4897 & add_ln475_24_fu_2455_p2);
    tmp_74_fu_2477_p3 <= (lshr_ln475_9_reg_4902 & add_ln475_25_fu_2472_p2);
    tmp_75_fu_2504_p3 <= (lshr_ln475_s_reg_4907 & add_ln475_26_fu_2499_p2);
    tmp_76_fu_2521_p3 <= (lshr_ln475_10_reg_4912 & add_ln475_27_fu_2516_p2);
    tmp_77_fu_2548_p3 <= (lshr_ln475_11_reg_4917 & add_ln475_28_fu_2543_p2);
    tmp_78_fu_2565_p3 <= (lshr_ln475_12_reg_4922 & add_ln475_29_fu_2560_p2);
    tmp_79_fu_2592_p3 <= (lshr_ln475_13_reg_4927 & add_ln475_30_fu_2587_p2);
    tmp_80_fu_2604_p3 <= (lshr_ln475_14_reg_4932 & trunc_ln1461_reg_4821);
    tmp_9_fu_1268_p3 <= (ap_const_lv57_0 & or_ln436_1_fu_1262_p2);
    tmp_fu_1235_p3 <= (i_offset & ap_const_lv4_0);
    tmp_s_fu_1253_p3 <= (ap_const_lv57_0 & or_ln436_fu_1247_p2);
    trunc_ln1346_fu_2858_p1 <= lhs_reg_909(12 - 1 downto 0);
    trunc_ln1461_fu_1812_p1 <= ap_phi_mux_lhs_5_phi_fu_899_p8(9 - 1 downto 0);
    trunc_ln1_fu_1642_p4 <= m_8_fu_1610_p2(52 downto 1);
    trunc_ln428_10_fu_4425_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_11_fu_4430_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_12_fu_4469_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_13_fu_4474_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_14_fu_4507_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_15_fu_4512_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_1_fu_3818_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_2_fu_3915_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_3_fu_3920_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_4_fu_4017_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_5_fu_4022_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_6_fu_4337_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_7_fu_4342_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_8_fu_4381_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln428_9_fu_4386_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln428_fu_3813_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_10_fu_3676_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_11_fu_3715_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_12_fu_3720_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_13_fu_3759_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_14_fu_3764_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_15_fu_3803_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_16_fu_3808_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_1_fu_3097_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_2_fu_3102_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_3_fu_3199_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_4_fu_3204_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_5_fu_3301_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_6_fu_3306_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_7_fu_3627_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_8_fu_3632_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln436_9_fu_3671_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln436_fu_2922_p1 <= lhs_reg_909(9 - 1 downto 0);
    trunc_ln453_1_fu_1745_p1 <= start_index_V_3_fu_308(9 - 1 downto 0);
    trunc_ln453_fu_1718_p1 <= start_index_V_3_fu_308(12 - 1 downto 0);
    trunc_ln475_10_fu_2533_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_11_fu_2538_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_12_fu_2577_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_13_fu_2582_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_14_fu_2615_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_15_fu_2620_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_1_fu_1926_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_2_fu_2023_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_3_fu_2028_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_4_fu_2125_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_5_fu_2130_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_6_fu_2445_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_7_fu_2450_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_8_fu_2489_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln475_9_fu_2494_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln475_fu_1921_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln731_fu_1100_p1 <= get_radiiradii_q0(5 - 1 downto 0);
    trunc_ln893_1_fu_1572_p1 <= grp_fu_997_p3(11 - 1 downto 0);
    trunc_ln893_fu_2705_p1 <= grp_fu_997_p3(11 - 1 downto 0);
    trunc_ln897_1_fu_1492_p1 <= grp_fu_1005_p2(6 - 1 downto 0);
    trunc_ln897_fu_2625_p1 <= grp_fu_1005_p2(6 - 1 downto 0);
    trunc_ln_fu_2775_p4 <= m_3_fu_2743_p2(52 downto 1);
    xor_ln899_1_fu_1544_p2 <= (tmp_34_fu_1536_p3 xor ap_const_lv1_1);
    xor_ln899_fu_2677_p2 <= (tmp_30_fu_2669_p3 xor ap_const_lv1_1);
    y_V_fu_1104_p3 <= (trunc_ln731_fu_1100_p1 & ap_const_lv20_0);
    z_bits_fu_1771_p1 <= points_q0(32 - 1 downto 0);
    zext_ln112_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_offset),64));
    zext_ln428_10_fu_4403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_4396_p3),64));
    zext_ln428_11_fu_4420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_4413_p3),64));
    zext_ln428_12_fu_4447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_4440_p3),64));
    zext_ln428_13_fu_4464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_4457_p3),64));
    zext_ln428_14_fu_4491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_4484_p3),64));
    zext_ln428_15_fu_4502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_4496_p3),64));
    zext_ln428_1_fu_3092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_3084_p3),64));
    zext_ln428_2_fu_3864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_3856_p3),64));
    zext_ln428_3_fu_3910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_3902_p3),64));
    zext_ln428_4_fu_3966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_3958_p3),64));
    zext_ln428_5_fu_4012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_4004_p3),64));
    zext_ln428_6_fu_4068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_4060_p3),64));
    zext_ln428_7_fu_4114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_4106_p3),64));
    zext_ln428_8_fu_4359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_4352_p3),64));
    zext_ln428_9_fu_4376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_4369_p3),64));
    zext_ln428_fu_3043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_3035_p3),64));
    zext_ln436_10_fu_3666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_3659_p3),64));
    zext_ln436_11_fu_3693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_3686_p3),64));
    zext_ln436_12_fu_3710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_3703_p3),64));
    zext_ln436_13_fu_3737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_3730_p3),64));
    zext_ln436_14_fu_3754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_3747_p3),64));
    zext_ln436_15_fu_3781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_3774_p3),64));
    zext_ln436_16_fu_3798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_3791_p3),64));
    zext_ln436_1_fu_2934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_2926_p3),64));
    zext_ln436_2_fu_2983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_2975_p3),64));
    zext_ln436_3_fu_3148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_3140_p3),64));
    zext_ln436_4_fu_3194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_3186_p3),64));
    zext_ln436_5_fu_3250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_3242_p3),64));
    zext_ln436_6_fu_3296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_3288_p3),64));
    zext_ln436_7_fu_3352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_3344_p3),64));
    zext_ln436_8_fu_3398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_3390_p3),64));
    zext_ln436_9_fu_3649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_3642_p3),64));
    zext_ln436_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1235_p3),64));
    zext_ln453_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_1748_p3),64));
    zext_ln475_10_fu_2511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_2504_p3),64));
    zext_ln475_11_fu_2528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_2521_p3),64));
    zext_ln475_12_fu_2555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_2548_p3),64));
    zext_ln475_13_fu_2572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_2565_p3),64));
    zext_ln475_14_fu_2599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_2592_p3),64));
    zext_ln475_15_fu_2610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_2604_p3),64));
    zext_ln475_1_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1908_p3),64));
    zext_ln475_2_fu_1972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_1964_p3),64));
    zext_ln475_3_fu_2018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_2010_p3),64));
    zext_ln475_4_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_2066_p3),64));
    zext_ln475_5_fu_2120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_2112_p3),64));
    zext_ln475_6_fu_2176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_2168_p3),64));
    zext_ln475_7_fu_2222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_2214_p3),64));
    zext_ln475_8_fu_2467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_2460_p3),64));
    zext_ln475_9_fu_2484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_2477_p3),64));
    zext_ln475_fu_1867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1859_p3),64));
    zext_ln897_1_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_1_fu_1496_p2),32));
    zext_ln897_fu_2635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_fu_2629_p2),32));
    zext_ln908_1_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1057_p2),64));
    zext_ln908_fu_2723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1057_p2),64));
    zext_ln909_1_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1051_p2),64));
    zext_ln909_2_fu_2709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_989),64));
    zext_ln909_3_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_989),64));
    zext_ln909_fu_2713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1051_p2),64));
    zext_ln911_1_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln908_2_reg_4750),64));
    zext_ln911_fu_2740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln908_reg_4982),64));
    zext_ln912_1_fu_1658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_13_reg_4760),64));
    zext_ln912_fu_2791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_11_reg_4992),64));
end behav;
