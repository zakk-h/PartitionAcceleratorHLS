-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_straightLineProjectorFromLayerIJtoK is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    z_i : IN STD_LOGIC_VECTOR (31 downto 0);
    z_j : IN STD_LOGIC_VECTOR (31 downto 0);
    i : IN STD_LOGIC_VECTOR (2 downto 0);
    j : IN STD_LOGIC_VECTOR (2 downto 0);
    k : IN STD_LOGIC_VECTOR (2 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of system_top_straightLineProjectorFromLayerIJtoK is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter53 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter50 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter51 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter52 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter53 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal get_radiiradii_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce0 : STD_LOGIC;
    signal get_radiiradii_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal get_radiiradii_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce1 : STD_LOGIC;
    signal get_radiiradii_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal get_radiiradii_address2 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce2 : STD_LOGIC;
    signal get_radiiradii_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_read_reg_300 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_read_reg_306 : STD_LOGIC_VECTOR (2 downto 0);
    signal z_j_read_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter33_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter34_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter36_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter37_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter38_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter39_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter40_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter41_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter42_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter43_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter44_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter45_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter46_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter47_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter48_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter49_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_read_reg_312_pp0_iter50_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter33_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter34_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter36_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter37_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter38_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter39_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter40_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter41_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter42_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter43_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter44_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter45_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter46_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter47_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter48_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter49_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter50_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter51_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal z_i_read_reg_317_pp0_iter52_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln870_fu_105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln731_fu_122_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln731_reg_333 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln870_1_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_1_reg_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_2_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_2_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sdiv_ln1148_reg_368 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_4_fu_256_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_4_reg_373 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_1_fu_272_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_1_reg_378 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln112_fu_117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_1_fu_136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_2_fu_151_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln28_fu_111_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln33_fu_131_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln38_fu_146_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal radius_i_V_fu_156_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln731_1_fu_170_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal radius_j_V_fu_174_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln731_2_fu_189_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal radius_k_V_fu_193_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal radius_k_V_2_fu_201_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal radius_i_V_2_fu_163_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1193_fu_208_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1193_1_fu_212_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal radius_j_V_2_fu_182_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1193_2_fu_222_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_fu_216_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_1_fu_226_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_244_p0 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln703_fu_250_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_1_fu_253_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal radii_leverArm_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_2_fu_278_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_3_fu_285_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_244_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to52 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_sdiv_46ns_26s_32_50_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (45 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_mul_33s_32s_52_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component system_top_straightLineProjectorFromLayerIJtoK_get_radiiradii IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_radiiradii_U : component system_top_straightLineProjectorFromLayerIJtoK_get_radiiradii
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_radiiradii_address0,
        ce0 => get_radiiradii_ce0,
        q0 => get_radiiradii_q0,
        address1 => get_radiiradii_address1,
        ce1 => get_radiiradii_ce1,
        q1 => get_radiiradii_q1,
        address2 => get_radiiradii_address2,
        ce2 => get_radiiradii_ce2,
        q2 => get_radiiradii_q2);

    sdiv_46ns_26s_32_50_1_U74 : component system_top_sdiv_46ns_26s_32_50_1
    generic map (
        ID => 1,
        NUM_STAGE => 50,
        din0_WIDTH => 46,
        din1_WIDTH => 26,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_244_p0,
        din1 => ret_V_1_fu_226_p2,
        ce => grp_fu_244_ce,
        dout => grp_fu_244_p2);

    mul_33s_32s_52_1_1_U75 : component system_top_mul_33s_32s_52_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 32,
        dout_WIDTH => 52)
    port map (
        din0 => ret_V_4_reg_373,
        din1 => radii_leverArm_fu_262_p1,
        dout => r_V_1_fu_272_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter50 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter51 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter52 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln870_1_reg_338 <= icmp_ln870_1_fu_126_p2;
                icmp_ln870_2_reg_348 <= icmp_ln870_2_fu_141_p2;
                icmp_ln870_reg_323 <= icmp_ln870_fu_105_p2;
                icmp_ln870_reg_323_pp0_iter1_reg <= icmp_ln870_reg_323;
                j_read_reg_306 <= j;
                k_read_reg_300 <= k;
                z_i_read_reg_317 <= z_i;
                z_i_read_reg_317_pp0_iter1_reg <= z_i_read_reg_317;
                z_j_read_reg_312 <= z_j;
                z_j_read_reg_312_pp0_iter1_reg <= z_j_read_reg_312;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                r_V_1_reg_378 <= r_V_1_fu_272_p2;
                ret_V_4_reg_373 <= ret_V_4_fu_256_p2;
                sdiv_ln1148_reg_368 <= grp_fu_244_p2;
                z_i_read_reg_317_pp0_iter10_reg <= z_i_read_reg_317_pp0_iter9_reg;
                z_i_read_reg_317_pp0_iter11_reg <= z_i_read_reg_317_pp0_iter10_reg;
                z_i_read_reg_317_pp0_iter12_reg <= z_i_read_reg_317_pp0_iter11_reg;
                z_i_read_reg_317_pp0_iter13_reg <= z_i_read_reg_317_pp0_iter12_reg;
                z_i_read_reg_317_pp0_iter14_reg <= z_i_read_reg_317_pp0_iter13_reg;
                z_i_read_reg_317_pp0_iter15_reg <= z_i_read_reg_317_pp0_iter14_reg;
                z_i_read_reg_317_pp0_iter16_reg <= z_i_read_reg_317_pp0_iter15_reg;
                z_i_read_reg_317_pp0_iter17_reg <= z_i_read_reg_317_pp0_iter16_reg;
                z_i_read_reg_317_pp0_iter18_reg <= z_i_read_reg_317_pp0_iter17_reg;
                z_i_read_reg_317_pp0_iter19_reg <= z_i_read_reg_317_pp0_iter18_reg;
                z_i_read_reg_317_pp0_iter20_reg <= z_i_read_reg_317_pp0_iter19_reg;
                z_i_read_reg_317_pp0_iter21_reg <= z_i_read_reg_317_pp0_iter20_reg;
                z_i_read_reg_317_pp0_iter22_reg <= z_i_read_reg_317_pp0_iter21_reg;
                z_i_read_reg_317_pp0_iter23_reg <= z_i_read_reg_317_pp0_iter22_reg;
                z_i_read_reg_317_pp0_iter24_reg <= z_i_read_reg_317_pp0_iter23_reg;
                z_i_read_reg_317_pp0_iter25_reg <= z_i_read_reg_317_pp0_iter24_reg;
                z_i_read_reg_317_pp0_iter26_reg <= z_i_read_reg_317_pp0_iter25_reg;
                z_i_read_reg_317_pp0_iter27_reg <= z_i_read_reg_317_pp0_iter26_reg;
                z_i_read_reg_317_pp0_iter28_reg <= z_i_read_reg_317_pp0_iter27_reg;
                z_i_read_reg_317_pp0_iter29_reg <= z_i_read_reg_317_pp0_iter28_reg;
                z_i_read_reg_317_pp0_iter2_reg <= z_i_read_reg_317_pp0_iter1_reg;
                z_i_read_reg_317_pp0_iter30_reg <= z_i_read_reg_317_pp0_iter29_reg;
                z_i_read_reg_317_pp0_iter31_reg <= z_i_read_reg_317_pp0_iter30_reg;
                z_i_read_reg_317_pp0_iter32_reg <= z_i_read_reg_317_pp0_iter31_reg;
                z_i_read_reg_317_pp0_iter33_reg <= z_i_read_reg_317_pp0_iter32_reg;
                z_i_read_reg_317_pp0_iter34_reg <= z_i_read_reg_317_pp0_iter33_reg;
                z_i_read_reg_317_pp0_iter35_reg <= z_i_read_reg_317_pp0_iter34_reg;
                z_i_read_reg_317_pp0_iter36_reg <= z_i_read_reg_317_pp0_iter35_reg;
                z_i_read_reg_317_pp0_iter37_reg <= z_i_read_reg_317_pp0_iter36_reg;
                z_i_read_reg_317_pp0_iter38_reg <= z_i_read_reg_317_pp0_iter37_reg;
                z_i_read_reg_317_pp0_iter39_reg <= z_i_read_reg_317_pp0_iter38_reg;
                z_i_read_reg_317_pp0_iter3_reg <= z_i_read_reg_317_pp0_iter2_reg;
                z_i_read_reg_317_pp0_iter40_reg <= z_i_read_reg_317_pp0_iter39_reg;
                z_i_read_reg_317_pp0_iter41_reg <= z_i_read_reg_317_pp0_iter40_reg;
                z_i_read_reg_317_pp0_iter42_reg <= z_i_read_reg_317_pp0_iter41_reg;
                z_i_read_reg_317_pp0_iter43_reg <= z_i_read_reg_317_pp0_iter42_reg;
                z_i_read_reg_317_pp0_iter44_reg <= z_i_read_reg_317_pp0_iter43_reg;
                z_i_read_reg_317_pp0_iter45_reg <= z_i_read_reg_317_pp0_iter44_reg;
                z_i_read_reg_317_pp0_iter46_reg <= z_i_read_reg_317_pp0_iter45_reg;
                z_i_read_reg_317_pp0_iter47_reg <= z_i_read_reg_317_pp0_iter46_reg;
                z_i_read_reg_317_pp0_iter48_reg <= z_i_read_reg_317_pp0_iter47_reg;
                z_i_read_reg_317_pp0_iter49_reg <= z_i_read_reg_317_pp0_iter48_reg;
                z_i_read_reg_317_pp0_iter4_reg <= z_i_read_reg_317_pp0_iter3_reg;
                z_i_read_reg_317_pp0_iter50_reg <= z_i_read_reg_317_pp0_iter49_reg;
                z_i_read_reg_317_pp0_iter51_reg <= z_i_read_reg_317_pp0_iter50_reg;
                z_i_read_reg_317_pp0_iter52_reg <= z_i_read_reg_317_pp0_iter51_reg;
                z_i_read_reg_317_pp0_iter5_reg <= z_i_read_reg_317_pp0_iter4_reg;
                z_i_read_reg_317_pp0_iter6_reg <= z_i_read_reg_317_pp0_iter5_reg;
                z_i_read_reg_317_pp0_iter7_reg <= z_i_read_reg_317_pp0_iter6_reg;
                z_i_read_reg_317_pp0_iter8_reg <= z_i_read_reg_317_pp0_iter7_reg;
                z_i_read_reg_317_pp0_iter9_reg <= z_i_read_reg_317_pp0_iter8_reg;
                z_j_read_reg_312_pp0_iter10_reg <= z_j_read_reg_312_pp0_iter9_reg;
                z_j_read_reg_312_pp0_iter11_reg <= z_j_read_reg_312_pp0_iter10_reg;
                z_j_read_reg_312_pp0_iter12_reg <= z_j_read_reg_312_pp0_iter11_reg;
                z_j_read_reg_312_pp0_iter13_reg <= z_j_read_reg_312_pp0_iter12_reg;
                z_j_read_reg_312_pp0_iter14_reg <= z_j_read_reg_312_pp0_iter13_reg;
                z_j_read_reg_312_pp0_iter15_reg <= z_j_read_reg_312_pp0_iter14_reg;
                z_j_read_reg_312_pp0_iter16_reg <= z_j_read_reg_312_pp0_iter15_reg;
                z_j_read_reg_312_pp0_iter17_reg <= z_j_read_reg_312_pp0_iter16_reg;
                z_j_read_reg_312_pp0_iter18_reg <= z_j_read_reg_312_pp0_iter17_reg;
                z_j_read_reg_312_pp0_iter19_reg <= z_j_read_reg_312_pp0_iter18_reg;
                z_j_read_reg_312_pp0_iter20_reg <= z_j_read_reg_312_pp0_iter19_reg;
                z_j_read_reg_312_pp0_iter21_reg <= z_j_read_reg_312_pp0_iter20_reg;
                z_j_read_reg_312_pp0_iter22_reg <= z_j_read_reg_312_pp0_iter21_reg;
                z_j_read_reg_312_pp0_iter23_reg <= z_j_read_reg_312_pp0_iter22_reg;
                z_j_read_reg_312_pp0_iter24_reg <= z_j_read_reg_312_pp0_iter23_reg;
                z_j_read_reg_312_pp0_iter25_reg <= z_j_read_reg_312_pp0_iter24_reg;
                z_j_read_reg_312_pp0_iter26_reg <= z_j_read_reg_312_pp0_iter25_reg;
                z_j_read_reg_312_pp0_iter27_reg <= z_j_read_reg_312_pp0_iter26_reg;
                z_j_read_reg_312_pp0_iter28_reg <= z_j_read_reg_312_pp0_iter27_reg;
                z_j_read_reg_312_pp0_iter29_reg <= z_j_read_reg_312_pp0_iter28_reg;
                z_j_read_reg_312_pp0_iter2_reg <= z_j_read_reg_312_pp0_iter1_reg;
                z_j_read_reg_312_pp0_iter30_reg <= z_j_read_reg_312_pp0_iter29_reg;
                z_j_read_reg_312_pp0_iter31_reg <= z_j_read_reg_312_pp0_iter30_reg;
                z_j_read_reg_312_pp0_iter32_reg <= z_j_read_reg_312_pp0_iter31_reg;
                z_j_read_reg_312_pp0_iter33_reg <= z_j_read_reg_312_pp0_iter32_reg;
                z_j_read_reg_312_pp0_iter34_reg <= z_j_read_reg_312_pp0_iter33_reg;
                z_j_read_reg_312_pp0_iter35_reg <= z_j_read_reg_312_pp0_iter34_reg;
                z_j_read_reg_312_pp0_iter36_reg <= z_j_read_reg_312_pp0_iter35_reg;
                z_j_read_reg_312_pp0_iter37_reg <= z_j_read_reg_312_pp0_iter36_reg;
                z_j_read_reg_312_pp0_iter38_reg <= z_j_read_reg_312_pp0_iter37_reg;
                z_j_read_reg_312_pp0_iter39_reg <= z_j_read_reg_312_pp0_iter38_reg;
                z_j_read_reg_312_pp0_iter3_reg <= z_j_read_reg_312_pp0_iter2_reg;
                z_j_read_reg_312_pp0_iter40_reg <= z_j_read_reg_312_pp0_iter39_reg;
                z_j_read_reg_312_pp0_iter41_reg <= z_j_read_reg_312_pp0_iter40_reg;
                z_j_read_reg_312_pp0_iter42_reg <= z_j_read_reg_312_pp0_iter41_reg;
                z_j_read_reg_312_pp0_iter43_reg <= z_j_read_reg_312_pp0_iter42_reg;
                z_j_read_reg_312_pp0_iter44_reg <= z_j_read_reg_312_pp0_iter43_reg;
                z_j_read_reg_312_pp0_iter45_reg <= z_j_read_reg_312_pp0_iter44_reg;
                z_j_read_reg_312_pp0_iter46_reg <= z_j_read_reg_312_pp0_iter45_reg;
                z_j_read_reg_312_pp0_iter47_reg <= z_j_read_reg_312_pp0_iter46_reg;
                z_j_read_reg_312_pp0_iter48_reg <= z_j_read_reg_312_pp0_iter47_reg;
                z_j_read_reg_312_pp0_iter49_reg <= z_j_read_reg_312_pp0_iter48_reg;
                z_j_read_reg_312_pp0_iter4_reg <= z_j_read_reg_312_pp0_iter3_reg;
                z_j_read_reg_312_pp0_iter50_reg <= z_j_read_reg_312_pp0_iter49_reg;
                z_j_read_reg_312_pp0_iter5_reg <= z_j_read_reg_312_pp0_iter4_reg;
                z_j_read_reg_312_pp0_iter6_reg <= z_j_read_reg_312_pp0_iter5_reg;
                z_j_read_reg_312_pp0_iter7_reg <= z_j_read_reg_312_pp0_iter6_reg;
                z_j_read_reg_312_pp0_iter8_reg <= z_j_read_reg_312_pp0_iter7_reg;
                z_j_read_reg_312_pp0_iter9_reg <= z_j_read_reg_312_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln870_reg_323 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln731_reg_333 <= trunc_ln731_fu_122_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln28_fu_111_p2 <= std_logic_vector(unsigned(i) + unsigned(ap_const_lv3_7));
    add_ln33_fu_131_p2 <= std_logic_vector(unsigned(j_read_reg_306) + unsigned(ap_const_lv3_7));
    add_ln38_fu_146_p2 <= std_logic_vector(unsigned(k_read_reg_300) + unsigned(ap_const_lv3_7));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter53, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter53 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to52_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0_0to52 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to52 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to52)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to52 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ret_V_3_fu_285_p2(51 downto 20);
    get_radiiradii_address0 <= zext_ln112_2_fu_151_p1(3 - 1 downto 0);
    get_radiiradii_address1 <= zext_ln112_1_fu_136_p1(3 - 1 downto 0);
    get_radiiradii_address2 <= zext_ln112_fu_117_p1(3 - 1 downto 0);

    get_radiiradii_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            get_radiiradii_ce0 <= ap_const_logic_1;
        else 
            get_radiiradii_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    get_radiiradii_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            get_radiiradii_ce1 <= ap_const_logic_1;
        else 
            get_radiiradii_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    get_radiiradii_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            get_radiiradii_ce2 <= ap_const_logic_1;
        else 
            get_radiiradii_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_244_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_244_ce <= ap_const_logic_1;
        else 
            grp_fu_244_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_244_p0 <= (ret_V_fu_216_p2 & ap_const_lv20_0);
    icmp_ln870_1_fu_126_p2 <= "1" when (j_read_reg_306 = ap_const_lv3_0) else "0";
    icmp_ln870_2_fu_141_p2 <= "1" when (k_read_reg_300 = ap_const_lv3_0) else "0";
    icmp_ln870_fu_105_p2 <= "1" when (i = ap_const_lv3_0) else "0";
    lhs_2_fu_278_p3 <= (z_i_read_reg_317_pp0_iter52_reg & ap_const_lv20_0);
    radii_leverArm_fu_262_p1 <= sdiv_ln1148_reg_368(32 - 1 downto 0);
    radius_i_V_2_fu_163_p3 <= 
        ap_const_lv25_0 when (icmp_ln870_reg_323_pp0_iter1_reg(0) = '1') else 
        radius_i_V_fu_156_p3;
    radius_i_V_fu_156_p3 <= (trunc_ln731_reg_333 & ap_const_lv20_0);
    radius_j_V_2_fu_182_p3 <= 
        ap_const_lv25_0 when (icmp_ln870_1_reg_338(0) = '1') else 
        radius_j_V_fu_174_p3;
    radius_j_V_fu_174_p3 <= (trunc_ln731_1_fu_170_p1 & ap_const_lv20_0);
    radius_k_V_2_fu_201_p3 <= 
        ap_const_lv25_0 when (icmp_ln870_2_reg_348(0) = '1') else 
        radius_k_V_fu_193_p3;
    radius_k_V_fu_193_p3 <= (trunc_ln731_2_fu_189_p1 & ap_const_lv20_0);
    ret_V_1_fu_226_p2 <= std_logic_vector(unsigned(zext_ln1193_2_fu_222_p1) - unsigned(zext_ln1193_1_fu_212_p1));
    ret_V_3_fu_285_p2 <= std_logic_vector(unsigned(r_V_1_reg_378) + unsigned(lhs_2_fu_278_p3));
    ret_V_4_fu_256_p2 <= std_logic_vector(signed(sext_ln703_fu_250_p1) - signed(sext_ln703_1_fu_253_p1));
    ret_V_fu_216_p2 <= std_logic_vector(unsigned(zext_ln1193_fu_208_p1) - unsigned(zext_ln1193_1_fu_212_p1));
        sext_ln703_1_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_i_read_reg_317_pp0_iter50_reg),33));

        sext_ln703_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_j_read_reg_312_pp0_iter50_reg),33));

    trunc_ln731_1_fu_170_p1 <= get_radiiradii_q1(5 - 1 downto 0);
    trunc_ln731_2_fu_189_p1 <= get_radiiradii_q0(5 - 1 downto 0);
    trunc_ln731_fu_122_p1 <= get_radiiradii_q2(5 - 1 downto 0);
    zext_ln112_1_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_fu_131_p2),64));
    zext_ln112_2_fu_151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_fu_146_p2),64));
    zext_ln112_fu_117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_111_p2),64));
    zext_ln1193_1_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(radius_i_V_2_fu_163_p3),26));
    zext_ln1193_2_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(radius_j_V_2_fu_182_p3),26));
    zext_ln1193_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(radius_k_V_2_fu_201_p3),26));
end behav;
