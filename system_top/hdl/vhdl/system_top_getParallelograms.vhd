-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_getParallelograms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    superpoints_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    superpoints_V_ce0 : OUT STD_LOGIC;
    superpoints_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    superpoints_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    superpoints_V_ce1 : OUT STD_LOGIC;
    superpoints_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    superpoints_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    pSlope_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pSlope_V_ce0 : OUT STD_LOGIC;
    pSlope_V_we0 : OUT STD_LOGIC;
    pSlope_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pSlope_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomL_jR_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomL_jR_V_ce0 : OUT STD_LOGIC;
    shadow_bottomL_jR_V_we0 : OUT STD_LOGIC;
    shadow_bottomL_jR_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomL_jR_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomR_jR_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomR_jR_V_ce0 : OUT STD_LOGIC;
    shadow_bottomR_jR_V_we0 : OUT STD_LOGIC;
    shadow_bottomR_jR_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomR_jR_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomL_jL_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomL_jL_V_ce0 : OUT STD_LOGIC;
    shadow_bottomL_jL_V_we0 : OUT STD_LOGIC;
    shadow_bottomL_jL_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomL_jL_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    shadow_bottomR_jL_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    shadow_bottomR_jL_V_ce0 : OUT STD_LOGIC;
    shadow_bottomR_jL_V_we0 : OUT STD_LOGIC;
    shadow_bottomR_jL_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    shadow_bottomR_jL_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    z1_min_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    z1_min_V_ce0 : OUT STD_LOGIC;
    z1_min_V_we0 : OUT STD_LOGIC;
    z1_min_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    z1_min_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    z1_max_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    z1_max_V_ce0 : OUT STD_LOGIC;
    z1_max_V_we0 : OUT STD_LOGIC;
    z1_max_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    z1_max_V_offset : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of system_top_getParallelograms is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_FE9FFF98 : STD_LOGIC_VECTOR (31 downto 0) := "11111110100111111111111110011000";
    constant ap_const_lv32_1600068 : STD_LOGIC_VECTOR (31 downto 0) := "00000001011000000000000001101000";
    constant ap_const_lv26_1700068 : STD_LOGIC_VECTOR (25 downto 0) := "01011100000000000001101000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_parallelogram_slopesparallelogram_slopes_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal get_parallelogram_slopesparallelogram_slopes_ce0 : STD_LOGIC;
    signal get_parallelogram_slopesparallelogram_slopes_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_529 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_562 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state7_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state71_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln124_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state8_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state9_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state33_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state65_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state10_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state34_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state42_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state50_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state58_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state66_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state11_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state35_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state43_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state51_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state59_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state67_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state12_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state28_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state36_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state44_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state52_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state60_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state68_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state13_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state29_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state37_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state45_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state53_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state61_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state69_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln137_fu_579_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_reg_1905 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln136_fu_597_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln136_reg_1910 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln142_fu_615_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln142_reg_1915 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln141_fu_633_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln141_reg_1920 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln140_fu_651_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln140_reg_1925 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln139_fu_669_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln139_reg_1930 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln134_fu_687_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln134_reg_1935 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_fu_709_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_reg_1940 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_2_fu_735_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln52_2_reg_1945 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln51_fu_741_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln51_reg_1951 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal superpoint_0_min_z_fu_773_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln65_fu_781_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_reg_1969 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln65_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln97_fu_857_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln97_reg_1983 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln97_1_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln97_1_reg_1989 : STD_LOGIC_VECTOR (31 downto 0);
    signal superpoint_0_max_z_fu_879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln124_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2000_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_cast_fu_924_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_cast_reg_2004 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln134_1_fu_953_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_1_reg_2037_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln53_fu_1017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_reg_2056 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_16_fu_1031_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln67_16_reg_2062 : STD_LOGIC_VECTOR (30 downto 0);
    signal get_parallelogram_slopesparallelogram_slopes_load_reg_2067 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_1039_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_2073 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_2073_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln53_17_fu_1083_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_17_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_18_fu_1114_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_18_reg_2096 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_2102 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_fu_1152_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_2107 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_2112 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_1162_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_2118 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln53_19_fu_1206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_19_reg_2136 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_20_fu_1232_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_20_reg_2142 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln124_1_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_1_reg_2148 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1284_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2153 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_fu_1297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_2158 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_reg_2164 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_reg_2170 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln571_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln571_reg_2175 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_1_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_1_reg_2180 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_1_fu_1436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_1_reg_2186 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_21_fu_1482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_21_reg_2201 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_22_fu_1508_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_22_reg_2207 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_23_fu_1615_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_23_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_24_fu_1641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_24_reg_2229 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_25_fu_1687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_25_reg_2245 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_26_fu_1713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_26_reg_2251 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_27_fu_1759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_27_reg_2267 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_28_fu_1785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_28_reg_2273 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_29_fu_1811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_29_reg_2279 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_30_fu_1837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_30_reg_2285 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_30_fu_1850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_30_reg_2291 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_31_fu_1863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_31_reg_2296 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln140_1_fu_1897_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln140_1_reg_2301 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_483 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_012_i_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_506 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln51_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_012_i230_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_2_phi_fu_533_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln52_22_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_1_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_24_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_25_fu_938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln104_cast_fu_893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_1_fu_962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_1_fu_972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_26_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_27_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_28_fu_1050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_29_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_30_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_31_fu_1183_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_32_fu_1449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_33_fu_1459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_2_fu_1572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_34_fu_1582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_35_fu_1592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_36_fu_1654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_37_fu_1664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_38_fu_1726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln52_39_fu_1736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln141_1_fu_1874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln142_1_fu_1883_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_1_fu_1892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_1_fu_1901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_571_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln137_fu_567_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_589_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln136_fu_585_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_607_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln142_fu_603_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_625_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln141_fu_621_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_643_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln140_fu_639_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_661_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln139_fu_657_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_679_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln134_fu_675_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_697_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln52_19_fu_705_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln52_fu_693_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_723_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_715_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln52_20_fu_731_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln52_21_fu_747_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln52_3_fu_751_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln66_fu_787_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln66_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1494_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_min_tmp_V_fu_813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_9_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_max_tmp_V_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_6_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln95_fu_839_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_tmp_V_1_fu_849_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln94_fu_821_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_tmp_V_1_fu_861_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln1494_7_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln52_23_fu_898_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_4_fu_902_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_911_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln52_fu_907_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln52_fu_932_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln133_fu_943_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal parallelogram_index_fu_947_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln136_1_fu_957_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_1_fu_967_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln52_15_fu_977_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_16_fu_987_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1001_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1495_20_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_21_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_fu_997_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal or_ln52_17_fu_1045_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_18_fu_1055_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_21_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_16_fu_1070_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_22_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_16_cast_fu_1091_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_22_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_17_fu_1100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_23_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1138_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_fu_1126_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_1148_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln52_19_fu_1168_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_20_fu_1178_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_23_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_18_fu_1193_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_24_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_24_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_19_fu_1219_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_25_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_1245_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1252_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1256_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln581_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1274_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1279_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_1262_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_14_fu_1301_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_1317_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_1321_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1325_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln702_fu_1335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln124_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_1346_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_1_fu_1331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln52_21_fu_1444_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_22_fu_1454_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_25_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_20_fu_1469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_26_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_26_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_21_fu_1495_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_27_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_fu_1519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_fu_1524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_2_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_2_fu_1531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln571_3_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln571_3_fu_1541_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_4_fu_1551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln134_1_fu_1568_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln52_23_fu_1577_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_24_fu_1587_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_27_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_22_fu_1602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_28_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_28_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_23_fu_1628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_29_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_25_fu_1649_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_26_fu_1659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_29_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_24_fu_1674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_30_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_30_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_25_fu_1700_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_31_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_27_fu_1721_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_28_fu_1731_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_31_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_26_fu_1746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_32_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_32_fu_1767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_27_fu_1772_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_33_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_33_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_28_fu_1798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_34_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_34_fu_1819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_29_fu_1824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_35_fu_1831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_35_fu_1845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_36_fu_1858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln141_1_fu_1870_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln142_1_fu_1879_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln139_1_fu_1888_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_parallelogram_slopesparallelogram_slopes_U : component system_top_getParallelograms_get_parallelogram_slopesparallelogram_slopes
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_parallelogram_slopesparallelogram_slopes_address0,
        ce0 => get_parallelogram_slopesparallelogram_slopes_ce0,
        q0 => get_parallelogram_slopesparallelogram_slopes_q0);

    grp_straightLineProjectorFromLayerIJtoK_fu_541 : component system_top_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j,
        i => ap_const_lv3_1,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_541_j,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return);

    fpext_32ns_64_2_no_dsp_1_U84 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => get_parallelogram_slopesparallelogram_slopes_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_558_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln65_fu_801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone)))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif (((icmp_ln65_fu_801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln51_fu_761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_reg_506 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_1_reg_506 <= add_ln65_reg_1969;
            end if; 
        end if;
    end process;

    i_2_reg_529_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_2_reg_529 <= j_reg_2073;
            elsif (((icmp_ln65_fu_801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_2_reg_529 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    i_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_483 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_483 <= add_ln51_reg_1951;
            end if; 
        end if;
    end process;

    p_012_i230_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln51_fu_761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_012_i230_reg_517 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_012_i230_reg_517 <= superpoint_0_max_z_fu_879_p3;
            end if; 
        end if;
    end process;

    p_012_i_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_012_i_reg_494 <= ap_const_lv32_40000000;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_012_i_reg_494 <= superpoint_0_min_z_fu_773_p3;
            end if; 
        end if;
    end process;

    reg_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                reg_562 <= superpoints_V_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                reg_562 <= superpoints_V_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                F2_reg_2118 <= F2_fu_1162_p2;
                icmp_ln571_reg_2112 <= icmp_ln571_fu_1156_p2;
                p_Result_s_reg_2102 <= ireg_fu_1122_p1(63 downto 63);
                select_ln53_17_reg_2090 <= select_ln53_17_fu_1083_p3;
                select_ln67_18_reg_2096 <= select_ln67_18_fu_1114_p3;
                trunc_ln565_reg_2107 <= trunc_ln565_fu_1152_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln134_reg_1935 <= add_ln134_fu_687_p2;
                add_ln136_reg_1910 <= add_ln136_fu_597_p2;
                add_ln137_reg_1905 <= add_ln137_fu_579_p2;
                add_ln139_reg_1930 <= add_ln139_fu_669_p2;
                add_ln140_reg_1925 <= add_ln140_fu_651_p2;
                add_ln141_reg_1920 <= add_ln141_fu_633_p2;
                add_ln142_reg_1915 <= add_ln142_fu_615_p2;
                    add_ln52_2_reg_1945(7 downto 4) <= add_ln52_2_fu_735_p2(7 downto 4);
                add_ln52_reg_1940 <= add_ln52_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln124_reg_2000_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln140_1_reg_2301 <= add_ln140_1_fu_1897_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln51_reg_1951 <= add_ln51_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln65_reg_1969 <= add_ln65_fu_781_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                and_ln571_reg_2175 <= and_ln571_fu_1425_p2;
                and_ln581_reg_2170 <= and_ln581_fu_1383_p2;
                and_ln582_reg_2164 <= and_ln582_fu_1365_p2;
                icmp_ln124_1_reg_2148 <= icmp_ln124_1_fu_1240_p2;
                or_ln571_1_reg_2180 <= or_ln571_1_fu_1430_p2;
                select_ln53_19_reg_2136 <= select_ln53_19_fu_1206_p3;
                select_ln571_1_reg_2186 <= select_ln571_1_fu_1436_p3;
                select_ln67_20_reg_2142 <= select_ln67_20_fu_1232_p3;
                sh_amt_reg_2153 <= sh_amt_fu_1284_p3;
                trunc_ln583_reg_2158 <= trunc_ln583_fu_1297_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                get_parallelogram_slopesparallelogram_slopes_load_reg_2067 <= get_parallelogram_slopesparallelogram_slopes_q0;
                select_ln53_reg_2056 <= select_ln53_fu_1017_p3;
                select_ln67_16_reg_2062 <= select_ln67_16_fu_1031_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln124_reg_2000 <= icmp_ln124_fu_887_p2;
                icmp_ln124_reg_2000_pp0_iter1_reg <= icmp_ln124_reg_2000;
                icmp_ln124_reg_2000_pp0_iter2_reg <= icmp_ln124_reg_2000_pp0_iter1_reg;
                icmp_ln124_reg_2000_pp0_iter3_reg <= icmp_ln124_reg_2000_pp0_iter2_reg;
                icmp_ln124_reg_2000_pp0_iter4_reg <= icmp_ln124_reg_2000_pp0_iter3_reg;
                icmp_ln124_reg_2000_pp0_iter5_reg <= icmp_ln124_reg_2000_pp0_iter4_reg;
                icmp_ln124_reg_2000_pp0_iter6_reg <= icmp_ln124_reg_2000_pp0_iter5_reg;
                icmp_ln124_reg_2000_pp0_iter7_reg <= icmp_ln124_reg_2000_pp0_iter6_reg;
                icmp_ln124_reg_2000_pp0_iter8_reg <= icmp_ln124_reg_2000_pp0_iter7_reg;
                    zext_ln134_1_reg_2037_pp0_iter1_reg(1 downto 0) <= zext_ln134_1_reg_2037(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter2_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter1_reg(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter3_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter2_reg(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter4_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter3_reg(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter5_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter4_reg(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter6_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter5_reg(1 downto 0);
                    zext_ln134_1_reg_2037_pp0_iter7_reg(1 downto 0) <= zext_ln134_1_reg_2037_pp0_iter6_reg(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                j_reg_2073 <= j_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                j_reg_2073_pp0_iter1_reg <= j_reg_2073;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                select_ln53_21_reg_2201 <= select_ln53_21_fu_1482_p3;
                select_ln67_22_reg_2207 <= select_ln67_22_fu_1508_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                select_ln53_23_reg_2223 <= select_ln53_23_fu_1615_p3;
                select_ln67_24_reg_2229 <= select_ln67_24_fu_1641_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                select_ln53_25_reg_2245 <= select_ln53_25_fu_1687_p3;
                select_ln67_26_reg_2251 <= select_ln67_26_fu_1713_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                select_ln53_27_reg_2267 <= select_ln53_27_fu_1759_p3;
                select_ln67_28_reg_2273 <= select_ln67_28_fu_1785_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln53_29_reg_2279 <= select_ln53_29_fu_1811_p3;
                select_ln67_30_reg_2285 <= select_ln67_30_fu_1837_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                select_ln53_30_reg_2291 <= select_ln53_30_fu_1850_p3;
                select_ln67_31_reg_2296 <= select_ln67_31_fu_1863_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_fu_801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                sext_ln97_1_reg_1989 <= sext_ln97_1_fu_869_p1;
                sext_ln97_reg_1983 <= sext_ln97_fu_857_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln124_fu_887_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_24_cast_reg_2004(7 downto 4) <= tmp_24_cast_fu_924_p3(7 downto 4);
                    zext_ln134_1_reg_2037(1 downto 0) <= zext_ln134_1_fu_953_p1(1 downto 0);
            end if;
        end if;
    end process;
    add_ln52_2_reg_1945(3 downto 0) <= "0000";
    tmp_24_cast_reg_2004(3 downto 0) <= "0000";
    zext_ln134_1_reg_2037(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter1_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter2_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter3_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter4_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter5_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter6_reg(3 downto 2) <= "00";
    zext_ln134_1_reg_2037_pp0_iter7_reg(3 downto 2) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln65_fu_801_p2, icmp_ln124_fu_887_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, icmp_ln51_fu_761_p2, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln51_fu_761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln65_fu_801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln124_fu_887_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln124_fu_887_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1162_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1148_p1));
    add_ln134_1_fu_1568_p2 <= std_logic_vector(unsigned(add_ln134_reg_1935) + unsigned(zext_ln134_1_reg_2037));
    add_ln134_fu_687_p2 <= std_logic_vector(unsigned(tmp_5_fu_679_p3) + unsigned(zext_ln134_fu_675_p1));
    add_ln136_1_fu_957_p2 <= std_logic_vector(unsigned(add_ln136_reg_1910) + unsigned(zext_ln134_1_fu_953_p1));
    add_ln136_fu_597_p2 <= std_logic_vector(unsigned(tmp_s_fu_589_p3) + unsigned(zext_ln136_fu_585_p1));
    add_ln137_1_fu_967_p2 <= std_logic_vector(unsigned(add_ln137_reg_1905) + unsigned(zext_ln134_1_fu_953_p1));
    add_ln137_fu_579_p2 <= std_logic_vector(unsigned(tmp_fu_571_p3) + unsigned(zext_ln137_fu_567_p1));
    add_ln139_1_fu_1888_p2 <= std_logic_vector(unsigned(add_ln139_reg_1930) + unsigned(zext_ln134_1_reg_2037_pp0_iter7_reg));
    add_ln139_fu_669_p2 <= std_logic_vector(unsigned(tmp_4_fu_661_p3) + unsigned(zext_ln139_fu_657_p1));
    add_ln140_1_fu_1897_p2 <= std_logic_vector(unsigned(add_ln140_reg_1925) + unsigned(zext_ln134_1_reg_2037_pp0_iter7_reg));
    add_ln140_fu_651_p2 <= std_logic_vector(unsigned(tmp_3_fu_643_p3) + unsigned(zext_ln140_fu_639_p1));
    add_ln141_1_fu_1870_p2 <= std_logic_vector(unsigned(add_ln141_reg_1920) + unsigned(zext_ln134_1_reg_2037_pp0_iter7_reg));
    add_ln141_fu_633_p2 <= std_logic_vector(unsigned(tmp_2_fu_625_p3) + unsigned(zext_ln141_fu_621_p1));
    add_ln142_1_fu_1879_p2 <= std_logic_vector(unsigned(add_ln142_reg_1915) + unsigned(zext_ln134_1_reg_2037_pp0_iter7_reg));
    add_ln142_fu_615_p2 <= std_logic_vector(unsigned(tmp_1_fu_607_p3) + unsigned(zext_ln142_fu_603_p1));
    add_ln51_fu_741_p2 <= std_logic_vector(unsigned(i_reg_483) + unsigned(ap_const_lv5_1));
    add_ln52_2_fu_735_p2 <= std_logic_vector(unsigned(tmp_7_fu_715_p3) + unsigned(zext_ln52_20_fu_731_p1));
    add_ln52_3_fu_751_p2 <= std_logic_vector(unsigned(add_ln52_2_reg_1945) + unsigned(zext_ln52_21_fu_747_p1));
    add_ln52_4_fu_902_p2 <= std_logic_vector(unsigned(add_ln52_reg_1940) + unsigned(zext_ln52_23_fu_898_p1));
    add_ln52_fu_709_p2 <= std_logic_vector(unsigned(zext_ln52_19_fu_705_p1) + unsigned(zext_ln52_fu_693_p1));
    add_ln581_fu_1274_p2 <= std_logic_vector(unsigned(F2_reg_2118) + unsigned(ap_const_lv12_FEC));
    add_ln65_fu_781_p2 <= std_logic_vector(unsigned(i_1_reg_506) + unsigned(ap_const_lv5_1));
    add_ln66_fu_791_p2 <= std_logic_vector(unsigned(add_ln52_2_reg_1945) + unsigned(zext_ln66_fu_787_p1));
    and_ln571_fu_1425_p2 <= (xor_ln124_fu_1419_p2 and icmp_ln571_reg_2112);
    and_ln581_fu_1383_p2 <= (xor_ln582_fu_1377_p2 and icmp_ln581_fu_1269_p2);
    and_ln582_fu_1365_p2 <= (xor_ln571_fu_1359_p2 and icmp_ln582_fu_1292_p2);
    and_ln585_fu_1395_p2 <= (icmp_ln585_fu_1389_p2 and and_ln581_fu_1383_p2);
    and_ln603_fu_1413_p2 <= (xor_ln581_fu_1407_p2 and icmp_ln603_fu_1311_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state72 <= ap_CS_fsm(13);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln124_fu_887_p2)
    begin
        if ((icmp_ln124_fu_887_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_2_phi_fu_533_p4_assign_proc : process(i_2_reg_529, icmp_ln124_reg_2000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_2073, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_2_phi_fu_533_p4 <= j_reg_2073;
        else 
            ap_phi_mux_i_2_phi_fu_533_p4 <= i_2_reg_529;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_1325_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_1262_p3),to_integer(unsigned('0' & zext_ln586_fu_1321_p1(31-1 downto 0)))));
    bitcast_ln702_fu_1335_p1 <= get_parallelogram_slopesparallelogram_slopes_load_reg_2067;
    exp_tmp_fu_1138_p4 <= ireg_fu_1122_p1(62 downto 52);
    get_parallelogram_slopesparallelogram_slopes_address0 <= trunc_ln104_cast_fu_893_p1(2 - 1 downto 0);

    get_parallelogram_slopesparallelogram_slopes_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            get_parallelogram_slopesparallelogram_slopes_ce0 <= ap_const_logic_1;
        else 
            get_parallelogram_slopesparallelogram_slopes_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_541_j_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, icmp_ln124_reg_2000_pp0_iter1_reg, j_reg_2073, j_reg_2073_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_j <= j_reg_2073_pp0_iter1_reg;
        elsif ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_j <= j_reg_2073;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_j <= "XXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, sext_ln97_reg_1983, sext_ln97_1_reg_1989, icmp_ln124_reg_2000_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= sext_ln97_reg_1983;
        elsif ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= sext_ln97_1_reg_1989;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, icmp_ln124_reg_2000_pp0_iter1_reg, select_ln53_30_fu_1850_p3, select_ln53_30_reg_2291, select_ln67_31_reg_2296, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln67_31_reg_2296;
        elsif (((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln53_30_reg_2291;
        elsif (((icmp_ln124_reg_2000_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= select_ln53_30_fu_1850_p3;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_541_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln124_1_fu_1240_p2 <= "1" when (j_reg_2073 = ap_const_lv3_5) else "0";
    icmp_ln124_fu_887_p2 <= "1" when (ap_phi_mux_i_2_phi_fu_533_p4 = ap_const_lv3_5) else "0";
    icmp_ln1494_21_fu_1025_p2 <= "1" when (signed(superpoints_V_q1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_22_fu_1094_p2 <= "1" when (signed(reg_562) > signed(select_ln67_16_cast_fu_1091_p1)) else "0";
    icmp_ln1494_23_fu_1108_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_17_fu_1100_p3)) else "0";
    icmp_ln1494_24_fu_1214_p2 <= "1" when (signed(reg_562) > signed(select_ln67_18_reg_2096)) else "0";
    icmp_ln1494_25_fu_1226_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_19_fu_1219_p3)) else "0";
    icmp_ln1494_26_fu_1490_p2 <= "1" when (signed(reg_562) > signed(select_ln67_20_reg_2142)) else "0";
    icmp_ln1494_27_fu_1502_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_21_fu_1495_p3)) else "0";
    icmp_ln1494_28_fu_1623_p2 <= "1" when (signed(reg_562) > signed(select_ln67_22_reg_2207)) else "0";
    icmp_ln1494_29_fu_1635_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_23_fu_1628_p3)) else "0";
    icmp_ln1494_30_fu_1695_p2 <= "1" when (signed(reg_562) > signed(select_ln67_24_reg_2229)) else "0";
    icmp_ln1494_31_fu_1707_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_25_fu_1700_p3)) else "0";
    icmp_ln1494_32_fu_1767_p2 <= "1" when (signed(reg_562) > signed(select_ln67_26_reg_2251)) else "0";
    icmp_ln1494_33_fu_1779_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_27_fu_1772_p3)) else "0";
    icmp_ln1494_34_fu_1819_p2 <= "1" when (signed(reg_562) > signed(select_ln67_28_reg_2273)) else "0";
    icmp_ln1494_35_fu_1831_p2 <= "1" when (signed(superpoints_V_q0) > signed(select_ln67_29_fu_1824_p3)) else "0";
    icmp_ln1494_36_fu_1858_p2 <= "1" when (signed(reg_562) > signed(select_ln67_30_reg_2285)) else "0";
    icmp_ln1494_6_fu_843_p2 <= "1" when (signed(z1_min_tmp_V_fu_813_p3) > signed(z1_max_tmp_V_fu_831_p3)) else "0";
    icmp_ln1494_7_fu_873_p2 <= "1" when (signed(superpoints_V_q0) > signed(p_012_i230_reg_517)) else "0";
    icmp_ln1494_fu_807_p2 <= "1" when (signed(p_012_i_reg_494) > signed(ap_const_lv32_FE9FFF98)) else "0";
    icmp_ln1495_20_fu_1011_p2 <= "0" when (tmp_12_fu_1001_p4 = ap_const_lv2_1) else "1";
    icmp_ln1495_21_fu_1065_p2 <= "1" when (signed(reg_562) < signed(select_ln53_reg_2056)) else "0";
    icmp_ln1495_22_fu_1077_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_16_fu_1070_p3)) else "0";
    icmp_ln1495_23_fu_1188_p2 <= "1" when (signed(reg_562) < signed(select_ln53_17_reg_2090)) else "0";
    icmp_ln1495_24_fu_1200_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_18_fu_1193_p3)) else "0";
    icmp_ln1495_25_fu_1464_p2 <= "1" when (signed(reg_562) < signed(select_ln53_19_reg_2136)) else "0";
    icmp_ln1495_26_fu_1476_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_20_fu_1469_p3)) else "0";
    icmp_ln1495_27_fu_1597_p2 <= "1" when (signed(reg_562) < signed(select_ln53_21_reg_2201)) else "0";
    icmp_ln1495_28_fu_1609_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_22_fu_1602_p3)) else "0";
    icmp_ln1495_29_fu_1669_p2 <= "1" when (signed(reg_562) < signed(select_ln53_23_reg_2223)) else "0";
    icmp_ln1495_30_fu_1681_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_24_fu_1674_p3)) else "0";
    icmp_ln1495_31_fu_1741_p2 <= "1" when (signed(reg_562) < signed(select_ln53_25_reg_2245)) else "0";
    icmp_ln1495_32_fu_1753_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_26_fu_1746_p3)) else "0";
    icmp_ln1495_33_fu_1793_p2 <= "1" when (signed(reg_562) < signed(select_ln53_27_reg_2267)) else "0";
    icmp_ln1495_34_fu_1805_p2 <= "1" when (signed(superpoints_V_q0) < signed(select_ln53_28_fu_1798_p3)) else "0";
    icmp_ln1495_35_fu_1845_p2 <= "1" when (signed(reg_562) < signed(select_ln53_29_reg_2279)) else "0";
    icmp_ln1495_9_fu_825_p2 <= "1" when (signed(p_012_i230_reg_517) < signed(ap_const_lv32_1600068)) else "0";
    icmp_ln1495_fu_767_p2 <= "1" when (signed(superpoints_V_q0) < signed(p_012_i_reg_494)) else "0";
    icmp_ln51_fu_761_p2 <= "1" when (i_reg_483 = ap_const_lv5_10) else "0";
    icmp_ln571_fu_1156_p2 <= "1" when (trunc_ln555_fu_1126_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_1269_p2 <= "1" when (signed(F2_reg_2118) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_fu_1292_p2 <= "1" when (F2_reg_2118 = ap_const_lv12_14) else "0";
    icmp_ln585_fu_1389_p2 <= "1" when (unsigned(sh_amt_fu_1284_p3) > unsigned(ap_const_lv12_35)) else "0";
    icmp_ln603_fu_1311_p2 <= "1" when (tmp_14_fu_1301_p4 = ap_const_lv7_0) else "0";
    icmp_ln65_fu_801_p2 <= "1" when (i_1_reg_506 = ap_const_lv5_10) else "0";
    ireg_fu_1122_p1 <= grp_fu_558_p1;
    j_fu_1039_p2 <= std_logic_vector(unsigned(i_2_reg_529) + unsigned(ap_const_lv3_1));
    man_V_1_fu_1256_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1252_p1));
    man_V_2_fu_1262_p3 <= 
        man_V_1_fu_1256_p2 when (p_Result_s_reg_2102(0) = '1') else 
        zext_ln569_fu_1252_p1;
    or_ln52_15_fu_977_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_2);
    or_ln52_16_fu_987_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_3);
    or_ln52_17_fu_1045_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_4);
    or_ln52_18_fu_1055_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_5);
    or_ln52_19_fu_1168_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_6);
    or_ln52_20_fu_1178_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_7);
    or_ln52_21_fu_1444_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_8);
    or_ln52_22_fu_1454_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_9);
    or_ln52_23_fu_1577_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_A);
    or_ln52_24_fu_1587_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_B);
    or_ln52_25_fu_1649_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_C);
    or_ln52_26_fu_1659_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_D);
    or_ln52_27_fu_1721_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_E);
    or_ln52_28_fu_1731_p2 <= (tmp_24_cast_reg_2004 or ap_const_lv8_F);
    or_ln52_fu_932_p2 <= (tmp_24_cast_fu_924_p3 or ap_const_lv8_1);
    or_ln571_1_fu_1430_p2 <= (and_ln603_fu_1413_p2 or and_ln571_fu_1425_p2);
    or_ln571_2_fu_1537_p2 <= (icmp_ln124_1_reg_2148 or and_ln582_reg_2164);
    or_ln571_3_fu_1547_p2 <= (or_ln571_1_reg_2180 or and_ln581_reg_2170);
    or_ln571_fu_1354_p2 <= (icmp_ln571_reg_2112 or icmp_ln124_1_fu_1240_p2);
    or_ln581_fu_1401_p2 <= (or_ln582_fu_1371_p2 or icmp_ln581_fu_1269_p2);
    or_ln582_fu_1371_p2 <= (or_ln571_fu_1354_p2 or icmp_ln582_fu_1292_p2);
    pSlope_V_address0 <= zext_ln134_2_fu_1572_p1(4 - 1 downto 0);

    pSlope_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            pSlope_V_ce0 <= ap_const_logic_1;
        else 
            pSlope_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pSlope_V_d0 <= 
        select_ln571_3_fu_1541_p3 when (or_ln571_3_fu_1547_p2(0) = '1') else 
        select_ln571_4_fu_1551_p3;

    pSlope_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln124_reg_2000, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln124_reg_2000 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            pSlope_V_we0 <= ap_const_logic_1;
        else 
            pSlope_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_1245_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_2107);
    parallelogram_index_fu_947_p2 <= std_logic_vector(unsigned(trunc_ln133_fu_943_p1) + unsigned(ap_const_lv2_3));
    select_ln53_16_fu_1070_p3 <= 
        reg_562 when (icmp_ln1495_21_fu_1065_p2(0) = '1') else 
        select_ln53_reg_2056;
    select_ln53_17_fu_1083_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_22_fu_1077_p2(0) = '1') else 
        select_ln53_16_fu_1070_p3;
    select_ln53_18_fu_1193_p3 <= 
        reg_562 when (icmp_ln1495_23_fu_1188_p2(0) = '1') else 
        select_ln53_17_reg_2090;
    select_ln53_19_fu_1206_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_24_fu_1200_p2(0) = '1') else 
        select_ln53_18_fu_1193_p3;
    select_ln53_20_fu_1469_p3 <= 
        reg_562 when (icmp_ln1495_25_fu_1464_p2(0) = '1') else 
        select_ln53_19_reg_2136;
    select_ln53_21_fu_1482_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_26_fu_1476_p2(0) = '1') else 
        select_ln53_20_fu_1469_p3;
    select_ln53_22_fu_1602_p3 <= 
        reg_562 when (icmp_ln1495_27_fu_1597_p2(0) = '1') else 
        select_ln53_21_reg_2201;
    select_ln53_23_fu_1615_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_28_fu_1609_p2(0) = '1') else 
        select_ln53_22_fu_1602_p3;
    select_ln53_24_fu_1674_p3 <= 
        reg_562 when (icmp_ln1495_29_fu_1669_p2(0) = '1') else 
        select_ln53_23_reg_2223;
    select_ln53_25_fu_1687_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_30_fu_1681_p2(0) = '1') else 
        select_ln53_24_fu_1674_p3;
    select_ln53_26_fu_1746_p3 <= 
        reg_562 when (icmp_ln1495_31_fu_1741_p2(0) = '1') else 
        select_ln53_25_reg_2245;
    select_ln53_27_fu_1759_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_32_fu_1753_p2(0) = '1') else 
        select_ln53_26_fu_1746_p3;
    select_ln53_28_fu_1798_p3 <= 
        reg_562 when (icmp_ln1495_33_fu_1793_p2(0) = '1') else 
        select_ln53_27_reg_2267;
    select_ln53_29_fu_1811_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_34_fu_1805_p2(0) = '1') else 
        select_ln53_28_fu_1798_p3;
    select_ln53_30_fu_1850_p3 <= 
        reg_562 when (icmp_ln1495_35_fu_1845_p2(0) = '1') else 
        select_ln53_29_reg_2279;
    select_ln53_fu_1017_p3 <= 
        superpoints_V_q1 when (icmp_ln1495_20_fu_1011_p2(0) = '1') else 
        ap_const_lv32_40000000;
    select_ln571_1_fu_1436_p3 <= 
        select_ln588_fu_1346_p3 when (and_ln585_fu_1395_p2(0) = '1') else 
        trunc_ln586_1_fu_1331_p1;
    select_ln571_2_fu_1531_p3 <= 
        trunc_ln583_reg_2158 when (and_ln582_reg_2164(0) = '1') else 
        ap_const_lv32_40000000;
    select_ln571_3_fu_1541_p3 <= 
        select_ln571_fu_1524_p3 when (or_ln571_1_reg_2180(0) = '1') else 
        select_ln571_1_reg_2186;
    select_ln571_4_fu_1551_p3 <= 
        select_ln571_2_fu_1531_p3 when (or_ln571_2_fu_1537_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_fu_1524_p3 <= 
        ap_const_lv32_0 when (and_ln571_reg_2175(0) = '1') else 
        shl_ln604_fu_1519_p2;
    select_ln588_fu_1346_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_15_fu_1338_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln67_16_cast_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln67_16_reg_2062),32));
    select_ln67_16_fu_1031_p3 <= 
        trunc_ln1495_fu_997_p1 when (icmp_ln1494_21_fu_1025_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln67_17_fu_1100_p3 <= 
        reg_562 when (icmp_ln1494_22_fu_1094_p2(0) = '1') else 
        select_ln67_16_cast_fu_1091_p1;
    select_ln67_18_fu_1114_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_23_fu_1108_p2(0) = '1') else 
        select_ln67_17_fu_1100_p3;
    select_ln67_19_fu_1219_p3 <= 
        reg_562 when (icmp_ln1494_24_fu_1214_p2(0) = '1') else 
        select_ln67_18_reg_2096;
    select_ln67_20_fu_1232_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_25_fu_1226_p2(0) = '1') else 
        select_ln67_19_fu_1219_p3;
    select_ln67_21_fu_1495_p3 <= 
        reg_562 when (icmp_ln1494_26_fu_1490_p2(0) = '1') else 
        select_ln67_20_reg_2142;
    select_ln67_22_fu_1508_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_27_fu_1502_p2(0) = '1') else 
        select_ln67_21_fu_1495_p3;
    select_ln67_23_fu_1628_p3 <= 
        reg_562 when (icmp_ln1494_28_fu_1623_p2(0) = '1') else 
        select_ln67_22_reg_2207;
    select_ln67_24_fu_1641_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_29_fu_1635_p2(0) = '1') else 
        select_ln67_23_fu_1628_p3;
    select_ln67_25_fu_1700_p3 <= 
        reg_562 when (icmp_ln1494_30_fu_1695_p2(0) = '1') else 
        select_ln67_24_reg_2229;
    select_ln67_26_fu_1713_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_31_fu_1707_p2(0) = '1') else 
        select_ln67_25_fu_1700_p3;
    select_ln67_27_fu_1772_p3 <= 
        reg_562 when (icmp_ln1494_32_fu_1767_p2(0) = '1') else 
        select_ln67_26_reg_2251;
    select_ln67_28_fu_1785_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_33_fu_1779_p2(0) = '1') else 
        select_ln67_27_fu_1772_p3;
    select_ln67_29_fu_1824_p3 <= 
        reg_562 when (icmp_ln1494_34_fu_1819_p2(0) = '1') else 
        select_ln67_28_reg_2273;
    select_ln67_30_fu_1837_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_35_fu_1831_p2(0) = '1') else 
        select_ln67_29_fu_1824_p3;
    select_ln67_31_fu_1863_p3 <= 
        reg_562 when (icmp_ln1494_36_fu_1858_p2(0) = '1') else 
        select_ln67_30_reg_2285;
        sext_ln581_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2153),32));

        sext_ln97_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_min_tmp_V_1_fu_861_p3),32));

        sext_ln97_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_max_tmp_V_1_fu_849_p3),32));

    sh_amt_fu_1284_p3 <= 
        add_ln581_fu_1274_p2 when (icmp_ln581_fu_1269_p2(0) = '1') else 
        sub_ln581_fu_1279_p2;
    shadow_bottomL_jL_V_address0 <= zext_ln141_1_fu_1874_p1(4 - 1 downto 0);

    shadow_bottomL_jL_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then 
            shadow_bottomL_jL_V_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jL_V_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

    shadow_bottomL_jL_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, icmp_ln124_reg_2000_pp0_iter7_reg, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln124_reg_2000_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then 
            shadow_bottomL_jL_V_we0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jR_V_address0 <= zext_ln139_1_fu_1892_p1(4 - 1 downto 0);

    shadow_bottomL_jR_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            shadow_bottomL_jR_V_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomL_jR_V_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

    shadow_bottomL_jR_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln124_reg_2000_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln124_reg_2000_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            shadow_bottomL_jR_V_we0 <= ap_const_logic_1;
        else 
            shadow_bottomL_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jL_V_address0 <= zext_ln142_1_fu_1883_p1(4 - 1 downto 0);

    shadow_bottomR_jL_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            shadow_bottomR_jL_V_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jL_V_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

    shadow_bottomR_jL_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, icmp_ln124_reg_2000_pp0_iter7_reg, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln124_reg_2000_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            shadow_bottomR_jL_V_we0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jR_V_address0 <= zext_ln140_1_fu_1901_p1(4 - 1 downto 0);

    shadow_bottomR_jR_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            shadow_bottomR_jR_V_ce0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shadow_bottomR_jR_V_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_541_ap_return;

    shadow_bottomR_jR_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln124_reg_2000_pp0_iter8_reg, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln124_reg_2000_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            shadow_bottomR_jR_V_we0 <= ap_const_logic_1;
        else 
            shadow_bottomR_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln604_fu_1519_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_2158),to_integer(unsigned('0' & sext_ln581_fu_1516_p1(31-1 downto 0)))));
    sub_ln581_fu_1279_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_reg_2118));
    superpoint_0_max_z_fu_879_p3 <= 
        superpoints_V_q0 when (icmp_ln1494_7_fu_873_p2(0) = '1') else 
        p_012_i230_reg_517;
    superpoint_0_min_z_fu_773_p3 <= 
        superpoints_V_q0 when (icmp_ln1495_fu_767_p2(0) = '1') else 
        p_012_i_reg_494;

    superpoints_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, zext_ln52_22_fu_756_p1, zext_ln66_1_fu_796_p1, zext_ln52_25_fu_938_p1, zext_ln52_26_fu_982_p1, zext_ln52_28_fu_1050_p1, zext_ln52_30_fu_1173_p1, zext_ln52_32_fu_1449_p1, zext_ln52_34_fu_1582_p1, zext_ln52_36_fu_1654_p1, zext_ln52_38_fu_1726_p1, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_38_fu_1726_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_36_fu_1654_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_34_fu_1582_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_32_fu_1449_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_30_fu_1173_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_28_fu_1050_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_26_fu_982_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            superpoints_V_address0 <= zext_ln52_25_fu_938_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            superpoints_V_address0 <= zext_ln66_1_fu_796_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            superpoints_V_address0 <= zext_ln52_22_fu_756_p1(8 - 1 downto 0);
        else 
            superpoints_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    superpoints_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, zext_ln52_24_fu_919_p1, zext_ln52_27_fu_992_p1, zext_ln52_29_fu_1060_p1, zext_ln52_31_fu_1183_p1, zext_ln52_33_fu_1459_p1, zext_ln52_35_fu_1592_p1, zext_ln52_37_fu_1664_p1, ap_block_pp0_stage7, zext_ln52_39_fu_1736_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                superpoints_V_address1 <= zext_ln52_39_fu_1736_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                superpoints_V_address1 <= zext_ln52_37_fu_1664_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                superpoints_V_address1 <= zext_ln52_35_fu_1592_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                superpoints_V_address1 <= zext_ln52_33_fu_1459_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                superpoints_V_address1 <= zext_ln52_31_fu_1183_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                superpoints_V_address1 <= zext_ln52_29_fu_1060_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                superpoints_V_address1 <= zext_ln52_27_fu_992_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                superpoints_V_address1 <= zext_ln52_24_fu_919_p1(8 - 1 downto 0);
            else 
                superpoints_V_address1 <= "XXXXXXXX";
            end if;
        else 
            superpoints_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    superpoints_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            superpoints_V_ce0 <= ap_const_logic_1;
        else 
            superpoints_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    superpoints_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            superpoints_V_ce1 <= ap_const_logic_1;
        else 
            superpoints_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_911_p3 <= (add_ln52_4_fu_902_p2 & ap_const_lv4_0);
    tmp_12_fu_1001_p4 <= superpoints_V_q1(31 downto 30);
    tmp_14_fu_1301_p4 <= sh_amt_fu_1284_p3(11 downto 5);
    tmp_15_fu_1338_p3 <= bitcast_ln702_fu_1335_p1(31 downto 31);
    tmp_1_fu_607_p3 <= (shadow_bottomR_jL_V_offset & ap_const_lv2_0);
    tmp_24_cast_fu_924_p3 <= (trunc_ln52_fu_907_p1 & ap_const_lv4_0);
    tmp_2_fu_625_p3 <= (shadow_bottomL_jL_V_offset & ap_const_lv2_0);
    tmp_3_fu_643_p3 <= (shadow_bottomR_jR_V_offset & ap_const_lv2_0);
    tmp_4_fu_661_p3 <= (shadow_bottomL_jR_V_offset & ap_const_lv2_0);
    tmp_5_fu_679_p3 <= (pSlope_V_offset & ap_const_lv2_0);
    tmp_6_fu_697_p3 <= (superpoints_V_offset & ap_const_lv2_0);
    tmp_7_fu_715_p3 <= (superpoints_V_offset & ap_const_lv6_0);
    tmp_8_fu_723_p3 <= (superpoints_V_offset & ap_const_lv4_0);
    tmp_fu_571_p3 <= (z1_max_V_offset & ap_const_lv2_0);
    tmp_s_fu_589_p3 <= (z1_min_V_offset & ap_const_lv2_0);
    trunc_ln104_cast_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_2_phi_fu_533_p4),64));
    trunc_ln133_fu_943_p1 <= ap_phi_mux_i_2_phi_fu_533_p4(2 - 1 downto 0);
    trunc_ln1495_fu_997_p1 <= superpoints_V_q1(31 - 1 downto 0);
    trunc_ln52_fu_907_p1 <= add_ln52_4_fu_902_p2(4 - 1 downto 0);
    trunc_ln555_fu_1126_p1 <= ireg_fu_1122_p1(63 - 1 downto 0);
    trunc_ln565_fu_1152_p1 <= ireg_fu_1122_p1(52 - 1 downto 0);
    trunc_ln583_fu_1297_p1 <= man_V_2_fu_1262_p3(32 - 1 downto 0);
    trunc_ln586_1_fu_1331_p1 <= ashr_ln586_fu_1325_p2(32 - 1 downto 0);
    trunc_ln586_fu_1317_p1 <= sh_amt_fu_1284_p3(6 - 1 downto 0);
    trunc_ln94_fu_821_p1 <= z1_min_tmp_V_fu_813_p3(26 - 1 downto 0);
    trunc_ln95_fu_839_p1 <= z1_max_tmp_V_fu_831_p3(26 - 1 downto 0);
    xor_ln124_fu_1419_p2 <= (icmp_ln124_1_fu_1240_p2 xor ap_const_lv1_1);
    xor_ln571_fu_1359_p2 <= (or_ln571_fu_1354_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1407_p2 <= (or_ln581_fu_1401_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1377_p2 <= (or_ln582_fu_1371_p2 xor ap_const_lv1_1);
    z1_max_V_address0 <= zext_ln137_1_fu_972_p1(4 - 1 downto 0);

    z1_max_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            z1_max_V_ce0 <= ap_const_logic_1;
        else 
            z1_max_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_max_V_d0 <= sext_ln97_reg_1983;

    z1_max_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln124_fu_887_p2)
    begin
        if (((icmp_ln124_fu_887_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            z1_max_V_we0 <= ap_const_logic_1;
        else 
            z1_max_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_max_tmp_V_1_fu_849_p3 <= 
        ap_const_lv26_1700068 when (icmp_ln1494_6_fu_843_p2(0) = '1') else 
        trunc_ln95_fu_839_p1;
    z1_max_tmp_V_fu_831_p3 <= 
        p_012_i230_reg_517 when (icmp_ln1495_9_fu_825_p2(0) = '1') else 
        ap_const_lv32_1600068;
    z1_min_V_address0 <= zext_ln136_1_fu_962_p1(4 - 1 downto 0);

    z1_min_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            z1_min_V_ce0 <= ap_const_logic_1;
        else 
            z1_min_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_min_V_d0 <= sext_ln97_1_reg_1989;

    z1_min_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln124_fu_887_p2)
    begin
        if (((icmp_ln124_fu_887_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            z1_min_V_we0 <= ap_const_logic_1;
        else 
            z1_min_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_min_tmp_V_1_fu_861_p3 <= 
        ap_const_lv26_1700068 when (icmp_ln1494_6_fu_843_p2(0) = '1') else 
        trunc_ln94_fu_821_p1;
    z1_min_tmp_V_fu_813_p3 <= 
        p_012_i_reg_494 when (icmp_ln1494_fu_807_p2(0) = '1') else 
        ap_const_lv32_FE9FFF98;
    zext_ln134_1_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(parallelogram_index_fu_947_p2),4));
    zext_ln134_2_fu_1572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln134_1_fu_1568_p2),64));
    zext_ln134_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pSlope_V_offset),4));
    zext_ln136_1_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_1_fu_957_p2),64));
    zext_ln136_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_min_V_offset),4));
    zext_ln137_1_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln137_1_fu_967_p2),64));
    zext_ln137_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_max_V_offset),4));
    zext_ln139_1_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln139_1_fu_1888_p2),64));
    zext_ln139_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomL_jR_V_offset),4));
    zext_ln140_1_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln140_1_reg_2301),64));
    zext_ln140_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomR_jR_V_offset),4));
    zext_ln141_1_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln141_1_fu_1870_p2),64));
    zext_ln141_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomL_jL_V_offset),4));
    zext_ln142_1_fu_1883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln142_1_fu_1879_p2),64));
    zext_ln142_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shadow_bottomR_jL_V_offset),4));
    zext_ln455_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1138_p4),12));
    zext_ln52_19_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_697_p3),5));
    zext_ln52_20_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_723_p3),8));
    zext_ln52_21_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_483),8));
    zext_ln52_22_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_3_fu_751_p2),64));
    zext_ln52_23_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_2_phi_fu_533_p4),5));
    zext_ln52_24_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_911_p3),64));
    zext_ln52_25_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_fu_932_p2),64));
    zext_ln52_26_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_15_fu_977_p2),64));
    zext_ln52_27_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_16_fu_987_p2),64));
    zext_ln52_28_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_17_fu_1045_p2),64));
    zext_ln52_29_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_18_fu_1055_p2),64));
    zext_ln52_30_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_19_fu_1168_p2),64));
    zext_ln52_31_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_20_fu_1178_p2),64));
    zext_ln52_32_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_21_fu_1444_p2),64));
    zext_ln52_33_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_22_fu_1454_p2),64));
    zext_ln52_34_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_23_fu_1577_p2),64));
    zext_ln52_35_fu_1592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_24_fu_1587_p2),64));
    zext_ln52_36_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_25_fu_1649_p2),64));
    zext_ln52_37_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_26_fu_1659_p2),64));
    zext_ln52_38_fu_1726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_27_fu_1721_p2),64));
    zext_ln52_39_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_28_fu_1731_p2),64));
    zext_ln52_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(superpoints_V_offset),5));
    zext_ln569_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_1245_p3),54));
    zext_ln586_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_1317_p1),54));
    zext_ln66_1_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_791_p2),64));
    zext_ln66_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_506),8));
end behav;
