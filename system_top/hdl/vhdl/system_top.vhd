-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce1 : OUT STD_LOGIC;
    points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce1 : OUT STD_LOGIC;
    num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    patch_stream_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    patch_stream_V_full_n : IN STD_LOGIC;
    patch_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of system_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "system_top_system_top,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z030-sbg485-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.012986,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=35048,HLS_SYN_LUT=54609,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7FF00000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111111100000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_ce0 : STD_LOGIC;
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_ce0 : STD_LOGIC;
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_ce0 : STD_LOGIC;
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_ce0 : STD_LOGIC;
    signal system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index265_reg_510 : STD_LOGIC_VECTOR (1 downto 0);
    signal loop_index262_reg_521 : STD_LOGIC_VECTOR (1 downto 0);
    signal loop_index259_reg_532 : STD_LOGIC_VECTOR (1 downto 0);
    signal loop_index_reg_543 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_fu_610_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond2695_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2695_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index265_cast_fu_622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index265_cast_reg_739 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_53_fu_627_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond2684_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2684_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index262_cast_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index262_cast_reg_758 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_55_fu_644_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal exitcond2673_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2673_reg_773 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index259_cast_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index259_cast_reg_777 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_57_fu_661_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state11_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal exitcond2662_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2662_reg_792 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index_cast_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index_cast_reg_796 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_60_fu_678_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal patch_buffer_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal patch_buffer_V_ce0 : STD_LOGIC;
    signal patch_buffer_V_we0 : STD_LOGIC;
    signal patch_buffer_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal patch_buffer_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal patch_buffer_V_ce1 : STD_LOGIC;
    signal patch_buffer_V_we1 : STD_LOGIC;
    signal patch_buffer_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal patch_buffer_is_empty_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal patch_buffer_is_empty_ce0 : STD_LOGIC;
    signal patch_buffer_is_empty_we0 : STD_LOGIC;
    signal patch_buffer_is_empty_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal pSlope_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pSlope_V_ce0 : STD_LOGIC;
    signal pSlope_V_we0 : STD_LOGIC;
    signal pSlope_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jR_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal shadow_bottomL_jR_V_ce0 : STD_LOGIC;
    signal shadow_bottomL_jR_V_we0 : STD_LOGIC;
    signal shadow_bottomL_jR_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jR_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jR_V_ce1 : STD_LOGIC;
    signal shadow_bottomL_jR_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jR_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal shadow_bottomR_jR_V_ce0 : STD_LOGIC;
    signal shadow_bottomR_jR_V_we0 : STD_LOGIC;
    signal shadow_bottomR_jR_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jR_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jR_V_ce1 : STD_LOGIC;
    signal shadow_bottomR_jR_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jL_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal shadow_bottomL_jL_V_ce0 : STD_LOGIC;
    signal shadow_bottomL_jL_V_we0 : STD_LOGIC;
    signal shadow_bottomL_jL_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jL_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomL_jL_V_ce1 : STD_LOGIC;
    signal shadow_bottomL_jL_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jL_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal shadow_bottomR_jL_V_ce0 : STD_LOGIC;
    signal shadow_bottomR_jL_V_we0 : STD_LOGIC;
    signal shadow_bottomR_jL_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jL_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_bottomR_jL_V_ce1 : STD_LOGIC;
    signal shadow_bottomR_jL_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_min_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_min_V_ce0 : STD_LOGIC;
    signal z1_min_V_we0 : STD_LOGIC;
    signal z1_min_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_min_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_max_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_max_V_ce0 : STD_LOGIC;
    signal z1_max_V_we0 : STD_LOGIC;
    signal z1_max_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_max_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_corner_0_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_corner_0_V_ce0 : STD_LOGIC;
    signal a_corner_0_V_we0 : STD_LOGIC;
    signal a_corner_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_corner_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_corner_0_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_corner_0_V_ce0 : STD_LOGIC;
    signal b_corner_0_V_we0 : STD_LOGIC;
    signal b_corner_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_corner_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_corner_0_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_corner_0_V_ce0 : STD_LOGIC;
    signal c_corner_0_V_we0 : STD_LOGIC;
    signal c_corner_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_corner_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_corner_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_corner_0_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal d_corner_0_V_ce0 : STD_LOGIC;
    signal d_corner_0_V_we0 : STD_LOGIC;
    signal d_corner_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_corner_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topL_jL_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal shadow_fromTopToInnermost_topL_jL_V_ce0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topL_jL_V_we0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topL_jL_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topL_jL_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topL_jR_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal shadow_fromTopToInnermost_topL_jR_V_ce0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topL_jR_V_we0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topL_jR_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topL_jR_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topR_jL_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal shadow_fromTopToInnermost_topR_jL_V_ce0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topR_jL_V_we0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topR_jL_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topR_jL_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topR_jR_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal shadow_fromTopToInnermost_topR_jR_V_ce0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topR_jR_V_we0 : STD_LOGIC;
    signal shadow_fromTopToInnermost_topR_jR_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shadow_fromTopToInnermost_topR_jR_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squareAcceptance_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal squareAcceptance_ce0 : STD_LOGIC;
    signal squareAcceptance_we0 : STD_LOGIC;
    signal squareAcceptance_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal squareAcceptance_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal flatTop_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal flatTop_ce0 : STD_LOGIC;
    signal flatTop_we0 : STD_LOGIC;
    signal flatTop_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal flatBottom_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal flatBottom_ce0 : STD_LOGIC;
    signal flatBottom_we0 : STD_LOGIC;
    signal flatBottom_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal flatBottom_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal triangleAcceptance_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal triangleAcceptance_ce0 : STD_LOGIC;
    signal triangleAcceptance_we0 : STD_LOGIC;
    signal triangleAcceptance_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal triangleAcceptance_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_idle : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_ready : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_din : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_write : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce1 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_ce0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_we0 : STD_LOGIC;
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_59_reg_554 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond1_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal p_cast_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_p_shadowquilt_main_loop_make_verticle_strip IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce0 : OUT STD_LOGIC;
        points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce1 : OUT STD_LOGIC;
        points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce0 : OUT STD_LOGIC;
        num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce1 : OUT STD_LOGIC;
        num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        patch_stream_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        patch_stream_V_full_n : IN STD_LOGIC;
        patch_stream_V_write : OUT STD_LOGIC;
        patch_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patch_buffer_ce0 : OUT STD_LOGIC;
        patch_buffer_we0 : OUT STD_LOGIC;
        patch_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patch_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patch_buffer_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patch_buffer_ce1 : OUT STD_LOGIC;
        patch_buffer_we1 : OUT STD_LOGIC;
        patch_buffer_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patch_buffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        patch_buffer_is_empty_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        patch_buffer_is_empty_ce0 : OUT STD_LOGIC;
        patch_buffer_is_empty_we0 : OUT STD_LOGIC;
        patch_buffer_is_empty_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        pSlope_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        pSlope_ce0 : OUT STD_LOGIC;
        pSlope_we0 : OUT STD_LOGIC;
        pSlope_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jR_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomL_jR_ce0 : OUT STD_LOGIC;
        shadow_bottomL_jR_we0 : OUT STD_LOGIC;
        shadow_bottomL_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jR_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jR_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomL_jR_ce1 : OUT STD_LOGIC;
        shadow_bottomL_jR_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jR_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomR_jR_ce0 : OUT STD_LOGIC;
        shadow_bottomR_jR_we0 : OUT STD_LOGIC;
        shadow_bottomR_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jR_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jR_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomR_jR_ce1 : OUT STD_LOGIC;
        shadow_bottomR_jR_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jL_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomL_jL_ce0 : OUT STD_LOGIC;
        shadow_bottomL_jL_we0 : OUT STD_LOGIC;
        shadow_bottomL_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jL_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomL_jL_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomL_jL_ce1 : OUT STD_LOGIC;
        shadow_bottomL_jL_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jL_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomR_jL_ce0 : OUT STD_LOGIC;
        shadow_bottomR_jL_we0 : OUT STD_LOGIC;
        shadow_bottomR_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jL_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_bottomR_jL_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        shadow_bottomR_jL_ce1 : OUT STD_LOGIC;
        shadow_bottomR_jL_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topL_jL_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        shadow_fromTopToInnermost_topL_jL_ce0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topL_jL_we0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topL_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topL_jL_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topL_jR_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        shadow_fromTopToInnermost_topL_jR_ce0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topL_jR_we0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topL_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topL_jR_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topR_jL_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        shadow_fromTopToInnermost_topR_jL_ce0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topR_jL_we0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topR_jL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topR_jL_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topR_jR_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        shadow_fromTopToInnermost_topR_jR_ce0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topR_jR_we0 : OUT STD_LOGIC;
        shadow_fromTopToInnermost_topR_jR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shadow_fromTopToInnermost_topR_jR_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z1_min_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        z1_min_ce0 : OUT STD_LOGIC;
        z1_min_we0 : OUT STD_LOGIC;
        z1_min_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        z1_min_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z1_max_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        z1_max_ce0 : OUT STD_LOGIC;
        z1_max_we0 : OUT STD_LOGIC;
        z1_max_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        z1_max_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_corner_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        a_corner_0_ce0 : OUT STD_LOGIC;
        a_corner_0_we0 : OUT STD_LOGIC;
        a_corner_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_corner_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        a_corner_1_ce0 : OUT STD_LOGIC;
        a_corner_1_we0 : OUT STD_LOGIC;
        a_corner_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_corner_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_corner_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        b_corner_0_ce0 : OUT STD_LOGIC;
        b_corner_0_we0 : OUT STD_LOGIC;
        b_corner_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        b_corner_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        b_corner_1_ce0 : OUT STD_LOGIC;
        b_corner_1_we0 : OUT STD_LOGIC;
        b_corner_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        b_corner_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        c_corner_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        c_corner_0_ce0 : OUT STD_LOGIC;
        c_corner_0_we0 : OUT STD_LOGIC;
        c_corner_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_corner_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        c_corner_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        c_corner_1_ce0 : OUT STD_LOGIC;
        c_corner_1_we0 : OUT STD_LOGIC;
        c_corner_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_corner_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_corner_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        d_corner_0_ce0 : OUT STD_LOGIC;
        d_corner_0_we0 : OUT STD_LOGIC;
        d_corner_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_corner_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        d_corner_1_ce0 : OUT STD_LOGIC;
        d_corner_1_we0 : OUT STD_LOGIC;
        d_corner_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_corner_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        squareAcceptance_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        squareAcceptance_ce0 : OUT STD_LOGIC;
        squareAcceptance_we0 : OUT STD_LOGIC;
        squareAcceptance_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        squareAcceptance_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        flatTop_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        flatTop_ce0 : OUT STD_LOGIC;
        flatTop_we0 : OUT STD_LOGIC;
        flatTop_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        flatBottom_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        flatBottom_ce0 : OUT STD_LOGIC;
        flatBottom_we0 : OUT STD_LOGIC;
        flatBottom_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        flatBottom_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        triangleAcceptance_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        triangleAcceptance_ce0 : OUT STD_LOGIC;
        triangleAcceptance_we0 : OUT STD_LOGIC;
        triangleAcceptance_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        triangleAcceptance_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_embkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_patch_buffer_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_patch_buffer_is_empty IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_pSlope_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_shadow_bottomL_jR_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_z1_min_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_a_corner_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_a_corner_1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_squareAcceptance IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_U : component system_top_system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_embkb
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_address0,
        ce0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_ce0,
        q0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_q0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_U : component system_top_system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_embkb
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_address0,
        ce0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_ce0,
        q0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_q0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_U : component system_top_system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_embkb
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_address0,
        ce0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_ce0,
        q0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_q0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_U : component system_top_system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_embkb
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_address0,
        ce0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_ce0,
        q0 => system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_q0);

    patch_buffer_V_U : component system_top_patch_buffer_V
    generic map (
        DataWidth => 32,
        AddressRange => 240,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => patch_buffer_V_address0,
        ce0 => patch_buffer_V_ce0,
        we0 => patch_buffer_V_we0,
        d0 => patch_buffer_V_d0,
        q0 => patch_buffer_V_q0,
        address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address1,
        ce1 => patch_buffer_V_ce1,
        we1 => patch_buffer_V_we1,
        d1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d1,
        q1 => patch_buffer_V_q1);

    patch_buffer_is_empty_U : component system_top_patch_buffer_is_empty
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => patch_buffer_is_empty_address0,
        ce0 => patch_buffer_is_empty_ce0,
        we0 => patch_buffer_is_empty_we0,
        d0 => patch_buffer_is_empty_d0);

    pSlope_V_U : component system_top_pSlope_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pSlope_V_address0,
        ce0 => pSlope_V_ce0,
        we0 => pSlope_V_we0,
        d0 => pSlope_V_d0);

    shadow_bottomL_jR_V_U : component system_top_shadow_bottomL_jR_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_bottomL_jR_V_address0,
        ce0 => shadow_bottomL_jR_V_ce0,
        we0 => shadow_bottomL_jR_V_we0,
        d0 => shadow_bottomL_jR_V_d0,
        q0 => shadow_bottomL_jR_V_q0,
        address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address1,
        ce1 => shadow_bottomL_jR_V_ce1,
        q1 => shadow_bottomL_jR_V_q1);

    shadow_bottomR_jR_V_U : component system_top_shadow_bottomL_jR_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_bottomR_jR_V_address0,
        ce0 => shadow_bottomR_jR_V_ce0,
        we0 => shadow_bottomR_jR_V_we0,
        d0 => shadow_bottomR_jR_V_d0,
        q0 => shadow_bottomR_jR_V_q0,
        address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address1,
        ce1 => shadow_bottomR_jR_V_ce1,
        q1 => shadow_bottomR_jR_V_q1);

    shadow_bottomL_jL_V_U : component system_top_shadow_bottomL_jR_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_bottomL_jL_V_address0,
        ce0 => shadow_bottomL_jL_V_ce0,
        we0 => shadow_bottomL_jL_V_we0,
        d0 => shadow_bottomL_jL_V_d0,
        q0 => shadow_bottomL_jL_V_q0,
        address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address1,
        ce1 => shadow_bottomL_jL_V_ce1,
        q1 => shadow_bottomL_jL_V_q1);

    shadow_bottomR_jL_V_U : component system_top_shadow_bottomL_jR_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_bottomR_jL_V_address0,
        ce0 => shadow_bottomR_jL_V_ce0,
        we0 => shadow_bottomR_jL_V_we0,
        d0 => shadow_bottomR_jL_V_d0,
        q0 => shadow_bottomR_jL_V_q0,
        address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address1,
        ce1 => shadow_bottomR_jL_V_ce1,
        q1 => shadow_bottomR_jL_V_q1);

    z1_min_V_U : component system_top_z1_min_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z1_min_V_address0,
        ce0 => z1_min_V_ce0,
        we0 => z1_min_V_we0,
        d0 => z1_min_V_d0,
        q0 => z1_min_V_q0);

    z1_max_V_U : component system_top_z1_min_V
    generic map (
        DataWidth => 32,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z1_max_V_address0,
        ce0 => z1_max_V_ce0,
        we0 => z1_max_V_we0,
        d0 => z1_max_V_d0,
        q0 => z1_max_V_q0);

    a_corner_0_V_U : component system_top_a_corner_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => a_corner_0_V_address0,
        ce0 => a_corner_0_V_ce0,
        we0 => a_corner_0_V_we0,
        d0 => a_corner_0_V_d0);

    a_corner_1_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_address0,
        ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_ce0,
        we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_we0,
        d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_d0,
        q0 => a_corner_1_V_q0);

    b_corner_0_V_U : component system_top_a_corner_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_corner_0_V_address0,
        ce0 => b_corner_0_V_ce0,
        we0 => b_corner_0_V_we0,
        d0 => b_corner_0_V_d0);

    b_corner_1_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_address0,
        ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_ce0,
        we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_we0,
        d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_d0,
        q0 => b_corner_1_V_q0);

    c_corner_0_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => c_corner_0_V_address0,
        ce0 => c_corner_0_V_ce0,
        we0 => c_corner_0_V_we0,
        d0 => c_corner_0_V_d0,
        q0 => c_corner_0_V_q0);

    c_corner_1_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_address0,
        ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_ce0,
        we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_we0,
        d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_d0,
        q0 => c_corner_1_V_q0);

    d_corner_0_V_U : component system_top_a_corner_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => d_corner_0_V_address0,
        ce0 => d_corner_0_V_ce0,
        we0 => d_corner_0_V_we0,
        d0 => d_corner_0_V_d0);

    d_corner_1_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_address0,
        ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_ce0,
        we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_we0,
        d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_d0,
        q0 => d_corner_1_V_q0);

    shadow_fromTopToInnermost_topL_jL_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_fromTopToInnermost_topL_jL_V_address0,
        ce0 => shadow_fromTopToInnermost_topL_jL_V_ce0,
        we0 => shadow_fromTopToInnermost_topL_jL_V_we0,
        d0 => shadow_fromTopToInnermost_topL_jL_V_d0,
        q0 => shadow_fromTopToInnermost_topL_jL_V_q0);

    shadow_fromTopToInnermost_topL_jR_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_fromTopToInnermost_topL_jR_V_address0,
        ce0 => shadow_fromTopToInnermost_topL_jR_V_ce0,
        we0 => shadow_fromTopToInnermost_topL_jR_V_we0,
        d0 => shadow_fromTopToInnermost_topL_jR_V_d0,
        q0 => shadow_fromTopToInnermost_topL_jR_V_q0);

    shadow_fromTopToInnermost_topR_jL_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_fromTopToInnermost_topR_jL_V_address0,
        ce0 => shadow_fromTopToInnermost_topR_jL_V_ce0,
        we0 => shadow_fromTopToInnermost_topR_jL_V_we0,
        d0 => shadow_fromTopToInnermost_topR_jL_V_d0,
        q0 => shadow_fromTopToInnermost_topR_jL_V_q0);

    shadow_fromTopToInnermost_topR_jR_V_U : component system_top_a_corner_1_V
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shadow_fromTopToInnermost_topR_jR_V_address0,
        ce0 => shadow_fromTopToInnermost_topR_jR_V_ce0,
        we0 => shadow_fromTopToInnermost_topR_jR_V_we0,
        d0 => shadow_fromTopToInnermost_topR_jR_V_d0,
        q0 => shadow_fromTopToInnermost_topR_jR_V_q0);

    squareAcceptance_U : component system_top_squareAcceptance
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squareAcceptance_address0,
        ce0 => squareAcceptance_ce0,
        we0 => squareAcceptance_we0,
        d0 => squareAcceptance_d0,
        q0 => squareAcceptance_q0);

    flatTop_U : component system_top_patch_buffer_is_empty
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => flatTop_address0,
        ce0 => flatTop_ce0,
        we0 => flatTop_we0,
        d0 => flatTop_d0);

    flatBottom_U : component system_top_squareAcceptance
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => flatBottom_address0,
        ce0 => flatBottom_ce0,
        we0 => flatBottom_we0,
        d0 => flatBottom_d0,
        q0 => flatBottom_q0);

    triangleAcceptance_U : component system_top_squareAcceptance
    generic map (
        DataWidth => 1,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => triangleAcceptance_address0,
        ce0 => triangleAcceptance_ce0,
        we0 => triangleAcceptance_we0,
        d0 => triangleAcceptance_d0,
        q0 => triangleAcceptance_q0);

    grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565 : component system_top_p_shadowquilt_main_loop_make_verticle_strip
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start,
        ap_done => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done,
        ap_idle => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_idle,
        ap_ready => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_ready,
        points_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address0,
        points_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce0,
        points_q0 => points_q0,
        points_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address1,
        points_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce1,
        points_q1 => points_q1,
        num_points_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address0,
        num_points_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce0,
        num_points_q0 => num_points_q0,
        num_points_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address1,
        num_points_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce1,
        num_points_q1 => num_points_q1,
        patch_stream_V_din => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_din,
        patch_stream_V_full_n => patch_stream_V_full_n,
        patch_stream_V_write => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_write,
        patch_buffer_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address0,
        patch_buffer_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce0,
        patch_buffer_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we0,
        patch_buffer_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d0,
        patch_buffer_q0 => patch_buffer_V_q0,
        patch_buffer_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address1,
        patch_buffer_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce1,
        patch_buffer_we1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we1,
        patch_buffer_d1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d1,
        patch_buffer_q1 => patch_buffer_V_q1,
        patch_buffer_is_empty_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_address0,
        patch_buffer_is_empty_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_ce0,
        patch_buffer_is_empty_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_we0,
        patch_buffer_is_empty_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_d0,
        pSlope_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_address0,
        pSlope_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_ce0,
        pSlope_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_we0,
        pSlope_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_d0,
        shadow_bottomL_jR_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address0,
        shadow_bottomL_jR_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce0,
        shadow_bottomL_jR_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_we0,
        shadow_bottomL_jR_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_d0,
        shadow_bottomL_jR_q0 => shadow_bottomL_jR_V_q0,
        shadow_bottomL_jR_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address1,
        shadow_bottomL_jR_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce1,
        shadow_bottomL_jR_q1 => shadow_bottomL_jR_V_q1,
        shadow_bottomR_jR_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address0,
        shadow_bottomR_jR_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce0,
        shadow_bottomR_jR_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_we0,
        shadow_bottomR_jR_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_d0,
        shadow_bottomR_jR_q0 => shadow_bottomR_jR_V_q0,
        shadow_bottomR_jR_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address1,
        shadow_bottomR_jR_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce1,
        shadow_bottomR_jR_q1 => shadow_bottomR_jR_V_q1,
        shadow_bottomL_jL_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address0,
        shadow_bottomL_jL_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce0,
        shadow_bottomL_jL_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_we0,
        shadow_bottomL_jL_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_d0,
        shadow_bottomL_jL_q0 => shadow_bottomL_jL_V_q0,
        shadow_bottomL_jL_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address1,
        shadow_bottomL_jL_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce1,
        shadow_bottomL_jL_q1 => shadow_bottomL_jL_V_q1,
        shadow_bottomR_jL_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address0,
        shadow_bottomR_jL_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce0,
        shadow_bottomR_jL_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_we0,
        shadow_bottomR_jL_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_d0,
        shadow_bottomR_jL_q0 => shadow_bottomR_jL_V_q0,
        shadow_bottomR_jL_address1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address1,
        shadow_bottomR_jL_ce1 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce1,
        shadow_bottomR_jL_q1 => shadow_bottomR_jL_V_q1,
        shadow_fromTopToInnermost_topL_jL_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_address0,
        shadow_fromTopToInnermost_topL_jL_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_ce0,
        shadow_fromTopToInnermost_topL_jL_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_we0,
        shadow_fromTopToInnermost_topL_jL_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_d0,
        shadow_fromTopToInnermost_topL_jL_q0 => shadow_fromTopToInnermost_topL_jL_V_q0,
        shadow_fromTopToInnermost_topL_jR_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_address0,
        shadow_fromTopToInnermost_topL_jR_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_ce0,
        shadow_fromTopToInnermost_topL_jR_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_we0,
        shadow_fromTopToInnermost_topL_jR_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_d0,
        shadow_fromTopToInnermost_topL_jR_q0 => shadow_fromTopToInnermost_topL_jR_V_q0,
        shadow_fromTopToInnermost_topR_jL_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_address0,
        shadow_fromTopToInnermost_topR_jL_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_ce0,
        shadow_fromTopToInnermost_topR_jL_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_we0,
        shadow_fromTopToInnermost_topR_jL_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_d0,
        shadow_fromTopToInnermost_topR_jL_q0 => shadow_fromTopToInnermost_topR_jL_V_q0,
        shadow_fromTopToInnermost_topR_jR_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_address0,
        shadow_fromTopToInnermost_topR_jR_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_ce0,
        shadow_fromTopToInnermost_topR_jR_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_we0,
        shadow_fromTopToInnermost_topR_jR_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_d0,
        shadow_fromTopToInnermost_topR_jR_q0 => shadow_fromTopToInnermost_topR_jR_V_q0,
        z1_min_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_address0,
        z1_min_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_ce0,
        z1_min_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_we0,
        z1_min_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_d0,
        z1_min_q0 => z1_min_V_q0,
        z1_max_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_address0,
        z1_max_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_ce0,
        z1_max_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_we0,
        z1_max_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_d0,
        z1_max_q0 => z1_max_V_q0,
        a_corner_0_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_address0,
        a_corner_0_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_ce0,
        a_corner_0_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_we0,
        a_corner_0_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_d0,
        a_corner_1_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_address0,
        a_corner_1_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_ce0,
        a_corner_1_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_we0,
        a_corner_1_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_1_d0,
        a_corner_1_q0 => a_corner_1_V_q0,
        b_corner_0_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_address0,
        b_corner_0_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_ce0,
        b_corner_0_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_we0,
        b_corner_0_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_d0,
        b_corner_1_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_address0,
        b_corner_1_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_ce0,
        b_corner_1_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_we0,
        b_corner_1_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_1_d0,
        b_corner_1_q0 => b_corner_1_V_q0,
        c_corner_0_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_address0,
        c_corner_0_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_ce0,
        c_corner_0_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_we0,
        c_corner_0_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_d0,
        c_corner_0_q0 => c_corner_0_V_q0,
        c_corner_1_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_address0,
        c_corner_1_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_ce0,
        c_corner_1_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_we0,
        c_corner_1_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_1_d0,
        c_corner_1_q0 => c_corner_1_V_q0,
        d_corner_0_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_address0,
        d_corner_0_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_ce0,
        d_corner_0_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_we0,
        d_corner_0_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_d0,
        d_corner_1_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_address0,
        d_corner_1_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_ce0,
        d_corner_1_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_we0,
        d_corner_1_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_1_d0,
        d_corner_1_q0 => d_corner_1_V_q0,
        squareAcceptance_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_address0,
        squareAcceptance_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_ce0,
        squareAcceptance_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_we0,
        squareAcceptance_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_d0,
        squareAcceptance_q0 => squareAcceptance_q0,
        flatTop_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_address0,
        flatTop_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_ce0,
        flatTop_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_we0,
        flatTop_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_d0,
        flatBottom_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_address0,
        flatBottom_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_ce0,
        flatBottom_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_we0,
        flatBottom_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_d0,
        flatBottom_q0 => flatBottom_q0,
        triangleAcceptance_address0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_address0,
        triangleAcceptance_ce0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_ce0,
        triangleAcceptance_we0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_we0,
        triangleAcceptance_d0 => grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_d0,
        triangleAcceptance_q0 => triangleAcceptance_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state11) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state11);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_ready = ap_const_logic_1)) then 
                    grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_59_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                empty_59_reg_554 <= ap_const_lv2_0;
            elsif (((exitcond1_fu_684_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                empty_59_reg_554 <= empty_60_fu_678_p2;
            end if; 
        end if;
    end process;

    loop_index259_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                loop_index259_reg_532 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2673_fu_650_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                loop_index259_reg_532 <= empty_55_fu_644_p2;
            end if; 
        end if;
    end process;

    loop_index262_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2684_fu_633_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                loop_index262_reg_521 <= empty_53_fu_627_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                loop_index262_reg_521 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    loop_index265_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2695_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                loop_index265_reg_510 <= empty_fu_610_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                loop_index265_reg_510 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    loop_index_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                loop_index_reg_543 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2662_fu_667_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                loop_index_reg_543 <= empty_57_fu_661_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                exitcond2662_reg_792 <= exitcond2662_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                exitcond2673_reg_773 <= exitcond2673_fu_650_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond2684_reg_754 <= exitcond2684_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond2695_reg_735 <= exitcond2695_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2673_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                    loop_index259_cast_reg_777(1 downto 0) <= loop_index259_cast_fu_656_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2684_fu_633_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    loop_index262_cast_reg_758(1 downto 0) <= loop_index262_cast_fu_639_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2695_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    loop_index265_cast_reg_739(1 downto 0) <= loop_index265_cast_fu_622_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2662_fu_667_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                    loop_index_cast_reg_796(1 downto 0) <= loop_index_cast_fu_673_p1(1 downto 0);
            end if;
        end if;
    end process;
    loop_index265_cast_reg_739(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    loop_index262_cast_reg_758(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    loop_index259_cast_reg_777(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    loop_index_cast_reg_796(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, exitcond2695_fu_616_p2, ap_enable_reg_pp1_iter0, exitcond2684_fu_633_p2, ap_enable_reg_pp2_iter0, exitcond2673_fu_650_p2, ap_enable_reg_pp3_iter0, exitcond2662_fu_667_p2, ap_CS_fsm_state14, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done, exitcond1_fu_684_p2, ap_CS_fsm_state16)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond2695_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond2695_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((exitcond2684_fu_633_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((exitcond2684_fu_633_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((exitcond2673_fu_650_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((exitcond2673_fu_650_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((exitcond2662_fu_667_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((exitcond2662_fu_667_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((exitcond1_fu_684_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;

    a_corner_0_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_corner_0_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            a_corner_0_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_address0;
        else 
            a_corner_0_V_address0 <= "XX";
        end if; 
    end process;


    a_corner_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_corner_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            a_corner_0_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_ce0;
        else 
            a_corner_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_corner_0_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_corner_0_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            a_corner_0_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_d0;
        else 
            a_corner_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_corner_0_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_corner_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            a_corner_0_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_a_corner_0_we0;
        else 
            a_corner_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state13 <= ap_CS_fsm(8);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond2695_fu_616_p2)
    begin
        if ((exitcond2695_fu_616_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(exitcond2684_fu_633_p2)
    begin
        if ((exitcond2684_fu_633_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(exitcond2673_fu_650_p2)
    begin
        if ((exitcond2673_fu_650_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state11_assign_proc : process(exitcond2662_fu_667_p2)
    begin
        if ((exitcond2662_fu_667_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done, ap_CS_fsm_state16)
    begin
        if (((grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done, ap_CS_fsm_state16)
    begin
        if (((grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_corner_0_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            b_corner_0_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_corner_0_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_address0;
        else 
            b_corner_0_V_address0 <= "XX";
        end if; 
    end process;


    b_corner_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            b_corner_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_corner_0_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_ce0;
        else 
            b_corner_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_corner_0_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            b_corner_0_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_corner_0_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_d0;
        else 
            b_corner_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    b_corner_0_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            b_corner_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_corner_0_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_b_corner_0_we0;
        else 
            b_corner_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_corner_0_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c_corner_0_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c_corner_0_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_address0;
        else 
            c_corner_0_V_address0 <= "XX";
        end if; 
    end process;


    c_corner_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c_corner_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c_corner_0_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_ce0;
        else 
            c_corner_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_corner_0_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c_corner_0_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c_corner_0_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_d0;
        else 
            c_corner_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_corner_0_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c_corner_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c_corner_0_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_c_corner_0_we0;
        else 
            c_corner_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_corner_0_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_corner_0_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            d_corner_0_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_address0;
        else 
            d_corner_0_V_address0 <= "XX";
        end if; 
    end process;


    d_corner_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_corner_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            d_corner_0_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_ce0;
        else 
            d_corner_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_corner_0_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_corner_0_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            d_corner_0_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_d0;
        else 
            d_corner_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_corner_0_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_corner_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            d_corner_0_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_d_corner_0_we0;
        else 
            d_corner_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_53_fu_627_p2 <= std_logic_vector(unsigned(loop_index262_reg_521) + unsigned(ap_const_lv2_1));
    empty_55_fu_644_p2 <= std_logic_vector(unsigned(loop_index259_reg_532) + unsigned(ap_const_lv2_1));
    empty_57_fu_661_p2 <= std_logic_vector(unsigned(loop_index_reg_543) + unsigned(ap_const_lv2_1));
    empty_60_fu_678_p2 <= std_logic_vector(unsigned(empty_59_reg_554) + unsigned(ap_const_lv2_1));
    empty_fu_610_p2 <= std_logic_vector(unsigned(loop_index265_reg_510) + unsigned(ap_const_lv2_1));
    exitcond1_fu_684_p2 <= "1" when (empty_59_reg_554 = ap_const_lv2_3) else "0";
    exitcond2662_fu_667_p2 <= "1" when (loop_index_reg_543 = ap_const_lv2_3) else "0";
    exitcond2673_fu_650_p2 <= "1" when (loop_index259_reg_532 = ap_const_lv2_3) else "0";
    exitcond2684_fu_633_p2 <= "1" when (loop_index262_reg_521 = ap_const_lv2_3) else "0";
    exitcond2695_fu_616_p2 <= "1" when (loop_index265_reg_510 = ap_const_lv2_3) else "0";

    flatBottom_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, loop_index_cast_reg_796, ap_enable_reg_pp3_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_address0, ap_CS_fsm_state16, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            flatBottom_address0 <= loop_index_cast_reg_796(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatBottom_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_address0;
        else 
            flatBottom_address0 <= "XX";
        end if; 
    end process;


    flatBottom_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_ce0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            flatBottom_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatBottom_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_ce0;
        else 
            flatBottom_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flatBottom_d0_assign_proc : process(system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_q0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_d0, ap_CS_fsm_state16, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            flatBottom_d0 <= system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatBottom_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_d0;
        else 
            flatBottom_d0 <= "X";
        end if; 
    end process;


    flatBottom_we0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, exitcond2662_reg_792, ap_enable_reg_pp3_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_we0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2662_reg_792 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            flatBottom_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatBottom_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatBottom_we0;
        else 
            flatBottom_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flatTop_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, loop_index259_cast_reg_777, ap_enable_reg_pp2_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_address0, ap_CS_fsm_state16, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            flatTop_address0 <= loop_index259_cast_reg_777(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatTop_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_address0;
        else 
            flatTop_address0 <= "XX";
        end if; 
    end process;


    flatTop_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_ce0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            flatTop_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatTop_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_ce0;
        else 
            flatTop_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flatTop_d0_assign_proc : process(system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_q0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_d0, ap_CS_fsm_state16, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            flatTop_d0 <= system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatTop_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_d0;
        else 
            flatTop_d0 <= "X";
        end if; 
    end process;


    flatTop_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, exitcond2673_reg_773, ap_enable_reg_pp2_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_we0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2673_reg_773 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            flatTop_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flatTop_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_flatTop_we0;
        else 
            flatTop_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_ap_start_reg;
    loop_index259_cast_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index259_reg_532),64));
    loop_index262_cast_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index262_reg_521),64));
    loop_index265_cast_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index265_reg_510),64));
    loop_index_cast_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_reg_543),64));
    num_points_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address0;
    num_points_address1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_address1;
    num_points_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce0;
    num_points_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_num_points_ce1;

    pSlope_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pSlope_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pSlope_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_address0;
        else 
            pSlope_V_address0 <= "XXXX";
        end if; 
    end process;


    pSlope_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pSlope_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pSlope_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_ce0;
        else 
            pSlope_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pSlope_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pSlope_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pSlope_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_d0;
        else 
            pSlope_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pSlope_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pSlope_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pSlope_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_pSlope_we0;
        else 
            pSlope_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_59_reg_554),64));

    patch_buffer_V_address0_assign_proc : process(ap_CS_fsm_state1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            patch_buffer_V_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_address0;
        else 
            patch_buffer_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    patch_buffer_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce0, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            patch_buffer_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce0;
        else 
            patch_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patch_buffer_V_ce1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_ce1;
        else 
            patch_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patch_buffer_V_d0_assign_proc : process(ap_CS_fsm_state1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            patch_buffer_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_d0;
        else 
            patch_buffer_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patch_buffer_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we0, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            patch_buffer_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we0;
        else 
            patch_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patch_buffer_V_we1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_V_we1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_we1;
        else 
            patch_buffer_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patch_buffer_is_empty_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, loop_index265_cast_reg_739, ap_enable_reg_pp0_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_address0, ap_CS_fsm_state16, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            patch_buffer_is_empty_address0 <= loop_index265_cast_reg_739(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_is_empty_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_address0;
        else 
            patch_buffer_is_empty_address0 <= "XX";
        end if; 
    end process;


    patch_buffer_is_empty_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_ce0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            patch_buffer_is_empty_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_is_empty_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_ce0;
        else 
            patch_buffer_is_empty_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patch_buffer_is_empty_d0_assign_proc : process(system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_q0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_d0, ap_CS_fsm_state16, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            patch_buffer_is_empty_d0 <= system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_is_empty_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_d0;
        else 
            patch_buffer_is_empty_d0 <= "X";
        end if; 
    end process;


    patch_buffer_is_empty_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, exitcond2695_reg_735, ap_enable_reg_pp0_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_we0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2695_reg_735 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            patch_buffer_is_empty_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_buffer_is_empty_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_buffer_is_empty_we0;
        else 
            patch_buffer_is_empty_we0 <= ap_const_logic_0;
        end if; 
    end process;

    patch_stream_V_din <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_din;

    patch_stream_V_write_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_write, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            patch_stream_V_write <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_patch_stream_V_write;
        else 
            patch_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    points_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address0;
    points_address1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_address1;
    points_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce0;
    points_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_points_ce1;

    shadow_bottomL_jL_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jL_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jL_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_address0;
        else 
            shadow_bottomL_jL_V_address0 <= "XXXX";
        end if; 
    end process;


    shadow_bottomL_jL_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jL_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jL_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce0;
        else 
            shadow_bottomL_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomL_jL_V_ce1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jL_V_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_ce1;
        else 
            shadow_bottomL_jL_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomL_jL_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jL_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jL_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_d0;
        else 
            shadow_bottomL_jL_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_bottomL_jL_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jL_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jL_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jL_we0;
        else 
            shadow_bottomL_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomL_jR_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jR_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jR_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_address0;
        else 
            shadow_bottomL_jR_V_address0 <= "XXXX";
        end if; 
    end process;


    shadow_bottomL_jR_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jR_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jR_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce0;
        else 
            shadow_bottomL_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomL_jR_V_ce1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jR_V_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_ce1;
        else 
            shadow_bottomL_jR_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomL_jR_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jR_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jR_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_d0;
        else 
            shadow_bottomL_jR_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_bottomL_jR_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomL_jR_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomL_jR_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomL_jR_we0;
        else 
            shadow_bottomL_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jL_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jL_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jL_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_address0;
        else 
            shadow_bottomR_jL_V_address0 <= "XXXX";
        end if; 
    end process;


    shadow_bottomR_jL_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jL_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jL_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce0;
        else 
            shadow_bottomR_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jL_V_ce1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jL_V_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_ce1;
        else 
            shadow_bottomR_jL_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jL_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jL_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jL_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_d0;
        else 
            shadow_bottomR_jL_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_bottomR_jL_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jL_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jL_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jL_we0;
        else 
            shadow_bottomR_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jR_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jR_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jR_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_address0;
        else 
            shadow_bottomR_jR_V_address0 <= "XXXX";
        end if; 
    end process;


    shadow_bottomR_jR_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jR_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jR_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce0;
        else 
            shadow_bottomR_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jR_V_ce1_assign_proc : process(grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce1, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jR_V_ce1 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_ce1;
        else 
            shadow_bottomR_jR_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_bottomR_jR_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jR_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jR_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_d0;
        else 
            shadow_bottomR_jR_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_bottomR_jR_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_bottomR_jR_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_bottomR_jR_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_bottomR_jR_we0;
        else 
            shadow_bottomR_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jL_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jL_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jL_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_address0;
        else 
            shadow_fromTopToInnermost_topL_jL_V_address0 <= "XX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jL_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jL_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jL_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_ce0;
        else 
            shadow_fromTopToInnermost_topL_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jL_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jL_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jL_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_d0;
        else 
            shadow_fromTopToInnermost_topL_jL_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jL_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jL_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jL_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jL_we0;
        else 
            shadow_fromTopToInnermost_topL_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jR_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jR_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jR_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_address0;
        else 
            shadow_fromTopToInnermost_topL_jR_V_address0 <= "XX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jR_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jR_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jR_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_ce0;
        else 
            shadow_fromTopToInnermost_topL_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jR_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jR_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jR_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_d0;
        else 
            shadow_fromTopToInnermost_topL_jR_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topL_jR_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topL_jR_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topL_jR_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topL_jR_we0;
        else 
            shadow_fromTopToInnermost_topL_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jL_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jL_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jL_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_address0;
        else 
            shadow_fromTopToInnermost_topR_jL_V_address0 <= "XX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jL_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jL_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jL_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_ce0;
        else 
            shadow_fromTopToInnermost_topR_jL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jL_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jL_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jL_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_d0;
        else 
            shadow_fromTopToInnermost_topR_jL_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jL_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jL_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jL_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jL_we0;
        else 
            shadow_fromTopToInnermost_topR_jL_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jR_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jR_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jR_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_address0;
        else 
            shadow_fromTopToInnermost_topR_jR_V_address0 <= "XX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jR_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jR_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jR_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_ce0;
        else 
            shadow_fromTopToInnermost_topR_jR_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jR_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jR_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jR_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_d0;
        else 
            shadow_fromTopToInnermost_topR_jR_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shadow_fromTopToInnermost_topR_jR_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shadow_fromTopToInnermost_topR_jR_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shadow_fromTopToInnermost_topR_jR_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_shadow_fromTopToInnermost_topR_jR_we0;
        else 
            shadow_fromTopToInnermost_topR_jR_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    squareAcceptance_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, loop_index262_cast_reg_758, ap_enable_reg_pp1_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_address0, ap_CS_fsm_state16, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            squareAcceptance_address0 <= loop_index262_cast_reg_758(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            squareAcceptance_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_address0;
        else 
            squareAcceptance_address0 <= "XX";
        end if; 
    end process;


    squareAcceptance_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_ce0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            squareAcceptance_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            squareAcceptance_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_ce0;
        else 
            squareAcceptance_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    squareAcceptance_d0_assign_proc : process(system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_q0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_d0, ap_CS_fsm_state16, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            squareAcceptance_d0 <= system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            squareAcceptance_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_d0;
        else 
            squareAcceptance_d0 <= "X";
        end if; 
    end process;


    squareAcceptance_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, exitcond2684_reg_754, ap_enable_reg_pp1_iter1, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_we0, ap_CS_fsm_state16)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2684_reg_754 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            squareAcceptance_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            squareAcceptance_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_squareAcceptance_we0;
        else 
            squareAcceptance_we0 <= ap_const_logic_0;
        end if; 
    end process;

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_address0 <= loop_index_cast_fu_673_p1(2 - 1 downto 0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_ce0 <= ap_const_logic_1;
        else 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatBottom_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_address0 <= loop_index259_cast_fu_656_p1(2 - 1 downto 0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_ce0 <= ap_const_logic_1;
        else 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_flatTop_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_address0 <= loop_index265_cast_fu_622_p1(2 - 1 downto 0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_ce0 <= ap_const_logic_1;
        else 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_patch_buffer_is_empty_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_address0 <= loop_index262_cast_fu_639_p1(2 - 1 downto 0);

    system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_ce0 <= ap_const_logic_1;
        else 
            system_top_ap_uint_96_512_unsigned_int_stream_ap_uint_96_0_squareAcceptance_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    triangleAcceptance_address0_assign_proc : process(ap_CS_fsm_state14, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_address0, ap_CS_fsm_state16, p_cast_fu_690_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            triangleAcceptance_address0 <= p_cast_fu_690_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            triangleAcceptance_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_address0;
        else 
            triangleAcceptance_address0 <= "XX";
        end if; 
    end process;


    triangleAcceptance_ce0_assign_proc : process(ap_CS_fsm_state14, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            triangleAcceptance_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            triangleAcceptance_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_ce0;
        else 
            triangleAcceptance_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    triangleAcceptance_d0_assign_proc : process(ap_CS_fsm_state14, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            triangleAcceptance_d0 <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            triangleAcceptance_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_d0;
        else 
            triangleAcceptance_d0 <= "X";
        end if; 
    end process;


    triangleAcceptance_we0_assign_proc : process(ap_CS_fsm_state14, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_we0, exitcond1_fu_684_p2, ap_CS_fsm_state16)
    begin
        if (((exitcond1_fu_684_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            triangleAcceptance_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            triangleAcceptance_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_triangleAcceptance_we0;
        else 
            triangleAcceptance_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_max_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_max_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_max_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_address0;
        else 
            z1_max_V_address0 <= "XXXX";
        end if; 
    end process;


    z1_max_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_max_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_max_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_ce0;
        else 
            z1_max_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_max_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_max_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_max_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_d0;
        else 
            z1_max_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    z1_max_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_max_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_max_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_max_we0;
        else 
            z1_max_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_min_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_min_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_min_V_address0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_address0;
        else 
            z1_min_V_address0 <= "XXXX";
        end if; 
    end process;


    z1_min_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_ce0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_min_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_min_V_ce0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_ce0;
        else 
            z1_min_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_min_V_d0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_min_V_d0 <= ap_const_lv32_7FF00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_min_V_d0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_d0;
        else 
            z1_min_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    z1_min_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z1_min_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            z1_min_V_we0 <= grp_p_shadowquilt_main_loop_make_verticle_strip_fu_565_z1_min_we0;
        else 
            z1_min_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
