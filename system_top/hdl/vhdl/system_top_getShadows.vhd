-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_getShadows is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
    patch_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    patch_ce0 : OUT STD_LOGIC;
    patch_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patch_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    patch_ce1 : OUT STD_LOGIC;
    patch_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    patch_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of system_top_getShadows is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_7FF00000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111111100000000000000000000";
    constant ap_const_lv32_3200000 : STD_LOGIC_VECTOR (31 downto 0) := "00000011001000000000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_FCDFFF98 : STD_LOGIC_VECTOR (31 downto 0) := "11111100110111111111111110011000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_253 : STD_LOGIC_VECTOR (2 downto 0);
    signal topL_jL_max_V_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_max_V_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_min_V_reg_289 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_min_V_reg_301 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln622_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state33_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state65_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln52_fu_347_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_reg_1088 : STD_LOGIC_VECTOR (4 downto 0);
    signal zTop_min_V_fu_359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zTop_min_V_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln622_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln622_reg_1098_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_cast_fu_399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_cast_reg_1102 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln623_fu_418_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln623_reg_1130 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln623_reg_1130_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln53_fu_462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_fu_476_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln67_reg_1151 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln53_2_fu_522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_2_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_2_fu_553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_2_reg_1172 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_4_fu_599_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_4_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_4_fu_625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_4_reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_6_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_6_reg_1210 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_6_fu_697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_6_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_8_fu_743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_8_reg_1232 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_8_fu_769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_8_reg_1238 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_10_fu_815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_10_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_10_fu_841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_10_reg_1260 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln623_fu_849_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln623_reg_1266 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln53_12_fu_893_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_12_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_12_fu_919_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_12_reg_1287 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_14_fu_945_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_14_reg_1293 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_14_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_14_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_15_fu_984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln53_15_reg_1305 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_15_fu_997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln67_15_reg_1310 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln162_fu_1007_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln162_reg_1315 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_reg_1320 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal icmp_ln1494_3_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_3_reg_1325 : STD_LOGIC_VECTOR (0 downto 0);
    signal topR_jL_reg_1330 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_4_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_4_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal topL_jR_reg_1340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal icmp_ln1495_7_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_7_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal topL_jL_max_V_1_fu_1032_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_min_V_2_fu_1038_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_max_V_1_fu_1044_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_min_V_2_fu_1056_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_j : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_phi_fu_257_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln52_3_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_4_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_5_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_6_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_7_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_8_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_9_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_10_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_11_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_12_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_13_fu_710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_14_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_15_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_16_fu_792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_17_fu_860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln52_18_fu_870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_335_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln52_1_fu_343_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln52_fu_331_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1494_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln52_2_fu_373_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_1_fu_377_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_386_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln52_fu_382_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln52_fu_407_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_1_fu_422_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_2_fu_432_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_446_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1495_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_5_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_fu_442_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal or_ln52_3_fu_484_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_4_fu_494_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_3_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_1_fu_509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_4_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_cast_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_6_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_1_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_7_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_5_fu_561_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_6_fu_571_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_5_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_3_fu_586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_6_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_8_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_3_fu_612_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_9_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_7_fu_633_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_8_fu_643_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_9_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_5_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_10_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_10_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_5_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_11_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_9_fu_705_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_10_fu_715_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_11_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_7_fu_730_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_12_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_12_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_7_fu_756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_13_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_11_fu_777_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_12_fu_787_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_13_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_9_fu_802_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_14_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_14_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_9_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_15_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_13_fu_855_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_14_fu_865_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1495_15_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_11_fu_880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_16_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_16_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_11_fu_906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_17_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_17_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_13_fu_932_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1495_18_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_18_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln67_13_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_19_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_19_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_20_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln623_fu_1004_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1495_8_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_313 : component system_top_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j,
        i => ap_const_lv3_5,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_313_j,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_253 <= add_ln623_reg_1266;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_253 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    topL_jL_max_V_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                topL_jL_max_V_reg_265 <= topL_jL_max_V_1_fu_1032_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                topL_jL_max_V_reg_265 <= ap_const_lv32_80000000;
            end if; 
        end if;
    end process;

    topL_jR_min_V_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                topL_jR_min_V_reg_289 <= topL_jR_min_V_2_fu_1038_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                topL_jR_min_V_reg_289 <= ap_const_lv32_7FF00000;
            end if; 
        end if;
    end process;

    topR_jL_max_V_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                topR_jL_max_V_reg_277 <= topR_jL_max_V_1_fu_1044_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                topR_jL_max_V_reg_277 <= ap_const_lv32_80000000;
            end if; 
        end if;
    end process;

    topR_jR_min_V_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                topR_jR_min_V_reg_301 <= topR_jR_min_V_2_fu_1056_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                topR_jR_min_V_reg_301 <= ap_const_lv32_7FF00000;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln162_reg_1315 <= add_ln162_fu_1007_p2;
                select_ln53_15_reg_1305 <= select_ln53_15_fu_984_p3;
                select_ln67_15_reg_1310 <= select_ln67_15_fu_997_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln52_reg_1088 <= add_ln52_fu_347_p2;
                zTop_min_V_reg_1093 <= zTop_min_V_fu_359_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln623_reg_1266 <= add_ln623_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                icmp_ln1494_3_reg_1325 <= icmp_ln1494_3_fu_1014_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                icmp_ln1494_4_reg_1335 <= icmp_ln1494_4_fu_1020_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1495_7_reg_1345 <= icmp_ln1495_7_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln622_reg_1098 <= icmp_ln622_fu_367_p2;
                icmp_ln622_reg_1098_pp0_iter1_reg <= icmp_ln622_reg_1098;
                icmp_ln622_reg_1098_pp0_iter2_reg <= icmp_ln622_reg_1098_pp0_iter1_reg;
                icmp_ln622_reg_1098_pp0_iter3_reg <= icmp_ln622_reg_1098_pp0_iter2_reg;
                icmp_ln622_reg_1098_pp0_iter4_reg <= icmp_ln622_reg_1098_pp0_iter3_reg;
                icmp_ln622_reg_1098_pp0_iter5_reg <= icmp_ln622_reg_1098_pp0_iter4_reg;
                icmp_ln622_reg_1098_pp0_iter6_reg <= icmp_ln622_reg_1098_pp0_iter5_reg;
                icmp_ln622_reg_1098_pp0_iter7_reg <= icmp_ln622_reg_1098_pp0_iter6_reg;
                icmp_ln622_reg_1098_pp0_iter8_reg <= icmp_ln622_reg_1098_pp0_iter7_reg;
                trunc_ln623_reg_1130_pp0_iter1_reg <= trunc_ln623_reg_1130;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_327 <= patch_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                select_ln53_10_reg_1254 <= select_ln53_10_fu_815_p3;
                select_ln67_10_reg_1260 <= select_ln67_10_fu_841_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                select_ln53_12_reg_1281 <= select_ln53_12_fu_893_p3;
                select_ln67_12_reg_1287 <= select_ln67_12_fu_919_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln53_14_reg_1293 <= select_ln53_14_fu_945_p3;
                select_ln67_14_reg_1299 <= select_ln67_14_fu_971_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                select_ln53_2_reg_1166 <= select_ln53_2_fu_522_p3;
                select_ln67_2_reg_1172 <= select_ln67_2_fu_553_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                select_ln53_4_reg_1188 <= select_ln53_4_fu_599_p3;
                select_ln67_4_reg_1194 <= select_ln67_4_fu_625_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                select_ln53_6_reg_1210 <= select_ln53_6_fu_671_p3;
                select_ln67_6_reg_1216 <= select_ln67_6_fu_697_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                select_ln53_8_reg_1232 <= select_ln53_8_fu_743_p3;
                select_ln67_8_reg_1238 <= select_ln67_8_fu_769_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln53_reg_1145 <= select_ln53_fu_462_p3;
                select_ln67_reg_1151 <= select_ln67_fu_476_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln622_fu_367_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_11_cast_reg_1102(7 downto 4) <= tmp_11_cast_fu_399_p3(7 downto 4);
                trunc_ln623_reg_1130 <= trunc_ln623_fu_418_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                topL_jL_reg_1320 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                topL_jR_reg_1340 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln622_reg_1098_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                topR_jL_reg_1330 <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return;
            end if;
        end if;
    end process;
    tmp_11_cast_reg_1102(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln162_fu_1007_p2 <= std_logic_vector(unsigned(zext_ln623_fu_1004_p1) + unsigned(ap_const_lv3_1));
    add_ln52_1_fu_377_p2 <= std_logic_vector(unsigned(add_ln52_reg_1088) + unsigned(zext_ln52_2_fu_373_p1));
    add_ln52_fu_347_p2 <= std_logic_vector(unsigned(zext_ln52_1_fu_343_p1) + unsigned(zext_ln52_fu_331_p1));
    add_ln623_fu_849_p2 <= std_logic_vector(unsigned(i_reg_253) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state68 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln622_reg_1098, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((icmp_ln622_reg_1098 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_257_p4_assign_proc : process(i_reg_253, icmp_ln622_reg_1098, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln623_reg_1266, ap_block_pp0_stage0)
    begin
        if (((icmp_ln622_reg_1098 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_257_p4 <= add_ln623_reg_1266;
        else 
            ap_phi_mux_i_phi_fu_257_p4 <= i_reg_253;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= topL_jL_max_V_reg_265;
    ap_return_1 <= topL_jR_min_V_reg_289;
    ap_return_2 <= topR_jL_max_V_reg_277;
    ap_return_3 <= topR_jR_min_V_reg_301;
    grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_313_j_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, icmp_ln622_reg_1098_pp0_iter1_reg, add_ln162_fu_1007_p2, add_ln162_reg_1315, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_j <= add_ln162_reg_1315;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_j <= add_ln162_fu_1007_p2;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_j <= "XXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, zTop_min_V_reg_1093, icmp_ln622_reg_1098_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i <= ap_const_lv32_3200000;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i <= zTop_min_V_reg_1093;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, icmp_ln622_reg_1098_pp0_iter1_reg, select_ln53_15_fu_984_p3, select_ln53_15_reg_1305, select_ln67_15_reg_1310, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j <= select_ln67_15_reg_1310;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j <= select_ln53_15_reg_1305;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln622_reg_1098_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j <= select_ln53_15_fu_984_p3;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_313_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln1494_10_fu_679_p2 <= "1" when (signed(reg_327) > signed(select_ln67_4_reg_1194)) else "0";
    icmp_ln1494_11_fu_691_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_5_fu_684_p3)) else "0";
    icmp_ln1494_12_fu_751_p2 <= "1" when (signed(reg_327) > signed(select_ln67_6_reg_1216)) else "0";
    icmp_ln1494_13_fu_763_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_7_fu_756_p3)) else "0";
    icmp_ln1494_14_fu_823_p2 <= "1" when (signed(reg_327) > signed(select_ln67_8_reg_1238)) else "0";
    icmp_ln1494_15_fu_835_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_9_fu_828_p3)) else "0";
    icmp_ln1494_16_fu_901_p2 <= "1" when (signed(reg_327) > signed(select_ln67_10_reg_1260)) else "0";
    icmp_ln1494_17_fu_913_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_11_fu_906_p3)) else "0";
    icmp_ln1494_18_fu_953_p2 <= "1" when (signed(reg_327) > signed(select_ln67_12_reg_1287)) else "0";
    icmp_ln1494_19_fu_965_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_13_fu_958_p3)) else "0";
    icmp_ln1494_20_fu_992_p2 <= "1" when (signed(reg_327) > signed(select_ln67_14_reg_1299)) else "0";
    icmp_ln1494_3_fu_1014_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) > signed(topL_jL_max_V_reg_265)) else "0";
    icmp_ln1494_4_fu_1020_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) > signed(topR_jL_max_V_reg_277)) else "0";
    icmp_ln1494_5_fu_470_p2 <= "1" when (signed(patch_q1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_6_fu_533_p2 <= "1" when (signed(reg_327) > signed(select_ln67_cast_fu_530_p1)) else "0";
    icmp_ln1494_7_fu_547_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_1_fu_539_p3)) else "0";
    icmp_ln1494_8_fu_607_p2 <= "1" when (signed(reg_327) > signed(select_ln67_2_reg_1172)) else "0";
    icmp_ln1494_9_fu_619_p2 <= "1" when (signed(patch_q1) > signed(select_ln67_3_fu_612_p3)) else "0";
    icmp_ln1494_fu_353_p2 <= "1" when (signed(zTopMin) > signed(ap_const_lv32_FCDFFF98)) else "0";
    icmp_ln1495_10_fu_665_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_5_fu_658_p3)) else "0";
    icmp_ln1495_11_fu_725_p2 <= "1" when (signed(reg_327) < signed(select_ln53_6_reg_1210)) else "0";
    icmp_ln1495_12_fu_737_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_7_fu_730_p3)) else "0";
    icmp_ln1495_13_fu_797_p2 <= "1" when (signed(reg_327) < signed(select_ln53_8_reg_1232)) else "0";
    icmp_ln1495_14_fu_809_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_9_fu_802_p3)) else "0";
    icmp_ln1495_15_fu_875_p2 <= "1" when (signed(reg_327) < signed(select_ln53_10_reg_1254)) else "0";
    icmp_ln1495_16_fu_887_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_11_fu_880_p3)) else "0";
    icmp_ln1495_17_fu_927_p2 <= "1" when (signed(reg_327) < signed(select_ln53_12_reg_1281)) else "0";
    icmp_ln1495_18_fu_939_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_13_fu_932_p3)) else "0";
    icmp_ln1495_19_fu_979_p2 <= "1" when (signed(reg_327) < signed(select_ln53_14_reg_1293)) else "0";
    icmp_ln1495_3_fu_504_p2 <= "1" when (signed(reg_327) < signed(select_ln53_reg_1145)) else "0";
    icmp_ln1495_4_fu_516_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_1_fu_509_p3)) else "0";
    icmp_ln1495_5_fu_581_p2 <= "1" when (signed(reg_327) < signed(select_ln53_2_reg_1166)) else "0";
    icmp_ln1495_6_fu_593_p2 <= "1" when (signed(patch_q1) < signed(select_ln53_3_fu_586_p3)) else "0";
    icmp_ln1495_7_fu_1026_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) < signed(topL_jR_min_V_reg_289)) else "0";
    icmp_ln1495_8_fu_1050_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return) < signed(topR_jR_min_V_reg_301)) else "0";
    icmp_ln1495_9_fu_653_p2 <= "1" when (signed(reg_327) < signed(select_ln53_4_reg_1188)) else "0";
    icmp_ln1495_fu_456_p2 <= "0" when (tmp_5_fu_446_p4 = ap_const_lv2_1) else "1";
    icmp_ln622_fu_367_p2 <= "1" when (ap_phi_mux_i_phi_fu_257_p4 = ap_const_lv3_4) else "0";
    or_ln52_10_fu_715_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_B);
    or_ln52_11_fu_777_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_C);
    or_ln52_12_fu_787_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_D);
    or_ln52_13_fu_855_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_E);
    or_ln52_14_fu_865_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_F);
    or_ln52_1_fu_422_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_2);
    or_ln52_2_fu_432_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_3);
    or_ln52_3_fu_484_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_4);
    or_ln52_4_fu_494_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_5);
    or_ln52_5_fu_561_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_6);
    or_ln52_6_fu_571_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_7);
    or_ln52_7_fu_633_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_8);
    or_ln52_8_fu_643_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_9);
    or_ln52_9_fu_705_p2 <= (tmp_11_cast_reg_1102 or ap_const_lv8_A);
    or_ln52_fu_407_p2 <= (tmp_11_cast_fu_399_p3 or ap_const_lv8_1);

    patch_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, zext_ln52_4_fu_413_p1, zext_ln52_6_fu_437_p1, zext_ln52_8_fu_499_p1, zext_ln52_10_fu_576_p1, zext_ln52_12_fu_648_p1, zext_ln52_14_fu_720_p1, zext_ln52_16_fu_792_p1, ap_block_pp0_stage7, zext_ln52_18_fu_870_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                patch_address0 <= zext_ln52_18_fu_870_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                patch_address0 <= zext_ln52_16_fu_792_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                patch_address0 <= zext_ln52_14_fu_720_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                patch_address0 <= zext_ln52_12_fu_648_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                patch_address0 <= zext_ln52_10_fu_576_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                patch_address0 <= zext_ln52_8_fu_499_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                patch_address0 <= zext_ln52_6_fu_437_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                patch_address0 <= zext_ln52_4_fu_413_p1(8 - 1 downto 0);
            else 
                patch_address0 <= "XXXXXXXX";
            end if;
        else 
            patch_address0 <= "XXXXXXXX";
        end if; 
    end process;


    patch_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, zext_ln52_3_fu_394_p1, zext_ln52_5_fu_427_p1, zext_ln52_7_fu_489_p1, zext_ln52_9_fu_566_p1, zext_ln52_11_fu_638_p1, zext_ln52_13_fu_710_p1, zext_ln52_15_fu_782_p1, zext_ln52_17_fu_860_p1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                patch_address1 <= zext_ln52_17_fu_860_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                patch_address1 <= zext_ln52_15_fu_782_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                patch_address1 <= zext_ln52_13_fu_710_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                patch_address1 <= zext_ln52_11_fu_638_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                patch_address1 <= zext_ln52_9_fu_566_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                patch_address1 <= zext_ln52_7_fu_489_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                patch_address1 <= zext_ln52_5_fu_427_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                patch_address1 <= zext_ln52_3_fu_394_p1(8 - 1 downto 0);
            else 
                patch_address1 <= "XXXXXXXX";
            end if;
        else 
            patch_address1 <= "XXXXXXXX";
        end if; 
    end process;


    patch_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            patch_ce0 <= ap_const_logic_1;
        else 
            patch_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patch_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            patch_ce1 <= ap_const_logic_1;
        else 
            patch_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln53_10_fu_815_p3 <= 
        patch_q1 when (icmp_ln1495_14_fu_809_p2(0) = '1') else 
        select_ln53_9_fu_802_p3;
    select_ln53_11_fu_880_p3 <= 
        reg_327 when (icmp_ln1495_15_fu_875_p2(0) = '1') else 
        select_ln53_10_reg_1254;
    select_ln53_12_fu_893_p3 <= 
        patch_q1 when (icmp_ln1495_16_fu_887_p2(0) = '1') else 
        select_ln53_11_fu_880_p3;
    select_ln53_13_fu_932_p3 <= 
        reg_327 when (icmp_ln1495_17_fu_927_p2(0) = '1') else 
        select_ln53_12_reg_1281;
    select_ln53_14_fu_945_p3 <= 
        patch_q1 when (icmp_ln1495_18_fu_939_p2(0) = '1') else 
        select_ln53_13_fu_932_p3;
    select_ln53_15_fu_984_p3 <= 
        reg_327 when (icmp_ln1495_19_fu_979_p2(0) = '1') else 
        select_ln53_14_reg_1293;
    select_ln53_1_fu_509_p3 <= 
        reg_327 when (icmp_ln1495_3_fu_504_p2(0) = '1') else 
        select_ln53_reg_1145;
    select_ln53_2_fu_522_p3 <= 
        patch_q1 when (icmp_ln1495_4_fu_516_p2(0) = '1') else 
        select_ln53_1_fu_509_p3;
    select_ln53_3_fu_586_p3 <= 
        reg_327 when (icmp_ln1495_5_fu_581_p2(0) = '1') else 
        select_ln53_2_reg_1166;
    select_ln53_4_fu_599_p3 <= 
        patch_q1 when (icmp_ln1495_6_fu_593_p2(0) = '1') else 
        select_ln53_3_fu_586_p3;
    select_ln53_5_fu_658_p3 <= 
        reg_327 when (icmp_ln1495_9_fu_653_p2(0) = '1') else 
        select_ln53_4_reg_1188;
    select_ln53_6_fu_671_p3 <= 
        patch_q1 when (icmp_ln1495_10_fu_665_p2(0) = '1') else 
        select_ln53_5_fu_658_p3;
    select_ln53_7_fu_730_p3 <= 
        reg_327 when (icmp_ln1495_11_fu_725_p2(0) = '1') else 
        select_ln53_6_reg_1210;
    select_ln53_8_fu_743_p3 <= 
        patch_q1 when (icmp_ln1495_12_fu_737_p2(0) = '1') else 
        select_ln53_7_fu_730_p3;
    select_ln53_9_fu_802_p3 <= 
        reg_327 when (icmp_ln1495_13_fu_797_p2(0) = '1') else 
        select_ln53_8_reg_1232;
    select_ln53_fu_462_p3 <= 
        patch_q1 when (icmp_ln1495_fu_456_p2(0) = '1') else 
        ap_const_lv32_40000000;
    select_ln67_10_fu_841_p3 <= 
        patch_q1 when (icmp_ln1494_15_fu_835_p2(0) = '1') else 
        select_ln67_9_fu_828_p3;
    select_ln67_11_fu_906_p3 <= 
        reg_327 when (icmp_ln1494_16_fu_901_p2(0) = '1') else 
        select_ln67_10_reg_1260;
    select_ln67_12_fu_919_p3 <= 
        patch_q1 when (icmp_ln1494_17_fu_913_p2(0) = '1') else 
        select_ln67_11_fu_906_p3;
    select_ln67_13_fu_958_p3 <= 
        reg_327 when (icmp_ln1494_18_fu_953_p2(0) = '1') else 
        select_ln67_12_reg_1287;
    select_ln67_14_fu_971_p3 <= 
        patch_q1 when (icmp_ln1494_19_fu_965_p2(0) = '1') else 
        select_ln67_13_fu_958_p3;
    select_ln67_15_fu_997_p3 <= 
        reg_327 when (icmp_ln1494_20_fu_992_p2(0) = '1') else 
        select_ln67_14_reg_1299;
    select_ln67_1_fu_539_p3 <= 
        reg_327 when (icmp_ln1494_6_fu_533_p2(0) = '1') else 
        select_ln67_cast_fu_530_p1;
    select_ln67_2_fu_553_p3 <= 
        patch_q1 when (icmp_ln1494_7_fu_547_p2(0) = '1') else 
        select_ln67_1_fu_539_p3;
    select_ln67_3_fu_612_p3 <= 
        reg_327 when (icmp_ln1494_8_fu_607_p2(0) = '1') else 
        select_ln67_2_reg_1172;
    select_ln67_4_fu_625_p3 <= 
        patch_q1 when (icmp_ln1494_9_fu_619_p2(0) = '1') else 
        select_ln67_3_fu_612_p3;
    select_ln67_5_fu_684_p3 <= 
        reg_327 when (icmp_ln1494_10_fu_679_p2(0) = '1') else 
        select_ln67_4_reg_1194;
    select_ln67_6_fu_697_p3 <= 
        patch_q1 when (icmp_ln1494_11_fu_691_p2(0) = '1') else 
        select_ln67_5_fu_684_p3;
    select_ln67_7_fu_756_p3 <= 
        reg_327 when (icmp_ln1494_12_fu_751_p2(0) = '1') else 
        select_ln67_6_reg_1216;
    select_ln67_8_fu_769_p3 <= 
        patch_q1 when (icmp_ln1494_13_fu_763_p2(0) = '1') else 
        select_ln67_7_fu_756_p3;
    select_ln67_9_fu_828_p3 <= 
        reg_327 when (icmp_ln1494_14_fu_823_p2(0) = '1') else 
        select_ln67_8_reg_1238;
    select_ln67_cast_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln67_reg_1151),32));
    select_ln67_fu_476_p3 <= 
        trunc_ln1495_fu_442_p1 when (icmp_ln1494_5_fu_470_p2(0) = '1') else 
        ap_const_lv31_0;
    tmp_11_cast_fu_399_p3 <= (trunc_ln52_fu_382_p1 & ap_const_lv4_0);
    tmp_4_fu_386_p3 <= (add_ln52_1_fu_377_p2 & ap_const_lv4_0);
    tmp_5_fu_446_p4 <= patch_q1(31 downto 30);
    tmp_fu_335_p3 <= (patch_offset & ap_const_lv2_0);
    topL_jL_max_V_1_fu_1032_p3 <= 
        topL_jL_reg_1320 when (icmp_ln1494_3_reg_1325(0) = '1') else 
        topL_jL_max_V_reg_265;
    topL_jR_min_V_2_fu_1038_p3 <= 
        topL_jR_reg_1340 when (icmp_ln1495_7_reg_1345(0) = '1') else 
        topL_jR_min_V_reg_289;
    topR_jL_max_V_1_fu_1044_p3 <= 
        topR_jL_reg_1330 when (icmp_ln1494_4_reg_1335(0) = '1') else 
        topR_jL_max_V_reg_277;
    topR_jR_min_V_2_fu_1056_p3 <= 
        grp_straightLineProjectorFromLayerIJtoK_fu_313_ap_return when (icmp_ln1495_8_fu_1050_p2(0) = '1') else 
        topR_jR_min_V_reg_301;
    trunc_ln1495_fu_442_p1 <= patch_q1(31 - 1 downto 0);
    trunc_ln52_fu_382_p1 <= add_ln52_1_fu_377_p2(4 - 1 downto 0);
    trunc_ln623_fu_418_p1 <= ap_phi_mux_i_phi_fu_257_p4(2 - 1 downto 0);
    zTop_min_V_fu_359_p3 <= 
        zTopMin when (icmp_ln1494_fu_353_p2(0) = '1') else 
        ap_const_lv32_FCDFFF98;
    zext_ln52_10_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_6_fu_571_p2),64));
    zext_ln52_11_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_7_fu_633_p2),64));
    zext_ln52_12_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_8_fu_643_p2),64));
    zext_ln52_13_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_9_fu_705_p2),64));
    zext_ln52_14_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_10_fu_715_p2),64));
    zext_ln52_15_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_11_fu_777_p2),64));
    zext_ln52_16_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_12_fu_787_p2),64));
    zext_ln52_17_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_13_fu_855_p2),64));
    zext_ln52_18_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_14_fu_865_p2),64));
    zext_ln52_1_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_335_p3),5));
    zext_ln52_2_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_257_p4),5));
    zext_ln52_3_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_386_p3),64));
    zext_ln52_4_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_fu_407_p2),64));
    zext_ln52_5_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_1_fu_422_p2),64));
    zext_ln52_6_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_2_fu_432_p2),64));
    zext_ln52_7_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_3_fu_484_p2),64));
    zext_ln52_8_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_4_fu_494_p2),64));
    zext_ln52_9_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln52_5_fu_561_p2),64));
    zext_ln52_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(patch_offset),5));
    zext_ln623_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln623_reg_1130_pp0_iter1_reg),3));
end behav;
