-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_p_find_left_and_right_boundaries11 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    left_bound_ap_vld : OUT STD_LOGIC;
    right_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
    right_bound_ap_vld : OUT STD_LOGIC;
    i_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    i_empty_n : IN STD_LOGIC;
    i_read : OUT STD_LOGIC;
    lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
    rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_top_p_find_left_and_right_boundaries11 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_trapezoid_edgestrapezoid_edges_ce0 : STD_LOGIC;
    signal get_trapezoid_edgestrapezoid_edges_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_blk_n : STD_LOGIC;
    signal j_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_207_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln317_reg_2372 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal i_16_reg_2342 : STD_LOGIC_VECTOR (2 downto 0);
    signal num_points_load_reg_2357 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal get_trapezoid_edgestrapezoid_edges_load_reg_2362 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_244_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_2367 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln317_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_2381 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_Result_84_fu_310_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_84_reg_2386 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_49_fu_324_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_49_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_85_fu_332_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_85_reg_2398 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_2403 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sub_ln959_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln959_reg_2408 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_fu_467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_reg_2413 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln958_fu_473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_2418 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_481_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_2423 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_590_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_2428 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln935_3_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_3_reg_2433 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal p_Result_96_fu_607_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_96_reg_2438 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_53_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_53_reg_2443 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_4_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_4_reg_2449 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_5_fu_653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_5_reg_2455 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_2462 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln947_4_fu_673_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_4_reg_2467 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_98_fu_679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_98_reg_2472 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_4_fu_687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_4_reg_2478 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_54_reg_2483 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_66_reg_2488 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_95_fu_838_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_95_reg_2493 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal select_ln935_3_fu_890_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_3_reg_2498 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln935_2_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_2_reg_2503 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal p_Result_89_fu_907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_89_reg_2508 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_51_fu_921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_51_reg_2513 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_3_fu_947_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_3_reg_2519 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_fu_953_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_reg_2525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2532 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln947_3_fu_973_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_3_reg_2537 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_91_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_91_reg_2542 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_3_fu_987_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_3_reg_2548 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln351_2_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_2_reg_2553 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_52_reg_2559 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal p_Result_58_reg_2564 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln317_fu_1142_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln317_reg_2569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal p_Result_88_fu_1152_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_88_reg_2574 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln935_2_fu_1204_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_2_reg_2579 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_fu_1214_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_reg_2584 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_100_reg_2590 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_1_fu_1249_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_1_reg_2595 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_1_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_2600 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_reg_2606 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_1_fu_1271_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_1_reg_2613 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1277_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_reg_2618 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_1_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_2623 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_assign_reg_2629 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_1_fu_1313_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_2635 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_1_fu_1318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_1_reg_2640 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_1_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_reg_2645 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_reg_2650 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_reg_2655 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_1428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_1_reg_2660 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_5_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_reg_2665 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_3_reg_2670 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal p_Result_93_reg_2674 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal trunc_ln565_fu_1537_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_2679 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_2684 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_2690 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1559_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_reg_2697 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1565_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_reg_2702 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_2707 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_104_reg_2713 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_3_fu_1607_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_3_reg_2718 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_3_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_3_reg_2723 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_reg_2730 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_3_fu_1629_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_3_reg_2737 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_3_fu_1635_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_3_reg_2742 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_3_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_3_reg_2747 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_1664_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_reg_2753 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_fu_1671_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2758 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln585_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_2763 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_2768 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_2773 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_fu_1784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_reg_2779 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_1_reg_2784 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_102_reg_2788 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_2_fu_2104_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_2_reg_2793 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_2_fu_2108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_reg_2798 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_fu_2120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_reg_2805 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_2_fu_2126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_2_reg_2812 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_fu_2132_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_reg_2817 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_2_fu_2138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_2_reg_2822 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state14 : STD_LOGIC;
    signal ap_phi_mux_j_phi_fu_213_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal idxprom_i_fu_238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln318_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln585_3_fu_2328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_s : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_7_fu_1976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_sig_allocacmp_p_Val2_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal right_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal left_bound_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal grp_fu_221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal trunc_ln318_fu_256_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln318_1_fu_260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln318_fu_268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_273_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln318_1_fu_283_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_287_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal l_fu_342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_fu_349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_361_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_377_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_381_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_5_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_86_fu_434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_6_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln959_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_5_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln958_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_500_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_491_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_506_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_32_fu_516_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_50_fu_522_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_552_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_544_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_557_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_i_fu_563_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_87_fu_570_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_14_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_97_fu_629_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_5_fu_639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_4_fu_669_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_4_fu_696_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_4_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_4_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_6_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_10_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_727_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_4_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_4_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_8_fu_750_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_9_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_4_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_4_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_4_fu_775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_4_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_4_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_4_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_8_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_4_fu_784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_4_fu_762_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_9_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_40_fu_798_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_4_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_41_fu_810_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_2_fu_834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_4_fu_852_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_4_fu_845_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_4_fu_857_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_4_fu_842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_i_fu_863_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_99_fu_870_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_6_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_3_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_11_fu_915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_90_fu_929_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_4_fu_939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_3_fu_969_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln368_1_fu_991_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln947_3_fu_1004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_3_fu_1007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_3_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_1018_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_9_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_1035_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_3_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_3_fu_1061_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_6_fu_1058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_7_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_3_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_3_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_3_fu_1083_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_3_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_3_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_3_fu_1076_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_7_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_3_fu_1092_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_3_fu_1070_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_7_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_36_fu_1106_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_3_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_37_fu_1118_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal data_V_fu_1148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_3_fu_1166_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_3_fu_1159_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_3_fu_1171_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_3_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_i_fu_1177_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_92_fu_1184_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_4_fu_1196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_2_fu_1200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln368_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_1_fu_1219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_1_fu_1235_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_1_fu_1223_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_1_fu_1245_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1259_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_101_fu_1289_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_1_fu_1296_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_6_fu_1300_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_7_fu_1306_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_80_fu_1328_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_2_fu_1344_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_1_fu_1348_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1352_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_1_fu_1372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_1322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_3_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_3_fu_1358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_1_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_4_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln702_3_fu_1451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_1455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1_fu_1448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_1_fu_1471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln588_fu_1463_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_fu_1476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_2_fu_1483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_2_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_fu_1507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1523_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_fu_1511_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_1533_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1547_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_3_fu_1577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_3_fu_1593_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_3_fu_1581_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_3_fu_1603_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_1617_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_94_fu_1647_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1654_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_fu_1658_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_73_fu_1682_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_fu_1698_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_fu_1702_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln582_fu_1712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln586_fu_1706_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_83_fu_1768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_1776_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_105_fu_1792_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_3_fu_1799_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_12_fu_1803_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_3_fu_1816_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_13_fu_1809_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_89_fu_1835_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_6_fu_1851_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_3_fu_1855_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_3_fu_1859_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_3_fu_1825_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_3_fu_1821_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_3_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_3_fu_1829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_1906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_3_fu_1845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_1911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_7_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_1917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_3_fu_1869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_7_fu_1865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_6_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_3_fu_1880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_3_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_4_fu_1940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_4_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_5_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_6_fu_1962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_5_fu_1954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln702_fu_1996_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_fu_1993_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_fu_1990_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_2007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_1999_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_2033_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_1_fu_2041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_3_fu_2049_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_5_fu_2056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1495_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_2_fu_2074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_2_fu_2090_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln555_2_fu_2078_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_2_fu_2100_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_2114_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_103_fu_2144_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_2_fu_2151_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_9_fu_2155_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_2_fu_2168_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_10_fu_2161_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_86_fu_2187_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln586_4_fu_2203_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln586_2_fu_2207_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_2_fu_2211_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln583_2_fu_2177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_2_fu_2173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln571_2_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_2_fu_2237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_2_fu_2241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_2_fu_2247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_2_fu_2181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_2_fu_2258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_2_fu_2197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_2_fu_2263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_2_fu_2275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_5_fu_2281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_2_fu_2269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_2_fu_2221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_5_fu_2217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_4_fu_2252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_2_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_fu_2287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_fu_2292_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln585_1_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln585_2_fu_2322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln585_2_fu_2314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_2306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component system_top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_p_find_left_and_right_boundaries11_get_trapezoid_edgestrapezoid_edges IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_trapezoid_edgestrapezoid_edges_U : component system_top_p_find_left_and_right_boundaries11_get_trapezoid_edgestrapezoid_edges
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_trapezoid_edgestrapezoid_edges_address0,
        ce0 => get_trapezoid_edgestrapezoid_edges_ce0,
        q0 => get_trapezoid_edgestrapezoid_edges_q0);

    faddfsub_32ns_32ns_32_4_full_dsp_1_U6 : component system_top_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_221_p0,
        din1 => grp_fu_221_p1,
        opcode => grp_fu_221_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_221_p2);

    fpext_32ns_64_2_no_dsp_1_U7 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_226_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_226_p1);

    fpext_32ns_64_2_no_dsp_1_U8 : component system_top_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln351_2_reg_2553,
        ce => ap_const_logic_1,
        dout => grp_fu_229_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state14);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    left_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                left_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_fu_2068_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    left_bound_preg <= j_reg_207_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    right_bound_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                right_bound_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_1 = and_ln1495_3_fu_1502_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    right_bound_preg <= j_reg_207_pp0_iter1_reg;
                end if; 
            end if;
        end if;
    end process;


    j_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then 
                j_reg_207 <= add_ln317_reg_2569;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                add_ln317_reg_2569 <= add_ln317_fu_1142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln581_1_reg_2613 <= add_ln581_1_fu_1271_p2;
                icmp_ln571_1_reg_2600 <= icmp_ln571_1_fu_1253_p2;
                icmp_ln581_1_reg_2606 <= icmp_ln581_1_fu_1265_p2;
                icmp_ln582_1_reg_2623 <= icmp_ln582_1_fu_1283_p2;
                p_Result_100_reg_2590 <= ireg_1_fu_1219_p1(63 downto 63);
                sub_ln581_1_reg_2618 <= sub_ln581_1_fu_1277_p2;
                trunc_ln565_1_reg_2595 <= trunc_ln565_1_fu_1249_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_lv1_1 = and_ln1495_1_reg_2784))) then
                add_ln581_2_reg_2812 <= add_ln581_2_fu_2126_p2;
                icmp_ln571_2_reg_2798 <= icmp_ln571_2_fu_2108_p2;
                icmp_ln581_2_reg_2805 <= icmp_ln581_2_fu_2120_p2;
                icmp_ln582_2_reg_2822 <= icmp_ln582_2_fu_2138_p2;
                p_Result_102_reg_2788 <= ireg_2_fu_2074_p1(63 downto 63);
                sub_ln581_2_reg_2817 <= sub_ln581_2_fu_2132_p2;
                trunc_ln565_2_reg_2793 <= trunc_ln565_2_fu_2104_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_lv1_1 = and_ln1495_3_reg_2670))) then
                add_ln581_3_reg_2737 <= add_ln581_3_fu_1629_p2;
                icmp_ln571_3_reg_2723 <= icmp_ln571_3_fu_1611_p2;
                icmp_ln581_3_reg_2730 <= icmp_ln581_3_fu_1623_p2;
                icmp_ln582_3_reg_2747 <= icmp_ln582_3_fu_1641_p2;
                p_Result_104_reg_2713 <= ireg_3_fu_1577_p1(63 downto 63);
                sub_ln581_3_reg_2742 <= sub_ln581_3_fu_1635_p2;
                trunc_ln565_3_reg_2718 <= trunc_ln565_3_fu_1607_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln581_reg_2697 <= add_ln581_fu_1559_p2;
                icmp_ln571_reg_2684 <= icmp_ln571_fu_1541_p2;
                icmp_ln581_reg_2690 <= icmp_ln581_fu_1553_p2;
                icmp_ln582_reg_2707 <= icmp_ln582_fu_1571_p2;
                p_Result_93_reg_2674 <= ireg_fu_1507_p1(63 downto 63);
                sub_ln581_reg_2702 <= sub_ln581_fu_1565_p2;
                trunc_ln565_reg_2679 <= trunc_ln565_fu_1537_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln935_reg_2381 = ap_const_lv1_1) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                add_ln958_reg_2413 <= add_ln958_fu_467_p2;
                icmp_ln958_reg_2403 <= icmp_ln958_fu_441_p2;
                select_ln958_reg_2418 <= select_ln958_fu_473_p3;
                sub_ln959_reg_2408 <= sub_ln959_fu_453_p2;
                trunc_ln943_reg_2423 <= trunc_ln943_fu_481_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                and_ln1495_1_reg_2784 <= and_ln1495_1_fu_2068_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln1495_3_reg_2670 <= and_ln1495_3_fu_1502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln585_reg_2763 <= and_ln585_fu_1727_p2;
                and_ln603_reg_2768 <= and_ln603_fu_1756_p2;
                man_V_4_reg_2753 <= man_V_4_fu_1664_p3;
                or_ln603_reg_2773 <= or_ln603_fu_1762_p2;
                select_ln603_4_reg_2779 <= select_ln603_4_fu_1784_p3;
                sh_amt_reg_2758 <= sh_amt_fu_1671_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                and_ln603_1_reg_2650 <= and_ln603_1_fu_1416_p2;
                or_ln603_3_reg_2655 <= or_ln603_3_fu_1422_p2;
                or_ln603_5_reg_2665 <= or_ln603_5_fu_1442_p2;
                select_ln603_1_reg_2660 <= select_ln603_1_fu_1428_p3;
                sh_amt_1_reg_2635 <= sh_amt_1_fu_1313_p3;
                trunc_ln583_1_reg_2640 <= trunc_ln583_1_fu_1318_p1;
                xor_ln571_1_reg_2645 <= xor_ln571_1_fu_1362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                    bitcast_ln351_2_reg_2553(30 downto 0) <= bitcast_ln351_2_fu_994_p1(30 downto 0);
                icmp_ln935_2_reg_2503 <= icmp_ln935_2_fu_901_p2;
                lsb_index_4_reg_2525 <= lsb_index_4_fu_953_p2;
                m_51_reg_2513 <= m_51_fu_921_p3;
                p_Result_89_reg_2508 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
                p_Result_91_reg_2542 <= p_Result_91_fu_979_p3;
                sub_ln944_3_reg_2519 <= sub_ln944_3_fu_947_p2;
                sub_ln947_3_reg_2537 <= sub_ln947_3_fu_973_p2;
                tmp_69_reg_2532 <= lsb_index_4_fu_953_p2(31 downto 1);
                trunc_ln943_3_reg_2548 <= trunc_ln943_3_fu_987_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    bitcast_ln351_reg_2584(30 downto 0) <= bitcast_ln351_fu_1214_p1(30 downto 0);
                icmp_ln317_reg_2372 <= icmp_ln317_fu_251_p2;
                j_reg_207_pp0_iter1_reg <= j_reg_207;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                get_trapezoid_edgestrapezoid_edges_load_reg_2362 <= get_trapezoid_edgestrapezoid_edges_q0;
                num_points_load_reg_2357 <= num_points_q0;
                    shl_ln_reg_2367(15 downto 13) <= shl_ln_fu_244_p3(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                i_16_reg_2342 <= i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                icmp_ln935_3_reg_2433 <= icmp_ln935_3_fu_601_p2;
                lsb_index_5_reg_2455 <= lsb_index_5_fu_653_p2;
                m_53_reg_2443 <= m_53_fu_621_p3;
                p_Result_96_reg_2438 <= ap_sig_allocacmp_p_Val2_48(31 downto 31);
                p_Result_98_reg_2472 <= p_Result_98_fu_679_p3;
                sub_ln944_4_reg_2449 <= sub_ln944_4_fu_647_p2;
                sub_ln947_4_reg_2467 <= sub_ln947_4_fu_673_p2;
                tmp_76_reg_2462 <= lsb_index_5_fu_653_p2(31 downto 1);
                trunc_ln943_4_reg_2478 <= trunc_ln943_4_fu_687_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                icmp_ln935_reg_2381 <= icmp_ln935_fu_304_p2;
                m_49_reg_2391 <= m_49_fu_324_p3;
                p_Result_84_reg_2386 <= points_q0(31 downto 31);
                p_Result_85_reg_2398 <= p_Result_85_fu_332_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln935_2_reg_2503 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                m_52_reg_2559 <= m_37_fu_1118_p2(63 downto 1);
                p_Result_58_reg_2564 <= m_37_fu_1118_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln935_3_reg_2433 = ap_const_lv1_0) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                m_54_reg_2483 <= m_41_fu_810_p2(63 downto 1);
                p_Result_66_reg_2488 <= m_41_fu_810_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                p_Result_88_reg_2574 <= p_Result_88_fu_1152_p1;
                select_ln935_2_reg_2579 <= select_ln935_2_fu_1204_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                p_Result_95_reg_2493 <= p_Result_95_fu_838_p1;
                select_ln935_3_reg_2498 <= select_ln935_3_fu_890_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln317_reg_2372 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_232 <= grp_fu_221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then
                select_ln935_reg_2428 <= select_ln935_fu_590_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                v_assign_reg_2629 <= grp_fu_221_p2;
            end if;
        end if;
    end process;
    shl_ln_reg_2367(12 downto 0) <= "0000000000000";
    bitcast_ln351_2_reg_2553(31) <= '0';
    bitcast_ln351_reg_2584(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, i_empty_n, ap_enable_reg_pp0_iter0, icmp_ln317_reg_2372, ap_block_pp0_stage11_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (icmp_ln317_reg_2372 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (icmp_ln317_reg_2372 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1259_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_1_fu_1245_p1));
    F2_2_fu_2114_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_2_fu_2100_p1));
    F2_3_fu_1617_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_3_fu_1603_p1));
    F2_fu_1547_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1533_p1));
    LD_4_fu_1196_p1 <= p_Result_92_fu_1184_p5(32 - 1 downto 0);
    LD_6_fu_882_p1 <= p_Result_99_fu_870_p5(32 - 1 downto 0);
    LD_fu_582_p1 <= p_Result_87_fu_570_p5(32 - 1 downto 0);
    add_ln317_fu_1142_p2 <= std_logic_vector(unsigned(j_reg_207) + unsigned(ap_const_lv32_1));
    add_ln318_fu_268_p2 <= std_logic_vector(unsigned(shl_ln318_1_fu_260_p3) + unsigned(shl_ln_reg_2367));
    add_ln581_1_fu_1271_p2 <= std_logic_vector(unsigned(F2_1_fu_1259_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_2_fu_2126_p2 <= std_logic_vector(unsigned(F2_2_fu_2114_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_3_fu_1629_p2 <= std_logic_vector(unsigned(F2_3_fu_1617_p2) + unsigned(ap_const_lv12_FEC));
    add_ln581_fu_1559_p2 <= std_logic_vector(unsigned(F2_fu_1547_p2) + unsigned(ap_const_lv12_FEC));
    add_ln958_3_fu_1083_p2 <= std_logic_vector(unsigned(sub_ln944_3_reg_2519) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_4_fu_775_p2 <= std_logic_vector(unsigned(sub_ln944_4_reg_2449) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_fu_467_p2 <= std_logic_vector(unsigned(sub_ln944_fu_349_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_3_fu_1171_p2 <= std_logic_vector(unsigned(sub_ln964_3_fu_1166_p2) + unsigned(select_ln943_3_fu_1159_p3));
    add_ln964_4_fu_857_p2 <= std_logic_vector(unsigned(sub_ln964_4_fu_852_p2) + unsigned(select_ln943_4_fu_845_p3));
    add_ln964_fu_557_p2 <= std_logic_vector(unsigned(sub_ln964_fu_552_p2) + unsigned(select_ln943_fu_544_p3));
    and_ln1495_1_fu_2068_p2 <= (xor_ln571_fu_2013_p2 and and_ln1495_fu_2062_p2);
    and_ln1495_2_fu_1497_p2 <= (tmp_87_fu_1489_p3 and or_ln603_5_reg_2665);
    and_ln1495_3_fu_1502_p2 <= (xor_ln571_1_reg_2645 and and_ln1495_2_fu_1497_p2);
    and_ln1495_fu_2062_p2 <= (select_ln603_5_fu_2056_p3 and or_ln603_2_fu_2028_p2);
    and_ln581_1_fu_1382_p2 <= (xor_ln582_1_fu_1376_p2 and icmp_ln581_1_reg_2606);
    and_ln581_2_fu_2247_p2 <= (xor_ln582_2_fu_2241_p2 and icmp_ln581_2_reg_2805);
    and_ln581_3_fu_1895_p2 <= (xor_ln582_3_fu_1889_p2 and icmp_ln581_3_reg_2730);
    and_ln581_fu_1722_p2 <= (xor_ln582_fu_1716_p2 and icmp_ln581_reg_2690);
    and_ln582_1_fu_1367_p2 <= (xor_ln571_1_fu_1362_p2 and icmp_ln582_1_reg_2623);
    and_ln582_2_fu_2232_p2 <= (xor_ln571_2_fu_2227_p2 and icmp_ln582_2_reg_2822);
    and_ln582_3_fu_1880_p2 <= (xor_ln571_3_fu_1875_p2 and icmp_ln582_3_reg_2747);
    and_ln582_fu_2018_p2 <= (xor_ln571_fu_2013_p2 and icmp_ln582_reg_2707);
    and_ln585_1_fu_1739_p2 <= (xor_ln585_fu_1733_p2 and and_ln581_fu_1722_p2);
    and_ln585_2_fu_1387_p2 <= (icmp_ln585_1_fu_1322_p2 and and_ln581_1_fu_1382_p2);
    and_ln585_3_fu_1399_p2 <= (xor_ln585_1_fu_1393_p2 and and_ln581_1_fu_1382_p2);
    and_ln585_4_fu_2252_p2 <= (icmp_ln585_2_fu_2181_p2 and and_ln581_2_fu_2247_p2);
    and_ln585_5_fu_2281_p2 <= (xor_ln585_2_fu_2275_p2 and and_ln581_2_fu_2247_p2);
    and_ln585_6_fu_1900_p2 <= (icmp_ln585_3_fu_1829_p2 and and_ln581_3_fu_1895_p2);
    and_ln585_7_fu_1929_p2 <= (xor_ln585_3_fu_1923_p2 and and_ln581_3_fu_1895_p2);
    and_ln585_fu_1727_p2 <= (icmp_ln585_fu_1676_p2 and and_ln581_fu_1722_p2);
    and_ln603_1_fu_1416_p2 <= (xor_ln581_1_fu_1410_p2 and icmp_ln603_1_fu_1338_p2);
    and_ln603_2_fu_2269_p2 <= (xor_ln581_2_fu_2263_p2 and icmp_ln603_2_fu_2197_p2);
    and_ln603_3_fu_1917_p2 <= (xor_ln581_3_fu_1911_p2 and icmp_ln603_3_fu_1845_p2);
    and_ln603_fu_1756_p2 <= (xor_ln581_fu_1750_p2 and icmp_ln603_fu_1692_p2);
    and_ln949_10_fu_716_p2 <= (or_ln949_6_fu_710_p2 and m_53_reg_2443);
    and_ln949_6_fu_447_p2 <= (xor_ln949_fu_428_p2 and p_Result_86_fu_434_p3);
    and_ln949_7_fu_1053_p2 <= (xor_ln949_3_fu_1042_p2 and p_Result_91_reg_2542);
    and_ln949_8_fu_745_p2 <= (xor_ln949_4_fu_734_p2 and p_Result_98_reg_2472);
    and_ln949_9_fu_1024_p2 <= (or_ln949_fu_1018_p2 and m_51_reg_2513);
    and_ln949_fu_409_p2 <= (or_ln949_5_fu_403_p2 and m_49_reg_2391);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(14);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, i_empty_n)
    begin
                ap_block_state1 <= ((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state14_assign_proc : process(icmp_ln317_reg_2372)
    begin
        if ((icmp_ln317_reg_2372 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_213_p4_assign_proc : process(j_reg_207, ap_CS_fsm_pp0_stage0, icmp_ln317_reg_2372, ap_enable_reg_pp0_iter1, add_ln317_reg_2569, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln317_reg_2372 = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_213_p4 <= add_ln317_reg_2569;
        else 
            ap_phi_mux_j_phi_fu_213_p4 <= j_reg_207;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_48_assign_proc : process(rbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, and_ln1495_3_reg_2670, select_ln585_7_fu_1976_p3, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_lv1_1 = and_ln1495_3_reg_2670) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_48 <= select_ln585_7_fu_1976_p3;
        else 
            ap_sig_allocacmp_p_Val2_48 <= rbVal_constprop_i;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_s_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, and_ln1495_1_reg_2784, select_ln585_3_fu_2328_p3, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_lv1_1 = and_ln1495_1_reg_2784) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_Val2_s <= select_ln585_3_fu_2328_p3;
        else 
            ap_sig_allocacmp_p_Val2_s <= lbVal_constprop_i;
        end if; 
    end process;

    ashr_ln586_1_fu_1352_p2 <= std_logic_vector(shift_right(signed(man_V_7_fu_1306_p3),to_integer(unsigned('0' & zext_ln586_1_fu_1348_p1(31-1 downto 0)))));
    ashr_ln586_2_fu_2211_p2 <= std_logic_vector(shift_right(signed(man_V_10_fu_2161_p3),to_integer(unsigned('0' & zext_ln586_2_fu_2207_p1(31-1 downto 0)))));
    ashr_ln586_3_fu_1859_p2 <= std_logic_vector(shift_right(signed(man_V_13_fu_1809_p3),to_integer(unsigned('0' & zext_ln586_3_fu_1855_p1(31-1 downto 0)))));
    ashr_ln586_fu_1706_p2 <= std_logic_vector(shift_right(signed(man_V_4_fu_1664_p3),to_integer(unsigned('0' & zext_ln586_fu_1702_p1(31-1 downto 0)))));
    bitcast_ln351_2_fu_994_p1 <= zext_ln368_1_fu_991_p1;
    bitcast_ln351_fu_1214_p1 <= zext_ln368_fu_1211_p1;
    bitcast_ln702_3_fu_1451_p1 <= reg_232;
    bitcast_ln702_fu_1996_p1 <= v_assign_reg_2629;
    bitcast_ln744_2_fu_1200_p1 <= LD_4_fu_1196_p1;
    bitcast_ln744_3_fu_886_p1 <= LD_6_fu_882_p1;
    bitcast_ln744_fu_586_p1 <= LD_fu_582_p1;
    data_V_2_fu_834_p1 <= grp_fu_221_p2;
    data_V_fu_1148_p1 <= grp_fu_221_p2;
    exp_tmp_1_fu_1235_p4 <= ireg_1_fu_1219_p1(62 downto 52);
    exp_tmp_2_fu_2090_p4 <= ireg_2_fu_2074_p1(62 downto 52);
    exp_tmp_3_fu_1593_p4 <= ireg_3_fu_1577_p1(62 downto 52);
    exp_tmp_fu_1523_p4 <= ireg_fu_1507_p1(62 downto 52);
    get_trapezoid_edgestrapezoid_edges_address0 <= idxprom_i_fu_238_p1(3 - 1 downto 0);

    get_trapezoid_edgestrapezoid_edges_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_1;
        else 
            get_trapezoid_edgestrapezoid_edges_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_221_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln317_reg_2372, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_00001, ap_block_pp0_stage8_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage9_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln317_reg_2372 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln317_reg_2372 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            grp_fu_221_opcode <= ap_const_lv2_1;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln317_reg_2372 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln317_reg_2372 = ap_const_lv1_0)))) then 
            grp_fu_221_opcode <= ap_const_lv2_0;
        else 
            grp_fu_221_opcode <= "XX";
        end if; 
    end process;


    grp_fu_221_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, reg_232, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, select_ln935_reg_2428, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, bitcast_ln351_2_fu_994_p1, bitcast_ln351_fu_1214_p1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage9, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_221_p0 <= bitcast_ln351_fu_1214_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_221_p0 <= bitcast_ln351_2_fu_994_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_221_p0 <= reg_232;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_221_p0 <= select_ln935_reg_2428;
        else 
            grp_fu_221_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_221_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, get_trapezoid_edgestrapezoid_edges_load_reg_2362, ap_CS_fsm_pp0_stage8, select_ln935_3_reg_2498, ap_CS_fsm_pp0_stage9, select_ln935_2_reg_2579, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage9, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_221_p1 <= select_ln935_2_reg_2579;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_221_p1 <= select_ln935_3_reg_2498;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_221_p1 <= ap_const_lv32_0;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_221_p1 <= get_trapezoid_edgestrapezoid_edges_load_reg_2362;
        else 
            grp_fu_221_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_p0_assign_proc : process(reg_232, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, bitcast_ln351_reg_2584, v_assign_reg_2629, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_226_p0 <= bitcast_ln351_reg_2584;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_226_p0 <= v_assign_reg_2629;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_226_p0 <= reg_232;
            else 
                grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_blk_n <= i_empty_n;
        else 
            i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            i_read <= ap_const_logic_1;
        else 
            i_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln317_fu_251_p2 <= "1" when (ap_phi_mux_j_phi_fu_213_p4 = num_points_load_reg_2357) else "0";
    icmp_ln571_1_fu_1253_p2 <= "1" when (trunc_ln555_1_fu_1223_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_2_fu_2108_p2 <= "1" when (trunc_ln555_2_fu_2078_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_3_fu_1611_p2 <= "1" when (trunc_ln555_3_fu_1581_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1541_p2 <= "1" when (trunc_ln555_fu_1511_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1265_p2 <= "1" when (signed(F2_1_fu_1259_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_2_fu_2120_p2 <= "1" when (signed(F2_2_fu_2114_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_3_fu_1623_p2 <= "1" when (signed(F2_3_fu_1617_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_1553_p2 <= "1" when (signed(F2_fu_1547_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_1_fu_1283_p2 <= "1" when (F2_1_fu_1259_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_2_fu_2138_p2 <= "1" when (F2_2_fu_2114_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_3_fu_1641_p2 <= "1" when (F2_3_fu_1617_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_fu_1571_p2 <= "1" when (F2_fu_1547_p2 = ap_const_lv12_14) else "0";
    icmp_ln585_1_fu_1322_p2 <= "1" when (unsigned(sh_amt_1_fu_1313_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_2_fu_2181_p2 <= "1" when (unsigned(sh_amt_2_fu_2168_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_3_fu_1829_p2 <= "1" when (unsigned(sh_amt_3_fu_1816_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1676_p2 <= "1" when (unsigned(sh_amt_fu_1671_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_1338_p2 <= "1" when (tmp_80_fu_1328_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_2_fu_2197_p2 <= "1" when (tmp_86_fu_2187_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_3_fu_1845_p2 <= "1" when (tmp_89_fu_1835_p4 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_1692_p2 <= "1" when (tmp_73_fu_1682_p4 = ap_const_lv7_0) else "0";
    icmp_ln935_2_fu_901_p2 <= "1" when (ap_sig_allocacmp_p_Val2_s = ap_const_lv32_0) else "0";
    icmp_ln935_3_fu_601_p2 <= "1" when (ap_sig_allocacmp_p_Val2_48 = ap_const_lv32_0) else "0";
    icmp_ln935_fu_304_p2 <= "0" when (z_bits_fu_300_p1 = ap_const_lv32_0) else "1";
    icmp_ln946_3_fu_999_p2 <= "1" when (signed(tmp_69_reg_2532) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_4_fu_691_p2 <= "1" when (signed(tmp_76_reg_2462) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_371_p2 <= "1" when (signed(tmp_fu_361_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_3_fu_1029_p2 <= "0" when (and_ln949_9_fu_1024_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_4_fu_721_p2 <= "0" when (and_ln949_10_fu_716_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_414_p2 <= "0" when (and_ln949_fu_409_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_3_fu_1048_p2 <= "1" when (signed(lsb_index_4_reg_2525) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_4_fu_740_p2 <= "1" when (signed(lsb_index_5_reg_2455) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_fu_441_p2 <= "1" when (signed(lsb_index_fu_355_p2) > signed(ap_const_lv32_0)) else "0";
    idxprom_i_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_dout),64));
    ireg_1_fu_1219_p1 <= grp_fu_226_p1;
    ireg_2_fu_2074_p1 <= grp_fu_226_p1;
    ireg_3_fu_1577_p1 <= grp_fu_229_p1;
    ireg_fu_1507_p1 <= grp_fu_226_p1;
    
    l_4_fu_939_p3_proc : process(p_Result_90_fu_929_p4)
    begin
        l_4_fu_939_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_90_fu_929_p4(i) = '1' then
                l_4_fu_939_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_5_fu_639_p3_proc : process(p_Result_97_fu_629_p4)
    begin
        l_5_fu_639_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_97_fu_629_p4(i) = '1' then
                l_5_fu_639_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_342_p3_proc : process(p_Result_85_reg_2398)
    begin
        l_fu_342_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_85_reg_2398(i) = '1' then
                l_fu_342_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;


    lbVal_constprop_o_assign_proc : process(lbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, and_ln1495_1_reg_2784, select_ln585_3_fu_2328_p3, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_lv1_1 = and_ln1495_1_reg_2784) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o <= select_ln585_3_fu_2328_p3;
        else 
            lbVal_constprop_o <= lbVal_constprop_i;
        end if; 
    end process;


    lbVal_constprop_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, and_ln1495_1_reg_2784)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_lv1_1 = and_ln1495_1_reg_2784) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            lbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            lbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    left_bound_assign_proc : process(j_reg_207_pp0_iter1_reg, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, and_ln1495_1_fu_2068_p2, left_bound_preg, ap_block_pp0_stage7_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_fu_2068_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound <= j_reg_207_pp0_iter1_reg;
        else 
            left_bound <= left_bound_preg;
        end if; 
    end process;


    left_bound_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, and_ln1495_1_fu_2068_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_1 = and_ln1495_1_fu_2068_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            left_bound_ap_vld <= ap_const_logic_1;
        else 
            left_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lsb_index_4_fu_953_p2 <= std_logic_vector(unsigned(sub_ln944_3_fu_947_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_5_fu_653_p2 <= std_logic_vector(unsigned(sub_ln944_4_fu_647_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_355_p2 <= std_logic_vector(unsigned(sub_ln944_fu_349_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_3_fu_1007_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_3_fu_1004_p1(31-1 downto 0)))));
    lshr_ln947_4_fu_699_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_4_fu_696_p1(31-1 downto 0)))));
    lshr_ln947_fu_391_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_387_p1(31-1 downto 0)))));
    lshr_ln958_3_fu_1092_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_6_fu_1058_p1),to_integer(unsigned('0' & zext_ln958_3_fu_1088_p1(31-1 downto 0)))));
    lshr_ln958_4_fu_784_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_8_fu_750_p1),to_integer(unsigned('0' & zext_ln958_4_fu_780_p1(31-1 downto 0)))));
    lshr_ln958_fu_500_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_fu_485_p1),to_integer(unsigned('0' & zext_ln958_fu_497_p1(31-1 downto 0)))));
    lshr_ln_fu_273_p4 <= add_ln318_fu_268_p2(15 downto 13);
    m_32_fu_516_p2 <= std_logic_vector(unsigned(m_fu_506_p3) + unsigned(zext_ln961_fu_513_p1));
    m_36_fu_1106_p3 <= 
        lshr_ln958_3_fu_1092_p2 when (icmp_ln958_3_fu_1048_p2(0) = '1') else 
        shl_ln959_3_fu_1070_p2;
    m_37_fu_1118_p2 <= std_logic_vector(unsigned(m_36_fu_1106_p3) + unsigned(zext_ln961_3_fu_1114_p1));
    m_40_fu_798_p3 <= 
        lshr_ln958_4_fu_784_p2 when (icmp_ln958_4_fu_740_p2(0) = '1') else 
        shl_ln959_4_fu_762_p2;
    m_41_fu_810_p2 <= std_logic_vector(unsigned(m_40_fu_798_p3) + unsigned(zext_ln961_4_fu_806_p1));
    m_49_fu_324_p3 <= 
        tmp_V_fu_318_p2 when (p_Result_84_fu_310_p3(0) = '1') else 
        z_bits_fu_300_p1;
    m_50_fu_522_p4 <= m_32_fu_516_p2(63 downto 1);
    m_51_fu_921_p3 <= 
        tmp_V_11_fu_915_p2 when (p_Result_89_fu_907_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_s;
    m_53_fu_621_p3 <= 
        tmp_V_14_fu_615_p2 when (p_Result_96_fu_607_p3(0) = '1') else 
        ap_sig_allocacmp_p_Val2_48;
    m_fu_506_p3 <= 
        lshr_ln958_fu_500_p2 when (icmp_ln958_reg_2403(0) = '1') else 
        shl_ln959_fu_491_p2;
    man_V_10_fu_2161_p3 <= 
        man_V_9_fu_2155_p2 when (p_Result_102_reg_2788(0) = '1') else 
        zext_ln569_2_fu_2151_p1;
    man_V_12_fu_1803_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_3_fu_1799_p1));
    man_V_13_fu_1809_p3 <= 
        man_V_12_fu_1803_p2 when (p_Result_104_reg_2713(0) = '1') else 
        zext_ln569_3_fu_1799_p1;
    man_V_3_fu_1658_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1654_p1));
    man_V_4_fu_1664_p3 <= 
        man_V_3_fu_1658_p2 when (p_Result_93_reg_2674(0) = '1') else 
        zext_ln569_fu_1654_p1;
    man_V_6_fu_1300_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_1_fu_1296_p1));
    man_V_7_fu_1306_p3 <= 
        man_V_6_fu_1300_p2 when (p_Result_100_reg_2590(0) = '1') else 
        zext_ln569_1_fu_1296_p1;
    man_V_9_fu_2155_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_2_fu_2151_p1));
    num_points_address0 <= idxprom_i_fu_238_p1(3 - 1 downto 0);

    num_points_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, i_empty_n)
    begin
        if ((not(((i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_points_ce0 <= ap_const_logic_1;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_1_fu_1405_p2 <= (or_ln582_1_fu_1372_p2 or icmp_ln581_1_reg_2606);
    or_ln581_2_fu_2258_p2 <= (or_ln582_2_fu_2237_p2 or icmp_ln581_2_reg_2805);
    or_ln581_3_fu_1906_p2 <= (or_ln582_3_fu_1885_p2 or icmp_ln581_3_reg_2730);
    or_ln581_fu_1745_p2 <= (or_ln582_fu_1712_p2 or icmp_ln581_reg_2690);
    or_ln582_1_fu_1372_p2 <= (icmp_ln582_1_reg_2623 or icmp_ln571_1_reg_2600);
    or_ln582_2_fu_2237_p2 <= (icmp_ln582_2_reg_2822 or icmp_ln571_2_reg_2798);
    or_ln582_3_fu_1885_p2 <= (icmp_ln582_3_reg_2747 or icmp_ln571_3_reg_2723);
    or_ln582_fu_1712_p2 <= (icmp_ln582_reg_2707 or icmp_ln571_reg_2684);
    or_ln585_1_fu_2300_p2 <= (and_ln603_2_fu_2269_p2 or and_ln585_4_fu_2252_p2);
    or_ln585_2_fu_2322_p2 <= (or_ln585_fu_2287_p2 or or_ln585_1_fu_2300_p2);
    or_ln585_3_fu_1935_p2 <= (icmp_ln571_3_reg_2723 or and_ln585_7_fu_1929_p2);
    or_ln585_4_fu_1948_p2 <= (and_ln603_3_fu_1917_p2 or and_ln585_6_fu_1900_p2);
    or_ln585_5_fu_1970_p2 <= (or_ln585_4_fu_1948_p2 or or_ln585_3_fu_1935_p2);
    or_ln585_fu_2287_p2 <= (icmp_ln571_2_reg_2798 or and_ln585_5_fu_2281_p2);
    or_ln603_1_fu_2023_p2 <= (and_ln585_reg_2763 or and_ln582_fu_2018_p2);
    or_ln603_2_fu_2028_p2 <= (or_ln603_reg_2773 or or_ln603_1_fu_2023_p2);
    or_ln603_3_fu_1422_p2 <= (and_ln603_1_fu_1416_p2 or and_ln585_3_fu_1399_p2);
    or_ln603_4_fu_1436_p2 <= (and_ln585_2_fu_1387_p2 or and_ln582_1_fu_1367_p2);
    or_ln603_5_fu_1442_p2 <= (or_ln603_4_fu_1436_p2 or or_ln603_3_fu_1422_p2);
    or_ln603_fu_1762_p2 <= (and_ln603_fu_1756_p2 or and_ln585_1_fu_1739_p2);
    or_ln949_5_fu_403_p2 <= (shl_ln949_fu_397_p2 or lshr_ln947_fu_391_p2);
    or_ln949_6_fu_710_p2 <= (shl_ln949_4_fu_705_p2 or lshr_ln947_4_fu_699_p2);
    or_ln949_fu_1018_p2 <= (shl_ln949_3_fu_1013_p2 or lshr_ln947_3_fu_1007_p2);
    p_Result_101_fu_1289_p3 <= (ap_const_lv1_1 & trunc_ln565_1_reg_2595);
    p_Result_103_fu_2144_p3 <= (ap_const_lv1_1 & trunc_ln565_2_reg_2793);
    p_Result_105_fu_1792_p3 <= (ap_const_lv1_1 & trunc_ln565_3_reg_2718);
    p_Result_84_fu_310_p3 <= points_q0(31 downto 31);
    
    p_Result_85_fu_332_p4_proc : process(m_49_fu_324_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_85_fu_332_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_49_fu_324_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_85_fu_332_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_85_fu_332_p4_i) := m_49_fu_324_p3(32-1-p_Result_85_fu_332_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_85_fu_332_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_86_fu_434_p3 <= m_49_reg_2391(to_integer(unsigned(lsb_index_fu_355_p2)) downto to_integer(unsigned(lsb_index_fu_355_p2))) when (to_integer(unsigned(lsb_index_fu_355_p2))>= 0 and to_integer(unsigned(lsb_index_fu_355_p2))<=31) else "-";
    p_Result_87_fu_570_p5 <= (zext_ln962_fu_532_p1(63 downto 32) & tmp_16_i_fu_563_p3 & zext_ln962_fu_532_p1(22 downto 0));
    p_Result_88_fu_1152_p1 <= data_V_fu_1148_p1(31 - 1 downto 0);
    p_Result_89_fu_907_p3 <= ap_sig_allocacmp_p_Val2_s(31 downto 31);
    
    p_Result_90_fu_929_p4_proc : process(m_51_fu_921_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_90_fu_929_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_51_fu_921_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_90_fu_929_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_90_fu_929_p4_i) := m_51_fu_921_p3(32-1-p_Result_90_fu_929_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_90_fu_929_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_91_fu_979_p3 <= m_51_fu_921_p3(to_integer(unsigned(lsb_index_4_fu_953_p2)) downto to_integer(unsigned(lsb_index_4_fu_953_p2))) when (to_integer(unsigned(lsb_index_4_fu_953_p2))>= 0 and to_integer(unsigned(lsb_index_4_fu_953_p2))<=31) else "-";
    p_Result_92_fu_1184_p5 <= (zext_ln962_3_fu_1156_p1(63 downto 32) & tmp_17_i_fu_1177_p3 & zext_ln962_3_fu_1156_p1(22 downto 0));
    p_Result_94_fu_1647_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_2679);
    p_Result_95_fu_838_p1 <= data_V_2_fu_834_p1(31 - 1 downto 0);
    p_Result_96_fu_607_p3 <= ap_sig_allocacmp_p_Val2_48(31 downto 31);
    
    p_Result_97_fu_629_p4_proc : process(m_53_fu_621_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_97_fu_629_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_53_fu_621_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_97_fu_629_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_97_fu_629_p4_i) := m_53_fu_621_p3(32-1-p_Result_97_fu_629_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_97_fu_629_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_98_fu_679_p3 <= m_53_fu_621_p3(to_integer(unsigned(lsb_index_5_fu_653_p2)) downto to_integer(unsigned(lsb_index_5_fu_653_p2))) when (to_integer(unsigned(lsb_index_5_fu_653_p2))>= 0 and to_integer(unsigned(lsb_index_5_fu_653_p2))<=31) else "-";
    p_Result_99_fu_870_p5 <= (zext_ln962_4_fu_842_p1(63 downto 32) & tmp_20_i_fu_863_p3 & zext_ln962_4_fu_842_p1(22 downto 0));
    p_Result_s_fu_536_p3 <= m_32_fu_516_p2(25 downto 25);
    points_address0 <= zext_ln318_fu_295_p1(12 - 1 downto 0);

    points_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            points_ce0 <= ap_const_logic_1;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rbVal_constprop_o_assign_proc : process(rbVal_constprop_i, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, and_ln1495_3_reg_2670, select_ln585_7_fu_1976_p3, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_lv1_1 = and_ln1495_3_reg_2670) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o <= select_ln585_7_fu_1976_p3;
        else 
            rbVal_constprop_o <= rbVal_constprop_i;
        end if; 
    end process;


    rbVal_constprop_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, and_ln1495_3_reg_2670)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_lv1_1 = and_ln1495_3_reg_2670) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rbVal_constprop_o_ap_vld <= ap_const_logic_1;
        else 
            rbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    right_bound_assign_proc : process(j_reg_207_pp0_iter1_reg, ap_enable_reg_pp0_iter1, and_ln1495_3_fu_1502_p2, ap_CS_fsm_pp0_stage4, right_bound_preg, ap_block_pp0_stage4_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_1 = and_ln1495_3_fu_1502_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            right_bound <= j_reg_207_pp0_iter1_reg;
        else 
            right_bound <= right_bound_preg;
        end if; 
    end process;


    right_bound_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln1495_3_fu_1502_p2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_1 = and_ln1495_3_fu_1502_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            right_bound_ap_vld <= ap_const_logic_1;
        else 
            right_bound_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln585_1_fu_2306_p3 <= 
        trunc_ln583_2_fu_2177_p1 when (and_ln582_2_fu_2232_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_2_fu_2314_p3 <= 
        ap_const_lv32_0 when (or_ln585_fu_2287_p2(0) = '1') else 
        select_ln585_fu_2292_p3;
    select_ln585_3_fu_2328_p3 <= 
        select_ln585_2_fu_2314_p3 when (or_ln585_2_fu_2322_p2(0) = '1') else 
        select_ln585_1_fu_2306_p3;
    select_ln585_4_fu_1940_p3 <= 
        shl_ln604_3_fu_1869_p2 when (and_ln603_3_fu_1917_p2(0) = '1') else 
        trunc_ln586_7_fu_1865_p1;
    select_ln585_5_fu_1954_p3 <= 
        trunc_ln583_3_fu_1825_p1 when (and_ln582_3_fu_1880_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_6_fu_1962_p3 <= 
        ap_const_lv32_0 when (or_ln585_3_fu_1935_p2(0) = '1') else 
        select_ln585_4_fu_1940_p3;
    select_ln585_7_fu_1976_p3 <= 
        select_ln585_6_fu_1962_p3 when (or_ln585_5_fu_1970_p2(0) = '1') else 
        select_ln585_5_fu_1954_p3;
    select_ln585_fu_2292_p3 <= 
        shl_ln604_2_fu_2221_p2 when (and_ln603_2_fu_2269_p2(0) = '1') else 
        trunc_ln586_5_fu_2217_p1;
    select_ln588_1_fu_2041_p3 <= 
        ap_const_lv1_1 when (tmp_74_fu_1999_p3(0) = '1') else 
        ap_const_lv1_0;
    select_ln588_fu_1463_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_81_fu_1455_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_1_fu_1428_p3 <= 
        trunc_ln586_3_fu_1358_p1 when (and_ln585_2_fu_1387_p2(0) = '1') else 
        trunc_ln583_1_fu_1318_p1;
    select_ln603_2_fu_1483_p3 <= 
        select_ln603_fu_1476_p3 when (or_ln603_3_reg_2655(0) = '1') else 
        select_ln603_1_reg_2660;
    select_ln603_3_fu_2049_p3 <= 
        tmp_82_fu_2033_p3 when (and_ln603_reg_2768(0) = '1') else 
        select_ln588_1_fu_2041_p3;
    select_ln603_4_fu_1784_p3 <= 
        tmp_83_fu_1768_p3 when (and_ln585_fu_1727_p2(0) = '1') else 
        tmp_84_fu_1776_p3;
    select_ln603_5_fu_2056_p3 <= 
        select_ln603_3_fu_2049_p3 when (or_ln603_reg_2773(0) = '1') else 
        select_ln603_4_reg_2779;
    select_ln603_fu_1476_p3 <= 
        shl_ln604_1_fu_1471_p2 when (and_ln603_1_reg_2650(0) = '1') else 
        select_ln588_fu_1463_p3;
    select_ln935_2_fu_1204_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_2_reg_2503(0) = '1') else 
        bitcast_ln744_2_fu_1200_p1;
    select_ln935_3_fu_890_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_3_reg_2433(0) = '1') else 
        bitcast_ln744_3_fu_886_p1;
    select_ln935_fu_590_p3 <= 
        bitcast_ln744_fu_586_p1 when (icmp_ln935_reg_2381(0) = '1') else 
        ap_const_lv32_0;
    select_ln943_3_fu_1159_p3 <= 
        ap_const_lv8_7F when (p_Result_58_reg_2564(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_4_fu_845_p3 <= 
        ap_const_lv8_7F when (p_Result_66_reg_2488(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_544_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_536_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_3_fu_1076_p3 <= 
        icmp_ln949_3_fu_1029_p2 when (icmp_ln946_3_fu_999_p2(0) = '1') else 
        p_Result_91_reg_2542;
    select_ln946_4_fu_768_p3 <= 
        icmp_ln949_4_fu_721_p2 when (icmp_ln946_4_fu_691_p2(0) = '1') else 
        p_Result_98_reg_2472;
    select_ln946_fu_459_p3 <= 
        icmp_ln949_fu_414_p2 when (icmp_ln946_fu_371_p2(0) = '1') else 
        p_Result_86_fu_434_p3;
    select_ln958_7_fu_1098_p3 <= 
        select_ln946_3_fu_1076_p3 when (icmp_ln958_3_fu_1048_p2(0) = '1') else 
        and_ln949_7_fu_1053_p2;
    select_ln958_9_fu_790_p3 <= 
        select_ln946_4_fu_768_p3 when (icmp_ln958_4_fu_740_p2(0) = '1') else 
        and_ln949_8_fu_745_p2;
    select_ln958_fu_473_p3 <= 
        select_ln946_fu_459_p3 when (icmp_ln958_fu_441_p2(0) = '1') else 
        and_ln949_6_fu_447_p2;
        sext_ln581_1_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_2635),32));

        sext_ln581_2_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_fu_2168_p3),32));

        sext_ln581_3_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_fu_1816_p3),32));

        sext_ln581_fu_1990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2758),32));

    sh_amt_1_fu_1313_p3 <= 
        add_ln581_1_reg_2613 when (icmp_ln581_1_reg_2606(0) = '1') else 
        sub_ln581_1_reg_2618;
    sh_amt_2_fu_2168_p3 <= 
        add_ln581_2_reg_2812 when (icmp_ln581_2_reg_2805(0) = '1') else 
        sub_ln581_2_reg_2817;
    sh_amt_3_fu_1816_p3 <= 
        add_ln581_3_reg_2737 when (icmp_ln581_3_reg_2730(0) = '1') else 
        sub_ln581_3_reg_2742;
    sh_amt_fu_1671_p3 <= 
        add_ln581_reg_2697 when (icmp_ln581_reg_2690(0) = '1') else 
        sub_ln581_reg_2702;
    shl_ln318_1_fu_260_p3 <= (trunc_ln318_fu_256_p1 & ap_const_lv4_0);
    shl_ln604_1_fu_1471_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_2640),to_integer(unsigned('0' & sext_ln581_1_fu_1448_p1(31-1 downto 0)))));
    shl_ln604_2_fu_2221_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_2_fu_2177_p1),to_integer(unsigned('0' & sext_ln581_2_fu_2173_p1(31-1 downto 0)))));
    shl_ln604_3_fu_1869_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_3_fu_1825_p1),to_integer(unsigned('0' & sext_ln581_3_fu_1821_p1(31-1 downto 0)))));
    shl_ln604_fu_2007_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_1993_p1),to_integer(unsigned('0' & sext_ln581_fu_1990_p1(31-1 downto 0)))));
    shl_ln949_3_fu_1013_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_4_reg_2525(31-1 downto 0)))));
    shl_ln949_4_fu_705_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_5_reg_2455(31-1 downto 0)))));
    shl_ln949_fu_397_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_355_p2(31-1 downto 0)))));
    shl_ln959_3_fu_1070_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_6_fu_1058_p1),to_integer(unsigned('0' & zext_ln959_7_fu_1066_p1(31-1 downto 0)))));
    shl_ln959_4_fu_762_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_8_fu_750_p1),to_integer(unsigned('0' & zext_ln959_9_fu_758_p1(31-1 downto 0)))));
    shl_ln959_fu_491_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_fu_485_p1),to_integer(unsigned('0' & zext_ln959_5_fu_488_p1(31-1 downto 0)))));
    shl_ln_fu_244_p3 <= (i_16_reg_2342 & ap_const_lv13_0);
    sub_ln581_1_fu_1277_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_1_fu_1259_p2));
    sub_ln581_2_fu_2132_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_2_fu_2114_p2));
    sub_ln581_3_fu_1635_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_3_fu_1617_p2));
    sub_ln581_fu_1565_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1547_p2));
    sub_ln944_3_fu_947_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_4_fu_939_p3));
    sub_ln944_4_fu_647_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_5_fu_639_p3));
    sub_ln944_fu_349_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_342_p3));
    sub_ln947_3_fu_973_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_3_fu_969_p1));
    sub_ln947_4_fu_673_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_4_fu_669_p1));
    sub_ln947_fu_381_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_377_p1));
    sub_ln959_3_fu_1061_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_3_reg_2519));
    sub_ln959_4_fu_753_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_4_reg_2449));
    sub_ln959_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_fu_349_p2));
    sub_ln964_3_fu_1166_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_3_reg_2548));
    sub_ln964_4_fu_852_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_4_reg_2478));
    sub_ln964_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_reg_2423));
    tmp_16_i_fu_563_p3 <= (p_Result_84_reg_2386 & add_ln964_fu_557_p2);
    tmp_17_i_fu_1177_p3 <= (p_Result_89_reg_2508 & add_ln964_3_fu_1171_p2);
    tmp_20_i_fu_863_p3 <= (p_Result_96_reg_2438 & add_ln964_4_fu_857_p2);
    tmp_66_fu_420_p3 <= lsb_index_fu_355_p2(31 downto 31);
    tmp_70_fu_1035_p3 <= lsb_index_4_reg_2525(31 downto 31);
    tmp_73_fu_1682_p4 <= sh_amt_fu_1671_p3(11 downto 5);
    tmp_74_fu_1999_p3 <= bitcast_ln702_fu_1996_p1(31 downto 31);
    tmp_77_fu_727_p3 <= lsb_index_5_reg_2455(31 downto 31);
    tmp_80_fu_1328_p4 <= sh_amt_1_fu_1313_p3(11 downto 5);
    tmp_81_fu_1455_p3 <= bitcast_ln702_3_fu_1451_p1(31 downto 31);
    tmp_82_fu_2033_p3 <= shl_ln604_fu_2007_p2(31 downto 31);
    tmp_83_fu_1768_p3 <= ashr_ln586_fu_1706_p2(31 downto 31);
    tmp_84_fu_1776_p3 <= man_V_4_fu_1664_p3(31 downto 31);
    tmp_86_fu_2187_p4 <= sh_amt_2_fu_2168_p3(11 downto 5);
    tmp_87_fu_1489_p3 <= select_ln603_2_fu_1483_p3(31 downto 31);
    tmp_89_fu_1835_p4 <= sh_amt_3_fu_1816_p3(11 downto 5);
    tmp_V_11_fu_915_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_s));
    tmp_V_14_fu_615_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_sig_allocacmp_p_Val2_48));
    tmp_V_fu_318_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(z_bits_fu_300_p1));
    tmp_fu_361_p4 <= lsb_index_fu_355_p2(31 downto 1);
    tmp_s_fu_287_p3 <= (lshr_ln_fu_273_p4 & trunc_ln318_1_fu_283_p1);
    trunc_ln318_1_fu_283_p1 <= ap_phi_mux_j_phi_fu_213_p4(9 - 1 downto 0);
    trunc_ln318_fu_256_p1 <= ap_phi_mux_j_phi_fu_213_p4(12 - 1 downto 0);
    trunc_ln555_1_fu_1223_p1 <= ireg_1_fu_1219_p1(63 - 1 downto 0);
    trunc_ln555_2_fu_2078_p1 <= ireg_2_fu_2074_p1(63 - 1 downto 0);
    trunc_ln555_3_fu_1581_p1 <= ireg_3_fu_1577_p1(63 - 1 downto 0);
    trunc_ln555_fu_1511_p1 <= ireg_fu_1507_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_1249_p1 <= ireg_1_fu_1219_p1(52 - 1 downto 0);
    trunc_ln565_2_fu_2104_p1 <= ireg_2_fu_2074_p1(52 - 1 downto 0);
    trunc_ln565_3_fu_1607_p1 <= ireg_3_fu_1577_p1(52 - 1 downto 0);
    trunc_ln565_fu_1537_p1 <= ireg_fu_1507_p1(52 - 1 downto 0);
    trunc_ln583_1_fu_1318_p1 <= man_V_7_fu_1306_p3(32 - 1 downto 0);
    trunc_ln583_2_fu_2177_p1 <= man_V_10_fu_2161_p3(32 - 1 downto 0);
    trunc_ln583_3_fu_1825_p1 <= man_V_13_fu_1809_p3(32 - 1 downto 0);
    trunc_ln583_fu_1993_p1 <= man_V_4_reg_2753(32 - 1 downto 0);
    trunc_ln586_2_fu_1344_p1 <= sh_amt_1_fu_1313_p3(6 - 1 downto 0);
    trunc_ln586_3_fu_1358_p1 <= ashr_ln586_1_fu_1352_p2(32 - 1 downto 0);
    trunc_ln586_4_fu_2203_p1 <= sh_amt_2_fu_2168_p3(6 - 1 downto 0);
    trunc_ln586_5_fu_2217_p1 <= ashr_ln586_2_fu_2211_p2(32 - 1 downto 0);
    trunc_ln586_6_fu_1851_p1 <= sh_amt_3_fu_1816_p3(6 - 1 downto 0);
    trunc_ln586_7_fu_1865_p1 <= ashr_ln586_3_fu_1859_p2(32 - 1 downto 0);
    trunc_ln586_fu_1698_p1 <= sh_amt_fu_1671_p3(6 - 1 downto 0);
    trunc_ln943_3_fu_987_p1 <= l_4_fu_939_p3(8 - 1 downto 0);
    trunc_ln943_4_fu_687_p1 <= l_5_fu_639_p3(8 - 1 downto 0);
    trunc_ln943_fu_481_p1 <= l_fu_342_p3(8 - 1 downto 0);
    trunc_ln947_3_fu_969_p1 <= sub_ln944_3_fu_947_p2(6 - 1 downto 0);
    trunc_ln947_4_fu_669_p1 <= sub_ln944_4_fu_647_p2(6 - 1 downto 0);
    trunc_ln947_fu_377_p1 <= sub_ln944_fu_349_p2(6 - 1 downto 0);
    xor_ln571_1_fu_1362_p2 <= (icmp_ln571_1_reg_2600 xor ap_const_lv1_1);
    xor_ln571_2_fu_2227_p2 <= (icmp_ln571_2_reg_2798 xor ap_const_lv1_1);
    xor_ln571_3_fu_1875_p2 <= (icmp_ln571_3_reg_2723 xor ap_const_lv1_1);
    xor_ln571_fu_2013_p2 <= (icmp_ln571_reg_2684 xor ap_const_lv1_1);
    xor_ln581_1_fu_1410_p2 <= (or_ln581_1_fu_1405_p2 xor ap_const_lv1_1);
    xor_ln581_2_fu_2263_p2 <= (or_ln581_2_fu_2258_p2 xor ap_const_lv1_1);
    xor_ln581_3_fu_1911_p2 <= (or_ln581_3_fu_1906_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1750_p2 <= (or_ln581_fu_1745_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1376_p2 <= (or_ln582_1_fu_1372_p2 xor ap_const_lv1_1);
    xor_ln582_2_fu_2241_p2 <= (or_ln582_2_fu_2237_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_1889_p2 <= (or_ln582_3_fu_1885_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1716_p2 <= (or_ln582_fu_1712_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1393_p2 <= (icmp_ln585_1_fu_1322_p2 xor ap_const_lv1_1);
    xor_ln585_2_fu_2275_p2 <= (icmp_ln585_2_fu_2181_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_1923_p2 <= (icmp_ln585_3_fu_1829_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1733_p2 <= (icmp_ln585_fu_1676_p2 xor ap_const_lv1_1);
    xor_ln949_3_fu_1042_p2 <= (tmp_70_fu_1035_p3 xor ap_const_lv1_1);
    xor_ln949_4_fu_734_p2 <= (tmp_77_fu_727_p3 xor ap_const_lv1_1);
    xor_ln949_fu_428_p2 <= (tmp_66_fu_420_p3 xor ap_const_lv1_1);
    z_bits_fu_300_p1 <= points_q0(32 - 1 downto 0);
    zext_ln318_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_287_p3),64));
    zext_ln368_1_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_95_reg_2493),32));
    zext_ln368_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_88_reg_2574),32));
    zext_ln455_1_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_1235_p4),12));
    zext_ln455_2_fu_2100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_2_fu_2090_p4),12));
    zext_ln455_3_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_3_fu_1593_p4),12));
    zext_ln455_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1523_p4),12));
    zext_ln569_1_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_101_fu_1289_p3),54));
    zext_ln569_2_fu_2151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_103_fu_2144_p3),54));
    zext_ln569_3_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_105_fu_1792_p3),54));
    zext_ln569_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_94_fu_1647_p3),54));
    zext_ln586_1_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_2_fu_1344_p1),54));
    zext_ln586_2_fu_2207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_4_fu_2203_p1),54));
    zext_ln586_3_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_6_fu_1851_p1),54));
    zext_ln586_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln586_fu_1698_p1),54));
    zext_ln947_3_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_3_reg_2537),32));
    zext_ln947_4_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_4_reg_2467),32));
    zext_ln947_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_381_p2),32));
    zext_ln958_3_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_3_fu_1083_p2),64));
    zext_ln958_4_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_4_fu_775_p2),64));
    zext_ln958_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_reg_2413),64));
    zext_ln959_5_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_reg_2408),64));
    zext_ln959_6_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_51_reg_2513),64));
    zext_ln959_7_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_3_fu_1061_p2),64));
    zext_ln959_8_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_53_reg_2443),64));
    zext_ln959_9_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_4_fu_753_p2),64));
    zext_ln959_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_49_reg_2391),64));
    zext_ln961_3_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_7_fu_1098_p3),64));
    zext_ln961_4_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_9_fu_790_p3),64));
    zext_ln961_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_2418),64));
    zext_ln962_3_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_52_reg_2559),64));
    zext_ln962_4_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_54_reg_2483),64));
    zext_ln962_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_50_fu_522_p4),64));
end behav;
