// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_areWedgeSuperPointsEqual (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wsp1_2_address0,
        wsp1_2_ce0,
        wsp1_2_q0,
        wsp1_2_address1,
        wsp1_2_ce1,
        wsp1_2_q1,
        wsp1,
        wsp11,
        wsp2,
        wsp23,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] wsp1_2_address0;
output   wsp1_2_ce0;
input  [63:0] wsp1_2_q0;
output  [11:0] wsp1_2_address1;
output   wsp1_2_ce1;
input  [63:0] wsp1_2_q1;
input  [7:0] wsp1;
input  [2:0] wsp11;
input  [7:0] wsp2;
input  [2:0] wsp23;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] wsp1_2_address0;
reg wsp1_2_ce0;
reg[11:0] wsp1_2_address1;
reg wsp1_2_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] reg_156;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln31_reg_589;
reg   [0:0] icmp_ln31_reg_589_pp0_iter8_reg;
reg   [2:0] wsp23_read_reg_552;
reg   [7:0] wsp2_read_reg_557;
reg   [2:0] wsp11_read_reg_563;
reg   [2:0] wsp11_read_reg_563_pp0_iter1_reg;
reg   [7:0] wsp1_read_reg_568;
reg   [7:0] wsp1_read_reg_568_pp0_iter1_reg;
wire   [0:0] grp_fu_150_p2;
reg   [0:0] rhs_reg_584;
wire   [0:0] icmp_ln31_fu_253_p2;
reg   [0:0] icmp_ln31_reg_589_pp0_iter2_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter3_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter4_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter5_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter6_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter7_reg;
reg   [0:0] icmp_ln31_reg_589_pp0_iter9_reg;
wire   [17:0] add_ln870_fu_302_p2;
reg   [17:0] add_ln870_reg_593;
reg   [17:0] add_ln870_reg_593_pp0_iter2_reg;
reg   [17:0] add_ln870_reg_593_pp0_iter3_reg;
reg   [17:0] add_ln870_reg_593_pp0_iter4_reg;
reg   [17:0] add_ln870_reg_593_pp0_iter5_reg;
reg   [17:0] add_ln870_reg_593_pp0_iter6_reg;
wire   [17:0] add_ln1350_fu_367_p2;
reg   [17:0] add_ln1350_reg_603;
reg   [17:0] add_ln1350_reg_603_pp0_iter2_reg;
reg   [17:0] add_ln1350_reg_603_pp0_iter3_reg;
reg   [17:0] add_ln1350_reg_603_pp0_iter4_reg;
reg   [17:0] add_ln1350_reg_603_pp0_iter5_reg;
wire   [7:0] grp_fu_318_p2;
reg   [7:0] urem_ln870_reg_623;
reg   [7:0] udiv_ln3_cast_reg_628;
reg   [5:0] tmp_58_reg_633;
reg   [0:0] rhs_11_reg_648;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] ap_phi_mux_empty_phi_fu_143_p4;
wire   [0:0] icmp_ln31_1_fu_529_p2;
reg   [0:0] ap_phi_reg_pp0_iter9_empty_reg_139;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter3_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter4_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter5_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter6_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter7_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter8_empty_reg_139;
wire   [63:0] zext_ln870_6_fu_200_p1;
wire   [63:0] zext_ln1350_6_fu_245_p1;
wire   [63:0] zext_ln870_8_fu_480_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1350_8_fu_521_p1;
wire   [9:0] tmp_fu_168_p3;
wire   [10:0] zext_ln870_5_fu_176_p1;
wire   [10:0] zext_ln870_4_fu_164_p1;
wire   [10:0] add_ln870_2_fu_180_p2;
wire   [10:0] wsp23_cast_fu_160_p1;
wire   [10:0] add_ln870_3_fu_186_p2;
wire   [14:0] tmp_55_fu_192_p3;
wire   [9:0] tmp_s_fu_213_p3;
wire   [10:0] zext_ln1350_5_fu_221_p1;
wire   [10:0] zext_ln1350_4_fu_209_p1;
wire   [10:0] add_ln1350_2_fu_225_p2;
wire   [10:0] wsp11_cast_fu_205_p1;
wire   [10:0] add_ln1350_3_fu_231_p2;
wire   [14:0] tmp_56_fu_237_p3;
wire   [63:0] zext_ln215_fu_250_p1;
wire   [16:0] shl_ln870_1_fu_259_p3;
wire   [14:0] shl_ln870_2_fu_270_p3;
wire   [9:0] shl_ln_fu_281_p3;
wire   [15:0] zext_ln870_1_fu_277_p1;
wire   [15:0] zext_ln870_2_fu_288_p1;
wire   [15:0] add_ln870_1_fu_292_p2;
wire   [17:0] zext_ln870_3_fu_298_p1;
wire   [17:0] zext_ln870_fu_266_p1;
wire   [10:0] grp_fu_318_p0;
wire   [3:0] grp_fu_318_p1;
wire   [16:0] shl_ln1350_1_fu_324_p3;
wire   [14:0] shl_ln1350_2_fu_335_p3;
wire   [9:0] shl_ln1_fu_346_p3;
wire   [15:0] zext_ln1350_1_fu_342_p1;
wire   [15:0] zext_ln1350_2_fu_353_p1;
wire   [15:0] add_ln1350_1_fu_357_p2;
wire   [17:0] zext_ln1350_3_fu_363_p1;
wire   [17:0] zext_ln1350_fu_331_p1;
wire   [10:0] grp_fu_383_p0;
wire   [3:0] grp_fu_383_p1;
wire   [17:0] or_ln1350_fu_389_p2;
wire   [17:0] or_ln870_fu_398_p2;
wire   [36:0] grp_fu_536_p2;
wire   [36:0] grp_fu_544_p2;
wire   [5:0] tmp_57_fu_434_p4;
wire   [7:0] tmp_128_cast_fu_443_p3;
wire   [7:0] udiv_ln_cast_fu_425_p4;
wire   [7:0] add_ln870_4_fu_451_p2;
wire   [7:0] trunc_ln870_fu_457_p1;
wire   [7:0] add_ln870_5_fu_460_p2;
wire   [11:0] tmp_130_cast_fu_466_p3;
wire   [11:0] or_ln870_1_fu_474_p2;
wire   [7:0] tmp_132_cast_fu_485_p3;
wire   [7:0] grp_fu_383_p2;
wire   [7:0] add_ln1350_4_fu_492_p2;
wire   [7:0] trunc_ln1350_fu_497_p1;
wire   [7:0] add_ln1350_5_fu_501_p2;
wire   [11:0] tmp_134_cast_fu_507_p3;
wire   [11:0] or_ln1350_1_fu_515_p2;
wire   [63:0] zext_ln215_1_fu_526_p1;
wire   [17:0] grp_fu_536_p0;
wire   [19:0] grp_fu_536_p1;
wire   [17:0] grp_fu_544_p0;
wire   [19:0] grp_fu_544_p1;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to9;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [36:0] grp_fu_536_p00;
wire   [36:0] grp_fu_544_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

MPSQ_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_318_p0),
    .din1(grp_fu_318_p1),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

MPSQ_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_383_p0),
    .din1(grp_fu_383_p1),
    .ce(1'b1),
    .dout(grp_fu_383_p2)
);

MPSQ_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_536_p0),
    .din1(grp_fu_536_p1),
    .ce(1'b1),
    .dout(grp_fu_536_p2)
);

MPSQ_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_544_p0),
    .din1(grp_fu_544_p1),
    .ce(1'b1),
    .dout(grp_fu_544_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_fu_253_p2 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_empty_reg_139 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_empty_reg_139 <= ap_phi_reg_pp0_iter0_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln31_reg_589 == 1'd0))) begin
        add_ln1350_reg_603[17 : 7] <= add_ln1350_fu_367_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln1350_reg_603_pp0_iter2_reg[17 : 7] <= add_ln1350_reg_603[17 : 7];
        add_ln1350_reg_603_pp0_iter3_reg[17 : 7] <= add_ln1350_reg_603_pp0_iter2_reg[17 : 7];
        add_ln1350_reg_603_pp0_iter4_reg[17 : 7] <= add_ln1350_reg_603_pp0_iter3_reg[17 : 7];
        add_ln1350_reg_603_pp0_iter5_reg[17 : 7] <= add_ln1350_reg_603_pp0_iter4_reg[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_fu_253_p2 == 1'd0))) begin
        add_ln870_reg_593[17 : 7] <= add_ln870_fu_302_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln870_reg_593_pp0_iter2_reg[17 : 7] <= add_ln870_reg_593[17 : 7];
        add_ln870_reg_593_pp0_iter3_reg[17 : 7] <= add_ln870_reg_593_pp0_iter2_reg[17 : 7];
        add_ln870_reg_593_pp0_iter4_reg[17 : 7] <= add_ln870_reg_593_pp0_iter3_reg[17 : 7];
        add_ln870_reg_593_pp0_iter5_reg[17 : 7] <= add_ln870_reg_593_pp0_iter4_reg[17 : 7];
        add_ln870_reg_593_pp0_iter6_reg[17 : 7] <= add_ln870_reg_593_pp0_iter5_reg[17 : 7];
        icmp_ln31_reg_589 <= icmp_ln31_fu_253_p2;
        icmp_ln31_reg_589_pp0_iter2_reg <= icmp_ln31_reg_589;
        icmp_ln31_reg_589_pp0_iter3_reg <= icmp_ln31_reg_589_pp0_iter2_reg;
        icmp_ln31_reg_589_pp0_iter4_reg <= icmp_ln31_reg_589_pp0_iter3_reg;
        icmp_ln31_reg_589_pp0_iter5_reg <= icmp_ln31_reg_589_pp0_iter4_reg;
        icmp_ln31_reg_589_pp0_iter6_reg <= icmp_ln31_reg_589_pp0_iter5_reg;
        icmp_ln31_reg_589_pp0_iter7_reg <= icmp_ln31_reg_589_pp0_iter6_reg;
        icmp_ln31_reg_589_pp0_iter8_reg <= icmp_ln31_reg_589_pp0_iter7_reg;
        icmp_ln31_reg_589_pp0_iter9_reg <= icmp_ln31_reg_589_pp0_iter8_reg;
        wsp11_read_reg_563 <= wsp11;
        wsp11_read_reg_563_pp0_iter1_reg <= wsp11_read_reg_563;
        wsp1_read_reg_568 <= wsp1;
        wsp1_read_reg_568_pp0_iter1_reg <= wsp1_read_reg_568;
        wsp23_read_reg_552 <= wsp23;
        wsp2_read_reg_557 <= wsp2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_reg_139 <= ap_phi_reg_pp0_iter1_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_reg_139 <= ap_phi_reg_pp0_iter2_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_reg_139 <= ap_phi_reg_pp0_iter3_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_reg_139 <= ap_phi_reg_pp0_iter4_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_reg_139 <= ap_phi_reg_pp0_iter5_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_reg_139 <= ap_phi_reg_pp0_iter6_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_reg_139 <= ap_phi_reg_pp0_iter7_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_reg_139 <= ap_phi_reg_pp0_iter8_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_reg_589_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_156 <= wsp1_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_reg_589_pp0_iter8_reg == 1'd0))) begin
        rhs_11_reg_648 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rhs_reg_584 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_reg_589_pp0_iter7_reg == 1'd0))) begin
        tmp_58_reg_633 <= {{grp_fu_536_p2[33:28]}};
        udiv_ln3_cast_reg_628 <= {{grp_fu_536_p2[35:28]}};
        urem_ln870_reg_623 <= grp_fu_318_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_reg_589_pp0_iter9_reg == 1'd0)) begin
        ap_phi_mux_empty_phi_fu_143_p4 = icmp_ln31_1_fu_529_p2;
    end else begin
        ap_phi_mux_empty_phi_fu_143_p4 = ap_phi_reg_pp0_iter9_empty_reg_139;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address0 = zext_ln1350_8_fu_521_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address0 = zext_ln1350_6_fu_245_p1;
    end else begin
        wsp1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address1 = zext_ln870_8_fu_480_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address1 = zext_ln870_6_fu_200_p1;
    end else begin
        wsp1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce0 = 1'b1;
    end else begin
        wsp1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce1 = 1'b1;
    end else begin
        wsp1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1350_1_fu_357_p2 = (zext_ln1350_1_fu_342_p1 + zext_ln1350_2_fu_353_p1);

assign add_ln1350_2_fu_225_p2 = (zext_ln1350_5_fu_221_p1 + zext_ln1350_4_fu_209_p1);

assign add_ln1350_3_fu_231_p2 = (add_ln1350_2_fu_225_p2 + wsp11_cast_fu_205_p1);

assign add_ln1350_4_fu_492_p2 = (tmp_132_cast_fu_485_p3 + udiv_ln3_cast_reg_628);

assign add_ln1350_5_fu_501_p2 = (add_ln1350_4_fu_492_p2 + trunc_ln1350_fu_497_p1);

assign add_ln1350_fu_367_p2 = (zext_ln1350_3_fu_363_p1 + zext_ln1350_fu_331_p1);

assign add_ln870_1_fu_292_p2 = (zext_ln870_1_fu_277_p1 + zext_ln870_2_fu_288_p1);

assign add_ln870_2_fu_180_p2 = (zext_ln870_5_fu_176_p1 + zext_ln870_4_fu_164_p1);

assign add_ln870_3_fu_186_p2 = (add_ln870_2_fu_180_p2 + wsp23_cast_fu_160_p1);

assign add_ln870_4_fu_451_p2 = (tmp_128_cast_fu_443_p3 + udiv_ln_cast_fu_425_p4);

assign add_ln870_5_fu_460_p2 = (add_ln870_4_fu_451_p2 + trunc_ln870_fu_457_p1);

assign add_ln870_fu_302_p2 = (zext_ln870_3_fu_298_p1 + zext_ln870_fu_266_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_reg_139 = 'bx;

assign ap_return = ap_phi_mux_empty_phi_fu_143_p4;

assign grp_fu_150_p2 = ((wsp1_2_q1 == 64'd0) ? 1'b1 : 1'b0);

assign grp_fu_318_p0 = {{add_ln870_fu_302_p2[17:7]}};

assign grp_fu_318_p1 = 11'd5;

assign grp_fu_383_p0 = {{add_ln1350_fu_367_p2[17:7]}};

assign grp_fu_383_p1 = 11'd5;

assign grp_fu_536_p0 = grp_fu_536_p00;

assign grp_fu_536_p00 = or_ln1350_fu_389_p2;

assign grp_fu_536_p1 = 37'd419431;

assign grp_fu_544_p0 = grp_fu_544_p00;

assign grp_fu_544_p00 = or_ln870_fu_398_p2;

assign grp_fu_544_p1 = 37'd419431;

assign icmp_ln31_1_fu_529_p2 = ((reg_156 != zext_ln215_1_fu_526_p1) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_253_p2 = ((reg_156 == zext_ln215_fu_250_p1) ? 1'b1 : 1'b0);

assign or_ln1350_1_fu_515_p2 = (tmp_134_cast_fu_507_p3 | 12'd15);

assign or_ln1350_fu_389_p2 = (18'd120 | add_ln1350_reg_603_pp0_iter5_reg);

assign or_ln870_1_fu_474_p2 = (tmp_130_cast_fu_466_p3 | 12'd15);

assign or_ln870_fu_398_p2 = (18'd120 | add_ln870_reg_593_pp0_iter6_reg);

assign shl_ln1350_1_fu_324_p3 = {{wsp1_read_reg_568_pp0_iter1_reg}, {9'd0}};

assign shl_ln1350_2_fu_335_p3 = {{wsp1_read_reg_568_pp0_iter1_reg}, {7'd0}};

assign shl_ln1_fu_346_p3 = {{wsp11_read_reg_563_pp0_iter1_reg}, {7'd0}};

assign shl_ln870_1_fu_259_p3 = {{wsp2_read_reg_557}, {9'd0}};

assign shl_ln870_2_fu_270_p3 = {{wsp2_read_reg_557}, {7'd0}};

assign shl_ln_fu_281_p3 = {{wsp23_read_reg_552}, {7'd0}};

assign tmp_128_cast_fu_443_p3 = {{tmp_57_fu_434_p4}, {2'd0}};

assign tmp_130_cast_fu_466_p3 = {{add_ln870_5_fu_460_p2}, {4'd0}};

assign tmp_132_cast_fu_485_p3 = {{tmp_58_reg_633}, {2'd0}};

assign tmp_134_cast_fu_507_p3 = {{add_ln1350_5_fu_501_p2}, {4'd0}};

assign tmp_55_fu_192_p3 = {{add_ln870_3_fu_186_p2}, {4'd0}};

assign tmp_56_fu_237_p3 = {{add_ln1350_3_fu_231_p2}, {4'd0}};

assign tmp_57_fu_434_p4 = {{grp_fu_544_p2[33:28]}};

assign tmp_fu_168_p3 = {{wsp2}, {2'd0}};

assign tmp_s_fu_213_p3 = {{wsp1}, {2'd0}};

assign trunc_ln1350_fu_497_p1 = grp_fu_383_p2[7:0];

assign trunc_ln870_fu_457_p1 = urem_ln870_reg_623[7:0];

assign udiv_ln_cast_fu_425_p4 = {{grp_fu_544_p2[35:28]}};

assign wsp11_cast_fu_205_p1 = wsp11;

assign wsp23_cast_fu_160_p1 = wsp23;

assign zext_ln1350_1_fu_342_p1 = shl_ln1350_2_fu_335_p3;

assign zext_ln1350_2_fu_353_p1 = shl_ln1_fu_346_p3;

assign zext_ln1350_3_fu_363_p1 = add_ln1350_1_fu_357_p2;

assign zext_ln1350_4_fu_209_p1 = wsp1;

assign zext_ln1350_5_fu_221_p1 = tmp_s_fu_213_p3;

assign zext_ln1350_6_fu_245_p1 = tmp_56_fu_237_p3;

assign zext_ln1350_8_fu_521_p1 = or_ln1350_1_fu_515_p2;

assign zext_ln1350_fu_331_p1 = shl_ln1350_1_fu_324_p3;

assign zext_ln215_1_fu_526_p1 = rhs_11_reg_648;

assign zext_ln215_fu_250_p1 = rhs_reg_584;

assign zext_ln870_1_fu_277_p1 = shl_ln870_2_fu_270_p3;

assign zext_ln870_2_fu_288_p1 = shl_ln_fu_281_p3;

assign zext_ln870_3_fu_298_p1 = add_ln870_1_fu_292_p2;

assign zext_ln870_4_fu_164_p1 = wsp2;

assign zext_ln870_5_fu_176_p1 = tmp_fu_168_p3;

assign zext_ln870_6_fu_200_p1 = tmp_55_fu_192_p3;

assign zext_ln870_8_fu_480_p1 = or_ln870_1_fu_474_p2;

assign zext_ln870_fu_266_p1 = shl_ln870_1_fu_259_p3;

always @ (posedge ap_clk) begin
    add_ln870_reg_593[6:0] <= 7'b0000000;
    add_ln870_reg_593_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln870_reg_593_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln870_reg_593_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln870_reg_593_pp0_iter5_reg[6:0] <= 7'b0000000;
    add_ln870_reg_593_pp0_iter6_reg[6:0] <= 7'b0000000;
    add_ln1350_reg_603[6:0] <= 7'b0000000;
    add_ln1350_reg_603_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln1350_reg_603_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln1350_reg_603_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln1350_reg_603_pp0_iter5_reg[6:0] <= 7'b0000000;
end

endmodule //MPSQ_areWedgeSuperPointsEqual
