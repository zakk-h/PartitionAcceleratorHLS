-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_solveNextPatchPair is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_solveNextPatchPair is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state180 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state181 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state182 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state183 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state184 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state185 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state186 : STD_LOGIC_VECTOR (197 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state187 : STD_LOGIC_VECTOR (197 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (197 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (197 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (197 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (197 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state192 : STD_LOGIC_VECTOR (197 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state193 : STD_LOGIC_VECTOR (197 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state194 : STD_LOGIC_VECTOR (197 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state195 : STD_LOGIC_VECTOR (197 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state196 : STD_LOGIC_VECTOR (197 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state197 : STD_LOGIC_VECTOR (197 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state198 : STD_LOGIC_VECTOR (197 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_FFFFFFFFFFF0BDC0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111100001011110111000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C4747840 : STD_LOGIC_VECTOR (31 downto 0) := "11000100011101000111100001000000";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_C5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000101";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_3D : STD_LOGIC_VECTOR (11 downto 0) := "000000111101";
    constant ap_const_lv12_43 : STD_LOGIC_VECTOR (11 downto 0) := "000001000011";
    constant ap_const_lv12_3C : STD_LOGIC_VECTOR (11 downto 0) := "000000111100";
    constant ap_const_lv12_31 : STD_LOGIC_VECTOR (11 downto 0) := "000000110001";
    constant ap_const_lv12_54 : STD_LOGIC_VECTOR (11 downto 0) := "000001010100";
    constant ap_const_lv12_48 : STD_LOGIC_VECTOR (11 downto 0) := "000001001000";
    constant ap_const_lv12_5A : STD_LOGIC_VECTOR (11 downto 0) := "000001011010";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_FD050F1C : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111100011100";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv18_200 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_const_lv32_FD050F80 : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111110000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_37 : STD_LOGIC_VECTOR (11 downto 0) := "000000110111";
    constant ap_const_lv37_66667 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000001100110011001100111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (197 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_646_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_652 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal reg_658 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign4_reg_1342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal nPatchesAtOriginal_reg_1348 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln763_fu_673_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln763_reg_1355 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln763_fu_696_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln763_reg_1360 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln718_fu_724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln718_reg_1389 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_730_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_reg_1394 : STD_LOGIC_VECTOR (14 downto 0);
    signal patches_parameters_addr_2_reg_1399 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_3_reg_1404 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_4_reg_1409 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_5_reg_1414 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_6_reg_1419 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln783_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln783_reg_1424 : STD_LOGIC_VECTOR (0 downto 0);
    signal thirdLastPatchIndex_fu_793_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal thirdLastPatchIndex_reg_1428 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln788_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln788_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln788_fu_804_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln788_reg_1437 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln886_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_1445 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal squarePatch_alternate2_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal squarePatch_alternate2_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln803_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln803_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln812_1_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln812_1_reg_1460 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal add_ln814_fu_881_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln814_reg_1464 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln815_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln815_reg_1475 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal trunc_ln69_fu_966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln69_reg_1490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal or_ln815_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln815_reg_1497 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1511 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal select_ln824_fu_1062_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ppl_assign_s_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal lastPatchIndex_1_fu_1074_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lastPatchIndex_1_reg_1533 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal white_space_height_fu_1166_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal white_space_height_reg_1550 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal sext_ln534_fu_1174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1560 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal ap_CS_fsm_state131 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state131 : signal is "none";
    signal empty_72_fu_1185_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln867_fu_1219_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln867_reg_1608 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_tmp1_reg_1623 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state197 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state197 : signal is "none";
    signal grp_makeThirdPatch_fu_512_ap_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_ap_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_ap_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_ap_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeThirdPatch_fu_512_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_512_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_512_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_parameters_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_512_patches_parameters_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_parameters_we1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_patches_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_fu_1628_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1628_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1628_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1628_p_dout0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1628_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_512_grp_fu_1660_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1660_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_512_grp_fu_1660_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_ap_start : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_ap_done : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_ap_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_ap_ready : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_GDn_points_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_patches_parameters_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ready : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_done : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_dout0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_ce : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_apexZ0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_z_top : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_leftRight : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_572_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_572_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_start : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_done : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_idle : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_ready : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce0 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce1 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_done : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_idle : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_ready : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_ce0 : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_ce0 : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_dout0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_ce : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_317 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_phi_mux_repeat_original_ph_phi_fu_333_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal repeat_original_ph_reg_329 : STD_LOGIC_VECTOR (0 downto 0);
    signal repeat_original_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_tmp119_0_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal lastPatchIndex_0_reg_365 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln857_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal white_space_height_0_reg_375 : STD_LOGIC_VECTOR (63 downto 0);
    signal previous_white_space_height_0_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_z_top_index_0_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_0_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal counterUpshift_0_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal previous_z_top_min_V_0_reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_0_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_ph_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal ppl_assign_0_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_apexZ0_0_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_reg_487 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_madeComplementaryPatch_phi_fu_503_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal madeComplementaryPatch_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makeThirdPatch_fu_512_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state198 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state198 : signal is "none";
    signal grp_solveComplmentaryPatch_fu_539_ap_start_reg : STD_LOGIC := '0';
    signal grp_makePatch_alignedToLine_fu_572_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (197 downto 0);
    signal ap_NS_fsm_state28 : STD_LOGIC;
    signal ap_NS_fsm_state134 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm_state8 : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal zext_ln763_2_fu_708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln764_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln763_1_fu_743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln886_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_1_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_2_fu_783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln814_6_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln824_4_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln841_1_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln842_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln867_2_fu_1265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln867_1_fu_1254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_684_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_677_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln763_fu_692_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln763_1_fu_702_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln764_fu_713_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln763_fu_738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln886_fu_748_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_1_fu_768_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_2_fu_778_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln886_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notChoppedPatch_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln812_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln812_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln812_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_1_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_866_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln814_fu_874_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln814_1_fu_878_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_897_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_897_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1310_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_1_fu_912_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_925_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln814_4_fu_933_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln814_3_fu_921_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_897_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln814_1_fu_937_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln814_5_fu_943_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln814_2_fu_947_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_953_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln824_fu_975_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_994_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_994_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1317_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_6_fu_1012_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln824_2_fu_1019_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln824_1_fu_1009_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_994_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln824_1_fu_1023_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln824_3_fu_1029_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln824_2_fu_1033_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_7_fu_1039_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln69_2_fu_1052_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln831_fu_1070_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_1087_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1080_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln841_fu_1094_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln841_fu_1098_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln841_fu_1104_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln841_fu_1110_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln842_fu_1121_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln215_1_fu_1136_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_1132_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_1_fu_1136_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_3_fu_1150_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_2_fu_1146_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_3_fu_1150_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_1140_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_1_fu_1154_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_1_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1230_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_cast_fu_1223_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln867_fu_1238_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln867_fu_1242_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln867_fu_1248_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln867_1_fu_1259_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1310_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1310_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1317_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1317_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_897_ap_start : STD_LOGIC;
    signal grp_fu_897_ap_done : STD_LOGIC;
    signal grp_fu_994_ap_start : STD_LOGIC;
    signal grp_fu_994_ap_done : STD_LOGIC;
    signal grp_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1628_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1628_ce : STD_LOGIC;
    signal grp_fu_1628_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1632_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1632_ce : STD_LOGIC;
    signal grp_fu_1635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1635_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1635_ce : STD_LOGIC;
    signal grp_fu_1638_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1638_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1638_ce : STD_LOGIC;
    signal grp_fu_1660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1660_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1660_ce : STD_LOGIC;
    signal ap_block_state198_on_subcall_done : BOOLEAN;
    signal grp_fu_1310_p00 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1317_p00 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makeThirdPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
        z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_we1 : OUT STD_LOGIC;
        patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_idle : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_idle : IN STD_LOGIC;
        grp_fu_1628_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1628_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1628_p_ce : OUT STD_LOGIC;
        grp_fu_1660_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1660_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1660_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_solveComplmentaryPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        nPatchesAtOriginal : IN STD_LOGIC_VECTOR (7 downto 0);
        previous_z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        white_space_height_read : IN STD_LOGIC_VECTOR (63 downto 0);
        original_c : IN STD_LOGIC_VECTOR (31 downto 0);
        original_d : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_idle : IN STD_LOGIC;
        grp_fu_1628_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1628_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1628_p_ce : OUT STD_LOGIC;
        grp_fu_1635_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1635_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1635_p_ce : OUT STD_LOGIC;
        grp_fu_1638_p_din0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_fu_1638_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1638_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1638_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_areWedgeSuperPointsEqual IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wsp1_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp1_2_ce0 : OUT STD_LOGIC;
        wsp1_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp1_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp1_2_ce1 : OUT STD_LOGIC;
        wsp1_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp1 : IN STD_LOGIC_VECTOR (7 downto 0);
        wsp11 : IN STD_LOGIC_VECTOR (2 downto 0);
        wsp2 : IN STD_LOGIC_VECTOR (7 downto 0);
        wsp23 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_getSolveNextPatchPairWhileCondition IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        lastPatchIndex : IN STD_LOGIC_VECTOR (4 downto 0);
        repeat_original : IN STD_LOGIC_VECTOR (0 downto 0);
        white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        previous_white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        current_z_top_index : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1628_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1628_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1628_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1628_p_ce : OUT STD_LOGIC;
        grp_fu_1632_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1632_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1632_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_urem_11ns_4ns_11_15_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component MPSQ_mul_mul_18ns_20ns_37_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component MPSQ_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_sitodp_64ns_64_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component MPSQ_sitodp_64s_64_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component MPSQ_mul_33s_64s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component MPSQ_sitodp_32ns_64_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_makeThirdPatch_fu_512 : component MPSQ_makeThirdPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeThirdPatch_fu_512_ap_start,
        ap_done => grp_makeThirdPatch_fu_512_ap_done,
        ap_idle => grp_makeThirdPatch_fu_512_ap_idle,
        ap_ready => grp_makeThirdPatch_fu_512_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makeThirdPatch_fu_512_n_patches_o,
        n_patches_o_ap_vld => grp_makeThirdPatch_fu_512_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makeThirdPatch_fu_512_GDn_points_address0,
        GDn_points_ce0 => grp_makeThirdPatch_fu_512_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_makeThirdPatch_fu_512_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makeThirdPatch_fu_512_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makeThirdPatch_fu_512_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makeThirdPatch_fu_512_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_makeThirdPatch_fu_512_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_makeThirdPatch_fu_512_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        lastPatchIndex => reg_652,
        z_top_min => z_top_min_2_reg_487,
        z_top_max => z_top_max_read,
        complementary_apexZ0 => complementary_apexZ0_0_reg_477,
        apexZ0 => apexZ0,
        ppl => ppl_assign_0_reg_467,
        GDarrayDecoded_address0 => grp_makeThirdPatch_fu_512_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeThirdPatch_fu_512_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_makeThirdPatch_fu_512_patches_parameters_address0,
        patches_parameters_ce0 => grp_makeThirdPatch_fu_512_patches_parameters_ce0,
        patches_parameters_we0 => grp_makeThirdPatch_fu_512_patches_parameters_we0,
        patches_parameters_d0 => grp_makeThirdPatch_fu_512_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_makeThirdPatch_fu_512_patches_parameters_address1,
        patches_parameters_ce1 => grp_makeThirdPatch_fu_512_patches_parameters_ce1,
        patches_parameters_we1 => grp_makeThirdPatch_fu_512_patches_parameters_we1,
        patches_parameters_d1 => grp_makeThirdPatch_fu_512_patches_parameters_d1,
        patches_parameters_q1 => patches_parameters_q1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din1 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din2 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din3 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din4 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din5 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_dout0 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ready => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_done => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_idle => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_idle,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din1 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din2 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din3 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din4 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din5 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_dout0 => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ready => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_done => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_idle => grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_idle,
        grp_fu_1628_p_din0 => grp_makeThirdPatch_fu_512_grp_fu_1628_p_din0,
        grp_fu_1628_p_din1 => grp_makeThirdPatch_fu_512_grp_fu_1628_p_din1,
        grp_fu_1628_p_opcode => grp_makeThirdPatch_fu_512_grp_fu_1628_p_opcode,
        grp_fu_1628_p_dout0 => grp_makeThirdPatch_fu_512_grp_fu_1628_p_dout0,
        grp_fu_1628_p_ce => grp_makeThirdPatch_fu_512_grp_fu_1628_p_ce,
        grp_fu_1660_p_din0 => grp_makeThirdPatch_fu_512_grp_fu_1660_p_din0,
        grp_fu_1660_p_dout0 => grp_makeThirdPatch_fu_512_grp_fu_1660_p_dout0,
        grp_fu_1660_p_ce => grp_makeThirdPatch_fu_512_grp_fu_1660_p_ce);

    grp_solveComplmentaryPatch_fu_539 : component MPSQ_solveComplmentaryPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_solveComplmentaryPatch_fu_539_ap_start,
        ap_done => grp_solveComplmentaryPatch_fu_539_ap_done,
        ap_idle => grp_solveComplmentaryPatch_fu_539_ap_idle,
        ap_ready => grp_solveComplmentaryPatch_fu_539_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_solveComplmentaryPatch_fu_539_n_patches_o,
        n_patches_o_ap_vld => grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld,
        GDn_points_address0 => grp_solveComplmentaryPatch_fu_539_GDn_points_address0,
        GDn_points_ce0 => grp_solveComplmentaryPatch_fu_539_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_we0,
        patches_superpoints_d0 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        ppl => ppl_assign_s_reg_1527,
        nPatchesAtOriginal => nPatchesAtOriginal_reg_1348,
        previous_z_top_min_read => previous_z_top_min_V_0_reg_433,
        complementary_apexZ0 => trunc_ln69_reg_1490,
        white_space_height_read => white_space_height_0_reg_375,
        original_c => reg_658,
        original_d => reg_665,
        p_read12 => counter_0_reg_409,
        p_read13 => counterUpshift_0_reg_421,
        z_top_min_read => z_top_min_0_reg_445,
        GDarrayDecoded_address0 => grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_solveComplmentaryPatch_fu_539_patches_parameters_address0,
        patches_parameters_ce0 => grp_solveComplmentaryPatch_fu_539_patches_parameters_ce0,
        patches_parameters_we0 => grp_solveComplmentaryPatch_fu_539_patches_parameters_we0,
        patches_parameters_d0 => grp_solveComplmentaryPatch_fu_539_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_solveComplmentaryPatch_fu_539_patches_parameters_address1,
        patches_parameters_ce1 => grp_solveComplmentaryPatch_fu_539_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        ap_return_0 => grp_solveComplmentaryPatch_fu_539_ap_return_0,
        ap_return_1 => grp_solveComplmentaryPatch_fu_539_ap_return_1,
        ap_return_2 => grp_solveComplmentaryPatch_fu_539_ap_return_2,
        ap_return_3 => grp_solveComplmentaryPatch_fu_539_ap_return_3,
        ap_return_4 => grp_solveComplmentaryPatch_fu_539_ap_return_4,
        ap_return_5 => grp_solveComplmentaryPatch_fu_539_ap_return_5,
        ap_return_6 => grp_solveComplmentaryPatch_fu_539_ap_return_6,
        ap_return_7 => grp_solveComplmentaryPatch_fu_539_ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_dout0 => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ready => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_done => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_600_p_idle => grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_idle,
        grp_fu_1628_p_din0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din0,
        grp_fu_1628_p_din1 => grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din1,
        grp_fu_1628_p_opcode => grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_opcode,
        grp_fu_1628_p_dout0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_dout0,
        grp_fu_1628_p_ce => grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_ce,
        grp_fu_1635_p_din0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_din0,
        grp_fu_1635_p_dout0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_dout0,
        grp_fu_1635_p_ce => grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_ce,
        grp_fu_1638_p_din0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din0,
        grp_fu_1638_p_din1 => grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din1,
        grp_fu_1638_p_dout0 => grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_dout0,
        grp_fu_1638_p_ce => grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_ce);

    grp_makePatch_alignedToLine_fu_572 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_572_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_572_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_572_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_572_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_572_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_572_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_572_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_572_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_572_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_572_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_572_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        apexZ0 => grp_makePatch_alignedToLine_fu_572_apexZ0,
        z_top => grp_makePatch_alignedToLine_fu_572_z_top,
        p_read => grp_makePatch_alignedToLine_fu_572_p_read,
        leftRight => grp_makePatch_alignedToLine_fu_572_leftRight,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_572_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_572_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_572_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_572_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_makePatch_alignedToLine_fu_572_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_600 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_600_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_600_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_600_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_return);

    grp_areWedgeSuperPointsEqual_fu_616 : component MPSQ_areWedgeSuperPointsEqual
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_areWedgeSuperPointsEqual_fu_616_ap_start,
        ap_done => grp_areWedgeSuperPointsEqual_fu_616_ap_done,
        ap_idle => grp_areWedgeSuperPointsEqual_fu_616_ap_idle,
        ap_ready => grp_areWedgeSuperPointsEqual_fu_616_ap_ready,
        wsp1_2_address0 => grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address0,
        wsp1_2_ce0 => grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce0,
        wsp1_2_q0 => patches_superpoints_q0,
        wsp1_2_address1 => grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address1,
        wsp1_2_ce1 => grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce1,
        wsp1_2_q1 => patches_superpoints_q1,
        wsp1 => reg_652,
        wsp11 => i_reg_317,
        wsp2 => thirdLastPatchIndex_reg_1428,
        wsp23 => i_reg_317,
        ap_return => grp_areWedgeSuperPointsEqual_fu_616_ap_return);

    grp_getSolveNextPatchPairWhileCondition_fu_628 : component MPSQ_getSolveNextPatchPairWhileCondition
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start,
        ap_done => grp_getSolveNextPatchPairWhileCondition_fu_628_ap_done,
        ap_idle => grp_getSolveNextPatchPairWhileCondition_fu_628_ap_idle,
        ap_ready => grp_getSolveNextPatchPairWhileCondition_fu_628_ap_ready,
        GDn_points_address0 => grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_address0,
        GDn_points_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        lastPatchIndex => lastPatchIndex_0_reg_365,
        repeat_original => repeat_original_reg_342,
        white_space_height => white_space_height_0_reg_375,
        previous_white_space_height => previous_white_space_height_0_reg_385,
        current_z_top_index => current_z_top_index_0_reg_397,
        patches_parameters_address0 => grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_address0,
        patches_parameters_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_ce0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_getSolveNextPatchPairWhileCondition_fu_628_ap_return,
        grp_fu_1628_p_din0 => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din0,
        grp_fu_1628_p_din1 => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din1,
        grp_fu_1628_p_opcode => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_opcode,
        grp_fu_1628_p_dout0 => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_dout0,
        grp_fu_1628_p_ce => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_ce,
        grp_fu_1632_p_din0 => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_din0,
        grp_fu_1632_p_dout0 => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_dout0,
        grp_fu_1632_p_ce => grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_ce);

    grp_straightLineProjectorFromLayerIJtoK_fu_1642 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1642_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1642_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1642_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_1651 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1651_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1651_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1651_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_return);

    urem_11ns_4ns_11_15_seq_1_U167 : component MPSQ_urem_11ns_4ns_11_15_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_897_ap_start,
        done => grp_fu_897_ap_done,
        din0 => grp_fu_897_p0,
        din1 => grp_fu_897_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_897_p2);

    urem_11ns_4ns_11_15_seq_1_U168 : component MPSQ_urem_11ns_4ns_11_15_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_994_ap_start,
        done => grp_fu_994_ap_done,
        din0 => grp_fu_994_p0,
        din1 => grp_fu_994_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_994_p2);

    mul_mul_18ns_20ns_37_4_1_U169 : component MPSQ_mul_mul_18ns_20ns_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 20,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1310_p0,
        din1 => grp_fu_1310_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1310_p2);

    mul_mul_18ns_20ns_37_4_1_U170 : component MPSQ_mul_mul_18ns_20ns_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 20,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1317_p0,
        din1 => grp_fu_1317_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1317_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U171 : component MPSQ_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1628_p0,
        din1 => grp_fu_1628_p1,
        ce => grp_fu_1628_ce,
        opcode => grp_fu_1628_opcode,
        dout => grp_fu_1628_p2);

    sitodp_64ns_64_4_no_dsp_1_U172 : component MPSQ_sitodp_64ns_64_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1632_p0,
        ce => grp_fu_1632_ce,
        dout => grp_fu_1632_p1);

    sitodp_64s_64_4_no_dsp_1_U173 : component MPSQ_sitodp_64s_64_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1635_p0,
        ce => grp_fu_1635_ce,
        dout => grp_fu_1635_p1);

    mul_33s_64s_64_2_1_U174 : component MPSQ_mul_33s_64s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1638_p0,
        din1 => grp_fu_1638_p1,
        ce => grp_fu_1638_ce,
        dout => grp_fu_1638_p2);

    sitodp_32ns_64_4_no_dsp_1_U175 : component MPSQ_sitodp_32ns_64_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1660_p0,
        ce => grp_fu_1660_ce,
        dout => grp_fu_1660_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state8) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_areWedgeSuperPointsEqual_fu_616_ap_ready = ap_const_logic_1)) then 
                    grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getSolveNextPatchPairWhileCondition_fu_628_ap_ready = ap_const_logic_1)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_572_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_572_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state122) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_makePatch_alignedToLine_fu_572_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_572_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_572_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeThirdPatch_fu_512_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeThirdPatch_fu_512_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_phi_mux_madeComplementaryPatch_phi_fu_503_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state197))) then 
                    grp_makeThirdPatch_fu_512_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeThirdPatch_fu_512_ap_ready = ap_const_logic_1)) then 
                    grp_makeThirdPatch_fu_512_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_solveComplmentaryPatch_fu_539_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_solveComplmentaryPatch_fu_539_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_reg_1560 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                    grp_solveComplmentaryPatch_fu_539_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_solveComplmentaryPatch_fu_539_ap_ready = ap_const_logic_1)) then 
                    grp_solveComplmentaryPatch_fu_539_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state134) and (ap_const_logic_1 = ap_CS_fsm_state133)) or ((ap_const_logic_1 = ap_NS_fsm_state28) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp119_0_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln815_fu_970_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state106))) then 
                agg_tmp119_0_reg_355 <= reg_665;
            elsif (((or_ln815_reg_1497 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state121))) then 
                agg_tmp119_0_reg_355 <= select_ln824_fu_1062_p3;
            end if; 
        end if;
    end process;

    complementary_apexZ0_0_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln812_1_reg_1460) and (ap_const_logic_1 = ap_CS_fsm_state132))) then 
                complementary_apexZ0_0_reg_477 <= trunc_ln69_reg_1490;
            elsif (((ap_const_lv1_0 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then 
                complementary_apexZ0_0_reg_477 <= p_read7;
            end if; 
        end if;
    end process;

    counterUpshift_0_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                counterUpshift_0_reg_421 <= grp_solveComplmentaryPatch_fu_539_ap_return_4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                counterUpshift_0_reg_421 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    counter_0_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                counter_0_reg_409 <= grp_solveComplmentaryPatch_fu_539_ap_return_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                counter_0_reg_409 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    current_z_top_index_0_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                current_z_top_index_0_reg_397 <= grp_solveComplmentaryPatch_fu_539_ap_return_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                current_z_top_index_0_reg_397 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    i_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_areWedgeSuperPointsEqual_fu_616_ap_return = ap_const_lv1_1) and (icmp_ln788_reg_1433 = ap_const_lv1_1) and (icmp_ln783_reg_1424 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                i_reg_317 <= add_ln788_reg_1437;
            elsif (((icmp_ln783_fu_788_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_reg_317 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    lastPatchIndex_0_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                lastPatchIndex_0_reg_365 <= empty_72_fu_1185_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                lastPatchIndex_0_reg_365 <= lastPatchIndex_1_reg_1533;
            end if; 
        end if;
    end process;

    madeComplementaryPatch_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln812_1_reg_1460) and (ap_const_logic_1 = ap_CS_fsm_state132))) then 
                madeComplementaryPatch_reg_498 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_0 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then 
                madeComplementaryPatch_reg_498 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln812_1_reg_1460) and (ap_const_logic_1 = ap_CS_fsm_state132))) then 
                ppl_assign_0_reg_467 <= ppl_assign_s_reg_1527;
            elsif (((ap_const_lv1_0 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then 
                ppl_assign_0_reg_467 <= ppl_assign4_reg_1342;
            end if; 
        end if;
    end process;

    previous_white_space_height_0_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                previous_white_space_height_0_reg_385 <= grp_solveComplmentaryPatch_fu_539_ap_return_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                previous_white_space_height_0_reg_385 <= ap_const_lv64_FFFFFFFFFFF0BDC0;
            end if; 
        end if;
    end process;

    previous_z_top_min_V_0_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                previous_z_top_min_V_0_reg_433 <= grp_solveComplmentaryPatch_fu_539_ap_return_5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                previous_z_top_min_V_0_reg_433 <= ap_const_lv32_C4747840;
            end if; 
        end if;
    end process;

    reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
                reg_658 <= patches_parameters_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                reg_658 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
                reg_665 <= patches_parameters_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                reg_665 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    repeat_original_ph_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_areWedgeSuperPointsEqual_fu_616_ap_return = ap_const_lv1_0) and (icmp_ln788_reg_1433 = ap_const_lv1_1) and (icmp_ln783_reg_1424 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                repeat_original_ph_reg_329 <= ap_const_lv1_0;
            elsif (((icmp_ln788_fu_798_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                repeat_original_ph_reg_329 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    repeat_original_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (((icmp_ln788_reg_1433 = ap_const_lv1_0) and (icmp_ln783_reg_1424 = ap_const_lv1_1)) or ((grp_areWedgeSuperPointsEqual_fu_616_ap_return = ap_const_lv1_0) and (icmp_ln783_reg_1424 = ap_const_lv1_1))))) then 
                repeat_original_reg_342 <= ap_phi_mux_repeat_original_ph_phi_fu_333_p4;
            elsif (((icmp_ln783_fu_788_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                repeat_original_reg_342 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    white_space_height_0_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                white_space_height_0_reg_375 <= grp_solveComplmentaryPatch_fu_539_ap_return_6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                white_space_height_0_reg_375 <= sext_ln534_fu_1174_p1;
            end if; 
        end if;
    end process;

    z_top_min_0_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                z_top_min_0_reg_445 <= grp_solveComplmentaryPatch_fu_539_ap_return_7;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
                z_top_min_0_reg_445 <= agg_tmp119_0_reg_355;
            end if; 
        end if;
    end process;

    z_top_min_2_ph_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_1) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                z_top_min_2_ph_reg_456 <= grp_solveComplmentaryPatch_fu_539_ap_return_7;
            elsif (((tmp_s_reg_1560 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                z_top_min_2_ph_reg_456 <= z_top_min_0_reg_445;
            end if; 
        end if;
    end process;

    z_top_min_2_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln812_1_reg_1460) and (ap_const_logic_1 = ap_CS_fsm_state132))) then 
                z_top_min_2_reg_487 <= z_top_min_2_ph_reg_456;
            elsif (((ap_const_lv1_0 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then 
                z_top_min_2_reg_487 <= p_read4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln718_reg_1389 <= add_ln718_fu_724_p2;
                icmp_ln783_reg_1424 <= icmp_ln783_fu_788_p2;
                    patches_parameters_addr_2_reg_1399(11 downto 3) <= zext_ln763_1_fu_743_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_3_reg_1404(11 downto 3) <= zext_ln886_fu_753_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_4_reg_1409(11 downto 3) <= zext_ln534_fu_763_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_5_reg_1414(11 downto 3) <= zext_ln534_1_fu_773_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_6_reg_1419(11 downto 3) <= zext_ln534_2_fu_783_p1(12 - 1 downto 0)(11 downto 3);
                    tmp_reg_1394(14 downto 7) <= tmp_fu_730_p3(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln788_reg_1437 <= add_ln788_fu_804_p2;
                icmp_ln788_reg_1433 <= icmp_ln788_fu_798_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then
                    add_ln814_reg_1464(17 downto 7) <= add_ln814_fu_881_p2(17 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state91)) then
                and_ln812_1_reg_1460 <= and_ln812_1_fu_860_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_ln803_reg_1455 <= icmp_ln803_fu_821_p2;
                squarePatch_alternate2_reg_1450 <= squarePatch_alternate2_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state92)) then
                icmp_ln815_reg_1475 <= icmp_ln815_fu_903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                icmp_ln886_reg_1445 <= icmp_ln886_fu_810_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state124)) then
                lastPatchIndex_1_reg_1533 <= lastPatchIndex_1_fu_1074_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                nPatchesAtOriginal_reg_1348 <= n_patches_i;
                trunc_ln763_reg_1355 <= trunc_ln763_fu_673_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state106)) then
                or_ln815_reg_1497 <= or_ln815_fu_970_p2;
                trunc_ln69_reg_1490 <= trunc_ln69_fu_966_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                ppl_assign4_reg_1342 <= grp_makePatch_alignedToLine_fu_572_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state123)) then
                ppl_assign_s_reg_1527 <= grp_makePatch_alignedToLine_fu_572_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state197)) then
                ref_tmp1_reg_1623 <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_652 <= grp_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    sub_ln763_reg_1360(11 downto 3) <= sub_ln763_fu_696_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln783_fu_788_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                thirdLastPatchIndex_reg_1428 <= thirdLastPatchIndex_fu_793_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state109)) then
                tmp_5_reg_1511 <= grp_fu_1317_p2(36 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state129)) then
                tmp_s_reg_1560 <= grp_getSolveNextPatchPairWhileCondition_fu_628_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state132)) then
                trunc_ln867_reg_1608 <= trunc_ln867_fu_1219_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state126)) then
                white_space_height_reg_1550 <= white_space_height_fu_1166_p3;
            end if;
        end if;
    end process;
    sub_ln763_reg_1360(2 downto 0) <= "000";
    tmp_reg_1394(6 downto 0) <= "0000000";
    patches_parameters_addr_2_reg_1399(2 downto 0) <= "100";
    patches_parameters_addr_3_reg_1404(2 downto 0) <= "001";
    patches_parameters_addr_4_reg_1409(2 downto 0) <= "100";
    patches_parameters_addr_5_reg_1414(2 downto 0) <= "000";
    patches_parameters_addr_6_reg_1419(2 downto 0) <= "010";
    add_ln814_reg_1464(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln783_fu_788_p2, icmp_ln783_reg_1424, icmp_ln788_fu_798_p2, icmp_ln788_reg_1433, ap_CS_fsm_state6, and_ln812_1_fu_860_p2, ap_CS_fsm_state91, ap_CS_fsm_state106, or_ln815_fu_970_p2, ap_CS_fsm_state123, tmp_s_reg_1560, ap_CS_fsm_state129, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_ap_done, grp_makePatch_alignedToLine_fu_572_ap_done, grp_areWedgeSuperPointsEqual_fu_616_ap_return, grp_getSolveNextPatchPairWhileCondition_fu_628_ap_done, ap_CS_fsm_state27, icmp_ln857_fu_1213_p2, ap_CS_fsm_state130, ap_CS_fsm_state198, ap_block_state198_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_makePatch_alignedToLine_fu_572_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln783_fu_788_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln788_fu_798_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and ((icmp_ln783_reg_1424 = ap_const_lv1_0) or ((grp_areWedgeSuperPointsEqual_fu_616_ap_return = ap_const_lv1_0) or (icmp_ln788_reg_1433 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                if (((ap_const_lv1_0 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then
                    ap_NS_fsm <= ap_ST_fsm_state132;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                if (((or_ln815_fu_970_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state106))) then
                    ap_NS_fsm <= ap_ST_fsm_state121;
                else
                    ap_NS_fsm <= ap_ST_fsm_state107;
                end if;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                if (((grp_makePatch_alignedToLine_fu_572_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state123))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_state123;
                end if;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                if (((grp_getSolveNextPatchPairWhileCondition_fu_628_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state129))) then
                    ap_NS_fsm <= ap_ST_fsm_state130;
                else
                    ap_NS_fsm <= ap_ST_fsm_state129;
                end if;
            when ap_ST_fsm_state130 => 
                if (((tmp_s_reg_1560 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state130))) then
                    ap_NS_fsm <= ap_ST_fsm_state132;
                else
                    ap_NS_fsm <= ap_ST_fsm_state131;
                end if;
            when ap_ST_fsm_state131 => 
                if (((icmp_ln857_fu_1213_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then
                    ap_NS_fsm <= ap_ST_fsm_state128;
                elsif (((icmp_ln857_fu_1213_p2 = ap_const_lv1_1) and (grp_solveComplmentaryPatch_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then
                    ap_NS_fsm <= ap_ST_fsm_state132;
                else
                    ap_NS_fsm <= ap_ST_fsm_state131;
                end if;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state145 => 
                ap_NS_fsm <= ap_ST_fsm_state146;
            when ap_ST_fsm_state146 => 
                ap_NS_fsm <= ap_ST_fsm_state147;
            when ap_ST_fsm_state147 => 
                ap_NS_fsm <= ap_ST_fsm_state148;
            when ap_ST_fsm_state148 => 
                ap_NS_fsm <= ap_ST_fsm_state149;
            when ap_ST_fsm_state149 => 
                ap_NS_fsm <= ap_ST_fsm_state150;
            when ap_ST_fsm_state150 => 
                ap_NS_fsm <= ap_ST_fsm_state151;
            when ap_ST_fsm_state151 => 
                ap_NS_fsm <= ap_ST_fsm_state152;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state153;
            when ap_ST_fsm_state153 => 
                ap_NS_fsm <= ap_ST_fsm_state154;
            when ap_ST_fsm_state154 => 
                ap_NS_fsm <= ap_ST_fsm_state155;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state172;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                ap_NS_fsm <= ap_ST_fsm_state174;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state175;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                ap_NS_fsm <= ap_ST_fsm_state178;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state179;
            when ap_ST_fsm_state179 => 
                ap_NS_fsm <= ap_ST_fsm_state180;
            when ap_ST_fsm_state180 => 
                ap_NS_fsm <= ap_ST_fsm_state181;
            when ap_ST_fsm_state181 => 
                ap_NS_fsm <= ap_ST_fsm_state182;
            when ap_ST_fsm_state182 => 
                ap_NS_fsm <= ap_ST_fsm_state183;
            when ap_ST_fsm_state183 => 
                ap_NS_fsm <= ap_ST_fsm_state184;
            when ap_ST_fsm_state184 => 
                ap_NS_fsm <= ap_ST_fsm_state185;
            when ap_ST_fsm_state185 => 
                ap_NS_fsm <= ap_ST_fsm_state186;
            when ap_ST_fsm_state186 => 
                ap_NS_fsm <= ap_ST_fsm_state187;
            when ap_ST_fsm_state187 => 
                ap_NS_fsm <= ap_ST_fsm_state188;
            when ap_ST_fsm_state188 => 
                ap_NS_fsm <= ap_ST_fsm_state189;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                ap_NS_fsm <= ap_ST_fsm_state191;
            when ap_ST_fsm_state191 => 
                ap_NS_fsm <= ap_ST_fsm_state192;
            when ap_ST_fsm_state192 => 
                ap_NS_fsm <= ap_ST_fsm_state193;
            when ap_ST_fsm_state193 => 
                ap_NS_fsm <= ap_ST_fsm_state194;
            when ap_ST_fsm_state194 => 
                ap_NS_fsm <= ap_ST_fsm_state195;
            when ap_ST_fsm_state195 => 
                ap_NS_fsm <= ap_ST_fsm_state196;
            when ap_ST_fsm_state196 => 
                ap_NS_fsm <= ap_ST_fsm_state197;
            when ap_ST_fsm_state197 => 
                ap_NS_fsm <= ap_ST_fsm_state198;
            when ap_ST_fsm_state198 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state198) and (ap_const_boolean_0 = ap_block_state198_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state198;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    GDarrayDecoded_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_GDarrayDecoded_address0, grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_address0, grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_address0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            GDarrayDecoded_address0 <= grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_address0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            GDarrayDecoded_address0 <= grp_makeThirdPatch_fu_512_GDarrayDecoded_address0;
        else 
            GDarrayDecoded_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    GDarrayDecoded_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_GDarrayDecoded_ce0, grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_ce0, grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_ce0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_572_GDarrayDecoded_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            GDarrayDecoded_ce0 <= grp_solveComplmentaryPatch_fu_539_GDarrayDecoded_ce0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            GDarrayDecoded_ce0 <= grp_makeThirdPatch_fu_512_GDarrayDecoded_ce0;
        else 
            GDarrayDecoded_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    GDn_points_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state129, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_GDn_points_address0, grp_solveComplmentaryPatch_fu_539_GDn_points_address0, grp_makePatch_alignedToLine_fu_572_GDn_points_address0, grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_address0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            GDn_points_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_address0 <= grp_makePatch_alignedToLine_fu_572_GDn_points_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            GDn_points_address0 <= grp_solveComplmentaryPatch_fu_539_GDn_points_address0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            GDn_points_address0 <= grp_makeThirdPatch_fu_512_GDn_points_address0;
        else 
            GDn_points_address0 <= "XXX";
        end if; 
    end process;


    GDn_points_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state129, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_GDn_points_ce0, grp_solveComplmentaryPatch_fu_539_GDn_points_ce0, grp_makePatch_alignedToLine_fu_572_GDn_points_ce0, grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_ce0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            GDn_points_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_GDn_points_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_572_GDn_points_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            GDn_points_ce0 <= grp_solveComplmentaryPatch_fu_539_GDn_points_ce0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            GDn_points_ce0 <= grp_makeThirdPatch_fu_512_GDn_points_ce0;
        else 
            GDn_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln534_1_fu_768_p2 <= std_logic_vector(unsigned(sub_ln763_reg_1360) + unsigned(ap_const_lv12_48));
    add_ln534_2_fu_778_p2 <= std_logic_vector(unsigned(sub_ln763_reg_1360) + unsigned(ap_const_lv12_5A));
    add_ln534_fu_758_p2 <= std_logic_vector(unsigned(sub_ln763_reg_1360) + unsigned(ap_const_lv12_54));
    add_ln718_fu_724_p2 <= std_logic_vector(unsigned(p_read1) + unsigned(ap_const_lv32_1));
    add_ln763_1_fu_702_p2 <= std_logic_vector(unsigned(sub_ln763_fu_696_p2) + unsigned(ap_const_lv12_3D));
    add_ln763_fu_738_p2 <= std_logic_vector(unsigned(sub_ln763_reg_1360) + unsigned(ap_const_lv12_3C));
    add_ln764_fu_713_p2 <= std_logic_vector(unsigned(sub_ln763_fu_696_p2) + unsigned(ap_const_lv12_43));
    add_ln788_fu_804_p2 <= std_logic_vector(unsigned(i_reg_317) + unsigned(ap_const_lv3_1));
    add_ln814_1_fu_937_p2 <= std_logic_vector(unsigned(zext_ln814_4_fu_933_p1) + unsigned(zext_ln814_3_fu_921_p1));
    add_ln814_2_fu_947_p2 <= std_logic_vector(unsigned(add_ln814_1_fu_937_p2) + unsigned(zext_ln814_5_fu_943_p1));
    add_ln814_fu_881_p2 <= std_logic_vector(unsigned(zext_ln814_fu_874_p1) + unsigned(zext_ln814_1_fu_878_p1));
    add_ln824_1_fu_1023_p2 <= std_logic_vector(unsigned(zext_ln824_2_fu_1019_p1) + unsigned(zext_ln824_1_fu_1009_p1));
    add_ln824_2_fu_1033_p2 <= std_logic_vector(unsigned(add_ln824_1_fu_1023_p2) + unsigned(zext_ln824_3_fu_1029_p1));
    add_ln824_fu_975_p2 <= std_logic_vector(unsigned(add_ln814_reg_1464) + unsigned(ap_const_lv18_200));
    add_ln841_fu_1104_p2 <= std_logic_vector(unsigned(sub_ln841_fu_1098_p2) + unsigned(ap_const_lv12_30));
    add_ln842_fu_1121_p2 <= std_logic_vector(unsigned(sub_ln841_fu_1098_p2) + unsigned(ap_const_lv12_37));
    add_ln867_1_fu_1259_p2 <= std_logic_vector(unsigned(sub_ln867_fu_1242_p2) + unsigned(ap_const_lv12_3D));
    add_ln867_fu_1248_p2 <= std_logic_vector(unsigned(sub_ln867_fu_1242_p2) + unsigned(ap_const_lv12_3C));
    add_ln886_fu_748_p2 <= std_logic_vector(unsigned(sub_ln763_reg_1360) + unsigned(ap_const_lv12_31));
    and_ln812_1_fu_860_p2 <= (icmp_ln886_1_fu_842_p2 and and_ln812_fu_854_p2);
    and_ln812_fu_854_p2 <= (xor_ln812_fu_836_p2 and icmp_ln812_fu_848_p2);
    and_ln886_fu_827_p2 <= (squarePatch_alternate2_reg_1450 and icmp_ln886_reg_1445);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state120 <= ap_CS_fsm(119);
    ap_CS_fsm_state121 <= ap_CS_fsm(120);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state130 <= ap_CS_fsm(129);
    ap_CS_fsm_state131 <= ap_CS_fsm(130);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state134 <= ap_CS_fsm(133);
    ap_CS_fsm_state197 <= ap_CS_fsm(196);
    ap_CS_fsm_state198 <= ap_CS_fsm(197);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_NS_fsm_state134 <= ap_NS_fsm(133);
    ap_NS_fsm_state28 <= ap_NS_fsm(27);
    ap_NS_fsm_state8 <= ap_NS_fsm(7);

    ap_block_state198_on_subcall_done_assign_proc : process(grp_makeThirdPatch_fu_512_ap_done, madeComplementaryPatch_reg_498)
    begin
                ap_block_state198_on_subcall_done <= ((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (grp_makeThirdPatch_fu_512_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state198, ap_block_state198_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state198) and (ap_const_boolean_0 = ap_block_state198_on_subcall_done)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_madeComplementaryPatch_phi_fu_503_p4 <= madeComplementaryPatch_reg_498;

    ap_phi_mux_repeat_original_ph_phi_fu_333_p4_assign_proc : process(icmp_ln783_reg_1424, icmp_ln788_reg_1433, grp_areWedgeSuperPointsEqual_fu_616_ap_return, ap_CS_fsm_state27, repeat_original_ph_reg_329)
    begin
        if (((grp_areWedgeSuperPointsEqual_fu_616_ap_return = ap_const_lv1_0) and (icmp_ln788_reg_1433 = ap_const_lv1_1) and (icmp_ln783_reg_1424 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_phi_mux_repeat_original_ph_phi_fu_333_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_repeat_original_ph_phi_fu_333_p4 <= repeat_original_ph_reg_329;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state198, ap_block_state198_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) and (ap_const_boolean_0 = ap_block_state198_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= reg_665;
    ap_return_1 <= add_ln718_reg_1389;
    ap_return_2 <= reg_658;
    ap_return_3 <= ref_tmp1_reg_1623;
    ap_return_4 <= complementary_apexZ0_0_reg_477;
    ap_return_5 <= reg_658;
    ap_return_6 <= z_top_min_2_reg_487;
    empty_72_fu_1185_p1 <= grp_solveComplmentaryPatch_fu_539_ap_return_1(5 - 1 downto 0);
    grp_areWedgeSuperPointsEqual_fu_616_ap_start <= grp_areWedgeSuperPointsEqual_fu_616_ap_start_reg;
    grp_fu_1310_p0 <= grp_fu_1310_p00(18 - 1 downto 0);
    grp_fu_1310_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln814_reg_1464),37));
    grp_fu_1310_p1 <= ap_const_lv37_66667(20 - 1 downto 0);
    grp_fu_1317_p0 <= grp_fu_1317_p00(18 - 1 downto 0);
    grp_fu_1317_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln824_fu_975_p2),37));
    grp_fu_1317_p1 <= ap_const_lv37_66667(20 - 1 downto 0);

    grp_fu_1628_ce_assign_proc : process(ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_fu_1628_p_ce, grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_ce, grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_ce, ap_CS_fsm_state130, ap_CS_fsm_state198, ap_CS_fsm_state128)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_1628_ce <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1628_ce <= grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_fu_1628_ce <= grp_makeThirdPatch_fu_512_grp_fu_1628_p_ce;
        else 
            grp_fu_1628_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1628_opcode_assign_proc : process(ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_fu_1628_p_opcode, grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_opcode, grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_opcode, ap_CS_fsm_state130, ap_CS_fsm_state198, ap_CS_fsm_state128)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_1628_opcode <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1628_opcode <= grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_fu_1628_opcode <= grp_makeThirdPatch_fu_512_grp_fu_1628_p_opcode;
        end if; 
    end process;


    grp_fu_1628_p0_assign_proc : process(ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_fu_1628_p_din0, grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din0, grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din0, ap_CS_fsm_state130, ap_CS_fsm_state198, ap_CS_fsm_state128)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_1628_p0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1628_p0 <= grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_fu_1628_p0 <= grp_makeThirdPatch_fu_512_grp_fu_1628_p_din0;
        end if; 
    end process;


    grp_fu_1628_p1_assign_proc : process(ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_fu_1628_p_din1, grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din1, grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din1, ap_CS_fsm_state130, ap_CS_fsm_state198, ap_CS_fsm_state128)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_1628_p1 <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1628_p1 <= grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_fu_1628_p1 <= grp_makeThirdPatch_fu_512_grp_fu_1628_p_din1;
        end if; 
    end process;


    grp_fu_1632_ce_assign_proc : process(ap_CS_fsm_state129, grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_ce, ap_CS_fsm_state128)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_1632_ce <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_ce;
        else 
            grp_fu_1632_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1632_p0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_din0;

    grp_fu_1635_ce_assign_proc : process(ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_ce, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1635_ce <= grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_ce;
        else 
            grp_fu_1635_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1635_p0 <= grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_din0;

    grp_fu_1638_ce_assign_proc : process(ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_ce, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_1638_ce <= grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_ce;
        else 
            grp_fu_1638_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1638_p0 <= grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din0;
    grp_fu_1638_p1 <= grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_din1;

    grp_fu_1660_ce_assign_proc : process(ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_fu_1660_p_ce, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_fu_1660_ce <= grp_makeThirdPatch_fu_512_grp_fu_1660_p_ce;
        else 
            grp_fu_1660_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1660_p0 <= grp_makeThirdPatch_fu_512_grp_fu_1660_p_din0;
    grp_fu_646_p2 <= std_logic_vector(unsigned(n_patches_i) + unsigned(ap_const_lv8_FF));

    grp_fu_897_ap_start_assign_proc : process(and_ln812_1_fu_860_p2, ap_CS_fsm_state91)
    begin
        if (((ap_const_lv1_1 = and_ln812_1_fu_860_p2) and (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            grp_fu_897_ap_start <= ap_const_logic_1;
        else 
            grp_fu_897_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_897_p0 <= add_ln814_fu_881_p2(17 downto 7);
    grp_fu_897_p1 <= ap_const_lv11_5(4 - 1 downto 0);

    grp_fu_994_ap_start_assign_proc : process(ap_CS_fsm_state106, or_ln815_fu_970_p2)
    begin
        if (((or_ln815_fu_970_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state106))) then 
            grp_fu_994_ap_start <= ap_const_logic_1;
        else 
            grp_fu_994_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_994_p0 <= add_ln824_fu_975_p2(17 downto 7);
    grp_fu_994_p1 <= ap_const_lv11_5(4 - 1 downto 0);
    grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start <= grp_getSolveNextPatchPairWhileCondition_fu_628_ap_start_reg;
    grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1628_p_dout0 <= grp_fu_1628_p2;
    grp_getSolveNextPatchPairWhileCondition_fu_628_grp_fu_1632_p_dout0 <= grp_fu_1632_p1;
    grp_makePatch_alignedToLine_fu_572_ap_start <= grp_makePatch_alignedToLine_fu_572_ap_start_reg;

    grp_makePatch_alignedToLine_fu_572_apexZ0_assign_proc : process(apexZ0, ap_CS_fsm_state2, trunc_ln69_reg_1490, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_makePatch_alignedToLine_fu_572_apexZ0 <= trunc_ln69_reg_1490;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_572_apexZ0 <= apexZ0;
        else 
            grp_makePatch_alignedToLine_fu_572_apexZ0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_572_leftRight_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_makePatch_alignedToLine_fu_572_leftRight <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_572_leftRight <= ap_const_lv1_0;
        else 
            grp_makePatch_alignedToLine_fu_572_leftRight <= "X";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_572_p_read_assign_proc : process(ppl, ppl_assign4_reg_1342, ap_CS_fsm_state2, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_makePatch_alignedToLine_fu_572_p_read <= ppl_assign4_reg_1342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_572_p_read <= ppl;
        else 
            grp_makePatch_alignedToLine_fu_572_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_572_z_top_assign_proc : process(z_top_max_read, ap_CS_fsm_state2, ap_CS_fsm_state123, agg_tmp119_0_reg_355)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_makePatch_alignedToLine_fu_572_z_top <= agg_tmp119_0_reg_355;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_572_z_top <= z_top_max_read;
        else 
            grp_makePatch_alignedToLine_fu_572_z_top <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_makeThirdPatch_fu_512_ap_start <= grp_makeThirdPatch_fu_512_ap_start_reg;
    grp_makeThirdPatch_fu_512_grp_fu_1628_p_dout0 <= grp_fu_1628_p2;
    grp_makeThirdPatch_fu_512_grp_fu_1660_p_dout0 <= grp_fu_1660_p1;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_done;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_return;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_idle;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ready;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_done;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_return;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_idle;
    grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ready;
    grp_solveComplmentaryPatch_fu_539_ap_start <= grp_solveComplmentaryPatch_fu_539_ap_start_reg;
    grp_solveComplmentaryPatch_fu_539_grp_fu_1628_p_dout0 <= grp_fu_1628_p2;
    grp_solveComplmentaryPatch_fu_539_grp_fu_1635_p_dout0 <= grp_fu_1635_p1;
    grp_solveComplmentaryPatch_fu_539_grp_fu_1638_p_dout0 <= grp_fu_1638_p2;
    grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_done;
    grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_return;
    grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_idle;
    grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ready;

    grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ce_assign_proc : process(ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ce <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_start_assign_proc : process(ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_start <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1642_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1642_i <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1642_j <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1642_k <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_i <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1642_z_j <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1642_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ce_assign_proc : process(ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ce <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_start_assign_proc : process(ap_CS_fsm_state197, grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state197))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_start <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1651_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1651_i <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1651_j <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1651_k <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_i <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1651_z_j <= grp_makeThirdPatch_fu_512_grp_straightLineProjectorFromLayerIJtoK_fu_1651_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ce_assign_proc : process(ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ce <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_assign_proc : process(ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start, ap_CS_fsm_state130, grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_start_reg;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_i_assign_proc : process(ap_CS_fsm_state134, ap_CS_fsm_state28, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_i <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_i <= ap_const_lv3_5;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_i <= ap_const_lv3_5;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_j_assign_proc : process(ap_CS_fsm_state134, ap_CS_fsm_state28, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_j <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_j <= ap_const_lv32_1;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_j <= ap_const_lv32_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_k_assign_proc : process(ap_CS_fsm_state134, ap_CS_fsm_state28, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_k <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_k <= ap_const_lv3_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_k <= ap_const_lv3_0;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i_assign_proc : process(patches_parameters_q0, reg_658, ap_CS_fsm_state134, ap_CS_fsm_state28, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i <= patches_parameters_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i <= reg_658;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j_assign_proc : process(patches_parameters_q1, ap_CS_fsm_state134, ap_CS_fsm_state28, ap_CS_fsm_state131, grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2, ap_CS_fsm_state130)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j <= grp_solveComplmentaryPatch_fu_539_grp_straightLineProjectorFromLayerIJtoK_fu_600_p_din2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j <= patches_parameters_q1;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_600_z_j <= patches_parameters_q1;
        end if; 
    end process;

    icmp_ln783_fu_788_p2 <= "1" when (unsigned(nPatchesAtOriginal_reg_1348) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln788_fu_798_p2 <= "1" when (unsigned(i_reg_317) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln803_fu_821_p2 <= "0" when (patches_parameters_q1 = ap_const_lv32_0) else "1";
    icmp_ln812_fu_848_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_600_ap_return) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln815_fu_903_p2 <= "1" when (patches_parameters_q0 = ap_const_lv32_0) else "0";
    icmp_ln857_fu_1213_p2 <= "1" when (signed(grp_solveComplmentaryPatch_fu_539_ap_return_3) > signed(ap_const_lv32_19)) else "0";
    icmp_ln878_1_fu_1160_p2 <= "1" when (signed(ret_fu_1140_p2) < signed(ret_1_fu_1154_p2)) else "0";
    icmp_ln878_fu_1056_p2 <= "1" when (signed(trunc_ln69_2_fu_1052_p1) > signed(ap_const_lv32_FD050F80)) else "0";
    icmp_ln886_1_fu_842_p2 <= "1" when (signed(reg_658) > signed(ap_const_lv32_FD050F1C)) else "0";
    icmp_ln886_fu_810_p2 <= "1" when (signed(patches_parameters_q0) > signed(z_top_max_read)) else "0";
    lastPatchIndex_1_fu_1074_p2 <= std_logic_vector(unsigned(trunc_ln831_fu_1070_p1) + unsigned(ap_const_lv5_1F));

    n_patches_o_assign_proc : process(n_patches_i, ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_n_patches_o, grp_makeThirdPatch_fu_512_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_539_n_patches_o, grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_572_n_patches_o, grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if ((((grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state123)) or ((grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_572_n_patches_o;
        elsif (((grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            n_patches_o <= grp_solveComplmentaryPatch_fu_539_n_patches_o;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (grp_makeThirdPatch_fu_512_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            n_patches_o <= grp_makeThirdPatch_fu_512_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_572_n_patches_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            n_patches_o_ap_vld <= grp_solveComplmentaryPatch_fu_539_n_patches_o_ap_vld;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            n_patches_o_ap_vld <= grp_makeThirdPatch_fu_512_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    notChoppedPatch_fu_831_p2 <= (icmp_ln803_reg_1455 or and_ln886_fu_827_p2);
    or_ln815_fu_970_p2 <= (repeat_original_reg_342 or icmp_ln815_reg_1475);
    or_ln841_fu_1110_p2 <= (ap_const_lv12_1 or add_ln841_fu_1104_p2);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, patches_parameters_addr_3_reg_1404, patches_parameters_addr_5_reg_1414, patches_parameters_addr_6_reg_1419, ap_CS_fsm_state28, ap_CS_fsm_state91, ap_CS_fsm_state123, ap_CS_fsm_state125, ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state133, grp_makeThirdPatch_fu_512_patches_parameters_address0, grp_solveComplmentaryPatch_fu_539_patches_parameters_address0, grp_makePatch_alignedToLine_fu_572_patches_parameters_address0, grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_address0, ap_CS_fsm_state27, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, zext_ln764_fu_719_p1, zext_ln841_1_fu_1116_p1, zext_ln867_2_fu_1265_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            patches_parameters_address0 <= zext_ln867_2_fu_1265_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            patches_parameters_address0 <= zext_ln841_1_fu_1116_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            patches_parameters_address0 <= patches_parameters_addr_6_reg_1419;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            patches_parameters_address0 <= patches_parameters_addr_5_reg_1414;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            patches_parameters_address0 <= patches_parameters_addr_3_reg_1404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            patches_parameters_address0 <= zext_ln764_fu_719_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            patches_parameters_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_572_patches_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_address0 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_address0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_address0 <= grp_makeThirdPatch_fu_512_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(ap_CS_fsm_state4, patches_parameters_addr_2_reg_1399, patches_parameters_addr_4_reg_1409, ap_CS_fsm_state28, ap_CS_fsm_state125, ap_CS_fsm_state131, ap_CS_fsm_state133, grp_makeThirdPatch_fu_512_patches_parameters_address1, grp_solveComplmentaryPatch_fu_539_patches_parameters_address1, ap_CS_fsm_state27, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, zext_ln763_2_fu_708_p1, zext_ln842_fu_1127_p1, zext_ln867_1_fu_1254_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            patches_parameters_address1 <= zext_ln867_1_fu_1254_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            patches_parameters_address1 <= zext_ln842_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            patches_parameters_address1 <= patches_parameters_addr_4_reg_1409;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            patches_parameters_address1 <= patches_parameters_addr_2_reg_1399;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            patches_parameters_address1 <= zext_ln763_2_fu_708_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_address1 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_address1;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_address1 <= grp_makeThirdPatch_fu_512_patches_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state91, ap_CS_fsm_state123, ap_CS_fsm_state125, ap_CS_fsm_state129, ap_CS_fsm_state131, ap_CS_fsm_state133, grp_makeThirdPatch_fu_512_patches_parameters_ce0, grp_solveComplmentaryPatch_fu_539_patches_parameters_ce0, grp_makePatch_alignedToLine_fu_572_patches_parameters_ce0, grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_ce0, ap_CS_fsm_state27, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            patches_parameters_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_628_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_572_patches_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_ce0 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_ce0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_ce0 <= grp_makeThirdPatch_fu_512_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state125, ap_CS_fsm_state131, ap_CS_fsm_state133, grp_makeThirdPatch_fu_512_patches_parameters_ce1, grp_solveComplmentaryPatch_fu_539_patches_parameters_ce1, ap_CS_fsm_state27, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_ce1 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_ce1;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_ce1 <= grp_makeThirdPatch_fu_512_patches_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_parameters_d0, grp_solveComplmentaryPatch_fu_539_patches_parameters_d0, grp_makePatch_alignedToLine_fu_572_patches_parameters_d0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_572_patches_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_d0 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_d0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_d0 <= grp_makeThirdPatch_fu_512_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_makeThirdPatch_fu_512_patches_parameters_d1;

    patches_parameters_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_parameters_we0, grp_solveComplmentaryPatch_fu_539_patches_parameters_we0, grp_makePatch_alignedToLine_fu_572_patches_parameters_we0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_572_patches_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_parameters_we0 <= grp_solveComplmentaryPatch_fu_539_patches_parameters_we0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_we0 <= grp_makeThirdPatch_fu_512_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_makeThirdPatch_fu_512_patches_parameters_we1, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_parameters_we1 <= grp_makeThirdPatch_fu_512_patches_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state105, ap_CS_fsm_state120, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_address0, grp_solveComplmentaryPatch_fu_539_patches_superpoints_address0, grp_makePatch_alignedToLine_fu_572_patches_superpoints_address0, grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state26, zext_ln814_6_fu_961_p1, zext_ln824_4_fu_1047_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state120)) then 
            patches_superpoints_address0 <= zext_ln824_4_fu_1047_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            patches_superpoints_address0 <= zext_ln814_6_fu_961_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            patches_superpoints_address0 <= grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_572_patches_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_address0 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_address0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_address0 <= grp_makeThirdPatch_fu_512_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_address1_assign_proc : process(ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_address1, grp_solveComplmentaryPatch_fu_539_patches_superpoints_address1, grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address1, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            patches_superpoints_address1 <= grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_address1 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_address1;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_address1 <= grp_makeThirdPatch_fu_512_patches_superpoints_address1;
        else 
            patches_superpoints_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state105, ap_CS_fsm_state120, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_ce0, grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce0, grp_makePatch_alignedToLine_fu_572_patches_superpoints_ce0, grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state105))) then 
            patches_superpoints_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            patches_superpoints_ce0 <= grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_572_patches_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_ce0 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_ce0 <= grp_makeThirdPatch_fu_512_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_ce1, grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce1, grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce1, madeComplementaryPatch_reg_498, ap_CS_fsm_state198, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            patches_superpoints_ce1 <= grp_areWedgeSuperPointsEqual_fu_616_wsp1_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_ce1 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_ce1;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_ce1 <= grp_makeThirdPatch_fu_512_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_d0, grp_solveComplmentaryPatch_fu_539_patches_superpoints_d0, grp_makePatch_alignedToLine_fu_572_patches_superpoints_d0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_572_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_d0 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_d0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_d0 <= grp_makeThirdPatch_fu_512_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state123, ap_CS_fsm_state131, grp_makeThirdPatch_fu_512_patches_superpoints_we0, grp_solveComplmentaryPatch_fu_539_patches_superpoints_we0, grp_makePatch_alignedToLine_fu_572_patches_superpoints_we0, madeComplementaryPatch_reg_498, ap_CS_fsm_state198)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_572_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            patches_superpoints_we0 <= grp_solveComplmentaryPatch_fu_539_patches_superpoints_we0;
        elsif (((madeComplementaryPatch_reg_498 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state198))) then 
            patches_superpoints_we0 <= grp_makeThirdPatch_fu_512_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_1_fu_1154_p2 <= std_logic_vector(signed(sext_ln215_2_fu_1146_p1) - signed(sext_ln215_3_fu_1150_p1));
    ret_fu_1140_p2 <= std_logic_vector(signed(sext_ln215_fu_1132_p1) - signed(sext_ln215_1_fu_1136_p1));
    select_ln824_fu_1062_p3 <= 
        trunc_ln69_2_fu_1052_p1 when (icmp_ln878_fu_1056_p2(0) = '1') else 
        ap_const_lv32_FD050F80;
    sext_ln215_1_fu_1136_p0 <= patches_parameters_q0;
        sext_ln215_1_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_1_fu_1136_p0),33));

        sext_ln215_2_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_665),33));

    sext_ln215_3_fu_1150_p0 <= patches_parameters_q1;
        sext_ln215_3_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_3_fu_1150_p0),33));

        sext_ln215_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_658),33));

        sext_ln534_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(white_space_height_reg_1550),64));

    shl_ln_fu_866_p3 <= (reg_652 & ap_const_lv9_0);
    squarePatch_alternate2_fu_815_p2 <= "0" when (patches_parameters_q0 = ap_const_lv32_0) else "1";
    sub_ln763_fu_696_p2 <= std_logic_vector(unsigned(tmp_cast_fu_677_p3) - unsigned(zext_ln763_fu_692_p1));
    sub_ln841_fu_1098_p2 <= std_logic_vector(unsigned(tmp_8_fu_1080_p3) - unsigned(zext_ln841_fu_1094_p1));
    sub_ln867_fu_1242_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_1223_p3) - unsigned(zext_ln867_fu_1238_p1));
    thirdLastPatchIndex_fu_793_p2 <= std_logic_vector(unsigned(nPatchesAtOriginal_reg_1348) + unsigned(ap_const_lv8_FD));
    tmp_10_fu_1230_p3 <= (reg_652 & ap_const_lv3_0);
    tmp_14_cast_fu_1223_p3 <= (trunc_ln867_reg_1608 & ap_const_lv7_0);
    tmp_1_fu_912_p4 <= grp_fu_1310_p2(36 downto 28);
    tmp_2_fu_925_p3 <= (tmp_1_fu_912_p4 & ap_const_lv2_0);
    tmp_3_fu_684_p3 <= (reg_652 & ap_const_lv3_0);
    tmp_4_fu_953_p3 <= (add_ln814_2_fu_947_p2 & ap_const_lv4_0);
    tmp_6_fu_1012_p3 <= (tmp_5_reg_1511 & ap_const_lv2_0);
    tmp_7_fu_1039_p3 <= (add_ln824_2_fu_1033_p2 & ap_const_lv4_0);
    tmp_8_fu_1080_p3 <= (lastPatchIndex_1_reg_1533 & ap_const_lv7_0);
    tmp_9_fu_1087_p3 <= (lastPatchIndex_1_reg_1533 & ap_const_lv3_0);
    tmp_cast_fu_677_p3 <= (trunc_ln763_reg_1355 & ap_const_lv7_0);
    tmp_fu_730_p3 <= (reg_652 & ap_const_lv7_0);
    trunc_ln69_2_fu_1052_p1 <= patches_superpoints_q0(32 - 1 downto 0);
    trunc_ln69_fu_966_p1 <= patches_superpoints_q0(32 - 1 downto 0);
    trunc_ln763_fu_673_p1 <= grp_fu_646_p2(5 - 1 downto 0);
    trunc_ln831_fu_1070_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln867_fu_1219_p1 <= grp_fu_646_p2(5 - 1 downto 0);
    white_space_height_fu_1166_p3 <= 
        ret_1_fu_1154_p2 when (icmp_ln878_1_fu_1160_p2(0) = '1') else 
        ret_fu_1140_p2;
    xor_ln812_fu_836_p2 <= (notChoppedPatch_fu_831_p2 xor ap_const_lv1_1);
    zext_ln534_1_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_1_fu_768_p2),64));
    zext_ln534_2_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_2_fu_778_p2),64));
    zext_ln534_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_fu_758_p2),64));
    zext_ln763_1_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln763_fu_738_p2),64));
    zext_ln763_2_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln763_1_fu_702_p2),64));
    zext_ln763_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_684_p3),12));
    zext_ln764_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln764_fu_713_p2),64));
    zext_ln814_1_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1394),18));
    zext_ln814_3_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_912_p4),21));
    zext_ln814_4_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_925_p3),21));
    zext_ln814_5_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_897_p2),21));
    zext_ln814_6_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_953_p3),64));
    zext_ln814_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_866_p3),18));
    zext_ln824_1_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1511),21));
    zext_ln824_2_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1012_p3),21));
    zext_ln824_3_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_994_p2),21));
    zext_ln824_4_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1039_p3),64));
    zext_ln841_1_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln841_fu_1110_p2),64));
    zext_ln841_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1087_p3),12));
    zext_ln842_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln842_fu_1121_p2),64));
    zext_ln867_1_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln867_fu_1248_p2),64));
    zext_ln867_2_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln867_1_fu_1259_p2),64));
    zext_ln867_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1230_p3),12));
    zext_ln886_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_fu_748_p2),64));
end behav;
