-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_alignedtoline_per_layer_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce1 : OUT STD_LOGIC;
    points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce1 : OUT STD_LOGIC;
    num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
    init_patch_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_0_ce0 : OUT STD_LOGIC;
    init_patch_0_we0 : OUT STD_LOGIC;
    init_patch_0_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_1_ce0 : OUT STD_LOGIC;
    init_patch_1_we0 : OUT STD_LOGIC;
    init_patch_1_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_2_ce0 : OUT STD_LOGIC;
    init_patch_2_we0 : OUT STD_LOGIC;
    init_patch_2_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_3_ce0 : OUT STD_LOGIC;
    init_patch_3_we0 : OUT STD_LOGIC;
    init_patch_3_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_4_ce0 : OUT STD_LOGIC;
    init_patch_4_we0 : OUT STD_LOGIC;
    init_patch_4_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_5_ce0 : OUT STD_LOGIC;
    init_patch_5_we0 : OUT STD_LOGIC;
    init_patch_5_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_6_ce0 : OUT STD_LOGIC;
    init_patch_6_we0 : OUT STD_LOGIC;
    init_patch_6_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_7_ce0 : OUT STD_LOGIC;
    init_patch_7_we0 : OUT STD_LOGIC;
    init_patch_7_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_8_ce0 : OUT STD_LOGIC;
    init_patch_8_we0 : OUT STD_LOGIC;
    init_patch_8_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_9_ce0 : OUT STD_LOGIC;
    init_patch_9_we0 : OUT STD_LOGIC;
    init_patch_9_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_10_ce0 : OUT STD_LOGIC;
    init_patch_10_we0 : OUT STD_LOGIC;
    init_patch_10_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_11_ce0 : OUT STD_LOGIC;
    init_patch_11_we0 : OUT STD_LOGIC;
    init_patch_11_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_12_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_12_ce0 : OUT STD_LOGIC;
    init_patch_12_we0 : OUT STD_LOGIC;
    init_patch_12_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_13_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_13_ce0 : OUT STD_LOGIC;
    init_patch_13_we0 : OUT STD_LOGIC;
    init_patch_13_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_14_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_14_ce0 : OUT STD_LOGIC;
    init_patch_14_we0 : OUT STD_LOGIC;
    init_patch_14_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_15_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    init_patch_15_ce0 : OUT STD_LOGIC;
    init_patch_15_we0 : OUT STD_LOGIC;
    init_patch_15_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    i_offset : IN STD_LOGIC_VECTOR (2 downto 0);
    lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
    rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rbVal_constprop_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of system_top_alignedtoline_per_layer_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (44 downto 0) := "000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (44 downto 0) := "000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (44 downto 0) := "000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (44 downto 0) := "000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (44 downto 0) := "000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (44 downto 0) := "000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (44 downto 0) := "000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (44 downto 0) := "000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (44 downto 0) := "000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (44 downto 0) := "001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (44 downto 0) := "010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (44 downto 0) := "100000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv64_BEE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "1011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv25_1B00000 : STD_LOGIC_VECTOR (24 downto 0) := "1101100000000000000000000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv185_lc_2 : STD_LOGIC_VECTOR (184 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100111";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv185_lc_1 : STD_LOGIC_VECTOR (184 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv33_1FFFFFFF1 : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111110001";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv9_1F1 : STD_LOGIC_VECTOR (8 downto 0) := "111110001";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv9_1F2 : STD_LOGIC_VECTOR (8 downto 0) := "111110010";
    constant ap_const_lv12_FF3 : STD_LOGIC_VECTOR (11 downto 0) := "111111110011";
    constant ap_const_lv9_1F3 : STD_LOGIC_VECTOR (8 downto 0) := "111110011";
    constant ap_const_lv12_FF4 : STD_LOGIC_VECTOR (11 downto 0) := "111111110100";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv12_FF5 : STD_LOGIC_VECTOR (11 downto 0) := "111111110101";
    constant ap_const_lv9_1F5 : STD_LOGIC_VECTOR (8 downto 0) := "111110101";
    constant ap_const_lv12_FF6 : STD_LOGIC_VECTOR (11 downto 0) := "111111110110";
    constant ap_const_lv9_1F6 : STD_LOGIC_VECTOR (8 downto 0) := "111110110";
    constant ap_const_lv12_FF7 : STD_LOGIC_VECTOR (11 downto 0) := "111111110111";
    constant ap_const_lv9_1F7 : STD_LOGIC_VECTOR (8 downto 0) := "111110111";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv9_1F8 : STD_LOGIC_VECTOR (8 downto 0) := "111111000";
    constant ap_const_lv12_FF9 : STD_LOGIC_VECTOR (11 downto 0) := "111111111001";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv12_FFB : STD_LOGIC_VECTOR (11 downto 0) := "111111111011";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1FB : STD_LOGIC_VECTOR (8 downto 0) := "111111011";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv33_10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_radiiradii_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce0 : STD_LOGIC;
    signal get_radiiradii_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1263_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal leftRight_read_read_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln874_1_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1271_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1285 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1339 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal zext_ln113_fu_1355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_reg_4612 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ret_V_7_fu_1412_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_7_reg_4670 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_6_fu_1418_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_6_reg_4675 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_fu_1430_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_2_reg_4680 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_11_reg_4685 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_1455_p2 : STD_LOGIC_VECTOR (184 downto 0);
    signal mul_ln1148_reg_4696 : STD_LOGIC_VECTOR (184 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_13_reg_4701 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln1148_fu_1471_p2 : STD_LOGIC_VECTOR (184 downto 0);
    signal sub_ln1148_reg_4707 : STD_LOGIC_VECTOR (184 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal projectionToRow_V_reg_4712 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal start_index_V_1_load_reg_4722 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1249_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_4744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_1_reg_4749 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_4753 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_reg_4757 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_1_reg_4762 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_2_fu_1619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_2_reg_4767 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_1_fu_1627_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_1_reg_4772 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_13_reg_4777 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal select_ln893_1_fu_1689_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln893_1_reg_4782 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1506_1_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_1_reg_4787 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln734_1_fu_1745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln1506_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_4797 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_reg_4802 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal start_index_V_2_fu_1816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_V_2_reg_4811 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_51_fu_1844_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_51_reg_4816 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln878_fu_1861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_4834 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1461_fu_1867_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1461_reg_4838 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln3_fu_1877_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln3_reg_4856 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal lshr_ln493_8_reg_4914 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_9_reg_4919 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_s_reg_4924 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_10_reg_4929 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_11_reg_4934 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_12_reg_4939 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_13_reg_4944 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln493_14_reg_4949 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln908_reg_4994 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_fu_2752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_reg_4999 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_fu_2760_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_5004 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_11_reg_5009 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal select_ln893_fu_2822_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln893_reg_5014 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1505_1_fu_2840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1505_1_reg_5019 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln734_fu_2878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln1505_fu_2883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1505_reg_5029 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_index_V_fu_2899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal and_ln1505_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1346_fu_2913_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1346_reg_5042 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ret_19_fu_2930_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_19_reg_5060 : STD_LOGIC_VECTOR (11 downto 0);
    signal init_patch_0_addr_reg_5081 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_1_addr_reg_5086 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_2_addr_reg_5091 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_3_addr_reg_5096 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_4_addr_reg_5101 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln2_fu_2946_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2_reg_5106 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln886_fu_2940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln454_fu_2977_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln454_reg_5124 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_fu_3043_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_reg_5152 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_3053_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_reg_5170 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal lshr_ln454_8_reg_5228 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_9_reg_5233 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_s_reg_5238 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_10_reg_5243 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_11_reg_5248 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_12_reg_5253 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_13_reg_5258 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln454_14_reg_5263 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal lshr_ln446_8_reg_5338 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_9_reg_5343 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_s_reg_5348 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_10_reg_5353 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_11_reg_5358 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_12_reg_5363 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_13_reg_5368 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln446_14_reg_5373 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_idle : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_continue : STD_LOGIC;
    signal ap_phi_mux_lhs_5_phi_fu_1191_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_5_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready : STD_LOGIC;
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done : STD_LOGIC;
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done : STD_LOGIC := '0';
    signal left_bound_V_fu_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_bound_V_fu_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_V_3_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_value_V_fu_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln471_fu_1811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_fu_1922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_1_fu_1971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_2_fu_2027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_3_fu_2073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_4_fu_2129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_5_fu_2175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_6_fu_2231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_7_fu_2277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_8_fu_2522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_9_fu_2539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_10_fu_2566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_11_fu_2583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_12_fu_2610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_13_fu_2627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_14_fu_2654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln493_15_fu_2665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal zext_ln454_fu_2989_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_1_fu_3038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_fu_3098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_1_fu_3147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_2_fu_3203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_3_fu_3249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_4_fu_3305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_5_fu_3351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_5_addr_1_gep_fu_820_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln454_6_fu_3407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_7_fu_3453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_6_addr_1_gep_fu_844_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_7_addr_1_gep_fu_852_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln454_8_fu_3704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_9_fu_3721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_8_addr_1_gep_fu_876_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_9_addr_1_gep_fu_884_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln454_10_fu_3748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_11_fu_3765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_10_addr_1_gep_fu_908_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_11_addr_1_gep_fu_916_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln454_12_fu_3792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_13_fu_3809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_12_addr_1_gep_fu_940_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_13_addr_1_gep_fu_948_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln454_14_fu_3836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_15_fu_3853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_14_addr_1_gep_fu_972_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal init_patch_15_addr_1_gep_fu_980_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_2_fu_3919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_3_fu_3965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_4_fu_4021_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_5_fu_4067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_5_addr_gep_fu_1020_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_6_fu_4123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_7_fu_4169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_6_addr_gep_fu_1044_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_7_addr_gep_fu_1052_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_8_fu_4414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_9_fu_4431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_8_addr_gep_fu_1076_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_9_addr_gep_fu_1084_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_10_fu_4458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_11_fu_4475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_10_addr_gep_fu_1108_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_11_addr_gep_fu_1116_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_12_fu_4502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_13_fu_4519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_12_addr_gep_fu_1140_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal init_patch_13_addr_gep_fu_1148_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln446_14_fu_4546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln446_15_fu_4557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_14_addr_gep_fu_1172_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal init_patch_15_addr_gep_fu_1180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal start_value_V_1_fu_1830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln493_fu_1976_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_1_fu_3152_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_fu_3868_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_1_fu_1981_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_2_fu_3157_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_1_fu_3873_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_2_fu_2078_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_3_fu_3254_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_2_fu_3970_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_3_fu_2083_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_4_fu_3259_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_3_fu_3975_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_4_fu_2180_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_5_fu_3356_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_4_fu_4072_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_5_fu_2185_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_6_fu_3361_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_5_fu_4077_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_6_fu_2500_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_7_fu_3682_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_6_fu_4392_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_7_fu_2505_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_8_fu_3687_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_7_fu_4397_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_8_fu_2544_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_9_fu_3726_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_8_fu_4436_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_9_fu_2549_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_10_fu_3731_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_9_fu_4441_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_10_fu_2588_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_11_fu_3770_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_10_fu_4480_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_11_fu_2593_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_12_fu_3775_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_11_fu_4485_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_12_fu_2632_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_13_fu_3814_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_12_fu_4524_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_13_fu_2637_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_14_fu_3819_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_13_fu_4529_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_14_fu_2670_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_15_fu_3858_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_14_fu_4562_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln493_15_fu_2675_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln454_16_fu_3863_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln446_15_fu_4567_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_1234_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1289_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1309_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln731_fu_1392_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln703_2_fu_1408_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln703_fu_1404_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_2_fu_1408_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal y_V_fu_1396_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_fu_1430_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_s_fu_1444_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal grp_fu_1455_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_12_fu_1476_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal select_ln1148_fu_1485_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln1148_1_fu_1491_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_fu_1503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1148_1_fu_1497_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal rhs_fu_1503_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_fu_1510_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal add_ln464_fu_1536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln897_1_fu_1547_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_1_fu_1551_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_1_fu_1557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln897_1_fu_1561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln899_1_fu_1567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_fu_1573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln899_2_fu_1579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1591_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1325_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_1_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln896_1_fu_1611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_3_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln909_3_fu_1631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln909_1_fu_1635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_1_fu_1645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln908_1_fu_1649_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln909_1_fu_1639_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_fu_1655_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_1_fu_1662_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_8_fu_1665_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_1681_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_fu_1697_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln915_1_fu_1716_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_1_fu_1721_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln912_1_fu_1713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1726_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_16_fu_1733_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1506_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln471_fu_1773_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln471_1_fu_1776_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1766_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln471_fu_1784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_1790_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln471_1_fu_1800_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_1803_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_1826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_2_fu_1840_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_36_fu_1848_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln878_fu_1857_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1461_fu_1871_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_1_fu_1884_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_fu_1892_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln3_fu_1898_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_16_fu_1908_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_fu_1914_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_37_fu_1927_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_2_fu_1933_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_1_fu_1941_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_1_fu_1947_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_17_fu_1957_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_45_fu_1963_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_38_fu_1986_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_3_fu_1991_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_2_fu_1999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_2_fu_2004_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_18_fu_2014_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_2019_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_39_fu_2032_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_4_fu_2037_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_3_fu_2045_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_3_fu_2050_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_19_fu_2060_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_fu_2065_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_40_fu_2088_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_5_fu_2093_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_4_fu_2101_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_4_fu_2106_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_20_fu_2116_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_48_fu_2121_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_41_fu_2134_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_6_fu_2139_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_5_fu_2147_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_5_fu_2152_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_21_fu_2162_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_fu_2167_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_42_fu_2190_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_7_fu_2195_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_6_fu_2203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_6_fu_2208_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_22_fu_2218_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_2223_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_43_fu_2236_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_8_fu_2241_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_7_fu_2249_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln493_7_fu_2254_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_23_fu_2264_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_2269_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_44_fu_2282_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_9_fu_2287_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_8_fu_2295_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_45_fu_2310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_s_fu_2315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_9_fu_2323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_46_fu_2338_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_10_fu_2343_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_10_fu_2351_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_47_fu_2366_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_11_fu_2371_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_11_fu_2379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_48_fu_2394_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_12_fu_2399_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_12_fu_2407_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_49_fu_2422_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_13_fu_2427_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_13_fu_2435_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_50_fu_2450_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln493_14_fu_2455_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_14_fu_2463_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln493_15_fu_2478_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_15_fu_2485_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln493_24_fu_2510_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_52_fu_2515_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_25_fu_2527_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_fu_2532_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_26_fu_2554_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_2559_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_27_fu_2571_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_fu_2576_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_28_fu_2598_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_56_fu_2603_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_29_fu_2615_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_57_fu_2620_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln493_30_fu_2642_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_fu_2647_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_fu_2659_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln897_fu_2680_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_fu_2684_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_fu_2690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln897_fu_2694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln899_fu_2700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_2_fu_2706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln899_fu_2712_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln896_fu_2744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_1_fu_2738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln909_2_fu_2764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln909_fu_2768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_fu_2778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln908_fu_2782_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln909_fu_2772_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_2788_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_fu_2795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_3_fu_2798_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_2814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln4_fu_2830_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln915_fu_2849_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_2854_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln912_fu_2846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_2859_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_12_fu_2866_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1505_fu_2889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_2909_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_1_fu_2926_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_19_fu_2930_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_1_fu_2926_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_2917_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_1_fu_2934_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal shl_ln454_1_fu_2953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_fu_2961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln2_fu_2967_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_27_fu_2981_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_21_fu_2994_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_2_fu_3000_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_1_fu_3008_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_1_fu_3014_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_16_fu_3024_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_3030_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_3043_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_7_fu_3047_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_1_fu_3060_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_fu_3068_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1_fu_3074_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_16_fu_3084_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_3090_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_5_fu_3103_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_2_fu_3109_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_1_fu_3117_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_1_fu_3123_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_17_fu_3133_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_3139_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_22_fu_3162_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_3_fu_3167_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_2_fu_3175_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_2_fu_3180_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_17_fu_3190_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_fu_3195_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_23_fu_3208_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_4_fu_3213_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_3_fu_3221_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_3_fu_3226_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_18_fu_3236_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_fu_3241_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_24_fu_3264_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_5_fu_3269_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_4_fu_3277_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_4_fu_3282_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_19_fu_3292_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_3297_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_25_fu_3310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_6_fu_3315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_5_fu_3323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_5_fu_3328_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_20_fu_3338_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_3343_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_26_fu_3366_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_7_fu_3371_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_6_fu_3379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_6_fu_3384_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_21_fu_3394_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_fu_3399_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_27_fu_3412_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_8_fu_3417_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_7_fu_3425_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln454_7_fu_3430_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln454_22_fu_3440_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_fu_3445_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_28_fu_3458_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_9_fu_3463_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_8_fu_3471_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_29_fu_3486_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_s_fu_3491_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_9_fu_3499_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_30_fu_3514_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_10_fu_3519_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_10_fu_3527_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_31_fu_3542_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_11_fu_3547_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_11_fu_3555_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_32_fu_3570_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_12_fu_3575_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_12_fu_3583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_33_fu_3598_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_13_fu_3603_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_13_fu_3611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_34_fu_3626_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_14_fu_3631_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_14_fu_3639_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_35_fu_3654_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln454_15_fu_3659_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_15_fu_3667_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln454_23_fu_3692_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_35_fu_3697_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_24_fu_3709_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_37_fu_3714_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_25_fu_3736_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_fu_3741_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_26_fu_3753_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_3758_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_27_fu_3780_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_3785_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_28_fu_3797_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_3802_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_29_fu_3824_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_fu_3829_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln454_30_fu_3841_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_fu_3846_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_6_fu_3878_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_3_fu_3883_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_2_fu_3891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_2_fu_3896_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_18_fu_3906_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_3911_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_7_fu_3924_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_4_fu_3929_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_3_fu_3937_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_3_fu_3942_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_19_fu_3952_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_3957_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_8_fu_3980_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_5_fu_3985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_4_fu_3993_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_4_fu_3998_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_20_fu_4008_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_4013_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_9_fu_4026_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_6_fu_4031_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_5_fu_4039_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_5_fu_4044_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_21_fu_4054_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_fu_4059_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_10_fu_4082_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_7_fu_4087_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_6_fu_4095_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_6_fu_4100_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_22_fu_4110_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_4115_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_11_fu_4128_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_8_fu_4133_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_7_fu_4141_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln446_7_fu_4146_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln446_23_fu_4156_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_4161_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_12_fu_4174_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_9_fu_4179_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_8_fu_4187_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_13_fu_4202_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_s_fu_4207_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_9_fu_4215_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_14_fu_4230_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_10_fu_4235_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_10_fu_4243_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_15_fu_4258_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_11_fu_4263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_11_fu_4271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_16_fu_4286_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_12_fu_4291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_12_fu_4299_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_17_fu_4314_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_13_fu_4319_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_13_fu_4327_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_18_fu_4342_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln446_14_fu_4347_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_14_fu_4355_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln446_15_fu_4370_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_15_fu_4377_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_24_fu_4402_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_4407_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_25_fu_4419_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_4424_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_26_fu_4446_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_fu_4451_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_27_fu_4463_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_4468_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_28_fu_4490_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_fu_4495_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_29_fu_4507_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_4512_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln446_30_fu_4534_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_4539_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_4551_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1234_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_2_fu_1430_p10 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component system_top_p_find_boundaries_and_starting_index_and_value IS
    port (
        num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce0 : OUT STD_LOGIC;
        num_points_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we0 : OUT STD_LOGIC;
        num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce1 : OUT STD_LOGIC;
        num_points_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we1 : OUT STD_LOGIC;
        points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce0 : OUT STD_LOGIC;
        points_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we0 : OUT STD_LOGIC;
        points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce1 : OUT STD_LOGIC;
        points_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we1 : OUT STD_LOGIC;
        left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
        right_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
        projectionToRow : IN STD_LOGIC_VECTOR (31 downto 0);
        start_index : OUT STD_LOGIC_VECTOR (31 downto 0);
        start_value_i : IN STD_LOGIC_VECTOR (31 downto 0);
        start_value_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        projectionToRow_ap_vld : IN STD_LOGIC;
        i_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        left_bound_ap_vld : OUT STD_LOGIC;
        right_bound_ap_vld : OUT STD_LOGIC;
        lbVal_constprop_i_ap_vld : IN STD_LOGIC;
        lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        rbVal_constprop_i_ap_vld : IN STD_LOGIC;
        rbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        start_index_ap_vld : OUT STD_LOGIC;
        start_value_i_ap_vld : IN STD_LOGIC;
        start_value_o_ap_vld : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component system_top_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_mul_33s_25ns_58_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component system_top_mul_78s_108ns_185_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (77 downto 0);
        din1 : IN STD_LOGIC_VECTOR (107 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (184 downto 0) );
    end component;


    component system_top_alignedtoline_per_layer_loop_get_radiiradii IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_radiiradii_U : component system_top_alignedtoline_per_layer_loop_get_radiiradii
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_radiiradii_address0,
        ce0 => get_radiiradii_ce0,
        q0 => get_radiiradii_q0);

    grp_p_find_boundaries_and_starting_index_and_value_fu_1214 : component system_top_p_find_boundaries_and_starting_index_and_value
    port map (
        num_points_address0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address0,
        num_points_ce0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce0,
        num_points_d0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_d0,
        num_points_q0 => num_points_q0,
        num_points_we0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_we0,
        num_points_address1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address1,
        num_points_ce1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce1,
        num_points_d1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_d1,
        num_points_q1 => num_points_q1,
        num_points_we1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_we1,
        points_address0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address0,
        points_ce0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce0,
        points_d0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_d0,
        points_q0 => points_q0,
        points_we0 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_we0,
        points_address1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address1,
        points_ce1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce1,
        points_d1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_d1,
        points_q1 => points_q1,
        points_we1 => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_we1,
        left_bound => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound,
        right_bound => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound,
        projectionToRow => projectionToRow_V_reg_4712,
        start_index => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index,
        start_value_i => start_value_V_fu_306,
        start_value_o => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o,
        i => i_offset,
        lbVal_constprop_i => lbVal_constprop_i,
        lbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o,
        rbVal_constprop_i => rbVal_constprop_i,
        rbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        projectionToRow_ap_vld => ap_const_logic_1,
        i_ap_vld => ap_const_logic_1,
        ap_start => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start,
        left_bound_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound_ap_vld,
        right_bound_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound_ap_vld,
        lbVal_constprop_i_ap_vld => ap_const_logic_1,
        lbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld,
        rbVal_constprop_i_ap_vld => ap_const_logic_1,
        rbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld,
        ap_done => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done,
        start_index_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index_ap_vld,
        start_value_i_ap_vld => ap_const_logic_1,
        start_value_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o_ap_vld,
        ap_ready => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready,
        ap_idle => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_idle,
        ap_continue => grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_continue);

    dcmp_64ns_64ns_1_2_no_dsp_1_U41 : component system_top_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1234_p0,
        din1 => grp_fu_1234_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_1234_opcode,
        dout => grp_fu_1234_p2);

    mul_33s_25ns_58_1_1_U42 : component system_top_mul_33s_25ns_58_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 25,
        dout_WIDTH => 58)
    port map (
        din0 => ret_V_7_reg_4670,
        din1 => r_V_2_fu_1430_p1,
        dout => r_V_2_fu_1430_p2);

    mul_78s_108ns_185_3_1_U43 : component system_top_mul_78s_108ns_185_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 78,
        din1_WIDTH => 108,
        dout_WIDTH => 185)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_fu_1444_p3,
        din1 => grp_fu_1455_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1455_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
                    grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready = ap_const_logic_1)) then 
                    grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    left_bound_V_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                left_bound_V_fu_310 <= ap_const_lv32_0;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                left_bound_V_fu_310 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_left_bound;
            end if; 
        end if;
    end process;

    lhs_5_reg_1188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln1506_fu_1760_p2) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_0) and (grp_fu_1243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                lhs_5_reg_1188 <= start_index_V_1_load_reg_4722;
            elsif (((icmp_ln885_1_reg_4753 = ap_const_lv1_0) and (icmp_ln874_1_reg_4749 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1506_reg_4802) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                lhs_5_reg_1188 <= start_index_V_2_reg_4811;
            end if; 
        end if;
    end process;

    lhs_reg_1201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1505_fu_2893_p2) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                lhs_reg_1201 <= start_index_V_1_load_reg_4722;
            elsif ((((icmp_ln874_fu_1530_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_fu_1243_p2 = ap_const_lv1_1) and (icmp_ln874_fu_1530_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                lhs_reg_1201 <= start_index_V_3_fu_302;
            elsif (((ap_const_lv1_1 = and_ln1505_fu_2893_p2) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                lhs_reg_1201 <= start_index_V_fu_2899_p2;
            end if; 
        end if;
    end process;

    right_bound_V_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                right_bound_V_fu_314 <= ap_const_lv32_0;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                right_bound_V_fu_314 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_right_bound;
            end if; 
        end if;
    end process;

    start_index_V_3_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_index_V_3_fu_302 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln1506_fu_1760_p2) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                start_index_V_3_fu_302 <= start_index_V_2_fu_1816_p2;
            elsif (((ap_const_lv1_1 = and_ln1505_fu_2893_p2) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                start_index_V_3_fu_302 <= start_index_V_fu_2899_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                start_index_V_3_fu_302 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_index;
            end if; 
        end if;
    end process;

    start_value_V_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_value_V_fu_306 <= ap_const_lv32_40000000;
            elsif (((icmp_ln885_1_reg_4753 = ap_const_lv1_0) and (icmp_ln874_1_reg_4749 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1506_reg_4802) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                start_value_V_fu_306 <= start_value_V_1_fu_1830_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                start_value_V_fu_306 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_start_value_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                and_ln1506_reg_4802 <= and_ln1506_fu_1760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                empty_reg_5152 <= empty_fu_3043_p1;
                    shl_ln1_reg_5170(15 downto 13) <= shl_ln1_fu_3053_p3(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                icmp_ln1505_1_reg_5019 <= icmp_ln1505_1_fu_2840_p2;
                m_11_reg_5009 <= m_3_fu_2798_p2(63 downto 1);
                    select_ln893_reg_5014(0) <= select_ln893_fu_2822_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                icmp_ln1505_reg_5029 <= icmp_ln1505_fu_2883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln1506_1_reg_4787 <= icmp_ln1506_1_fu_1707_p2;
                m_13_reg_4777 <= m_8_fu_1665_p2(63 downto 1);
                    select_ln893_1_reg_4782(0) <= select_ln893_1_fu_1689_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                icmp_ln1506_reg_4797 <= icmp_ln1506_fu_1750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln874_1_reg_4749 <= icmp_ln874_1_fu_1542_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln878_reg_4834 <= icmp_ln878_fu_1861_p2;
                ret_51_reg_4816 <= ret_51_fu_1844_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                icmp_ln885_1_reg_4753 <= grp_fu_1243_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln908_1_reg_4762 <= grp_fu_1333_p2;
                select_ln908_2_reg_4767 <= select_ln908_2_fu_1619_p3;
                trunc_ln893_1_reg_4772 <= trunc_ln893_1_fu_1627_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                icmp_ln908_reg_4994 <= grp_fu_1333_p2;
                select_ln908_reg_4999 <= select_ln908_fu_2752_p3;
                trunc_ln893_reg_5004 <= trunc_ln893_fu_2760_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                init_patch_0_addr_reg_5081 <= zext_ln113_reg_4612(3 - 1 downto 0);
                init_patch_1_addr_reg_5086 <= zext_ln113_reg_4612(3 - 1 downto 0);
                init_patch_2_addr_reg_5091 <= zext_ln113_reg_4612(3 - 1 downto 0);
                init_patch_3_addr_reg_5096 <= zext_ln113_reg_4612(3 - 1 downto 0);
                init_patch_4_addr_reg_5101 <= zext_ln113_reg_4612(3 - 1 downto 0);
                ret_19_reg_5060 <= ret_19_fu_2930_p1;
                trunc_ln1346_reg_5042 <= trunc_ln1346_fu_2913_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                lshr_ln446_10_reg_5353 <= add_ln446_11_fu_4271_p2(15 downto 13);
                lshr_ln446_11_reg_5358 <= add_ln446_12_fu_4299_p2(15 downto 13);
                lshr_ln446_12_reg_5363 <= add_ln446_13_fu_4327_p2(15 downto 13);
                lshr_ln446_13_reg_5368 <= add_ln446_14_fu_4355_p2(15 downto 13);
                lshr_ln446_14_reg_5373 <= add_ln446_15_fu_4377_p2(15 downto 13);
                lshr_ln446_8_reg_5338 <= add_ln446_8_fu_4187_p2(15 downto 13);
                lshr_ln446_9_reg_5343 <= add_ln446_9_fu_4215_p2(15 downto 13);
                lshr_ln446_s_reg_5348 <= add_ln446_10_fu_4243_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                lshr_ln454_10_reg_5243 <= add_ln454_11_fu_3555_p2(15 downto 13);
                lshr_ln454_11_reg_5248 <= add_ln454_12_fu_3583_p2(15 downto 13);
                lshr_ln454_12_reg_5253 <= add_ln454_13_fu_3611_p2(15 downto 13);
                lshr_ln454_13_reg_5258 <= add_ln454_14_fu_3639_p2(15 downto 13);
                lshr_ln454_14_reg_5263 <= add_ln454_15_fu_3667_p2(15 downto 13);
                lshr_ln454_8_reg_5228 <= add_ln454_8_fu_3471_p2(15 downto 13);
                lshr_ln454_9_reg_5233 <= add_ln454_9_fu_3499_p2(15 downto 13);
                lshr_ln454_s_reg_5238 <= add_ln454_10_fu_3527_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                lshr_ln493_10_reg_4929 <= add_ln493_11_fu_2379_p2(15 downto 13);
                lshr_ln493_11_reg_4934 <= add_ln493_12_fu_2407_p2(15 downto 13);
                lshr_ln493_12_reg_4939 <= add_ln493_13_fu_2435_p2(15 downto 13);
                lshr_ln493_13_reg_4944 <= add_ln493_14_fu_2463_p2(15 downto 13);
                lshr_ln493_14_reg_4949 <= add_ln493_15_fu_2485_p2(15 downto 13);
                lshr_ln493_8_reg_4914 <= add_ln493_8_fu_2295_p2(15 downto 13);
                lshr_ln493_9_reg_4919 <= add_ln493_9_fu_2323_p2(15 downto 13);
                lshr_ln493_s_reg_4924 <= add_ln493_10_fu_2351_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                mul_ln1148_reg_4696 <= grp_fu_1455_p2;
                tmp_13_reg_4701 <= grp_fu_1455_p2(182 downto 131);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_0) and (grp_fu_1243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                p_Result_13_reg_4757 <= start_value_V_fu_306(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1243_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1530_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_Result_9_reg_4744 <= start_value_V_fu_306(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                projectionToRow_V_reg_4712 <= ret_V_fu_1510_p2(51 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                r_V_2_reg_4680 <= r_V_2_fu_1430_p2;
                tmp_11_reg_4685 <= r_V_2_fu_1430_p2(57 downto 57);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_0) and (grp_fu_1243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((grp_fu_1243_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1530_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then
                reg_1281 <= grp_fu_1263_p3;
                reg_1285 <= grp_fu_1271_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_1339 <= grp_fu_1297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    ret_V_6_reg_4675(24 downto 20) <= ret_V_6_fu_1418_p2(24 downto 20);
                ret_V_7_reg_4670 <= ret_V_7_fu_1412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_fu_2940_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    shl_ln2_reg_5106(15 downto 13) <= shl_ln2_fu_2946_p3(15 downto 13);
                trunc_ln454_reg_5124 <= trunc_ln454_fu_2977_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_1861_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    shl_ln3_reg_4856(15 downto 13) <= shl_ln3_fu_1877_p3(15 downto 13);
                trunc_ln1461_reg_4838 <= trunc_ln1461_fu_1867_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                start_index_V_1_load_reg_4722 <= start_index_V_3_fu_302;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln1506_fu_1760_p2) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                start_index_V_2_reg_4811 <= start_index_V_2_fu_1816_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_4685 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                sub_ln1148_reg_4707 <= sub_ln1148_fu_1471_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    zext_ln113_reg_4612(2 downto 0) <= zext_ln113_fu_1355_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln113_reg_4612(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    ret_V_6_reg_4675(19 downto 0) <= "00000000000000000000";
    select_ln893_1_reg_4782(10 downto 1) <= "0111111111";
    shl_ln3_reg_4856(12 downto 0) <= "0000000000000";
    select_ln893_reg_5014(10 downto 1) <= "0111111111";
    shl_ln2_reg_5106(12 downto 0) <= "0000000000000";
    shl_ln1_reg_5170(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state10, leftRight_read_read_fu_336_p2, icmp_ln874_fu_1530_p2, grp_fu_1243_p2, ap_CS_fsm_state11, icmp_ln874_1_fu_1542_p2, ap_CS_fsm_state16, icmp_ln878_fu_1861_p2, ap_CS_fsm_state29, icmp_ln886_fu_2940_p2, ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_fu_1243_p2 = ap_const_lv1_0) and (icmp_ln874_fu_1530_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (((icmp_ln874_fu_1530_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1)) or ((grp_fu_1243_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln874_1_fu_1542_p2 = ap_const_lv1_0) and (grp_fu_1243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln878_fu_1861_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1461_fu_1871_p2 <= std_logic_vector(unsigned(ret_51_fu_1844_p1) + unsigned(ap_const_lv12_FF1));
    add_ln446_10_fu_4243_p2 <= std_logic_vector(unsigned(shl_ln446_10_fu_4235_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_11_fu_4271_p2 <= std_logic_vector(unsigned(shl_ln446_11_fu_4263_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_12_fu_4299_p2 <= std_logic_vector(unsigned(shl_ln446_12_fu_4291_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_13_fu_4327_p2 <= std_logic_vector(unsigned(shl_ln446_13_fu_4319_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_14_fu_4355_p2 <= std_logic_vector(unsigned(shl_ln446_14_fu_4347_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_15_fu_4377_p2 <= std_logic_vector(unsigned(shl_ln446_15_fu_4370_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_16_fu_3084_p2 <= std_logic_vector(unsigned(empty_fu_3043_p1) + unsigned(ap_const_lv9_1F1));
    add_ln446_17_fu_3133_p2 <= std_logic_vector(unsigned(empty_fu_3043_p1) + unsigned(ap_const_lv9_1F2));
    add_ln446_18_fu_3906_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F3));
    add_ln446_19_fu_3952_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F4));
    add_ln446_1_fu_3117_p2 <= std_logic_vector(unsigned(shl_ln446_2_fu_3109_p3) + unsigned(shl_ln1_fu_3053_p3));
    add_ln446_20_fu_4008_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F5));
    add_ln446_21_fu_4054_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F6));
    add_ln446_22_fu_4110_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F7));
    add_ln446_23_fu_4156_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F8));
    add_ln446_24_fu_4402_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1F9));
    add_ln446_25_fu_4419_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FA));
    add_ln446_26_fu_4446_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FB));
    add_ln446_27_fu_4463_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FC));
    add_ln446_28_fu_4490_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FD));
    add_ln446_29_fu_4507_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FE));
    add_ln446_2_fu_3891_p2 <= std_logic_vector(unsigned(shl_ln446_3_fu_3883_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_30_fu_4534_p2 <= std_logic_vector(unsigned(empty_reg_5152) + unsigned(ap_const_lv9_1FF));
    add_ln446_3_fu_3937_p2 <= std_logic_vector(unsigned(shl_ln446_4_fu_3929_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_4_fu_3993_p2 <= std_logic_vector(unsigned(shl_ln446_5_fu_3985_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_5_fu_4039_p2 <= std_logic_vector(unsigned(shl_ln446_6_fu_4031_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_6_fu_4095_p2 <= std_logic_vector(unsigned(shl_ln446_7_fu_4087_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_7_fu_4141_p2 <= std_logic_vector(unsigned(shl_ln446_8_fu_4133_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_8_fu_4187_p2 <= std_logic_vector(unsigned(shl_ln446_9_fu_4179_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_9_fu_4215_p2 <= std_logic_vector(unsigned(shl_ln446_s_fu_4207_p3) + unsigned(shl_ln1_reg_5170));
    add_ln446_fu_3068_p2 <= std_logic_vector(unsigned(shl_ln446_1_fu_3060_p3) + unsigned(shl_ln1_fu_3053_p3));
    add_ln454_10_fu_3527_p2 <= std_logic_vector(unsigned(shl_ln454_10_fu_3519_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_11_fu_3555_p2 <= std_logic_vector(unsigned(shl_ln454_11_fu_3547_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_12_fu_3583_p2 <= std_logic_vector(unsigned(shl_ln454_12_fu_3575_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_13_fu_3611_p2 <= std_logic_vector(unsigned(shl_ln454_13_fu_3603_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_14_fu_3639_p2 <= std_logic_vector(unsigned(shl_ln454_14_fu_3631_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_15_fu_3667_p2 <= std_logic_vector(unsigned(shl_ln454_15_fu_3659_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_16_fu_3024_p2 <= std_logic_vector(unsigned(trunc_ln454_fu_2977_p1) + unsigned(ap_const_lv9_1));
    add_ln454_17_fu_3190_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_2));
    add_ln454_18_fu_3236_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_3));
    add_ln454_19_fu_3292_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_4));
    add_ln454_1_fu_3008_p2 <= std_logic_vector(unsigned(shl_ln454_2_fu_3000_p3) + unsigned(shl_ln2_fu_2946_p3));
    add_ln454_20_fu_3338_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_5));
    add_ln454_21_fu_3394_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_6));
    add_ln454_22_fu_3440_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_7));
    add_ln454_23_fu_3692_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_8));
    add_ln454_24_fu_3709_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_9));
    add_ln454_25_fu_3736_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_A));
    add_ln454_26_fu_3753_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_B));
    add_ln454_27_fu_3780_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_C));
    add_ln454_28_fu_3797_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_D));
    add_ln454_29_fu_3824_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_E));
    add_ln454_2_fu_3175_p2 <= std_logic_vector(unsigned(shl_ln454_3_fu_3167_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_30_fu_3841_p2 <= std_logic_vector(unsigned(trunc_ln454_reg_5124) + unsigned(ap_const_lv9_F));
    add_ln454_3_fu_3221_p2 <= std_logic_vector(unsigned(shl_ln454_4_fu_3213_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_4_fu_3277_p2 <= std_logic_vector(unsigned(shl_ln454_5_fu_3269_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_5_fu_3323_p2 <= std_logic_vector(unsigned(shl_ln454_6_fu_3315_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_6_fu_3379_p2 <= std_logic_vector(unsigned(shl_ln454_7_fu_3371_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_7_fu_3425_p2 <= std_logic_vector(unsigned(shl_ln454_8_fu_3417_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_8_fu_3471_p2 <= std_logic_vector(unsigned(shl_ln454_9_fu_3463_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_9_fu_3499_p2 <= std_logic_vector(unsigned(shl_ln454_s_fu_3491_p3) + unsigned(shl_ln2_reg_5106));
    add_ln454_fu_2961_p2 <= std_logic_vector(unsigned(shl_ln454_1_fu_2953_p3) + unsigned(shl_ln2_fu_2946_p3));
    add_ln464_fu_1536_p2 <= std_logic_vector(unsigned(num_points_q0) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln471_fu_1784_p2 <= std_logic_vector(unsigned(shl_ln471_1_fu_1776_p3) + unsigned(shl_ln_fu_1766_p3));
    add_ln493_10_fu_2351_p2 <= std_logic_vector(unsigned(shl_ln493_10_fu_2343_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_11_fu_2379_p2 <= std_logic_vector(unsigned(shl_ln493_11_fu_2371_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_12_fu_2407_p2 <= std_logic_vector(unsigned(shl_ln493_12_fu_2399_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_13_fu_2435_p2 <= std_logic_vector(unsigned(shl_ln493_13_fu_2427_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_14_fu_2463_p2 <= std_logic_vector(unsigned(shl_ln493_14_fu_2455_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_15_fu_2485_p2 <= std_logic_vector(unsigned(shl_ln493_15_fu_2478_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_16_fu_1908_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1867_p1) + unsigned(ap_const_lv9_1F1));
    add_ln493_17_fu_1957_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1867_p1) + unsigned(ap_const_lv9_1F2));
    add_ln493_18_fu_2014_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F3));
    add_ln493_19_fu_2060_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F4));
    add_ln493_1_fu_1941_p2 <= std_logic_vector(unsigned(shl_ln493_2_fu_1933_p3) + unsigned(shl_ln3_fu_1877_p3));
    add_ln493_20_fu_2116_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F5));
    add_ln493_21_fu_2162_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F6));
    add_ln493_22_fu_2218_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F7));
    add_ln493_23_fu_2264_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F8));
    add_ln493_24_fu_2510_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1F9));
    add_ln493_25_fu_2527_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FA));
    add_ln493_26_fu_2554_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FB));
    add_ln493_27_fu_2571_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FC));
    add_ln493_28_fu_2598_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FD));
    add_ln493_29_fu_2615_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FE));
    add_ln493_2_fu_1999_p2 <= std_logic_vector(unsigned(shl_ln493_3_fu_1991_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_30_fu_2642_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_4838) + unsigned(ap_const_lv9_1FF));
    add_ln493_3_fu_2045_p2 <= std_logic_vector(unsigned(shl_ln493_4_fu_2037_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_4_fu_2101_p2 <= std_logic_vector(unsigned(shl_ln493_5_fu_2093_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_5_fu_2147_p2 <= std_logic_vector(unsigned(shl_ln493_6_fu_2139_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_6_fu_2203_p2 <= std_logic_vector(unsigned(shl_ln493_7_fu_2195_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_7_fu_2249_p2 <= std_logic_vector(unsigned(shl_ln493_8_fu_2241_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_8_fu_2295_p2 <= std_logic_vector(unsigned(shl_ln493_9_fu_2287_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_9_fu_2323_p2 <= std_logic_vector(unsigned(shl_ln493_s_fu_2315_p3) + unsigned(shl_ln3_reg_4856));
    add_ln493_fu_1892_p2 <= std_logic_vector(unsigned(shl_ln493_1_fu_1884_p3) + unsigned(shl_ln3_fu_1877_p3));
    add_ln915_1_fu_1721_p2 <= std_logic_vector(unsigned(sub_ln915_1_fu_1716_p2) + unsigned(select_ln893_1_reg_4782));
    add_ln915_fu_2854_p2 <= std_logic_vector(unsigned(sub_ln915_fu_2849_p2) + unsigned(select_ln893_reg_5014));
    and_ln1505_fu_2893_p2 <= (or_ln1505_fu_2889_p2 and grp_fu_1234_p2);
    and_ln1506_fu_1760_p2 <= (or_ln1506_fu_1756_p2 and grp_fu_1234_p2);
    and_ln899_1_fu_2738_p2 <= (xor_ln899_fu_2732_p2 and grp_fu_1325_p3);
    and_ln899_2_fu_1579_p2 <= (reg_1281 and or_ln899_fu_1573_p2);
    and_ln899_3_fu_1605_p2 <= (xor_ln899_1_fu_1599_p2 and grp_fu_1325_p3);
    and_ln899_fu_2712_p2 <= (reg_1281 and or_ln899_2_fu_2706_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state9_on_subcall_done_assign_proc : process(ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready, ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready and ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_lhs_5_phi_fu_1191_p8_assign_proc : process(icmp_ln874_1_reg_4749, icmp_ln885_1_reg_4753, and_ln1506_reg_4802, start_index_V_2_reg_4811, ap_CS_fsm_state16, lhs_5_reg_1188)
    begin
        if (((icmp_ln885_1_reg_4753 = ap_const_lv1_0) and (icmp_ln874_1_reg_4749 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1506_reg_4802) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_phi_mux_lhs_5_phi_fu_1191_p8 <= start_index_V_2_reg_4811;
        else 
            ap_phi_mux_lhs_5_phi_fu_1191_p8 <= lhs_5_reg_1188;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done <= (grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_done);
    ap_sync_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready <= (grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_ready);
    bitcast_ln734_1_fu_1745_p1 <= p_Result_16_fu_1733_p5;
    bitcast_ln734_fu_2878_p1 <= p_Result_12_fu_2866_p5;
    empty_fu_3043_p0 <= right_bound_V_fu_314;
    empty_fu_3043_p1 <= empty_fu_3043_p0(9 - 1 downto 0);
    get_radiiradii_address0 <= zext_ln113_fu_1355_p1(3 - 1 downto 0);

    get_radiiradii_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_radiiradii_ce0 <= ap_const_logic_1;
        else 
            get_radiiradii_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1234_opcode_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1234_opcode <= ap_const_lv5_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1234_opcode <= ap_const_lv5_4;
        else 
            grp_fu_1234_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1234_p0_assign_proc : process(bitcast_ln734_1_fu_1745_p1, ap_CS_fsm_state14, bitcast_ln734_fu_2878_p1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1234_p0 <= bitcast_ln734_fu_2878_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1234_p0 <= bitcast_ln734_1_fu_1745_p1;
        else 
            grp_fu_1234_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1234_p1_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1234_p1 <= ap_const_lv64_3EE4F8B588E368F1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1234_p1 <= ap_const_lv64_BEE4F8B588E368F1;
        else 
            grp_fu_1234_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1243_p2 <= "1" when (start_value_V_fu_306 = ap_const_lv32_0) else "0";
    grp_fu_1249_p3 <= start_value_V_fu_306(31 downto 31);
    grp_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(start_value_V_fu_306));
    grp_fu_1263_p3 <= 
        grp_fu_1257_p2 when (grp_fu_1249_p3(0) = '1') else 
        start_value_V_fu_306;
    
    grp_fu_1271_p4_proc : process(grp_fu_1263_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable grp_fu_1271_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := grp_fu_1263_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for grp_fu_1271_p4_i in 0 to 32-1 loop
                v0_cpy(grp_fu_1271_p4_i) := grp_fu_1263_p3(32-1-grp_fu_1271_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_1271_p4 <= resvalue(32-1 downto 0);
    end process;

    
    grp_fu_1289_p3_proc : process(reg_1285)
    begin
        grp_fu_1289_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if reg_1285(i) = '1' then
                grp_fu_1289_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    grp_fu_1297_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(grp_fu_1289_p3));
    grp_fu_1303_p2 <= std_logic_vector(unsigned(grp_fu_1297_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    grp_fu_1309_p4 <= grp_fu_1303_p2(31 downto 1);
    grp_fu_1319_p2 <= "1" when (signed(grp_fu_1309_p4) > signed(ap_const_lv31_0)) else "0";
    grp_fu_1325_p3 <= reg_1281(to_integer(unsigned(grp_fu_1303_p2)) downto to_integer(unsigned(grp_fu_1303_p2))) when (to_integer(unsigned(grp_fu_1303_p2))>= 0 and to_integer(unsigned(grp_fu_1303_p2))<=31) else "-";
    grp_fu_1333_p2 <= "1" when (signed(grp_fu_1303_p2) > signed(ap_const_lv32_0)) else "0";
    grp_fu_1343_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(reg_1339));
    grp_fu_1349_p2 <= std_logic_vector(unsigned(reg_1339) + unsigned(ap_const_lv32_FFFFFFCA));
    grp_fu_1455_p1 <= ap_const_lv185_lc_2(108 - 1 downto 0);

    grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_continue_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_continue <= ap_const_logic_1;
        else 
            grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_ap_start_reg;
    icmp_ln1505_1_fu_2840_p2 <= "1" when (trunc_ln4_fu_2830_p4 = ap_const_lv52_0) else "0";
    icmp_ln1505_fu_2883_p2 <= "0" when (add_ln915_fu_2854_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln1506_1_fu_1707_p2 <= "1" when (trunc_ln5_fu_1697_p4 = ap_const_lv52_0) else "0";
    icmp_ln1506_fu_1750_p2 <= "0" when (add_ln915_1_fu_1721_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln874_1_fu_1542_p2 <= "1" when (start_index_V_3_fu_302 = add_ln464_fu_1536_p2) else "0";
    icmp_ln874_fu_1530_p2 <= "1" when (start_index_V_3_fu_302 = ap_const_lv32_0) else "0";
    icmp_ln878_fu_1861_p2 <= "1" when (signed(ret_36_fu_1848_p2) < signed(sext_ln878_fu_1857_p1)) else "0";
    icmp_ln886_fu_2940_p2 <= "1" when (signed(ret_fu_2917_p2) > signed(ret_1_fu_2934_p2)) else "0";
    icmp_ln899_1_fu_1585_p2 <= "0" when (and_ln899_2_fu_1579_p2 = ap_const_lv32_0) else "1";
    icmp_ln899_fu_2718_p2 <= "0" when (and_ln899_fu_2712_p2 = ap_const_lv32_0) else "1";

    init_patch_0_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state17, init_patch_0_addr_reg_5081, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            init_patch_0_address0 <= init_patch_0_addr_reg_5081;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_0_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_0_address0 <= "XXX";
        end if; 
    end process;


    init_patch_0_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_0_ce0 <= ap_const_logic_1;
        else 
            init_patch_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_0_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38, trunc_ln493_fu_1976_p1, trunc_ln454_1_fu_3152_p1, trunc_ln446_fu_3868_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            init_patch_0_d0 <= trunc_ln446_fu_3868_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            init_patch_0_d0 <= trunc_ln454_1_fu_3152_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_0_d0 <= trunc_ln493_fu_1976_p1;
        else 
            init_patch_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_0_we0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_0_we0 <= ap_const_logic_1;
        else 
            init_patch_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_10_addr_1_gep_fu_908_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_10_addr_gep_fu_1108_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_10_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43, init_patch_10_addr_1_gep_fu_908_p3, init_patch_10_addr_gep_fu_1108_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_10_address0 <= init_patch_10_addr_gep_fu_1108_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_10_address0 <= init_patch_10_addr_1_gep_fu_908_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_10_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_10_address0 <= "XXX";
        end if; 
    end process;


    init_patch_10_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_10_ce0 <= ap_const_logic_1;
        else 
            init_patch_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_10_d0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43, trunc_ln493_10_fu_2588_p1, trunc_ln454_11_fu_3770_p1, trunc_ln446_10_fu_4480_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_10_d0 <= trunc_ln446_10_fu_4480_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_10_d0 <= trunc_ln454_11_fu_3770_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_10_d0 <= trunc_ln493_10_fu_2588_p1;
        else 
            init_patch_10_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_10_we0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_10_we0 <= ap_const_logic_1;
        else 
            init_patch_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_11_addr_1_gep_fu_916_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_11_addr_gep_fu_1116_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_11_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43, init_patch_11_addr_1_gep_fu_916_p3, init_patch_11_addr_gep_fu_1116_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_11_address0 <= init_patch_11_addr_gep_fu_1116_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_11_address0 <= init_patch_11_addr_1_gep_fu_916_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_11_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_11_address0 <= "XXX";
        end if; 
    end process;


    init_patch_11_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_11_ce0 <= ap_const_logic_1;
        else 
            init_patch_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_11_d0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43, trunc_ln493_11_fu_2593_p1, trunc_ln454_12_fu_3775_p1, trunc_ln446_11_fu_4485_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            init_patch_11_d0 <= trunc_ln446_11_fu_4485_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            init_patch_11_d0 <= trunc_ln454_12_fu_3775_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            init_patch_11_d0 <= trunc_ln493_11_fu_2593_p1;
        else 
            init_patch_11_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_11_we0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state35, ap_CS_fsm_state43)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            init_patch_11_we0 <= ap_const_logic_1;
        else 
            init_patch_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_12_addr_1_gep_fu_940_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_12_addr_gep_fu_1140_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_12_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44, init_patch_12_addr_1_gep_fu_940_p3, init_patch_12_addr_gep_fu_1140_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_12_address0 <= init_patch_12_addr_gep_fu_1140_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_12_address0 <= init_patch_12_addr_1_gep_fu_940_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_12_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_12_address0 <= "XXX";
        end if; 
    end process;


    init_patch_12_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_12_ce0 <= ap_const_logic_1;
        else 
            init_patch_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_12_d0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44, trunc_ln493_12_fu_2632_p1, trunc_ln454_13_fu_3814_p1, trunc_ln446_12_fu_4524_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_12_d0 <= trunc_ln446_12_fu_4524_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_12_d0 <= trunc_ln454_13_fu_3814_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_12_d0 <= trunc_ln493_12_fu_2632_p1;
        else 
            init_patch_12_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_12_we0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_12_we0 <= ap_const_logic_1;
        else 
            init_patch_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_13_addr_1_gep_fu_948_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_13_addr_gep_fu_1148_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_13_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44, init_patch_13_addr_1_gep_fu_948_p3, init_patch_13_addr_gep_fu_1148_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_13_address0 <= init_patch_13_addr_gep_fu_1148_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_13_address0 <= init_patch_13_addr_1_gep_fu_948_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_13_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_13_address0 <= "XXX";
        end if; 
    end process;


    init_patch_13_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_13_ce0 <= ap_const_logic_1;
        else 
            init_patch_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_13_d0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44, trunc_ln493_13_fu_2637_p1, trunc_ln454_14_fu_3819_p1, trunc_ln446_13_fu_4529_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            init_patch_13_d0 <= trunc_ln446_13_fu_4529_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            init_patch_13_d0 <= trunc_ln454_14_fu_3819_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            init_patch_13_d0 <= trunc_ln493_13_fu_2637_p1;
        else 
            init_patch_13_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_13_we0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            init_patch_13_we0 <= ap_const_logic_1;
        else 
            init_patch_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_14_addr_1_gep_fu_972_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_14_addr_gep_fu_1172_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_14_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state24, init_patch_14_addr_1_gep_fu_972_p3, ap_CS_fsm_state37, init_patch_14_addr_gep_fu_1172_p3, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_14_address0 <= init_patch_14_addr_gep_fu_1172_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_14_address0 <= init_patch_14_addr_1_gep_fu_972_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_14_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_14_address0 <= "XXX";
        end if; 
    end process;


    init_patch_14_ce0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            init_patch_14_ce0 <= ap_const_logic_1;
        else 
            init_patch_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_14_d0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45, trunc_ln493_14_fu_2670_p1, trunc_ln454_15_fu_3858_p1, trunc_ln446_14_fu_4562_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_14_d0 <= trunc_ln446_14_fu_4562_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_14_d0 <= trunc_ln454_15_fu_3858_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_14_d0 <= trunc_ln493_14_fu_2670_p1;
        else 
            init_patch_14_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_14_we0_assign_proc : process(leftRight_read_read_fu_336_p2, icmp_ln878_reg_4834, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or ((icmp_ln878_reg_4834 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            init_patch_14_we0 <= ap_const_logic_1;
        else 
            init_patch_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_15_addr_1_gep_fu_980_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_15_addr_gep_fu_1180_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_15_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state24, ap_CS_fsm_state37, init_patch_15_addr_1_gep_fu_980_p3, ap_CS_fsm_state45, init_patch_15_addr_gep_fu_1180_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_15_address0 <= init_patch_15_addr_gep_fu_1180_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_15_address0 <= init_patch_15_addr_1_gep_fu_980_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_15_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_15_address0 <= "XXX";
        end if; 
    end process;


    init_patch_15_ce0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            init_patch_15_ce0 <= ap_const_logic_1;
        else 
            init_patch_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_15_d0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45, trunc_ln493_15_fu_2675_p1, trunc_ln454_16_fu_3863_p1, trunc_ln446_15_fu_4567_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            init_patch_15_d0 <= trunc_ln446_15_fu_4567_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            init_patch_15_d0 <= trunc_ln454_16_fu_3863_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            init_patch_15_d0 <= trunc_ln493_15_fu_2675_p1;
        else 
            init_patch_15_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_15_we0_assign_proc : process(leftRight_read_read_fu_336_p2, icmp_ln878_reg_4834, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state37) or ((icmp_ln878_reg_4834 = ap_const_lv1_0) and (leftRight_read_read_fu_336_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            init_patch_15_we0 <= ap_const_logic_1;
        else 
            init_patch_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state17, init_patch_1_addr_reg_5086, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            init_patch_1_address0 <= init_patch_1_addr_reg_5086;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_1_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_1_address0 <= "XXX";
        end if; 
    end process;


    init_patch_1_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_1_ce0 <= ap_const_logic_1;
        else 
            init_patch_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38, trunc_ln493_1_fu_1981_p1, trunc_ln454_2_fu_3157_p1, trunc_ln446_1_fu_3873_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            init_patch_1_d0 <= trunc_ln446_1_fu_3873_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            init_patch_1_d0 <= trunc_ln454_2_fu_3157_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_1_d0 <= trunc_ln493_1_fu_1981_p1;
        else 
            init_patch_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_1_we0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state30, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            init_patch_1_we0 <= ap_const_logic_1;
        else 
            init_patch_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state18, init_patch_2_addr_reg_5091, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            init_patch_2_address0 <= init_patch_2_addr_reg_5091;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_2_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_2_address0 <= "XXX";
        end if; 
    end process;


    init_patch_2_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_2_ce0 <= ap_const_logic_1;
        else 
            init_patch_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_d0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39, trunc_ln493_2_fu_2078_p1, trunc_ln454_3_fu_3254_p1, trunc_ln446_2_fu_3970_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            init_patch_2_d0 <= trunc_ln446_2_fu_3970_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            init_patch_2_d0 <= trunc_ln454_3_fu_3254_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_2_d0 <= trunc_ln493_2_fu_2078_p1;
        else 
            init_patch_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_2_we0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_2_we0 <= ap_const_logic_1;
        else 
            init_patch_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state18, init_patch_3_addr_reg_5096, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            init_patch_3_address0 <= init_patch_3_addr_reg_5096;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_3_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_3_address0 <= "XXX";
        end if; 
    end process;


    init_patch_3_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_3_ce0 <= ap_const_logic_1;
        else 
            init_patch_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_d0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39, trunc_ln493_3_fu_2083_p1, trunc_ln454_4_fu_3259_p1, trunc_ln446_3_fu_3975_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            init_patch_3_d0 <= trunc_ln446_3_fu_3975_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            init_patch_3_d0 <= trunc_ln454_4_fu_3259_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            init_patch_3_d0 <= trunc_ln493_3_fu_2083_p1;
        else 
            init_patch_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_3_we0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state31, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            init_patch_3_we0 <= ap_const_logic_1;
        else 
            init_patch_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state19, init_patch_4_addr_reg_5101, ap_CS_fsm_state32, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            init_patch_4_address0 <= init_patch_4_addr_reg_5101;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_4_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_4_address0 <= "XXX";
        end if; 
    end process;


    init_patch_4_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_4_ce0 <= ap_const_logic_1;
        else 
            init_patch_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40, trunc_ln493_4_fu_2180_p1, trunc_ln454_5_fu_3356_p1, trunc_ln446_4_fu_4072_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            init_patch_4_d0 <= trunc_ln446_4_fu_4072_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            init_patch_4_d0 <= trunc_ln454_5_fu_3356_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_4_d0 <= trunc_ln493_4_fu_2180_p1;
        else 
            init_patch_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_4_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_4_we0 <= ap_const_logic_1;
        else 
            init_patch_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_5_addr_1_gep_fu_820_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_5_addr_gep_fu_1020_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_5_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40, init_patch_5_addr_1_gep_fu_820_p3, init_patch_5_addr_gep_fu_1020_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            init_patch_5_address0 <= init_patch_5_addr_gep_fu_1020_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            init_patch_5_address0 <= init_patch_5_addr_1_gep_fu_820_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_5_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_5_address0 <= "XXX";
        end if; 
    end process;


    init_patch_5_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_5_ce0 <= ap_const_logic_1;
        else 
            init_patch_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_5_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40, trunc_ln493_5_fu_2185_p1, trunc_ln454_6_fu_3361_p1, trunc_ln446_5_fu_4077_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            init_patch_5_d0 <= trunc_ln446_5_fu_4077_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            init_patch_5_d0 <= trunc_ln454_6_fu_3361_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            init_patch_5_d0 <= trunc_ln493_5_fu_2185_p1;
        else 
            init_patch_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_5_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state32, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            init_patch_5_we0 <= ap_const_logic_1;
        else 
            init_patch_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_6_addr_1_gep_fu_844_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_6_addr_gep_fu_1044_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_6_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41, init_patch_6_addr_1_gep_fu_844_p3, init_patch_6_addr_gep_fu_1044_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_6_address0 <= init_patch_6_addr_gep_fu_1044_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_6_address0 <= init_patch_6_addr_1_gep_fu_844_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_6_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_6_address0 <= "XXX";
        end if; 
    end process;


    init_patch_6_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_6_ce0 <= ap_const_logic_1;
        else 
            init_patch_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_6_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41, trunc_ln493_6_fu_2500_p1, trunc_ln454_7_fu_3682_p1, trunc_ln446_6_fu_4392_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_6_d0 <= trunc_ln446_6_fu_4392_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_6_d0 <= trunc_ln454_7_fu_3682_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_6_d0 <= trunc_ln493_6_fu_2500_p1;
        else 
            init_patch_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_6_we0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_6_we0 <= ap_const_logic_1;
        else 
            init_patch_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_7_addr_1_gep_fu_852_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_7_addr_gep_fu_1052_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_7_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41, init_patch_7_addr_1_gep_fu_852_p3, init_patch_7_addr_gep_fu_1052_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_7_address0 <= init_patch_7_addr_gep_fu_1052_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_7_address0 <= init_patch_7_addr_1_gep_fu_852_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_7_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_7_address0 <= "XXX";
        end if; 
    end process;


    init_patch_7_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_7_ce0 <= ap_const_logic_1;
        else 
            init_patch_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_7_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41, trunc_ln493_7_fu_2505_p1, trunc_ln454_8_fu_3687_p1, trunc_ln446_7_fu_4397_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            init_patch_7_d0 <= trunc_ln446_7_fu_4397_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            init_patch_7_d0 <= trunc_ln454_8_fu_3687_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            init_patch_7_d0 <= trunc_ln493_7_fu_2505_p1;
        else 
            init_patch_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_7_we0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state33, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            init_patch_7_we0 <= ap_const_logic_1;
        else 
            init_patch_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_8_addr_1_gep_fu_876_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_8_addr_gep_fu_1076_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_8_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42, init_patch_8_addr_1_gep_fu_876_p3, init_patch_8_addr_gep_fu_1076_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_8_address0 <= init_patch_8_addr_gep_fu_1076_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_8_address0 <= init_patch_8_addr_1_gep_fu_876_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_8_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_8_address0 <= "XXX";
        end if; 
    end process;


    init_patch_8_ce0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_8_ce0 <= ap_const_logic_1;
        else 
            init_patch_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_8_d0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42, trunc_ln493_8_fu_2544_p1, trunc_ln454_9_fu_3726_p1, trunc_ln446_8_fu_4436_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_8_d0 <= trunc_ln446_8_fu_4436_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_8_d0 <= trunc_ln454_9_fu_3726_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_8_d0 <= trunc_ln493_8_fu_2544_p1;
        else 
            init_patch_8_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_8_we0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_8_we0 <= ap_const_logic_1;
        else 
            init_patch_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_9_addr_1_gep_fu_884_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);
    init_patch_9_addr_gep_fu_1084_p3 <= zext_ln113_reg_4612(3 - 1 downto 0);

    init_patch_9_address0_assign_proc : process(zext_ln113_reg_4612, ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42, init_patch_9_addr_1_gep_fu_884_p3, init_patch_9_addr_gep_fu_1084_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_9_address0 <= init_patch_9_addr_gep_fu_1084_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_9_address0 <= init_patch_9_addr_1_gep_fu_884_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_9_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        else 
            init_patch_9_address0 <= "XXX";
        end if; 
    end process;


    init_patch_9_ce0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_9_ce0 <= ap_const_logic_1;
        else 
            init_patch_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_9_d0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42, trunc_ln493_9_fu_2549_p1, trunc_ln454_10_fu_3731_p1, trunc_ln446_9_fu_4441_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            init_patch_9_d0 <= trunc_ln446_9_fu_4441_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            init_patch_9_d0 <= trunc_ln454_10_fu_3731_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            init_patch_9_d0 <= trunc_ln493_9_fu_2549_p1;
        else 
            init_patch_9_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_9_we0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state34, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            init_patch_9_we0 <= ap_const_logic_1;
        else 
            init_patch_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lbVal_constprop_o_assign_proc : process(ap_CS_fsm_state1, lbVal_constprop_i, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            lbVal_constprop_o <= ap_const_lv32_40000000;
        elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            lbVal_constprop_o <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o;
        else 
            lbVal_constprop_o <= lbVal_constprop_i;
        end if; 
    end process;


    lbVal_constprop_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld, ap_CS_fsm_state9)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lbVal_constprop_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            lbVal_constprop_o_ap_vld <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_lbVal_constprop_o_ap_vld;
        else 
            lbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    leftRight_read_read_fu_336_p2 <= leftRight;
    lhs_7_fu_3047_p2 <= std_logic_vector(unsigned(ret_19_fu_2930_p1) + unsigned(ap_const_lv12_FF1));
    lshr_ln1_fu_3074_p4 <= add_ln446_fu_3068_p2(15 downto 13);
    lshr_ln2_fu_2967_p4 <= add_ln454_fu_2961_p2(15 downto 13);
    lshr_ln3_fu_1898_p4 <= add_ln493_fu_1892_p2(15 downto 13);
    lshr_ln446_1_fu_3123_p4 <= add_ln446_1_fu_3117_p2(15 downto 13);
    lshr_ln446_2_fu_3896_p4 <= add_ln446_2_fu_3891_p2(15 downto 13);
    lshr_ln446_3_fu_3942_p4 <= add_ln446_3_fu_3937_p2(15 downto 13);
    lshr_ln446_4_fu_3998_p4 <= add_ln446_4_fu_3993_p2(15 downto 13);
    lshr_ln446_5_fu_4044_p4 <= add_ln446_5_fu_4039_p2(15 downto 13);
    lshr_ln446_6_fu_4100_p4 <= add_ln446_6_fu_4095_p2(15 downto 13);
    lshr_ln446_7_fu_4146_p4 <= add_ln446_7_fu_4141_p2(15 downto 13);
    lshr_ln454_1_fu_3014_p4 <= add_ln454_1_fu_3008_p2(15 downto 13);
    lshr_ln454_2_fu_3180_p4 <= add_ln454_2_fu_3175_p2(15 downto 13);
    lshr_ln454_3_fu_3226_p4 <= add_ln454_3_fu_3221_p2(15 downto 13);
    lshr_ln454_4_fu_3282_p4 <= add_ln454_4_fu_3277_p2(15 downto 13);
    lshr_ln454_5_fu_3328_p4 <= add_ln454_5_fu_3323_p2(15 downto 13);
    lshr_ln454_6_fu_3384_p4 <= add_ln454_6_fu_3379_p2(15 downto 13);
    lshr_ln454_7_fu_3430_p4 <= add_ln454_7_fu_3425_p2(15 downto 13);
    lshr_ln493_1_fu_1947_p4 <= add_ln493_1_fu_1941_p2(15 downto 13);
    lshr_ln493_2_fu_2004_p4 <= add_ln493_2_fu_1999_p2(15 downto 13);
    lshr_ln493_3_fu_2050_p4 <= add_ln493_3_fu_2045_p2(15 downto 13);
    lshr_ln493_4_fu_2106_p4 <= add_ln493_4_fu_2101_p2(15 downto 13);
    lshr_ln493_5_fu_2152_p4 <= add_ln493_5_fu_2147_p2(15 downto 13);
    lshr_ln493_6_fu_2208_p4 <= add_ln493_6_fu_2203_p2(15 downto 13);
    lshr_ln493_7_fu_2254_p4 <= add_ln493_7_fu_2249_p2(15 downto 13);
    lshr_ln897_1_fu_1561_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln897_1_fu_1557_p1(31-1 downto 0)))));
    lshr_ln897_fu_2694_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln897_fu_2690_p1(31-1 downto 0)))));
    lshr_ln908_1_fu_1649_p2 <= std_logic_vector(shift_right(unsigned(zext_ln909_3_fu_1631_p1),to_integer(unsigned('0' & zext_ln908_1_fu_1645_p1(31-1 downto 0)))));
    lshr_ln908_fu_2782_p2 <= std_logic_vector(shift_right(unsigned(zext_ln909_2_fu_2764_p1),to_integer(unsigned('0' & zext_ln908_fu_2778_p1(31-1 downto 0)))));
    lshr_ln_fu_1790_p4 <= add_ln471_fu_1784_p2(15 downto 13);
    m_3_fu_2798_p2 <= std_logic_vector(unsigned(m_fu_2788_p3) + unsigned(zext_ln911_fu_2795_p1));
    m_7_fu_1655_p3 <= 
        lshr_ln908_1_fu_1649_p2 when (icmp_ln908_1_reg_4762(0) = '1') else 
        shl_ln909_1_fu_1639_p2;
    m_8_fu_1665_p2 <= std_logic_vector(unsigned(m_7_fu_1655_p3) + unsigned(zext_ln911_1_fu_1662_p1));
    m_fu_2788_p3 <= 
        lshr_ln908_fu_2782_p2 when (icmp_ln908_reg_4994(0) = '1') else 
        shl_ln909_fu_2772_p2;

    num_points_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln113_reg_4612, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            num_points_address0 <= zext_ln113_reg_4612(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_address0 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address0;
        else 
            num_points_address0 <= "XXX";
        end if; 
    end process;

    num_points_address1 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_address1;

    num_points_ce0_assign_proc : process(ap_CS_fsm_state10, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            num_points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce0;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    num_points_ce1_assign_proc : process(grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            num_points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_num_points_ce1;
        else 
            num_points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1505_fu_2889_p2 <= (icmp_ln1505_reg_5029 or icmp_ln1505_1_reg_5019);
    or_ln1506_fu_1756_p2 <= (icmp_ln1506_reg_4797 or icmp_ln1506_1_reg_4787);
    or_ln899_2_fu_2706_p2 <= (shl_ln899_fu_2700_p2 or lshr_ln897_fu_2694_p2);
    or_ln899_fu_1573_p2 <= (shl_ln899_1_fu_1567_p2 or lshr_ln897_1_fu_1561_p2);
    p_Result_12_fu_2866_p5 <= (tmp_3_fu_2859_p3 & zext_ln912_fu_2846_p1(51 downto 0));
    p_Result_16_fu_1733_p5 <= (tmp_4_fu_1726_p3 & zext_ln912_1_fu_1713_p1(51 downto 0));
    p_Result_5_fu_1681_p3 <= m_8_fu_1665_p2(54 downto 54);
    p_Result_s_fu_2814_p3 <= m_3_fu_2798_p2(54 downto 54);

    points_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2940_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address0, ap_CS_fsm_state9, zext_ln471_fu_1811_p1, zext_ln493_1_fu_1971_p1, zext_ln493_2_fu_2027_p1, zext_ln493_4_fu_2129_p1, zext_ln493_6_fu_2231_p1, zext_ln493_8_fu_2522_p1, zext_ln493_10_fu_2566_p1, zext_ln493_12_fu_2610_p1, zext_ln493_14_fu_2654_p1, zext_ln454_fu_2989_p1, zext_ln446_fu_3098_p1, zext_ln454_2_fu_3203_p1, zext_ln454_4_fu_3305_p1, zext_ln454_6_fu_3407_p1, zext_ln454_8_fu_3704_p1, zext_ln454_10_fu_3748_p1, zext_ln454_12_fu_3792_p1, zext_ln454_14_fu_3836_p1, zext_ln446_2_fu_3919_p1, zext_ln446_4_fu_4021_p1, zext_ln446_6_fu_4123_p1, zext_ln446_8_fu_4414_p1, zext_ln446_10_fu_4458_p1, zext_ln446_12_fu_4502_p1, zext_ln446_14_fu_4546_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            points_address0 <= zext_ln446_14_fu_4546_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            points_address0 <= zext_ln446_12_fu_4502_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            points_address0 <= zext_ln446_10_fu_4458_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            points_address0 <= zext_ln446_8_fu_4414_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            points_address0 <= zext_ln446_6_fu_4123_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            points_address0 <= zext_ln446_4_fu_4021_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            points_address0 <= zext_ln446_2_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            points_address0 <= zext_ln454_14_fu_3836_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            points_address0 <= zext_ln454_12_fu_3792_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            points_address0 <= zext_ln454_10_fu_3748_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            points_address0 <= zext_ln454_8_fu_3704_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            points_address0 <= zext_ln454_6_fu_3407_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            points_address0 <= zext_ln454_4_fu_3305_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            points_address0 <= zext_ln454_2_fu_3203_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address0 <= zext_ln446_fu_3098_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2940_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address0 <= zext_ln454_fu_2989_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            points_address0 <= zext_ln493_14_fu_2654_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            points_address0 <= zext_ln493_12_fu_2610_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            points_address0 <= zext_ln493_10_fu_2566_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            points_address0 <= zext_ln493_8_fu_2522_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            points_address0 <= zext_ln493_6_fu_2231_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            points_address0 <= zext_ln493_4_fu_2129_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            points_address0 <= zext_ln493_2_fu_2027_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address0 <= zext_ln493_1_fu_1971_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            points_address0 <= zext_ln471_fu_1811_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address0 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address0;
        else 
            points_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_address1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2940_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address1, ap_CS_fsm_state9, zext_ln493_fu_1922_p1, zext_ln493_3_fu_2073_p1, zext_ln493_5_fu_2175_p1, zext_ln493_7_fu_2277_p1, zext_ln493_9_fu_2539_p1, zext_ln493_11_fu_2583_p1, zext_ln493_13_fu_2627_p1, zext_ln493_15_fu_2665_p1, zext_ln454_1_fu_3038_p1, zext_ln446_1_fu_3147_p1, zext_ln454_3_fu_3249_p1, zext_ln454_5_fu_3351_p1, zext_ln454_7_fu_3453_p1, zext_ln454_9_fu_3721_p1, zext_ln454_11_fu_3765_p1, zext_ln454_13_fu_3809_p1, zext_ln454_15_fu_3853_p1, zext_ln446_3_fu_3965_p1, zext_ln446_5_fu_4067_p1, zext_ln446_7_fu_4169_p1, zext_ln446_9_fu_4431_p1, zext_ln446_11_fu_4475_p1, zext_ln446_13_fu_4519_p1, zext_ln446_15_fu_4557_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            points_address1 <= zext_ln446_15_fu_4557_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            points_address1 <= zext_ln446_13_fu_4519_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            points_address1 <= zext_ln446_11_fu_4475_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            points_address1 <= zext_ln446_9_fu_4431_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            points_address1 <= zext_ln446_7_fu_4169_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            points_address1 <= zext_ln446_5_fu_4067_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            points_address1 <= zext_ln446_3_fu_3965_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            points_address1 <= zext_ln454_15_fu_3853_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            points_address1 <= zext_ln454_13_fu_3809_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            points_address1 <= zext_ln454_11_fu_3765_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            points_address1 <= zext_ln454_9_fu_3721_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            points_address1 <= zext_ln454_7_fu_3453_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            points_address1 <= zext_ln454_5_fu_3351_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            points_address1 <= zext_ln454_3_fu_3249_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address1 <= zext_ln446_1_fu_3147_p1(12 - 1 downto 0);
        elsif (((icmp_ln886_fu_2940_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            points_address1 <= zext_ln454_1_fu_3038_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            points_address1 <= zext_ln493_15_fu_2665_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            points_address1 <= zext_ln493_13_fu_2627_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            points_address1 <= zext_ln493_11_fu_2583_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            points_address1 <= zext_ln493_9_fu_2539_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            points_address1 <= zext_ln493_7_fu_2277_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            points_address1 <= zext_ln493_5_fu_2175_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            points_address1 <= zext_ln493_3_fu_2073_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address1 <= zext_ln493_fu_1922_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address1 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_address1;
        else 
            points_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2940_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln886_fu_2940_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce0;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_ce1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state29, icmp_ln886_fu_2940_p2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln886_fu_2940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln886_fu_2940_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            points_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_points_ce1;
        else 
            points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_fu_1430_p1 <= r_V_2_fu_1430_p10(25 - 1 downto 0);
    r_V_2_fu_1430_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_reg_4675),58));

    rbVal_constprop_o_assign_proc : process(ap_CS_fsm_state1, rbVal_constprop_i, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rbVal_constprop_o <= ap_const_lv32_40000000;
        elsif (((grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            rbVal_constprop_o <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o;
        else 
            rbVal_constprop_o <= rbVal_constprop_i;
        end if; 
    end process;


    rbVal_constprop_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld, ap_CS_fsm_state9)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rbVal_constprop_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rbVal_constprop_o_ap_vld <= grp_p_find_boundaries_and_starting_index_and_value_fu_1214_rbVal_constprop_o_ap_vld;
        else 
            rbVal_constprop_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_10_fu_4082_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF7));
    ret_11_fu_4128_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF8));
    ret_12_fu_4174_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF9));
    ret_13_fu_4202_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFA));
    ret_14_fu_4230_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFB));
    ret_15_fu_4258_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFC));
    ret_16_fu_4286_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFD));
    ret_17_fu_4314_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFE));
    ret_18_fu_4342_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FFF));
    ret_19_fu_2930_p0 <= right_bound_V_fu_314;
    ret_19_fu_2930_p1 <= ret_19_fu_2930_p0(12 - 1 downto 0);
    ret_1_fu_2934_p2 <= std_logic_vector(signed(sext_ln215_1_fu_2926_p1) + signed(ap_const_lv33_1));
    ret_21_fu_2994_p2 <= std_logic_vector(unsigned(trunc_ln1346_fu_2913_p1) + unsigned(ap_const_lv12_1));
    ret_22_fu_3162_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_2));
    ret_23_fu_3208_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_3));
    ret_24_fu_3264_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_4));
    ret_25_fu_3310_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_5));
    ret_26_fu_3366_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_6));
    ret_27_fu_3412_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_7));
    ret_28_fu_3458_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_8));
    ret_29_fu_3486_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_9));
    ret_30_fu_3514_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_A));
    ret_31_fu_3542_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_B));
    ret_32_fu_3570_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_C));
    ret_33_fu_3598_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_D));
    ret_34_fu_3626_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_E));
    ret_35_fu_3654_p2 <= std_logic_vector(unsigned(trunc_ln1346_reg_5042) + unsigned(ap_const_lv12_F));
    ret_36_fu_1848_p2 <= std_logic_vector(signed(sext_ln215_2_fu_1840_p1) + signed(ap_const_lv33_1FFFFFFF1));
    ret_37_fu_1927_p2 <= std_logic_vector(unsigned(ret_51_fu_1844_p1) + unsigned(ap_const_lv12_FF2));
    ret_38_fu_1986_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF3));
    ret_39_fu_2032_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF4));
    ret_40_fu_2088_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF5));
    ret_41_fu_2134_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF6));
    ret_42_fu_2190_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF7));
    ret_43_fu_2236_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF8));
    ret_44_fu_2282_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FF9));
    ret_45_fu_2310_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFA));
    ret_46_fu_2338_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFB));
    ret_47_fu_2366_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFC));
    ret_48_fu_2394_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFD));
    ret_49_fu_2422_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFE));
    ret_50_fu_2450_p2 <= std_logic_vector(unsigned(ret_51_reg_4816) + unsigned(ap_const_lv12_FFF));
    ret_51_fu_1844_p1 <= ap_phi_mux_lhs_5_phi_fu_1191_p8(12 - 1 downto 0);
    ret_5_fu_3103_p2 <= std_logic_vector(unsigned(ret_19_fu_2930_p1) + unsigned(ap_const_lv12_FF2));
    ret_6_fu_3878_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF3));
    ret_7_fu_3924_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF4));
    ret_8_fu_3980_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF5));
    ret_9_fu_4026_p2 <= std_logic_vector(unsigned(ret_19_reg_5060) + unsigned(ap_const_lv12_FF6));
    ret_V_6_fu_1418_p2 <= std_logic_vector(unsigned(y_V_fu_1396_p3) + unsigned(ap_const_lv25_1B00000));
    ret_V_7_fu_1412_p2 <= std_logic_vector(signed(sext_ln703_fu_1404_p1) - signed(sext_ln703_2_fu_1408_p1));
    ret_V_fu_1510_p2 <= std_logic_vector(unsigned(select_ln1148_1_fu_1497_p3) + unsigned(rhs_fu_1503_p3));
    ret_fu_2917_p2 <= std_logic_vector(signed(sext_ln215_fu_2909_p1) + signed(ap_const_lv33_10));
    rhs_fu_1503_p1 <= p_read;
    rhs_fu_1503_p3 <= (rhs_fu_1503_p1 & ap_const_lv20_0);
    select_ln1148_1_fu_1497_p3 <= 
        sub_ln1148_1_fu_1491_p2 when (tmp_11_reg_4685(0) = '1') else 
        tmp_13_reg_4701;
    select_ln1148_fu_1485_p3 <= 
        tmp_12_fu_1476_p4 when (tmp_11_reg_4685(0) = '1') else 
        tmp_13_reg_4701;
    select_ln893_1_fu_1689_p3 <= 
        ap_const_lv11_3FF when (p_Result_5_fu_1681_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln893_fu_2822_p3 <= 
        ap_const_lv11_3FF when (p_Result_s_fu_2814_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln896_1_fu_1611_p3 <= 
        icmp_ln899_1_fu_1585_p2 when (grp_fu_1319_p2(0) = '1') else 
        grp_fu_1325_p3;
    select_ln896_fu_2744_p3 <= 
        icmp_ln899_fu_2718_p2 when (grp_fu_1319_p2(0) = '1') else 
        grp_fu_1325_p3;
    select_ln908_2_fu_1619_p3 <= 
        select_ln896_1_fu_1611_p3 when (grp_fu_1333_p2(0) = '1') else 
        and_ln899_3_fu_1605_p2;
    select_ln908_fu_2752_p3 <= 
        select_ln896_fu_2744_p3 when (grp_fu_1333_p2(0) = '1') else 
        and_ln899_1_fu_2738_p2;
    sext_ln215_1_fu_2926_p0 <= right_bound_V_fu_314;
        sext_ln215_1_fu_2926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_1_fu_2926_p0),33));

        sext_ln215_2_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_lhs_5_phi_fu_1191_p8),33));

        sext_ln215_fu_2909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_reg_1201),33));

    sext_ln703_2_fu_1408_p0 <= p_read;
        sext_ln703_2_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_2_fu_1408_p0),33));

        sext_ln703_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_top),33));

        sext_ln878_fu_1857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(left_bound_V_fu_310),33));

    shl_ln1_fu_3053_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln2_fu_2946_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln3_fu_1877_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln446_10_fu_4235_p3 <= (ret_14_fu_4230_p2 & ap_const_lv4_0);
    shl_ln446_11_fu_4263_p3 <= (ret_15_fu_4258_p2 & ap_const_lv4_0);
    shl_ln446_12_fu_4291_p3 <= (ret_16_fu_4286_p2 & ap_const_lv4_0);
    shl_ln446_13_fu_4319_p3 <= (ret_17_fu_4314_p2 & ap_const_lv4_0);
    shl_ln446_14_fu_4347_p3 <= (ret_18_fu_4342_p2 & ap_const_lv4_0);
    shl_ln446_15_fu_4370_p3 <= (ret_19_reg_5060 & ap_const_lv4_0);
    shl_ln446_1_fu_3060_p3 <= (lhs_7_fu_3047_p2 & ap_const_lv4_0);
    shl_ln446_2_fu_3109_p3 <= (ret_5_fu_3103_p2 & ap_const_lv4_0);
    shl_ln446_3_fu_3883_p3 <= (ret_6_fu_3878_p2 & ap_const_lv4_0);
    shl_ln446_4_fu_3929_p3 <= (ret_7_fu_3924_p2 & ap_const_lv4_0);
    shl_ln446_5_fu_3985_p3 <= (ret_8_fu_3980_p2 & ap_const_lv4_0);
    shl_ln446_6_fu_4031_p3 <= (ret_9_fu_4026_p2 & ap_const_lv4_0);
    shl_ln446_7_fu_4087_p3 <= (ret_10_fu_4082_p2 & ap_const_lv4_0);
    shl_ln446_8_fu_4133_p3 <= (ret_11_fu_4128_p2 & ap_const_lv4_0);
    shl_ln446_9_fu_4179_p3 <= (ret_12_fu_4174_p2 & ap_const_lv4_0);
    shl_ln446_s_fu_4207_p3 <= (ret_13_fu_4202_p2 & ap_const_lv4_0);
    shl_ln454_10_fu_3519_p3 <= (ret_30_fu_3514_p2 & ap_const_lv4_0);
    shl_ln454_11_fu_3547_p3 <= (ret_31_fu_3542_p2 & ap_const_lv4_0);
    shl_ln454_12_fu_3575_p3 <= (ret_32_fu_3570_p2 & ap_const_lv4_0);
    shl_ln454_13_fu_3603_p3 <= (ret_33_fu_3598_p2 & ap_const_lv4_0);
    shl_ln454_14_fu_3631_p3 <= (ret_34_fu_3626_p2 & ap_const_lv4_0);
    shl_ln454_15_fu_3659_p3 <= (ret_35_fu_3654_p2 & ap_const_lv4_0);
    shl_ln454_1_fu_2953_p3 <= (trunc_ln1346_fu_2913_p1 & ap_const_lv4_0);
    shl_ln454_2_fu_3000_p3 <= (ret_21_fu_2994_p2 & ap_const_lv4_0);
    shl_ln454_3_fu_3167_p3 <= (ret_22_fu_3162_p2 & ap_const_lv4_0);
    shl_ln454_4_fu_3213_p3 <= (ret_23_fu_3208_p2 & ap_const_lv4_0);
    shl_ln454_5_fu_3269_p3 <= (ret_24_fu_3264_p2 & ap_const_lv4_0);
    shl_ln454_6_fu_3315_p3 <= (ret_25_fu_3310_p2 & ap_const_lv4_0);
    shl_ln454_7_fu_3371_p3 <= (ret_26_fu_3366_p2 & ap_const_lv4_0);
    shl_ln454_8_fu_3417_p3 <= (ret_27_fu_3412_p2 & ap_const_lv4_0);
    shl_ln454_9_fu_3463_p3 <= (ret_28_fu_3458_p2 & ap_const_lv4_0);
    shl_ln454_s_fu_3491_p3 <= (ret_29_fu_3486_p2 & ap_const_lv4_0);
    shl_ln471_1_fu_1776_p3 <= (trunc_ln471_fu_1773_p1 & ap_const_lv4_0);
    shl_ln493_10_fu_2343_p3 <= (ret_46_fu_2338_p2 & ap_const_lv4_0);
    shl_ln493_11_fu_2371_p3 <= (ret_47_fu_2366_p2 & ap_const_lv4_0);
    shl_ln493_12_fu_2399_p3 <= (ret_48_fu_2394_p2 & ap_const_lv4_0);
    shl_ln493_13_fu_2427_p3 <= (ret_49_fu_2422_p2 & ap_const_lv4_0);
    shl_ln493_14_fu_2455_p3 <= (ret_50_fu_2450_p2 & ap_const_lv4_0);
    shl_ln493_15_fu_2478_p3 <= (ret_51_reg_4816 & ap_const_lv4_0);
    shl_ln493_1_fu_1884_p3 <= (add_ln1461_fu_1871_p2 & ap_const_lv4_0);
    shl_ln493_2_fu_1933_p3 <= (ret_37_fu_1927_p2 & ap_const_lv4_0);
    shl_ln493_3_fu_1991_p3 <= (ret_38_fu_1986_p2 & ap_const_lv4_0);
    shl_ln493_4_fu_2037_p3 <= (ret_39_fu_2032_p2 & ap_const_lv4_0);
    shl_ln493_5_fu_2093_p3 <= (ret_40_fu_2088_p2 & ap_const_lv4_0);
    shl_ln493_6_fu_2139_p3 <= (ret_41_fu_2134_p2 & ap_const_lv4_0);
    shl_ln493_7_fu_2195_p3 <= (ret_42_fu_2190_p2 & ap_const_lv4_0);
    shl_ln493_8_fu_2241_p3 <= (ret_43_fu_2236_p2 & ap_const_lv4_0);
    shl_ln493_9_fu_2287_p3 <= (ret_44_fu_2282_p2 & ap_const_lv4_0);
    shl_ln493_s_fu_2315_p3 <= (ret_45_fu_2310_p2 & ap_const_lv4_0);
    shl_ln899_1_fu_1567_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_1303_p2(31-1 downto 0)))));
    shl_ln899_fu_2700_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & grp_fu_1303_p2(31-1 downto 0)))));
    shl_ln909_1_fu_1639_p2 <= std_logic_vector(shift_left(unsigned(zext_ln909_3_fu_1631_p1),to_integer(unsigned('0' & zext_ln909_1_fu_1635_p1(31-1 downto 0)))));
    shl_ln909_fu_2772_p2 <= std_logic_vector(shift_left(unsigned(zext_ln909_2_fu_2764_p1),to_integer(unsigned('0' & zext_ln909_fu_2768_p1(31-1 downto 0)))));
    shl_ln_fu_1766_p3 <= (i_offset & ap_const_lv13_0);
    start_index_V_2_fu_1816_p2 <= std_logic_vector(unsigned(start_index_V_3_fu_302) + unsigned(ap_const_lv32_1));
    start_index_V_fu_2899_p2 <= std_logic_vector(unsigned(start_index_V_1_load_reg_4722) + unsigned(ap_const_lv32_FFFFFFFF));
    start_value_V_1_fu_1830_p2 <= std_logic_vector(unsigned(z_bits_fu_1826_p1) - unsigned(projectionToRow_V_reg_4712));
    sub_ln1148_1_fu_1491_p2 <= std_logic_vector(unsigned(ap_const_lv52_0) - unsigned(select_ln1148_fu_1485_p3));
    sub_ln1148_fu_1471_p2 <= std_logic_vector(unsigned(ap_const_lv185_lc_1) - unsigned(mul_ln1148_reg_4696));
    sub_ln897_1_fu_1551_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln897_1_fu_1547_p1));
    sub_ln897_fu_2684_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln897_fu_2680_p1));
    sub_ln915_1_fu_1716_p2 <= std_logic_vector(unsigned(ap_const_lv11_C) - unsigned(trunc_ln893_1_reg_4772));
    sub_ln915_fu_2849_p2 <= std_logic_vector(unsigned(ap_const_lv11_C) - unsigned(trunc_ln893_reg_5004));
    tmp_10_fu_4013_p3 <= (lshr_ln446_4_fu_3998_p4 & add_ln446_20_fu_4008_p2);
    tmp_12_fu_1476_p4 <= sub_ln1148_reg_4707(182 downto 131);
    tmp_14_fu_4059_p3 <= (lshr_ln446_5_fu_4044_p4 & add_ln446_21_fu_4054_p2);
    tmp_16_fu_4115_p3 <= (lshr_ln446_6_fu_4100_p4 & add_ln446_22_fu_4110_p2);
    tmp_17_fu_2724_p3 <= grp_fu_1303_p2(31 downto 31);
    tmp_18_fu_4161_p3 <= (lshr_ln446_7_fu_4146_p4 & add_ln446_23_fu_4156_p2);
    tmp_19_fu_4407_p3 <= (lshr_ln446_8_reg_5338 & add_ln446_24_fu_4402_p2);
    tmp_1_fu_1803_p3 <= (lshr_ln_fu_1790_p4 & trunc_ln471_1_fu_1800_p1);
    tmp_20_fu_4424_p3 <= (lshr_ln446_9_reg_5343 & add_ln446_25_fu_4419_p2);
    tmp_21_fu_4451_p3 <= (lshr_ln446_s_reg_5348 & add_ln446_26_fu_4446_p2);
    tmp_22_fu_4468_p3 <= (lshr_ln446_10_reg_5353 & add_ln446_27_fu_4463_p2);
    tmp_23_fu_4495_p3 <= (lshr_ln446_11_reg_5358 & add_ln446_28_fu_4490_p2);
    tmp_24_fu_4512_p3 <= (lshr_ln446_12_reg_5363 & add_ln446_29_fu_4507_p2);
    tmp_25_fu_4539_p3 <= (lshr_ln446_13_reg_5368 & add_ln446_30_fu_4534_p2);
    tmp_26_fu_4551_p3 <= (lshr_ln446_14_reg_5373 & empty_reg_5152);
    tmp_27_fu_2981_p3 <= (lshr_ln2_fu_2967_p4 & trunc_ln454_fu_2977_p1);
    tmp_28_fu_3030_p3 <= (lshr_ln454_1_fu_3014_p4 & add_ln454_16_fu_3024_p2);
    tmp_29_fu_3195_p3 <= (lshr_ln454_2_fu_3180_p4 & add_ln454_17_fu_3190_p2);
    tmp_2_fu_3090_p3 <= (lshr_ln1_fu_3074_p4 & add_ln446_16_fu_3084_p2);
    tmp_30_fu_3241_p3 <= (lshr_ln454_3_fu_3226_p4 & add_ln454_18_fu_3236_p2);
    tmp_31_fu_3297_p3 <= (lshr_ln454_4_fu_3282_p4 & add_ln454_19_fu_3292_p2);
    tmp_32_fu_3343_p3 <= (lshr_ln454_5_fu_3328_p4 & add_ln454_20_fu_3338_p2);
    tmp_33_fu_3399_p3 <= (lshr_ln454_6_fu_3384_p4 & add_ln454_21_fu_3394_p2);
    tmp_34_fu_3445_p3 <= (lshr_ln454_7_fu_3430_p4 & add_ln454_22_fu_3440_p2);
    tmp_35_fu_3697_p3 <= (lshr_ln454_8_reg_5228 & add_ln454_23_fu_3692_p2);
    tmp_37_fu_3714_p3 <= (lshr_ln454_9_reg_5233 & add_ln454_24_fu_3709_p2);
    tmp_38_fu_3741_p3 <= (lshr_ln454_s_reg_5238 & add_ln454_25_fu_3736_p2);
    tmp_39_fu_3758_p3 <= (lshr_ln454_10_reg_5243 & add_ln454_26_fu_3753_p2);
    tmp_3_fu_2859_p3 <= (p_Result_9_reg_4744 & add_ln915_fu_2854_p2);
    tmp_40_fu_3785_p3 <= (lshr_ln454_11_reg_5248 & add_ln454_27_fu_3780_p2);
    tmp_41_fu_3802_p3 <= (lshr_ln454_12_reg_5253 & add_ln454_28_fu_3797_p2);
    tmp_42_fu_3829_p3 <= (lshr_ln454_13_reg_5258 & add_ln454_29_fu_3824_p2);
    tmp_43_fu_3846_p3 <= (lshr_ln454_14_reg_5263 & add_ln454_30_fu_3841_p2);
    tmp_44_fu_1914_p3 <= (lshr_ln3_fu_1898_p4 & add_ln493_16_fu_1908_p2);
    tmp_45_fu_1963_p3 <= (lshr_ln493_1_fu_1947_p4 & add_ln493_17_fu_1957_p2);
    tmp_46_fu_2019_p3 <= (lshr_ln493_2_fu_2004_p4 & add_ln493_18_fu_2014_p2);
    tmp_47_fu_2065_p3 <= (lshr_ln493_3_fu_2050_p4 & add_ln493_19_fu_2060_p2);
    tmp_48_fu_2121_p3 <= (lshr_ln493_4_fu_2106_p4 & add_ln493_20_fu_2116_p2);
    tmp_49_fu_2167_p3 <= (lshr_ln493_5_fu_2152_p4 & add_ln493_21_fu_2162_p2);
    tmp_4_fu_1726_p3 <= (p_Result_13_reg_4757 & add_ln915_1_fu_1721_p2);
    tmp_50_fu_2223_p3 <= (lshr_ln493_6_fu_2208_p4 & add_ln493_22_fu_2218_p2);
    tmp_51_fu_2269_p3 <= (lshr_ln493_7_fu_2254_p4 & add_ln493_23_fu_2264_p2);
    tmp_52_fu_2515_p3 <= (lshr_ln493_8_reg_4914 & add_ln493_24_fu_2510_p2);
    tmp_53_fu_2532_p3 <= (lshr_ln493_9_reg_4919 & add_ln493_25_fu_2527_p2);
    tmp_54_fu_2559_p3 <= (lshr_ln493_s_reg_4924 & add_ln493_26_fu_2554_p2);
    tmp_55_fu_2576_p3 <= (lshr_ln493_10_reg_4929 & add_ln493_27_fu_2571_p2);
    tmp_56_fu_2603_p3 <= (lshr_ln493_11_reg_4934 & add_ln493_28_fu_2598_p2);
    tmp_57_fu_2620_p3 <= (lshr_ln493_12_reg_4939 & add_ln493_29_fu_2615_p2);
    tmp_58_fu_2647_p3 <= (lshr_ln493_13_reg_4944 & add_ln493_30_fu_2642_p2);
    tmp_59_fu_2659_p3 <= (lshr_ln493_14_reg_4949 & trunc_ln1461_reg_4838);
    tmp_68_fu_1591_p3 <= grp_fu_1303_p2(31 downto 31);
    tmp_7_fu_3139_p3 <= (lshr_ln446_1_fu_3123_p4 & add_ln446_17_fu_3133_p2);
    tmp_8_fu_3911_p3 <= (lshr_ln446_2_fu_3896_p4 & add_ln446_18_fu_3906_p2);
    tmp_9_fu_3957_p3 <= (lshr_ln446_3_fu_3942_p4 & add_ln446_19_fu_3952_p2);
    tmp_s_fu_1444_p3 <= (r_V_2_reg_4680 & ap_const_lv20_0);
    trunc_ln1346_fu_2913_p1 <= lhs_reg_1201(12 - 1 downto 0);
    trunc_ln1461_fu_1867_p1 <= ap_phi_mux_lhs_5_phi_fu_1191_p8(9 - 1 downto 0);
    trunc_ln446_10_fu_4480_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_11_fu_4485_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_12_fu_4524_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_13_fu_4529_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_14_fu_4562_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_15_fu_4567_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_1_fu_3873_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_2_fu_3970_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_3_fu_3975_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_4_fu_4072_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_5_fu_4077_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_6_fu_4392_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_7_fu_4397_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_8_fu_4436_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln446_9_fu_4441_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln446_fu_3868_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_10_fu_3731_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_11_fu_3770_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_12_fu_3775_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_13_fu_3814_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_14_fu_3819_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_15_fu_3858_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_16_fu_3863_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_1_fu_3152_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_2_fu_3157_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_3_fu_3254_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_4_fu_3259_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_5_fu_3356_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_6_fu_3361_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_7_fu_3682_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_8_fu_3687_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln454_9_fu_3726_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln454_fu_2977_p1 <= lhs_reg_1201(9 - 1 downto 0);
    trunc_ln471_1_fu_1800_p1 <= start_index_V_3_fu_302(9 - 1 downto 0);
    trunc_ln471_fu_1773_p1 <= start_index_V_3_fu_302(12 - 1 downto 0);
    trunc_ln493_10_fu_2588_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_11_fu_2593_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_12_fu_2632_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_13_fu_2637_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_14_fu_2670_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_15_fu_2675_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_1_fu_1981_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_2_fu_2078_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_3_fu_2083_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_4_fu_2180_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_5_fu_2185_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_6_fu_2500_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_7_fu_2505_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_8_fu_2544_p1 <= points_q0(96 - 1 downto 0);
    trunc_ln493_9_fu_2549_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln493_fu_1976_p1 <= points_q1(96 - 1 downto 0);
    trunc_ln4_fu_2830_p4 <= m_3_fu_2798_p2(52 downto 1);
    trunc_ln5_fu_1697_p4 <= m_8_fu_1665_p2(52 downto 1);
    trunc_ln731_fu_1392_p1 <= get_radiiradii_q0(5 - 1 downto 0);
    trunc_ln893_1_fu_1627_p1 <= grp_fu_1289_p3(11 - 1 downto 0);
    trunc_ln893_fu_2760_p1 <= grp_fu_1289_p3(11 - 1 downto 0);
    trunc_ln897_1_fu_1547_p1 <= grp_fu_1297_p2(6 - 1 downto 0);
    trunc_ln897_fu_2680_p1 <= grp_fu_1297_p2(6 - 1 downto 0);
    xor_ln899_1_fu_1599_p2 <= (tmp_68_fu_1591_p3 xor ap_const_lv1_1);
    xor_ln899_fu_2732_p2 <= (tmp_17_fu_2724_p3 xor ap_const_lv1_1);
    y_V_fu_1396_p3 <= (trunc_ln731_fu_1392_p1 & ap_const_lv20_0);
    z_bits_fu_1826_p1 <= points_q0(32 - 1 downto 0);
    zext_ln113_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_offset),64));
    zext_ln446_10_fu_4458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_4451_p3),64));
    zext_ln446_11_fu_4475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_4468_p3),64));
    zext_ln446_12_fu_4502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_4495_p3),64));
    zext_ln446_13_fu_4519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_4512_p3),64));
    zext_ln446_14_fu_4546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_4539_p3),64));
    zext_ln446_15_fu_4557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_4551_p3),64));
    zext_ln446_1_fu_3147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_3139_p3),64));
    zext_ln446_2_fu_3919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_3911_p3),64));
    zext_ln446_3_fu_3965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_3957_p3),64));
    zext_ln446_4_fu_4021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_4013_p3),64));
    zext_ln446_5_fu_4067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_4059_p3),64));
    zext_ln446_6_fu_4123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_4115_p3),64));
    zext_ln446_7_fu_4169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_4161_p3),64));
    zext_ln446_8_fu_4414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_4407_p3),64));
    zext_ln446_9_fu_4431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_4424_p3),64));
    zext_ln446_fu_3098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_3090_p3),64));
    zext_ln454_10_fu_3748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_3741_p3),64));
    zext_ln454_11_fu_3765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_3758_p3),64));
    zext_ln454_12_fu_3792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_3785_p3),64));
    zext_ln454_13_fu_3809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_3802_p3),64));
    zext_ln454_14_fu_3836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_3829_p3),64));
    zext_ln454_15_fu_3853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_3846_p3),64));
    zext_ln454_1_fu_3038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_3030_p3),64));
    zext_ln454_2_fu_3203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_3195_p3),64));
    zext_ln454_3_fu_3249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_3241_p3),64));
    zext_ln454_4_fu_3305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_3297_p3),64));
    zext_ln454_5_fu_3351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_3343_p3),64));
    zext_ln454_6_fu_3407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_3399_p3),64));
    zext_ln454_7_fu_3453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_3445_p3),64));
    zext_ln454_8_fu_3704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_3697_p3),64));
    zext_ln454_9_fu_3721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_3714_p3),64));
    zext_ln454_fu_2989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_2981_p3),64));
    zext_ln471_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1803_p3),64));
    zext_ln493_10_fu_2566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_2559_p3),64));
    zext_ln493_11_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_2576_p3),64));
    zext_ln493_12_fu_2610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_2603_p3),64));
    zext_ln493_13_fu_2627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_2620_p3),64));
    zext_ln493_14_fu_2654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_2647_p3),64));
    zext_ln493_15_fu_2665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_2659_p3),64));
    zext_ln493_1_fu_1971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_1963_p3),64));
    zext_ln493_2_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_2019_p3),64));
    zext_ln493_3_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_2065_p3),64));
    zext_ln493_4_fu_2129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_2121_p3),64));
    zext_ln493_5_fu_2175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_2167_p3),64));
    zext_ln493_6_fu_2231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_2223_p3),64));
    zext_ln493_7_fu_2277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_2269_p3),64));
    zext_ln493_8_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_2515_p3),64));
    zext_ln493_9_fu_2539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_2532_p3),64));
    zext_ln493_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_1914_p3),64));
    zext_ln897_1_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_1_fu_1551_p2),32));
    zext_ln897_fu_2690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_fu_2684_p2),32));
    zext_ln908_1_fu_1645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1349_p2),64));
    zext_ln908_fu_2778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1349_p2),64));
    zext_ln909_1_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1343_p2),64));
    zext_ln909_2_fu_2764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1281),64));
    zext_ln909_3_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1281),64));
    zext_ln909_fu_2768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1343_p2),64));
    zext_ln911_1_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln908_2_reg_4767),64));
    zext_ln911_fu_2795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln908_reg_4999),64));
    zext_ln912_1_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_13_reg_4777),64));
    zext_ln912_fu_2846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_11_reg_5009),64));
end behav;
