// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_add_patch9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches,
        n_patches_ap_vld,
        n_patches_read,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        wp_superpoints_address0,
        wp_superpoints_ce0,
        wp_superpoints_q0,
        wp_superpoints_address1,
        wp_superpoints_ce1,
        wp_superpoints_q1,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        grp_fu_1069_p_din0,
        grp_fu_1069_p_din1,
        grp_fu_1069_p_dout0,
        grp_fu_1069_p_ce,
        grp_fu_1073_p_din0,
        grp_fu_1073_p_din1,
        grp_fu_1073_p_dout0,
        grp_fu_1073_p_ce
);

parameter    ap_ST_fsm_state1 = 78'd1;
parameter    ap_ST_fsm_state2 = 78'd2;
parameter    ap_ST_fsm_state3 = 78'd4;
parameter    ap_ST_fsm_state4 = 78'd8;
parameter    ap_ST_fsm_state5 = 78'd16;
parameter    ap_ST_fsm_state6 = 78'd32;
parameter    ap_ST_fsm_state7 = 78'd64;
parameter    ap_ST_fsm_state8 = 78'd128;
parameter    ap_ST_fsm_state9 = 78'd256;
parameter    ap_ST_fsm_state10 = 78'd512;
parameter    ap_ST_fsm_state11 = 78'd1024;
parameter    ap_ST_fsm_state12 = 78'd2048;
parameter    ap_ST_fsm_state13 = 78'd4096;
parameter    ap_ST_fsm_state14 = 78'd8192;
parameter    ap_ST_fsm_state15 = 78'd16384;
parameter    ap_ST_fsm_state16 = 78'd32768;
parameter    ap_ST_fsm_state17 = 78'd65536;
parameter    ap_ST_fsm_state18 = 78'd131072;
parameter    ap_ST_fsm_state19 = 78'd262144;
parameter    ap_ST_fsm_state20 = 78'd524288;
parameter    ap_ST_fsm_state21 = 78'd1048576;
parameter    ap_ST_fsm_state22 = 78'd2097152;
parameter    ap_ST_fsm_state23 = 78'd4194304;
parameter    ap_ST_fsm_state24 = 78'd8388608;
parameter    ap_ST_fsm_state25 = 78'd16777216;
parameter    ap_ST_fsm_state26 = 78'd33554432;
parameter    ap_ST_fsm_state27 = 78'd67108864;
parameter    ap_ST_fsm_state28 = 78'd134217728;
parameter    ap_ST_fsm_state29 = 78'd268435456;
parameter    ap_ST_fsm_state30 = 78'd536870912;
parameter    ap_ST_fsm_state31 = 78'd1073741824;
parameter    ap_ST_fsm_state32 = 78'd2147483648;
parameter    ap_ST_fsm_state33 = 78'd4294967296;
parameter    ap_ST_fsm_state34 = 78'd8589934592;
parameter    ap_ST_fsm_state35 = 78'd17179869184;
parameter    ap_ST_fsm_state36 = 78'd34359738368;
parameter    ap_ST_fsm_state37 = 78'd68719476736;
parameter    ap_ST_fsm_state38 = 78'd137438953472;
parameter    ap_ST_fsm_state39 = 78'd274877906944;
parameter    ap_ST_fsm_state40 = 78'd549755813888;
parameter    ap_ST_fsm_state41 = 78'd1099511627776;
parameter    ap_ST_fsm_state42 = 78'd2199023255552;
parameter    ap_ST_fsm_state43 = 78'd4398046511104;
parameter    ap_ST_fsm_state44 = 78'd8796093022208;
parameter    ap_ST_fsm_state45 = 78'd17592186044416;
parameter    ap_ST_fsm_state46 = 78'd35184372088832;
parameter    ap_ST_fsm_state47 = 78'd70368744177664;
parameter    ap_ST_fsm_state48 = 78'd140737488355328;
parameter    ap_ST_fsm_state49 = 78'd281474976710656;
parameter    ap_ST_fsm_state50 = 78'd562949953421312;
parameter    ap_ST_fsm_state51 = 78'd1125899906842624;
parameter    ap_ST_fsm_state52 = 78'd2251799813685248;
parameter    ap_ST_fsm_state53 = 78'd4503599627370496;
parameter    ap_ST_fsm_state54 = 78'd9007199254740992;
parameter    ap_ST_fsm_state55 = 78'd18014398509481984;
parameter    ap_ST_fsm_state56 = 78'd36028797018963968;
parameter    ap_ST_fsm_state57 = 78'd72057594037927936;
parameter    ap_ST_fsm_state58 = 78'd144115188075855872;
parameter    ap_ST_fsm_state59 = 78'd288230376151711744;
parameter    ap_ST_fsm_state60 = 78'd576460752303423488;
parameter    ap_ST_fsm_state61 = 78'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 78'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 78'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 78'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 78'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 78'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 78'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 78'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 78'd295147905179352825856;
parameter    ap_ST_fsm_pp1_stage0 = 78'd590295810358705651712;
parameter    ap_ST_fsm_state72 = 78'd1180591620717411303424;
parameter    ap_ST_fsm_pp2_stage0 = 78'd2361183241434822606848;
parameter    ap_ST_fsm_state76 = 78'd4722366482869645213696;
parameter    ap_ST_fsm_state77 = 78'd9444732965739290427392;
parameter    ap_ST_fsm_pp3_stage0 = 78'd18889465931478580854784;
parameter    ap_ST_fsm_state80 = 78'd37778931862957161709568;
parameter    ap_ST_fsm_pp4_stage0 = 78'd75557863725914323419136;
parameter    ap_ST_fsm_state84 = 78'd151115727451828646838272;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] n_patches;
output   n_patches_ap_vld;
input  [7:0] n_patches_read;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [7:0] wp_superpoints_address0;
output   wp_superpoints_ce0;
input  [31:0] wp_superpoints_q0;
output  [7:0] wp_superpoints_address1;
output   wp_superpoints_ce1;
input  [31:0] wp_superpoints_q1;
output  [6:0] wp_parameters_address0;
output   wp_parameters_ce0;
input  [31:0] wp_parameters_q0;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [63:0] grp_fu_1069_p_din0;
output  [65:0] grp_fu_1069_p_din1;
input  [128:0] grp_fu_1069_p_dout0;
output   grp_fu_1069_p_ce;
output  [63:0] grp_fu_1073_p_din0;
output  [65:0] grp_fu_1073_p_din1;
input  [128:0] grp_fu_1073_p_dout0;
output   grp_fu_1073_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches;
reg n_patches_ap_vld;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[7:0] wp_superpoints_address0;
reg wp_superpoints_ce0;
reg[7:0] wp_superpoints_address1;
reg wp_superpoints_ce1;
reg[6:0] wp_parameters_address0;
reg wp_parameters_ce0;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;

(* fsm_encoding = "none" *) reg   [77:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten29_reg_357;
reg   [2:0] a_4_reg_368;
reg   [4:0] b_6_reg_379;
reg   [6:0] indvar_flatten51_reg_390;
reg   [2:0] a_5_reg_401;
reg   [5:0] indvar_flatten37_reg_412;
reg   [2:0] b_7_reg_423;
reg   [2:0] c_4_reg_434;
reg   [6:0] indvar_flatten_reg_445;
reg   [2:0] a_reg_456;
reg   [4:0] b_reg_467;
reg   [6:0] indvar_flatten21_reg_478;
reg   [5:0] indvar_flatten7_reg_489;
reg   [2:0] a_3_reg_500;
reg   [2:0] b_5_reg_511;
reg   [2:0] c_reg_522;
reg   [31:0] reg_544;
wire    ap_CS_fsm_state4;
reg   [0:0] icmp_ln374_1_reg_1624;
wire    ap_CS_fsm_state66;
reg   [0:0] icmp_ln874_reg_1676;
wire   [5:0] empty_fu_548_p1;
reg   [5:0] empty_reg_1585;
wire   [0:0] icmp_ln321_fu_556_p2;
reg   [0:0] icmp_ln321_reg_1590;
wire   [8:0] sub_fu_562_p2;
reg   [8:0] sub_reg_1594;
reg   [31:0] patches_parameters_load_reg_1605;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln374_fu_612_p2;
reg   [0:0] icmp_ln374_reg_1610;
wire  signed [18:0] sext_ln376_fu_625_p1;
reg  signed [18:0] sext_ln376_reg_1614;
wire  signed [16:0] sext_ln374_fu_629_p1;
reg  signed [16:0] sext_ln374_reg_1619;
wire   [0:0] icmp_ln374_1_fu_637_p2;
wire    ap_CS_fsm_state3;
wire   [7:0] i_14_fu_642_p2;
reg   [7:0] i_14_reg_1628;
reg   [7:0] wp_superpoints_addr_6_reg_1638;
wire  signed [18:0] add_ln376_fu_707_p2;
reg  signed [18:0] add_ln376_reg_1643;
wire   [128:0] zext_ln376_1_fu_735_p1;
reg   [54:0] tmp_60_reg_1659;
wire    ap_CS_fsm_state5;
wire   [56:0] grp_fu_726_p2;
reg   [56:0] urem_ln376_reg_1665;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire   [0:0] icmp_ln874_fu_797_p2;
wire    ap_CS_fsm_state65;
wire   [128:0] zext_ln377_fu_812_p1;
wire   [7:0] trunc_ln377_fu_822_p1;
reg   [7:0] trunc_ln377_reg_1685;
reg   [7:0] udiv_ln4_cast_reg_1690;
reg   [5:0] tmp_64_reg_1695;
wire    ap_CS_fsm_state67;
wire   [0:0] icmp_ln387_fu_900_p2;
reg   [0:0] icmp_ln387_reg_1708;
wire    ap_CS_fsm_state69;
wire   [10:0] add_ln401_fu_920_p2;
reg   [10:0] add_ln401_reg_1712;
wire   [6:0] add_ln390_1_fu_926_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state70_pp1_stage0_iter0;
wire    ap_block_state71_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln390_fu_932_p2;
reg   [0:0] icmp_ln390_reg_1723;
wire   [4:0] select_ln390_fu_950_p3;
reg   [4:0] select_ln390_reg_1727;
wire   [2:0] select_ln390_1_fu_958_p3;
reg   [2:0] select_ln390_1_reg_1732;
wire   [4:0] add_ln396_fu_1018_p2;
wire   [6:0] add_ln406_1_fu_1058_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state73_pp2_stage0_iter0;
wire    ap_block_state74_pp2_stage0_iter1;
wire    ap_block_state75_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln406_fu_1064_p2;
reg   [0:0] icmp_ln406_reg_1758;
reg   [0:0] icmp_ln406_reg_1758_pp2_iter1_reg;
wire   [0:0] icmp_ln412_fu_1076_p2;
reg   [0:0] icmp_ln412_reg_1762;
wire   [2:0] select_ln406_1_fu_1082_p3;
reg   [2:0] select_ln406_1_reg_1769;
wire   [5:0] select_ln412_2_fu_1096_p3;
wire   [2:0] select_ln412_1_fu_1178_p3;
reg   [2:0] select_ln412_1_reg_1781;
reg    ap_enable_reg_pp2_iter1;
wire   [11:0] add_ln423_4_fu_1281_p2;
reg   [11:0] add_ln423_4_reg_1791;
wire   [2:0] add_ln418_fu_1287_p2;
wire   [6:0] add_ln325_1_fu_1307_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state78_pp3_stage0_iter0;
wire    ap_block_state79_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln325_fu_1313_p2;
reg   [0:0] icmp_ln325_reg_1806;
wire   [2:0] select_ln325_1_fu_1339_p3;
reg   [2:0] select_ln325_1_reg_1810;
wire   [7:0] add_ln336_fu_1363_p2;
reg   [7:0] add_ln336_reg_1815;
wire   [4:0] add_ln331_fu_1399_p2;
wire   [6:0] add_ln341_2_fu_1409_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state81_pp4_stage0_iter0;
wire    ap_block_state82_pp4_stage0_iter1;
wire    ap_block_state83_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln341_fu_1415_p2;
reg   [0:0] icmp_ln341_reg_1840;
reg   [0:0] icmp_ln341_reg_1840_pp4_iter1_reg;
wire   [0:0] icmp_ln347_fu_1421_p2;
reg   [0:0] icmp_ln347_reg_1844;
wire   [5:0] select_ln347_2_fu_1433_p3;
wire   [2:0] select_ln341_1_fu_1454_p3;
reg   [2:0] select_ln341_1_reg_1857;
reg    ap_enable_reg_pp4_iter1;
wire   [2:0] select_ln347_1_fu_1509_p3;
reg   [2:0] select_ln347_1_reg_1862;
wire   [63:0] zext_ln358_4_fu_1567_p1;
reg   [63:0] zext_ln358_4_reg_1867;
wire   [2:0] add_ln353_fu_1572_p2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state70;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state72;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_condition_pp2_exit_iter1_state74;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state78;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state80;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_flush_enable;
reg    ap_condition_pp4_exit_iter1_state82;
reg    ap_enable_reg_pp4_iter2;
wire    grp_encodeCoordinates_fu_533_ap_ready;
reg   [31:0] grp_encodeCoordinates_fu_533_phi;
reg   [31:0] grp_encodeCoordinates_fu_533_z;
wire   [63:0] grp_encodeCoordinates_fu_533_ap_return;
reg   [7:0] i_reg_346;
wire    ap_CS_fsm_state68;
wire   [0:0] icmp_ln874_4_fu_885_p2;
reg   [2:0] ap_phi_mux_a_4_phi_fu_372_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_a_5_phi_fu_405_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_b_7_phi_fu_427_p4;
reg   [2:0] ap_phi_mux_a_phi_fu_460_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] ap_phi_mux_a_3_phi_fu_504_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_b_5_phi_fu_515_p4;
wire   [63:0] p_cast_fu_600_p1;
wire   [63:0] tmp_44_fu_662_p3;
wire   [63:0] tmp_45_fu_677_p3;
wire   [63:0] tmp_46_fu_784_p3;
wire   [63:0] zext_ln377_1_fu_876_p1;
wire   [63:0] zext_ln401_6_fu_996_p1;
wire   [63:0] zext_ln401_7_fu_1013_p1;
wire   [63:0] zext_ln401_5_fu_1053_p1;
wire   [63:0] zext_ln423_6_fu_1276_p1;
wire   [63:0] zext_ln423_7_fu_1293_p1;
wire   [63:0] zext_ln336_2_fu_1377_p1;
wire   [63:0] zext_ln336_3_fu_1394_p1;
wire   [63:0] zext_ln336_1_fu_1405_p1;
wire   [7:0] zext_ln431_fu_1302_p1;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state84;
wire   [8:0] zext_ln321_fu_552_p1;
wire   [4:0] empty_129_fu_568_p1;
wire   [11:0] tmp_cast_fu_572_p3;
wire   [11:0] tmp_s_fu_580_p3;
wire   [11:0] empty_130_fu_588_p2;
wire   [11:0] empty_131_fu_594_p2;
wire   [17:0] shl_ln376_1_fu_618_p3;
wire   [15:0] tmp_fu_605_p3;
wire   [31:0] zext_ln374_fu_633_p1;
wire   [12:0] tmp_43_fu_648_p3;
wire   [12:0] or_ln874_fu_656_p2;
wire   [12:0] or_ln874_1_fu_671_p2;
wire   [14:0] shl_ln_fu_686_p3;
wire   [16:0] zext_ln376_fu_694_p1;
wire   [16:0] add_ln376_1_fu_698_p2;
wire  signed [18:0] sext_ln376_1_fu_703_p1;
wire   [11:0] trunc_ln_fu_712_p4;
wire  signed [56:0] grp_fu_726_p0;
wire   [3:0] grp_fu_726_p1;
wire  signed [63:0] sext_ln376_2_fu_732_p1;
wire   [63:0] grp_fu_739_p0;
wire   [65:0] grp_fu_739_p1;
wire   [128:0] grp_fu_739_p2;
wire   [56:0] tmp_61_fu_758_p3;
wire   [59:0] zext_ln376_3_fu_765_p1;
wire   [59:0] zext_ln376_2_fu_755_p1;
wire   [59:0] add_ln376_2_fu_769_p2;
wire   [59:0] zext_ln376_4_fu_775_p1;
wire   [59:0] add_ln376_3_fu_778_p2;
wire   [31:0] trunc_ln69_fu_793_p1;
wire   [18:0] or_ln377_fu_803_p2;
wire  signed [63:0] sext_ln377_fu_808_p1;
wire   [63:0] grp_fu_816_p0;
wire   [65:0] grp_fu_816_p1;
wire   [128:0] grp_fu_816_p2;
wire   [7:0] p_shl5_cast_fu_845_p3;
wire   [7:0] add_ln377_fu_852_p2;
wire   [7:0] add_ln377_1_fu_857_p2;
wire   [11:0] tmp_150_cast_fu_862_p3;
wire   [11:0] or_ln377_1_fu_870_p2;
wire   [31:0] trunc_ln69_4_fu_881_p1;
wire   [2:0] tmp_65_fu_891_p4;
wire   [9:0] tmp_48_fu_909_p3;
wire   [10:0] zext_ln401_1_fu_916_p1;
wire   [10:0] zext_ln401_fu_906_p1;
wire   [0:0] icmp_ln396_fu_944_p2;
wire   [2:0] add_ln390_fu_938_p2;
wire   [6:0] tmp_49_fu_966_p3;
wire   [7:0] tmp_154_cast_fu_974_p1;
wire   [7:0] zext_ln401_3_fu_978_p1;
wire   [7:0] add_ln401_3_fu_982_p2;
wire   [8:0] tmp_66_fu_988_p3;
wire   [7:0] shl_ln401_fu_1001_p2;
wire   [7:0] or_ln401_fu_1007_p2;
wire   [7:0] trunc_ln401_fu_1024_p1;
wire   [7:0] zext_ln401_2_fu_1027_p1;
wire   [7:0] add_ln401_1_fu_1030_p2;
wire   [11:0] tmp_153_cast_fu_1036_p3;
wire   [11:0] zext_ln401_4_fu_1044_p1;
wire   [11:0] add_ln401_2_fu_1047_p2;
wire   [2:0] add_ln406_fu_1070_p2;
wire   [5:0] add_ln412_1_fu_1090_p2;
wire   [4:0] tmp_50_fu_1114_p3;
wire   [10:0] zext_ln423_fu_1111_p1;
wire   [10:0] add_ln423_fu_1125_p2;
wire   [12:0] tmp_67_fu_1130_p3;
wire   [0:0] icmp_ln418_fu_1147_p2;
wire   [0:0] xor_ln406_fu_1142_p2;
wire   [2:0] select_ln406_fu_1104_p3;
wire   [0:0] and_ln406_fu_1153_p2;
wire   [0:0] or_ln412_fu_1165_p2;
wire   [2:0] add_ln412_fu_1159_p2;
wire   [5:0] zext_ln423_1_fu_1121_p1;
wire   [5:0] zext_ln423_3_fu_1190_p1;
wire   [5:0] add_ln423_1_fu_1194_p2;
wire   [3:0] trunc_ln423_fu_1200_p1;
wire   [6:0] p_shl6_cast_fu_1204_p3;
wire   [6:0] p_shl7_cast_fu_1212_p3;
wire   [62:0] zext_ln412_fu_1138_p1;
wire   [62:0] zext_ln423_2_fu_1186_p1;
wire   [62:0] add_ln423_2_fu_1226_p2;
wire   [8:0] trunc_ln423_1_fu_1232_p1;
wire   [10:0] trunc_ln423_2_fu_1244_p1;
wire   [11:0] p_shl9_cast_fu_1236_p3;
wire   [11:0] p_shl8_cast_fu_1248_p3;
wire   [2:0] select_ln412_fu_1170_p3;
wire   [6:0] sub_ln423_fu_1220_p2;
wire   [6:0] zext_ln423_5_fu_1266_p1;
wire   [6:0] add_ln423_3_fu_1270_p2;
wire   [11:0] sub_ln423_1_fu_1256_p2;
wire   [11:0] zext_ln423_4_fu_1262_p1;
wire   [5:0] add_ln431_fu_1297_p2;
wire   [0:0] icmp_ln331_fu_1325_p2;
wire   [2:0] add_ln325_fu_1319_p2;
wire   [6:0] tmp_42_fu_1347_p3;
wire   [4:0] select_ln325_fu_1331_p3;
wire   [7:0] tmp_136_cast_fu_1355_p1;
wire   [7:0] zext_ln336_fu_1359_p1;
wire   [8:0] tmp_59_fu_1369_p3;
wire   [7:0] shl_ln336_fu_1382_p2;
wire   [7:0] or_ln336_fu_1388_p2;
wire   [5:0] add_ln347_1_fu_1427_p2;
wire   [2:0] add_ln341_fu_1441_p2;
wire   [4:0] tmp_47_fu_1461_p3;
wire   [0:0] icmp_ln353_fu_1478_p2;
wire   [0:0] xor_ln341_fu_1473_p2;
wire   [2:0] select_ln341_fu_1447_p3;
wire   [0:0] and_ln341_fu_1484_p2;
wire   [0:0] or_ln347_fu_1496_p2;
wire   [2:0] add_ln347_fu_1490_p2;
wire   [5:0] zext_ln347_fu_1469_p1;
wire   [5:0] zext_ln358_fu_1517_p1;
wire   [5:0] add_ln358_fu_1521_p2;
wire   [8:0] tmp_62_fu_1527_p3;
wire   [6:0] tmp_63_fu_1539_p3;
wire   [11:0] zext_ln358_1_fu_1535_p1;
wire   [11:0] zext_ln358_2_fu_1547_p1;
wire   [2:0] select_ln347_fu_1501_p3;
wire   [11:0] sub_ln358_fu_1551_p2;
wire   [11:0] zext_ln358_3_fu_1557_p1;
wire   [11:0] add_ln358_1_fu_1561_p2;
wire    grp_fu_739_ce;
wire    grp_fu_816_ce;
reg   [77:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 78'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
end

MPSQ_encodeCoordinates grp_encodeCoordinates_fu_533(
    .ap_ready(grp_encodeCoordinates_fu_533_ap_ready),
    .phi(grp_encodeCoordinates_fu_533_phi),
    .z(grp_encodeCoordinates_fu_533_z),
    .ap_return(grp_encodeCoordinates_fu_533_ap_return)
);

MPSQ_urem_57s_4ns_57_61_1 #(
    .ID( 1 ),
    .NUM_STAGE( 61 ),
    .din0_WIDTH( 57 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 57 ))
urem_57s_4ns_57_61_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_726_p0),
    .din1(grp_fu_726_p1),
    .ce(1'b1),
    .dout(grp_fu_726_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state70) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state70))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state70);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state72)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state72) | ((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state74)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state74))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state72)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state78) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state78))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state78);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp4_flush_enable)) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state80)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((1'b1 == ap_CS_fsm_state80) | ((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter1_state82)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter1_state82))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state80)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        a_3_reg_500 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln341_reg_1840_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        a_3_reg_500 <= select_ln341_1_reg_1857;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln390_reg_1723 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_4_reg_368 <= select_ln390_1_reg_1732;
    end else if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        a_4_reg_368 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        a_5_reg_401 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln406_reg_1758 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        a_5_reg_401 <= select_ln406_1_reg_1769;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
        a_reg_456 <= 3'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln325_reg_1806 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        a_reg_456 <= select_ln325_1_reg_1810;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        b_5_reg_511 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln341_reg_1840_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        b_5_reg_511 <= select_ln347_1_reg_1862;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln390_fu_932_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        b_6_reg_379 <= add_ln396_fu_1018_p2;
    end else if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        b_6_reg_379 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        b_7_reg_423 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln406_reg_1758_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        b_7_reg_423 <= select_ln412_1_reg_1781;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
        b_reg_467 <= 5'd0;
    end else if (((icmp_ln325_fu_1313_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        b_reg_467 <= add_ln331_fu_1399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        c_4_reg_434 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln406_reg_1758 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_4_reg_434 <= add_ln418_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        c_reg_522 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln341_reg_1840 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        c_reg_522 <= add_ln353_fu_1572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_346 <= 8'd0;
    end else if (((icmp_ln874_4_fu_885_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68) & (icmp_ln874_reg_1676 == 1'd1) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        i_reg_346 <= i_14_reg_1628;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten21_reg_478 <= 7'd0;
    end else if (((icmp_ln341_fu_1415_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten21_reg_478 <= add_ln341_2_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln390_fu_932_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten29_reg_357 <= add_ln390_1_fu_926_p2;
    end else if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        indvar_flatten29_reg_357 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        indvar_flatten37_reg_412 <= 6'd0;
    end else if (((icmp_ln406_fu_1064_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten37_reg_412 <= select_ln412_2_fu_1096_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        indvar_flatten51_reg_390 <= 7'd0;
    end else if (((icmp_ln406_fu_1064_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten51_reg_390 <= add_ln406_1_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten7_reg_489 <= 6'd0;
    end else if (((icmp_ln341_fu_1415_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten7_reg_489 <= select_ln347_2_fu_1433_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
        indvar_flatten_reg_445 <= 7'd0;
    end else if (((icmp_ln325_fu_1313_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_445 <= add_ln325_1_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1313_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln336_reg_1815 <= add_ln336_fu_1363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_1_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln376_reg_1643[18 : 7] <= add_ln376_fu_707_p2[18 : 7];
        wp_superpoints_addr_6_reg_1638[7 : 5] <= tmp_45_fu_677_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        add_ln401_reg_1712 <= add_ln401_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln406_reg_1758 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln423_4_reg_1791 <= add_ln423_4_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1585 <= empty_fu_548_p1;
        icmp_ln321_reg_1590 <= icmp_ln321_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_14_reg_1628 <= i_14_fu_642_p2;
        icmp_ln374_1_reg_1624 <= icmp_ln374_1_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln325_reg_1806 <= icmp_ln325_fu_1313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln341_reg_1840 <= icmp_ln341_fu_1415_p2;
        icmp_ln341_reg_1840_pp4_iter1_reg <= icmp_ln341_reg_1840;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_fu_1415_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln347_reg_1844 <= icmp_ln347_fu_1421_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln374_reg_1610 <= icmp_ln374_fu_612_p2;
        patches_parameters_load_reg_1605 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        icmp_ln387_reg_1708 <= icmp_ln387_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln390_reg_1723 <= icmp_ln390_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln406_reg_1758 <= icmp_ln406_fu_1064_p2;
        icmp_ln406_reg_1758_pp2_iter1_reg <= icmp_ln406_reg_1758;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln406_fu_1064_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln412_reg_1762 <= icmp_ln412_fu_1076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        icmp_ln874_reg_1676 <= icmp_ln874_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state66) & (icmp_ln874_reg_1676 == 1'd1) & (icmp_ln374_1_reg_1624 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln374_1_reg_1624 == 1'd1)))) begin
        reg_544 <= wp_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1313_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln325_1_reg_1810 <= select_ln325_1_fu_1339_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln341_reg_1840 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        select_ln341_1_reg_1857 <= select_ln341_1_fu_1454_p3;
        select_ln347_1_reg_1862 <= select_ln347_1_fu_1509_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln390_fu_932_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln390_1_reg_1732 <= select_ln390_1_fu_958_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln390_fu_932_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln390_reg_1727 <= select_ln390_fu_950_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln406_fu_1064_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln406_1_reg_1769 <= select_ln406_1_fu_1082_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln406_reg_1758 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln412_1_reg_1781 <= select_ln412_1_fu_1178_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln374_reg_1619[16 : 7] <= sext_ln374_fu_629_p1[16 : 7];
        sext_ln376_reg_1614[18 : 9] <= sext_ln376_fu_625_p1[18 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd0))) begin
        sub_reg_1594 <= sub_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        tmp_60_reg_1659 <= {{grp_fu_1069_p_dout0[128:74]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln874_reg_1676 == 1'd1) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        tmp_64_reg_1695 <= {{grp_fu_1073_p_dout0[79:74]}};
        udiv_ln4_cast_reg_1690 <= {{grp_fu_1073_p_dout0[81:74]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        trunc_ln377_reg_1685 <= trunc_ln377_fu_822_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        urem_ln376_reg_1665 <= grp_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_reg_1840 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        zext_ln358_4_reg_1867[11 : 0] <= zext_ln358_4_fu_1567_p1[11 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln390_fu_932_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state70 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state70 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state74 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state74 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln406_fu_1064_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln325_fu_1313_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state78 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state78 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_condition_pp4_exit_iter1_state82 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter1_state82 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln341_fu_1415_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_condition_pp4_flush_enable = 1'b1;
    end else begin
        ap_condition_pp4_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln341_reg_1840_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_a_3_phi_fu_504_p4 = select_ln341_1_reg_1857;
    end else begin
        ap_phi_mux_a_3_phi_fu_504_p4 = a_3_reg_500;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln390_reg_1723 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_a_4_phi_fu_372_p4 = select_ln390_1_reg_1732;
    end else begin
        ap_phi_mux_a_4_phi_fu_372_p4 = a_4_reg_368;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln406_reg_1758 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_a_5_phi_fu_405_p4 = select_ln406_1_reg_1769;
    end else begin
        ap_phi_mux_a_5_phi_fu_405_p4 = a_5_reg_401;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln325_reg_1806 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_a_phi_fu_460_p4 = select_ln325_1_reg_1810;
    end else begin
        ap_phi_mux_a_phi_fu_460_p4 = a_reg_456;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln341_reg_1840_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_b_5_phi_fu_515_p4 = select_ln347_1_reg_1862;
    end else begin
        ap_phi_mux_b_5_phi_fu_515_p4 = b_5_reg_511;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln406_reg_1758_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_b_7_phi_fu_427_p4 = select_ln412_1_reg_1781;
    end else begin
        ap_phi_mux_b_7_phi_fu_427_p4 = b_7_reg_423;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln325_reg_1806 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_encodeCoordinates_fu_533_phi = wp_superpoints_q0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln390_reg_1723 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_encodeCoordinates_fu_533_phi = wp_superpoints_q1;
    end else begin
        grp_encodeCoordinates_fu_533_phi = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln325_reg_1806 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_encodeCoordinates_fu_533_z = wp_superpoints_q1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln390_reg_1723 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_encodeCoordinates_fu_533_z = wp_superpoints_q0;
    end else begin
        grp_encodeCoordinates_fu_533_z = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        n_patches = 8'd1;
    end else if (((icmp_ln387_reg_1708 == 1'd1) & (icmp_ln374_reg_1610 == 1'd1) & (1'b1 == ap_CS_fsm_state76) & (icmp_ln321_reg_1590 == 1'd0) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
        n_patches = zext_ln431_fu_1302_p1;
    end else begin
        n_patches = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | ((icmp_ln387_reg_1708 == 1'd1) & (icmp_ln374_reg_1610 == 1'd1) & (1'b1 == ap_CS_fsm_state76) & (icmp_ln321_reg_1590 == 1'd0) & (icmp_ln374_1_reg_1624 == 1'd1)))) begin
        n_patches_ap_vld = 1'b1;
    end else begin
        n_patches_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        patches_parameters_address0 = zext_ln358_4_reg_1867;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        patches_parameters_address0 = zext_ln423_7_fu_1293_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        patches_parameters_address0 = p_cast_fu_600_p1;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        patches_parameters_ce0 = 1'b1;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln341_reg_1840_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln406_reg_1758_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        patches_parameters_we0 = 1'b1;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        patches_superpoints_address0 = zext_ln336_1_fu_1405_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        patches_superpoints_address0 = zext_ln401_5_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        patches_superpoints_address0 = zext_ln377_1_fu_876_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        patches_superpoints_address0 = tmp_46_fu_784_p3;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state64) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        patches_superpoints_ce0 = 1'b1;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln325_reg_1806 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln390_reg_1723 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        patches_superpoints_we0 = 1'b1;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        wp_parameters_address0 = zext_ln358_4_fu_1567_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        wp_parameters_address0 = zext_ln423_6_fu_1276_p1;
    end else begin
        wp_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        wp_parameters_ce0 = 1'b1;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        wp_superpoints_address0 = zext_ln336_2_fu_1377_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wp_superpoints_address0 = zext_ln401_7_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        wp_superpoints_address0 = wp_superpoints_addr_6_reg_1638;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        wp_superpoints_address0 = tmp_44_fu_662_p3;
    end else begin
        wp_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        wp_superpoints_address1 = zext_ln336_3_fu_1394_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wp_superpoints_address1 = zext_ln401_6_fu_996_p1;
    end else begin
        wp_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wp_superpoints_ce0 = 1'b1;
    end else begin
        wp_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wp_superpoints_ce1 = 1'b1;
    end else begin
        wp_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln321_fu_556_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln374_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((icmp_ln874_4_fu_885_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68) & (icmp_ln874_reg_1676 == 1'd1) & (icmp_ln374_1_reg_1624 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state68) & (icmp_ln374_1_reg_1624 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((icmp_ln387_fu_900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln390_fu_932_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln390_fu_932_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln325_fu_1313_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln325_fu_1313_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln325_1_fu_1307_p2 = (indvar_flatten_reg_445 + 7'd1);

assign add_ln325_fu_1319_p2 = (ap_phi_mux_a_phi_fu_460_p4 + 3'd1);

assign add_ln331_fu_1399_p2 = (select_ln325_fu_1331_p3 + 5'd1);

assign add_ln336_fu_1363_p2 = (tmp_136_cast_fu_1355_p1 + zext_ln336_fu_1359_p1);

assign add_ln341_2_fu_1409_p2 = (indvar_flatten21_reg_478 + 7'd1);

assign add_ln341_fu_1441_p2 = (ap_phi_mux_a_3_phi_fu_504_p4 + 3'd1);

assign add_ln347_1_fu_1427_p2 = (indvar_flatten7_reg_489 + 6'd1);

assign add_ln347_fu_1490_p2 = (select_ln341_fu_1447_p3 + 3'd1);

assign add_ln353_fu_1572_p2 = (select_ln347_fu_1501_p3 + 3'd1);

assign add_ln358_1_fu_1561_p2 = (sub_ln358_fu_1551_p2 + zext_ln358_3_fu_1557_p1);

assign add_ln358_fu_1521_p2 = (zext_ln347_fu_1469_p1 + zext_ln358_fu_1517_p1);

assign add_ln376_1_fu_698_p2 = ($signed(sext_ln374_reg_1619) + $signed(zext_ln376_fu_694_p1));

assign add_ln376_2_fu_769_p2 = (zext_ln376_3_fu_765_p1 + zext_ln376_2_fu_755_p1);

assign add_ln376_3_fu_778_p2 = (add_ln376_2_fu_769_p2 + zext_ln376_4_fu_775_p1);

assign add_ln376_fu_707_p2 = ($signed(sext_ln376_1_fu_703_p1) + $signed(sext_ln376_reg_1614));

assign add_ln377_1_fu_857_p2 = (add_ln377_fu_852_p2 + trunc_ln377_reg_1685);

assign add_ln377_fu_852_p2 = (p_shl5_cast_fu_845_p3 + udiv_ln4_cast_reg_1690);

assign add_ln390_1_fu_926_p2 = (indvar_flatten29_reg_357 + 7'd1);

assign add_ln390_fu_938_p2 = (ap_phi_mux_a_4_phi_fu_372_p4 + 3'd1);

assign add_ln396_fu_1018_p2 = (select_ln390_fu_950_p3 + 5'd1);

assign add_ln401_1_fu_1030_p2 = (trunc_ln401_fu_1024_p1 + zext_ln401_2_fu_1027_p1);

assign add_ln401_2_fu_1047_p2 = (tmp_153_cast_fu_1036_p3 + zext_ln401_4_fu_1044_p1);

assign add_ln401_3_fu_982_p2 = (tmp_154_cast_fu_974_p1 + zext_ln401_3_fu_978_p1);

assign add_ln401_fu_920_p2 = (zext_ln401_1_fu_916_p1 + zext_ln401_fu_906_p1);

assign add_ln406_1_fu_1058_p2 = (indvar_flatten51_reg_390 + 7'd1);

assign add_ln406_fu_1070_p2 = (ap_phi_mux_a_5_phi_fu_405_p4 + 3'd1);

assign add_ln412_1_fu_1090_p2 = (indvar_flatten37_reg_412 + 6'd1);

assign add_ln412_fu_1159_p2 = (select_ln406_fu_1104_p3 + 3'd1);

assign add_ln418_fu_1287_p2 = (select_ln412_fu_1170_p3 + 3'd1);

assign add_ln423_1_fu_1194_p2 = (zext_ln423_1_fu_1121_p1 + zext_ln423_3_fu_1190_p1);

assign add_ln423_2_fu_1226_p2 = (zext_ln412_fu_1138_p1 + zext_ln423_2_fu_1186_p1);

assign add_ln423_3_fu_1270_p2 = (sub_ln423_fu_1220_p2 + zext_ln423_5_fu_1266_p1);

assign add_ln423_4_fu_1281_p2 = (sub_ln423_1_fu_1256_p2 + zext_ln423_4_fu_1262_p1);

assign add_ln423_fu_1125_p2 = (add_ln401_reg_1712 + zext_ln423_fu_1111_p1);

assign add_ln431_fu_1297_p2 = (empty_reg_1585 + 6'd1);

assign and_ln341_fu_1484_p2 = (xor_ln341_fu_1473_p2 & icmp_ln353_fu_1478_p2);

assign and_ln406_fu_1153_p2 = (xor_ln406_fu_1142_p2 & icmp_ln418_fu_1147_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd77];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign empty_129_fu_568_p1 = sub_fu_562_p2[4:0];

assign empty_130_fu_588_p2 = (tmp_cast_fu_572_p3 - tmp_s_fu_580_p3);

assign empty_131_fu_594_p2 = (empty_130_fu_588_p2 + 12'd102);

assign empty_fu_548_p1 = n_patches_read[5:0];

assign grp_fu_1069_p_ce = 1'b1;

assign grp_fu_1069_p_din0 = zext_ln376_1_fu_735_p1;

assign grp_fu_1069_p_din1 = 129'd29514790517935282586;

assign grp_fu_1073_p_ce = 1'b1;

assign grp_fu_1073_p_din0 = zext_ln377_fu_812_p1;

assign grp_fu_1073_p_din1 = 129'd29514790517935282586;

assign grp_fu_726_p0 = $signed(trunc_ln_fu_712_p4);

assign grp_fu_726_p1 = 57'd5;

assign grp_fu_739_ce = 1'b1;

assign grp_fu_739_p0 = zext_ln376_1_fu_735_p1;

assign grp_fu_739_p1 = 129'd29514790517935282586;

assign grp_fu_739_p2 = grp_fu_1069_p_dout0;

assign grp_fu_816_ce = 1'b1;

assign grp_fu_816_p0 = zext_ln377_fu_812_p1;

assign grp_fu_816_p1 = 129'd29514790517935282586;

assign grp_fu_816_p2 = grp_fu_1073_p_dout0;

assign i_14_fu_642_p2 = (i_reg_346 + 8'd1);

assign icmp_ln321_fu_556_p2 = ((n_patches_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln325_fu_1313_p2 = ((indvar_flatten_reg_445 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_1325_p2 = ((b_reg_467 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln341_fu_1415_p2 = ((indvar_flatten21_reg_478 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_1421_p2 = ((indvar_flatten7_reg_489 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln353_fu_1478_p2 = ((c_reg_522 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln374_1_fu_637_p2 = (($signed(zext_ln374_fu_633_p1) < $signed(patches_parameters_load_reg_1605)) ? 1'b1 : 1'b0);

assign icmp_ln374_fu_612_p2 = (($signed(patches_parameters_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_900_p2 = ((tmp_65_fu_891_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln390_fu_932_p2 = ((indvar_flatten29_reg_357 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln396_fu_944_p2 = ((b_6_reg_379 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln406_fu_1064_p2 = ((indvar_flatten51_reg_390 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln412_fu_1076_p2 = ((indvar_flatten37_reg_412 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln418_fu_1147_p2 = ((c_4_reg_434 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_885_p2 = ((trunc_ln69_4_fu_881_p1 == reg_544) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_797_p2 = ((trunc_ln69_fu_793_p1 == reg_544) ? 1'b1 : 1'b0);

assign or_ln336_fu_1388_p2 = (shl_ln336_fu_1382_p2 | 8'd1);

assign or_ln347_fu_1496_p2 = (icmp_ln347_reg_1844 | and_ln341_fu_1484_p2);

assign or_ln377_1_fu_870_p2 = (tmp_150_cast_fu_862_p3 | 12'd15);

assign or_ln377_fu_803_p2 = (19'd120 | add_ln376_reg_1643);

assign or_ln401_fu_1007_p2 = (shl_ln401_fu_1001_p2 | 8'd1);

assign or_ln412_fu_1165_p2 = (icmp_ln412_reg_1762 | and_ln406_fu_1153_p2);

assign or_ln874_1_fu_671_p2 = (tmp_43_fu_648_p3 | 13'd31);

assign or_ln874_fu_656_p2 = (tmp_43_fu_648_p3 | 13'd1);

assign p_cast_fu_600_p1 = empty_131_fu_594_p2;

assign p_shl5_cast_fu_845_p3 = {{tmp_64_reg_1695}, {2'd0}};

assign p_shl6_cast_fu_1204_p3 = {{trunc_ln423_fu_1200_p1}, {3'd0}};

assign p_shl7_cast_fu_1212_p3 = {{add_ln423_1_fu_1194_p2}, {1'd0}};

assign p_shl8_cast_fu_1248_p3 = {{trunc_ln423_2_fu_1244_p1}, {1'd0}};

assign p_shl9_cast_fu_1236_p3 = {{trunc_ln423_1_fu_1232_p1}, {3'd0}};

assign patches_parameters_d0 = wp_parameters_q0;

assign patches_superpoints_d0 = grp_encodeCoordinates_fu_533_ap_return;

assign select_ln325_1_fu_1339_p3 = ((icmp_ln331_fu_1325_p2[0:0] == 1'b1) ? add_ln325_fu_1319_p2 : ap_phi_mux_a_phi_fu_460_p4);

assign select_ln325_fu_1331_p3 = ((icmp_ln331_fu_1325_p2[0:0] == 1'b1) ? 5'd0 : b_reg_467);

assign select_ln341_1_fu_1454_p3 = ((icmp_ln347_reg_1844[0:0] == 1'b1) ? add_ln341_fu_1441_p2 : ap_phi_mux_a_3_phi_fu_504_p4);

assign select_ln341_fu_1447_p3 = ((icmp_ln347_reg_1844[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_5_phi_fu_515_p4);

assign select_ln347_1_fu_1509_p3 = ((and_ln341_fu_1484_p2[0:0] == 1'b1) ? add_ln347_fu_1490_p2 : select_ln341_fu_1447_p3);

assign select_ln347_2_fu_1433_p3 = ((icmp_ln347_fu_1421_p2[0:0] == 1'b1) ? 6'd1 : add_ln347_1_fu_1427_p2);

assign select_ln347_fu_1501_p3 = ((or_ln347_fu_1496_p2[0:0] == 1'b1) ? 3'd0 : c_reg_522);

assign select_ln390_1_fu_958_p3 = ((icmp_ln396_fu_944_p2[0:0] == 1'b1) ? add_ln390_fu_938_p2 : ap_phi_mux_a_4_phi_fu_372_p4);

assign select_ln390_fu_950_p3 = ((icmp_ln396_fu_944_p2[0:0] == 1'b1) ? 5'd0 : b_6_reg_379);

assign select_ln406_1_fu_1082_p3 = ((icmp_ln412_fu_1076_p2[0:0] == 1'b1) ? add_ln406_fu_1070_p2 : ap_phi_mux_a_5_phi_fu_405_p4);

assign select_ln406_fu_1104_p3 = ((icmp_ln412_reg_1762[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_7_phi_fu_427_p4);

assign select_ln412_1_fu_1178_p3 = ((and_ln406_fu_1153_p2[0:0] == 1'b1) ? add_ln412_fu_1159_p2 : select_ln406_fu_1104_p3);

assign select_ln412_2_fu_1096_p3 = ((icmp_ln412_fu_1076_p2[0:0] == 1'b1) ? 6'd1 : add_ln412_1_fu_1090_p2);

assign select_ln412_fu_1170_p3 = ((or_ln412_fu_1165_p2[0:0] == 1'b1) ? 3'd0 : c_4_reg_434);

assign sext_ln374_fu_629_p1 = $signed(tmp_fu_605_p3);

assign sext_ln376_1_fu_703_p1 = $signed(add_ln376_1_fu_698_p2);

assign sext_ln376_2_fu_732_p1 = add_ln376_reg_1643;

assign sext_ln376_fu_625_p1 = $signed(shl_ln376_1_fu_618_p3);

assign sext_ln377_fu_808_p1 = $signed(or_ln377_fu_803_p2);

assign shl_ln336_fu_1382_p2 = add_ln336_fu_1363_p2 << 8'd1;

assign shl_ln376_1_fu_618_p3 = {{sub_reg_1594}, {9'd0}};

assign shl_ln401_fu_1001_p2 = add_ln401_3_fu_982_p2 << 8'd1;

assign shl_ln_fu_686_p3 = {{i_reg_346}, {7'd0}};

assign sub_fu_562_p2 = ($signed(zext_ln321_fu_552_p1) + $signed(9'd511));

assign sub_ln358_fu_1551_p2 = (zext_ln358_1_fu_1535_p1 - zext_ln358_2_fu_1547_p1);

assign sub_ln423_1_fu_1256_p2 = (p_shl9_cast_fu_1236_p3 - p_shl8_cast_fu_1248_p3);

assign sub_ln423_fu_1220_p2 = (p_shl6_cast_fu_1204_p3 - p_shl7_cast_fu_1212_p3);

assign tmp_136_cast_fu_1355_p1 = tmp_42_fu_1347_p3;

assign tmp_150_cast_fu_862_p3 = {{add_ln377_1_fu_857_p2}, {4'd0}};

assign tmp_153_cast_fu_1036_p3 = {{add_ln401_1_fu_1030_p2}, {4'd0}};

assign tmp_154_cast_fu_974_p1 = tmp_49_fu_966_p3;

assign tmp_42_fu_1347_p3 = {{select_ln325_1_fu_1339_p3}, {4'd0}};

assign tmp_43_fu_648_p3 = {{i_reg_346}, {5'd0}};

assign tmp_44_fu_662_p3 = {{51'd0}, {or_ln874_fu_656_p2}};

assign tmp_45_fu_677_p3 = {{51'd0}, {or_ln874_1_fu_671_p2}};

assign tmp_46_fu_784_p3 = {{add_ln376_3_fu_778_p2}, {4'd0}};

assign tmp_47_fu_1461_p3 = {{select_ln341_1_fu_1454_p3}, {2'd0}};

assign tmp_48_fu_909_p3 = {{n_patches_read}, {2'd0}};

assign tmp_49_fu_966_p3 = {{select_ln390_1_fu_958_p3}, {4'd0}};

assign tmp_50_fu_1114_p3 = {{select_ln406_1_reg_1769}, {2'd0}};

assign tmp_59_fu_1369_p3 = {{add_ln336_fu_1363_p2}, {1'd0}};

assign tmp_61_fu_758_p3 = {{tmp_60_reg_1659}, {2'd0}};

assign tmp_62_fu_1527_p3 = {{add_ln358_fu_1521_p2}, {3'd0}};

assign tmp_63_fu_1539_p3 = {{add_ln358_fu_1521_p2}, {1'd0}};

assign tmp_65_fu_891_p4 = {{n_patches_read[7:5]}};

assign tmp_66_fu_988_p3 = {{add_ln401_3_fu_982_p2}, {1'd0}};

assign tmp_67_fu_1130_p3 = {{add_ln423_fu_1125_p2}, {2'd0}};

assign tmp_cast_fu_572_p3 = {{empty_129_fu_568_p1}, {7'd0}};

assign tmp_fu_605_p3 = {{sub_reg_1594}, {7'd0}};

assign tmp_s_fu_580_p3 = {{sub_fu_562_p2}, {3'd0}};

assign trunc_ln377_fu_822_p1 = urem_ln376_reg_1665[7:0];

assign trunc_ln401_fu_1024_p1 = add_ln401_reg_1712[7:0];

assign trunc_ln423_1_fu_1232_p1 = add_ln423_2_fu_1226_p2[8:0];

assign trunc_ln423_2_fu_1244_p1 = add_ln423_2_fu_1226_p2[10:0];

assign trunc_ln423_fu_1200_p1 = add_ln423_1_fu_1194_p2[3:0];

assign trunc_ln69_4_fu_881_p1 = patches_superpoints_q0[31:0];

assign trunc_ln69_fu_793_p1 = patches_superpoints_q0[31:0];

assign trunc_ln_fu_712_p4 = {{add_ln376_fu_707_p2[18:7]}};

assign xor_ln341_fu_1473_p2 = (icmp_ln347_reg_1844 ^ 1'd1);

assign xor_ln406_fu_1142_p2 = (icmp_ln412_reg_1762 ^ 1'd1);

assign zext_ln321_fu_552_p1 = n_patches_read;

assign zext_ln336_1_fu_1405_p1 = add_ln336_reg_1815;

assign zext_ln336_2_fu_1377_p1 = tmp_59_fu_1369_p3;

assign zext_ln336_3_fu_1394_p1 = or_ln336_fu_1388_p2;

assign zext_ln336_fu_1359_p1 = select_ln325_fu_1331_p3;

assign zext_ln347_fu_1469_p1 = tmp_47_fu_1461_p3;

assign zext_ln358_1_fu_1535_p1 = tmp_62_fu_1527_p3;

assign zext_ln358_2_fu_1547_p1 = tmp_63_fu_1539_p3;

assign zext_ln358_3_fu_1557_p1 = select_ln347_fu_1501_p3;

assign zext_ln358_4_fu_1567_p1 = add_ln358_1_fu_1561_p2;

assign zext_ln358_fu_1517_p1 = select_ln347_1_fu_1509_p3;

assign zext_ln374_fu_633_p1 = i_reg_346;

assign zext_ln376_1_fu_735_p1 = $unsigned(sext_ln376_2_fu_732_p1);

assign zext_ln376_2_fu_755_p1 = tmp_60_reg_1659;

assign zext_ln376_3_fu_765_p1 = tmp_61_fu_758_p3;

assign zext_ln376_4_fu_775_p1 = urem_ln376_reg_1665;

assign zext_ln376_fu_694_p1 = shl_ln_fu_686_p3;

assign zext_ln377_1_fu_876_p1 = or_ln377_1_fu_870_p2;

assign zext_ln377_fu_812_p1 = $unsigned(sext_ln377_fu_808_p1);

assign zext_ln401_1_fu_916_p1 = tmp_48_fu_909_p3;

assign zext_ln401_2_fu_1027_p1 = select_ln390_1_reg_1732;

assign zext_ln401_3_fu_978_p1 = select_ln390_fu_950_p3;

assign zext_ln401_4_fu_1044_p1 = select_ln390_reg_1727;

assign zext_ln401_5_fu_1053_p1 = add_ln401_2_fu_1047_p2;

assign zext_ln401_6_fu_996_p1 = tmp_66_fu_988_p3;

assign zext_ln401_7_fu_1013_p1 = or_ln401_fu_1007_p2;

assign zext_ln401_fu_906_p1 = n_patches_read;

assign zext_ln412_fu_1138_p1 = tmp_67_fu_1130_p3;

assign zext_ln423_1_fu_1121_p1 = tmp_50_fu_1114_p3;

assign zext_ln423_2_fu_1186_p1 = select_ln412_1_fu_1178_p3;

assign zext_ln423_3_fu_1190_p1 = select_ln412_1_fu_1178_p3;

assign zext_ln423_4_fu_1262_p1 = select_ln412_fu_1170_p3;

assign zext_ln423_5_fu_1266_p1 = select_ln412_fu_1170_p3;

assign zext_ln423_6_fu_1276_p1 = add_ln423_3_fu_1270_p2;

assign zext_ln423_7_fu_1293_p1 = add_ln423_4_reg_1791;

assign zext_ln423_fu_1111_p1 = select_ln406_1_reg_1769;

assign zext_ln431_fu_1302_p1 = add_ln431_fu_1297_p2;

always @ (posedge ap_clk) begin
    sext_ln376_reg_1614[8:0] <= 9'b000000000;
    sext_ln374_reg_1619[6:0] <= 7'b0000000;
    wp_superpoints_addr_6_reg_1638[4:0] <= 5'b11111;
    add_ln376_reg_1643[6:0] <= 7'b0000000;
    zext_ln358_4_reg_1867[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //MPSQ_add_patch9
